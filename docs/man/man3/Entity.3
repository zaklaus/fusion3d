.TH "Entity" 3 "Tue Nov 24 2015" "Version 0.0.0.1" "Fusion3D" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Entity \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <entity\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBEntity\fP (const \fBVector3f\fP &pos=\fBVector3f\fP(0, 0, 0), const \fBQuaternion\fP &rot=\fBQuaternion\fP(0, 0, 0, 1), float scale=1\&.0f)"
.br
.ti -1c
.RI "virtual \fB~Entity\fP ()"
.br
.ti -1c
.RI "\fBEntity\fP * \fBAddChild\fP (\fBEntity\fP *child)"
.br
.ti -1c
.RI "\fBEntity\fP * \fBAddComponent\fP (\fBEntityComponent\fP *component)"
.br
.ti -1c
.RI "\fBEntity\fP * \fBAddComponents\fP (std::vector< \fBEntityComponent\fP * > components)"
.br
.ti -1c
.RI "void \fBInitAll\fP ()"
.br
.ti -1c
.RI "void \fBProcessInputAll\fP (const \fBInput\fP &input, float delta)"
.br
.ti -1c
.RI "void \fBUpdateAll\fP (float delta)"
.br
.ti -1c
.RI "void \fBRenderAll\fP (const \fBShader\fP &shader, const \fBRenderingEngine\fP &renderingEngine, const \fBCamera\fP &camera) const "
.br
.ti -1c
.RI "void \fBPostRenderAll\fP (const \fBShader\fP &shader, const \fBRenderingEngine\fP &renderingEngine, const \fBCamera\fP &camera) const "
.br
.ti -1c
.RI "std::vector< \fBEntity\fP * > \fBGetAllAttached\fP ()"
.br
.ti -1c
.RI "\fBTransform\fP * \fBGetTransform\fP ()"
.br
.ti -1c
.RI "\fBEntity\fP * \fBGetParent\fP ()"
.br
.ti -1c
.RI "void \fBSetEngine\fP (\fBCoreEngine\fP *engine)"
.br
.ti -1c
.RI "void \fBSetParent\fP (\fBEntity\fP *parent)"
.br
.ti -1c
.RI "const std::string & \fBGetDisplayName\fP () const "
.br
.ti -1c
.RI "\fBEntity\fP * \fBSetDisplayName\fP (const std::string &displayName)"
.br
.ti -1c
.RI "void \fBDestroy\fP ()"
.br
.ti -1c
.RI "\fBEntity\fP * \fBGetScene\fP ()"
.br
.ti -1c
.RI "\fBEntity\fP * \fBGetChildByName\fP (const std::string &name)"
.br
.ti -1c
.RI "\fBEntityComponent\fP * \fBGetComponentByType\fP (const std::string &name)"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Entity::Entity (const \fBVector3f\fP & pos = \fC\fBVector3f\fP(0, 0, 0)\fP, const \fBQuaternion\fP & rot = \fC\fBQuaternion\fP(0, 0, 0, 1)\fP, float scale = \fC1\&.0f\fP)"

.SS "Entity::~Entity ()\fC [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "\fBEntity\fP * Entity::AddChild (\fBEntity\fP * child)"

.SS "\fBEntity\fP * Entity::AddComponent (\fBEntityComponent\fP * component)"

.SS "\fBEntity\fP * Entity::AddComponents (std::vector< \fBEntityComponent\fP * > components)"

.SS "void Entity::Destroy ()\fC [inline]\fP"

.SS "std::vector< \fBEntity\fP * > Entity::GetAllAttached ()"

.SS "\fBEntity\fP* Entity::GetChildByName (const std::string & name)\fC [inline]\fP"

.SS "\fBEntityComponent\fP * Entity::GetComponentByType (const std::string & name)"

.SS "const std::string& Entity::GetDisplayName () const\fC [inline]\fP"

.SS "\fBEntity\fP* Entity::GetParent ()\fC [inline]\fP"

.SS "\fBEntity\fP* Entity::GetScene ()\fC [inline]\fP"

.SS "\fBTransform\fP* Entity::GetTransform ()\fC [inline]\fP"

.SS "void Entity::InitAll ()"

.SS "void Entity::PostRenderAll (const \fBShader\fP & shader, const \fBRenderingEngine\fP & renderingEngine, const \fBCamera\fP & camera) const"

.SS "void Entity::ProcessInputAll (const \fBInput\fP & input, float delta)"

.SS "void Entity::RenderAll (const \fBShader\fP & shader, const \fBRenderingEngine\fP & renderingEngine, const \fBCamera\fP & camera) const"

.SS "\fBEntity\fP* Entity::SetDisplayName (const std::string & displayName)\fC [inline]\fP"

.SS "void Entity::SetEngine (\fBCoreEngine\fP * engine)"

.SS "void Entity::SetParent (\fBEntity\fP * parent)\fC [inline]\fP"

.SS "void Entity::UpdateAll (float delta)"


.SH "Author"
.PP 
Generated automatically by Doxygen for Fusion3D from the source code\&.
