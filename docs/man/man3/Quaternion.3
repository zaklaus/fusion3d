.TH "Quaternion" 3 "Tue Nov 24 2015" "Version 0.0.0.1" "Fusion3D" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Quaternion \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <math3d\&.h>\fP
.PP
Inherits \fBVector4< float >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQuaternion\fP (float x=0\&.0f, float y=0\&.0f, float z=0\&.0f, float w=1\&.0f)"
.br
.ti -1c
.RI "\fBQuaternion\fP (const \fBVector4\fP< float > &r)"
.br
.ti -1c
.RI "\fBQuaternion\fP (const \fBVector3f\fP &axis, float angle)"
.br
.ti -1c
.RI "\fBQuaternion\fP (const \fBMatrix4f\fP &m)"
.br
.ti -1c
.RI "\fBQuaternion\fP \fBNLerp\fP (const \fBQuaternion\fP &r, float lerpFactor, bool shortestPath) const "
.br
.ti -1c
.RI "\fBQuaternion\fP \fBSLerp\fP (const \fBQuaternion\fP &r, float lerpFactor, bool shortestPath) const "
.br
.ti -1c
.RI "\fBMatrix4f\fP \fBToRotationMatrix\fP () const "
.br
.ti -1c
.RI "btQuaternion \fBGetBT\fP () const "
.br
.ti -1c
.RI "\fBVector3f\fP \fBGetForward\fP () const "
.br
.ti -1c
.RI "\fBVector3f\fP \fBGetBack\fP () const "
.br
.ti -1c
.RI "\fBVector3f\fP \fBGetUp\fP () const "
.br
.ti -1c
.RI "\fBVector3f\fP \fBGetDown\fP () const "
.br
.ti -1c
.RI "\fBVector3f\fP \fBGetRight\fP () const "
.br
.ti -1c
.RI "\fBVector3f\fP \fBGetLeft\fP () const "
.br
.ti -1c
.RI "\fBQuaternion\fP \fBConjugate\fP () const "
.br
.ti -1c
.RI "\fBQuaternion\fP \fBoperator*\fP (const \fBQuaternion\fP &r) const "
.br
.ti -1c
.RI "\fBQuaternion\fP \fBoperator*\fP (const \fBVector3\fP< float > &v) const "
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBQuaternion\fP \fBGetFT\fP (const btQuaternion &bt)"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Quaternion::Quaternion (float x = \fC0\&.0f\fP, float y = \fC0\&.0f\fP, float z = \fC0\&.0f\fP, float w = \fC1\&.0f\fP)\fC [inline]\fP"

.SS "Quaternion::Quaternion (const \fBVector4\fP< float > & r)\fC [inline]\fP"

.SS "Quaternion::Quaternion (const \fBVector3f\fP & axis, float angle)\fC [inline]\fP"

.SS "Quaternion::Quaternion (const \fBMatrix4f\fP & m)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "\fBQuaternion\fP Quaternion::Conjugate () const\fC [inline]\fP"

.SS "\fBVector3f\fP Quaternion::GetBack () const\fC [inline]\fP"

.SS "btQuaternion Quaternion::GetBT () const\fC [inline]\fP"

.SS "\fBVector3f\fP Quaternion::GetDown () const\fC [inline]\fP"

.SS "\fBVector3f\fP Quaternion::GetForward () const\fC [inline]\fP"

.SS "static \fBQuaternion\fP Quaternion::GetFT (const btQuaternion & bt)\fC [inline]\fP, \fC [static]\fP"

.SS "\fBVector3f\fP Quaternion::GetLeft () const\fC [inline]\fP"

.SS "\fBVector3f\fP Quaternion::GetRight () const\fC [inline]\fP"

.SS "\fBVector3f\fP Quaternion::GetUp () const\fC [inline]\fP"

.SS "\fBQuaternion\fP Quaternion::NLerp (const \fBQuaternion\fP & r, float lerpFactor, bool shortestPath) const\fC [inline]\fP"

.SS "\fBQuaternion\fP Quaternion::operator* (const \fBQuaternion\fP & r) const\fC [inline]\fP"

.SS "\fBQuaternion\fP Quaternion::operator* (const \fBVector3\fP< float > & v) const\fC [inline]\fP"

.SS "\fBQuaternion\fP Quaternion::SLerp (const \fBQuaternion\fP & r, float lerpFactor, bool shortestPath) const\fC [inline]\fP"

.SS "\fBMatrix4f\fP Quaternion::ToRotationMatrix () const\fC [inline]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Fusion3D from the source code\&.
