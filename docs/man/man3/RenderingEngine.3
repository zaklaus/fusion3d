.TH "RenderingEngine" 3 "Tue Nov 24 2015" "Version 0.0.0.1" "Fusion3D" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RenderingEngine \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <renderingEngine\&.h>\fP
.PP
Inherits \fBMappedValues\fP\&.
.PP
Inherited by \fBTestRenderer\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBRenderingEngine\fP (\fBWindow\fP *window)"
.br
.ti -1c
.RI "virtual \fB~RenderingEngine\fP ()"
.br
.ti -1c
.RI "virtual void \fBRender\fP (const \fBEntity\fP &object)"
.br
.ti -1c
.RI "void \fBAddLight\fP (\fBBaseLight\fP *light)"
.br
.ti -1c
.RI "void \fBSetMainCamera\fP (const \fBCamera\fP &camera)"
.br
.ti -1c
.RI "const \fBCamera\fP * \fBGetMainCamera\fP ()"
.br
.ti -1c
.RI "virtual void \fBUpdateUniformStruct\fP (const \fBTransform\fP &transform, const \fBMaterial\fP &material, const \fBShader\fP &shader, const std::string &uniformName, const std::string &uniformType) const "
.br
.ti -1c
.RI "double \fBDisplayRenderTime\fP (double dividend)"
.br
.ti -1c
.RI "double \fBDisplayWindowSyncTime\fP (double dividend)"
.br
.ti -1c
.RI "void \fBSetShader\fP (const std::string &fileName)"
.br
.ti -1c
.RI "void \fBSetFullBright\fP (bool state)"
.br
.ti -1c
.RI "const \fBBaseLight\fP & \fBGetActiveLight\fP () const "
.br
.ti -1c
.RI "unsigned int \fBGetSamplerSlot\fP (const std::string &samplerName) const "
.br
.ti -1c
.RI "const \fBMatrix4f\fP & \fBGetLightMatrix\fP () const "
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBSetSamplerSlot\fP (const std::string &name, unsigned int value)"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "RenderingEngine::RenderingEngine (\fBWindow\fP * window)"

.SS "virtual RenderingEngine::~RenderingEngine ()\fC [inline]\fP, \fC [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "void RenderingEngine::AddLight (\fBBaseLight\fP * light)\fC [inline]\fP"

.SS "double RenderingEngine::DisplayRenderTime (double dividend)\fC [inline]\fP"

.SS "double RenderingEngine::DisplayWindowSyncTime (double dividend)\fC [inline]\fP"

.SS "const \fBBaseLight\fP& RenderingEngine::GetActiveLight () const\fC [inline]\fP"

.SS "const \fBMatrix4f\fP& RenderingEngine::GetLightMatrix () const\fC [inline]\fP"

.SS "const \fBCamera\fP* RenderingEngine::GetMainCamera ()\fC [inline]\fP"

.SS "unsigned int RenderingEngine::GetSamplerSlot (const std::string & samplerName) const\fC [inline]\fP"

.SS "void RenderingEngine::Render (const \fBEntity\fP & object)\fC [virtual]\fP"

.PP
Reimplemented in \fBTestRenderer\fP\&.
.SS "void RenderingEngine::SetFullBright (bool state)\fC [inline]\fP"

.SS "void RenderingEngine::SetMainCamera (const \fBCamera\fP & camera)\fC [inline]\fP"

.SS "void RenderingEngine::SetSamplerSlot (const std::string & name, unsigned int value)\fC [inline]\fP, \fC [protected]\fP"

.SS "void RenderingEngine::SetShader (const std::string & fileName)\fC [inline]\fP"

.SS "virtual void RenderingEngine::UpdateUniformStruct (const \fBTransform\fP & transform, const \fBMaterial\fP & material, const \fBShader\fP & shader, const std::string & uniformName, const std::string & uniformType) const\fC [inline]\fP, \fC [virtual]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Fusion3D from the source code\&.
