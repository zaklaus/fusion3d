.TH "Transform" 3 "Tue Nov 24 2015" "Version 0.0.0.1" "Fusion3D" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Transform \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <transform\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTransform\fP (const \fBVector3f\fP &pos=\fBVector3f\fP(0, 0, 0), const \fBQuaternion\fP &rot=\fBQuaternion\fP(0, 0, 0, 1), float scale=1\&.0f)"
.br
.ti -1c
.RI "\fBMatrix4f\fP \fBGetTransformation\fP () const "
.br
.ti -1c
.RI "bool \fBHasChanged\fP ()"
.br
.ti -1c
.RI "void \fBUpdate\fP ()"
.br
.ti -1c
.RI "void \fBRotate\fP (const \fBVector3f\fP &axis, float angle)"
.br
.ti -1c
.RI "void \fBRotate\fP (const \fBQuaternion\fP &rotation)"
.br
.ti -1c
.RI "void \fBLookAt\fP (const \fBVector3f\fP &point, const \fBVector3f\fP &up)"
.br
.ti -1c
.RI "\fBQuaternion\fP \fBGetLookAtRotation\fP (const \fBVector3f\fP &point, const \fBVector3f\fP &up)"
.br
.ti -1c
.RI "\fBVector3f\fP * \fBGetPos\fP ()"
.br
.ti -1c
.RI "const \fBVector3f\fP & \fBGetPos\fP () const "
.br
.ti -1c
.RI "\fBQuaternion\fP * \fBGetRot\fP ()"
.br
.ti -1c
.RI "const \fBQuaternion\fP & \fBGetRot\fP () const "
.br
.ti -1c
.RI "float \fBGetScale\fP () const "
.br
.ti -1c
.RI "\fBVector3f\fP \fBGetTransformedPos\fP () const "
.br
.ti -1c
.RI "\fBQuaternion\fP \fBGetTransformedRot\fP () const "
.br
.ti -1c
.RI "btTransform \fBGetBT\fP ()"
.br
.ti -1c
.RI "void \fBSetPos\fP (const \fBVector3f\fP &pos)"
.br
.ti -1c
.RI "void \fBSetRot\fP (const \fBQuaternion\fP &rot)"
.br
.ti -1c
.RI "void \fBSetScale\fP (float scale)"
.br
.ti -1c
.RI "void \fBSetParent\fP (\fBTransform\fP *parent)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBTransform\fP \fBGetFT\fP (const btTransform &bt)"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Transform::Transform (const \fBVector3f\fP & pos = \fC\fBVector3f\fP(0,0,0)\fP, const \fBQuaternion\fP & rot = \fC\fBQuaternion\fP(0,0,0,1)\fP, float scale = \fC1\&.0f\fP)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "btTransform Transform::GetBT ()\fC [inline]\fP"

.SS "static \fBTransform\fP Transform::GetFT (const btTransform & bt)\fC [inline]\fP, \fC [static]\fP"

.SS "\fBQuaternion\fP Transform::GetLookAtRotation (const \fBVector3f\fP & point, const \fBVector3f\fP & up)\fC [inline]\fP"

.SS "\fBVector3f\fP* Transform::GetPos ()\fC [inline]\fP"

.SS "const \fBVector3f\fP& Transform::GetPos () const\fC [inline]\fP"

.SS "\fBQuaternion\fP* Transform::GetRot ()\fC [inline]\fP"

.SS "const \fBQuaternion\fP& Transform::GetRot () const\fC [inline]\fP"

.SS "float Transform::GetScale () const\fC [inline]\fP"

.SS "\fBMatrix4f\fP Transform::GetTransformation () const"

.SS "\fBVector3f\fP Transform::GetTransformedPos () const\fC [inline]\fP"

.SS "\fBQuaternion\fP Transform::GetTransformedRot () const"

.SS "bool Transform::HasChanged ()"

.SS "void Transform::LookAt (const \fBVector3f\fP & point, const \fBVector3f\fP & up)"

.SS "void Transform::Rotate (const \fBVector3f\fP & axis, float angle)"

.SS "void Transform::Rotate (const \fBQuaternion\fP & rotation)"

.SS "void Transform::SetParent (\fBTransform\fP * parent)\fC [inline]\fP"

.SS "void Transform::SetPos (const \fBVector3f\fP & pos)\fC [inline]\fP"

.SS "void Transform::SetRot (const \fBQuaternion\fP & rot)\fC [inline]\fP"

.SS "void Transform::SetScale (float scale)\fC [inline]\fP"

.SS "void Transform::Update ()"


.SH "Author"
.PP 
Generated automatically by Doxygen for Fusion3D from the source code\&.
