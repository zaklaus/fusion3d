.TH "Vector3f" 3 "Tue Nov 24 2015" "Version 0.0.0.1" "Fusion3D" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Vector3f \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <math3d\&.h>\fP
.PP
Inherits \fBVector3< float >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBVector3f\fP (float x=0\&.0f, float y=0\&.0f, float z=0\&.0f)"
.br
.ti -1c
.RI "\fBVector3f\fP (const \fBVector3\fP< float > &r)"
.br
.ti -1c
.RI "float \fBLength\fP () const "
.br
.ti -1c
.RI "float \fBDot\fP (const \fBVector3f\fP &v) const "
.br
.ti -1c
.RI "\fBVector3f\fP \fBCross\fP (const \fBVector3f\fP &v) const "
.br
.ti -1c
.RI "\fBVector3f\fP \fBRotate\fP (float angle, const \fBVector3f\fP &axis) const "
.br
.ti -1c
.RI "\fBVector3f\fP \fBRotate\fP (const \fBQuaternion\fP &rotation) const "
.br
.ti -1c
.RI "\fBVector3f\fP \fBNormalized\fP () const "
.br
.ti -1c
.RI "\fBVector3f\fP \fBoperator+\fP (const \fBVector3f\fP &r) const "
.br
.ti -1c
.RI "\fBVector3f\fP \fBoperator\-\fP (const \fBVector3f\fP &r) const "
.br
.ti -1c
.RI "\fBVector3f\fP \fBoperator*\fP (float f) const "
.br
.ti -1c
.RI "\fBVector3f\fP \fBoperator/\fP (float f) const "
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBVector3f\fP &r) const "
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBVector3f\fP &r) const "
.br
.ti -1c
.RI "\fBVector3f\fP & \fBoperator+=\fP (const \fBVector3f\fP &r)"
.br
.ti -1c
.RI "\fBVector3f\fP & \fBoperator\-=\fP (const \fBVector3f\fP &r)"
.br
.ti -1c
.RI "\fBVector3f\fP & \fBoperator*=\fP (float f)"
.br
.ti -1c
.RI "\fBVector3f\fP & \fBoperator/=\fP (float f)"
.br
.ti -1c
.RI "float \fBGetX\fP () const "
.br
.ti -1c
.RI "float \fBGetY\fP () const "
.br
.ti -1c
.RI "float \fBGetZ\fP () const "
.br
.ti -1c
.RI "void \fBSetX\fP (float x)"
.br
.ti -1c
.RI "void \fBSetY\fP (float y)"
.br
.ti -1c
.RI "void \fBSetZ\fP (float z)"
.br
.ti -1c
.RI "void \fBSet\fP (float x, float y, float z)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Vector3f::Vector3f (float x = \fC0\&.0f\fP, float y = \fC0\&.0f\fP, float z = \fC0\&.0f\fP)\fC [inline]\fP"

.SS "Vector3f::Vector3f (const \fBVector3\fP< float > & r)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "\fBVector3f\fP Vector3f::Cross (const \fBVector3f\fP & v) const\fC [inline]\fP"

.SS "float Vector3f::Dot (const \fBVector3f\fP & v) const\fC [inline]\fP"

.SS "float Vector3f::GetX () const\fC [inline]\fP"

.SS "float Vector3f::GetY () const\fC [inline]\fP"

.SS "float Vector3f::GetZ () const\fC [inline]\fP"

.SS "float Vector3f::Length () const\fC [inline]\fP"

.SS "\fBVector3f\fP Vector3f::Normalized () const\fC [inline]\fP"

.SS "bool Vector3f::operator!= (const \fBVector3f\fP & r) const\fC [inline]\fP"

.SS "\fBVector3f\fP Vector3f::operator* (float f) const\fC [inline]\fP"

.SS "\fBVector3f\fP& Vector3f::operator*= (float f)\fC [inline]\fP"

.SS "\fBVector3f\fP Vector3f::operator+ (const \fBVector3f\fP & r) const\fC [inline]\fP"

.SS "\fBVector3f\fP& Vector3f::operator+= (const \fBVector3f\fP & r)\fC [inline]\fP"

.SS "\fBVector3f\fP Vector3f::operator\- (const \fBVector3f\fP & r) const\fC [inline]\fP"

.SS "\fBVector3f\fP& Vector3f::operator\-= (const \fBVector3f\fP & r)\fC [inline]\fP"

.SS "\fBVector3f\fP Vector3f::operator/ (float f) const\fC [inline]\fP"

.SS "\fBVector3f\fP& Vector3f::operator/= (float f)\fC [inline]\fP"

.SS "bool Vector3f::operator== (const \fBVector3f\fP & r) const\fC [inline]\fP"

.SS "\fBVector3f\fP Vector3f::Rotate (float angle, const \fBVector3f\fP & axis) const\fC [inline]\fP"

.SS "\fBVector3f\fP Vector3f::Rotate (const \fBQuaternion\fP & rotation) const"

.SS "void Vector3f::Set (float x, float y, float z)\fC [inline]\fP"

.SS "void Vector3f::SetX (float x)\fC [inline]\fP"

.SS "void Vector3f::SetY (float y)\fC [inline]\fP"

.SS "void Vector3f::SetZ (float z)\fC [inline]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Fusion3D from the source code\&.
