.TH "glm" 3 "Tue Nov 24 2015" "Version 0.0.0.1" "Fusion3D" \" -*- nroff -*-
.ad l
.nh
.SH NAME
glm \- 
.SH SYNOPSIS
.br
.PP
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBdetail\fP"
.br
.ti -1c
.RI " \fBgtc\fP"
.br
.ti -1c
.RI " \fBgtx\fP"
.br
.ti -1c
.RI " \fBio\fP"
.br
.in -1c
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBcompute_YCoCgR\fP"
.br
.ti -1c
.RI "class \fBcompute_YCoCgR< T, P, true >\fP"
.br
.ti -1c
.RI "struct \fBtdualquat\fP"
.br
.ti -1c
.RI "struct \fBtquat\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef \fBtquat\fP< float, lowp > \fBlowp_quat\fP"
.br
.ti -1c
.RI "typedef \fBtquat\fP< float, mediump > \fBmediump_quat\fP"
.br
.ti -1c
.RI "typedef \fBtquat\fP< float, highp > \fBhighp_quat\fP"
.br
.ti -1c
.RI "typedef \fBhighp_quat\fP \fBquat\fP"
.br
.RI "\fI\fBQuaternion\fP of default single-precision floating-point numbers\&. \fP"
.ti -1c
.RI "typedef \fBlowp_quat\fP \fBlowp_fquat\fP"
.br
.ti -1c
.RI "typedef \fBmediump_quat\fP \fBmediump_fquat\fP"
.br
.ti -1c
.RI "typedef \fBhighp_quat\fP \fBhighp_fquat\fP"
.br
.ti -1c
.RI "typedef \fBquat\fP \fBfquat\fP"
.br
.ti -1c
.RI "typedef \fBtquat\fP< double, lowp > \fBlowp_dquat\fP"
.br
.ti -1c
.RI "typedef \fBtquat\fP< double, mediump > \fBmediump_dquat\fP"
.br
.ti -1c
.RI "typedef \fBtquat\fP< double, highp > \fBhighp_dquat\fP"
.br
.ti -1c
.RI "typedef \fBhighp_dquat\fP \fBdquat\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBlowp_int8\fP"
.br
.ti -1c
.RI "typedef \fBdetail::int16\fP \fBlowp_int16\fP"
.br
.ti -1c
.RI "typedef \fBdetail::int32\fP \fBlowp_int32\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBlowp_int64\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBlowp_int8_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::int16\fP \fBlowp_int16_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::int32\fP \fBlowp_int32_t\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBlowp_int64_t\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBlowp_i8\fP"
.br
.ti -1c
.RI "typedef \fBdetail::int16\fP \fBlowp_i16\fP"
.br
.ti -1c
.RI "typedef \fBdetail::int32\fP \fBlowp_i32\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBlowp_i64\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBmediump_int8\fP"
.br
.ti -1c
.RI "typedef \fBdetail::int16\fP \fBmediump_int16\fP"
.br
.ti -1c
.RI "typedef \fBdetail::int32\fP \fBmediump_int32\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBmediump_int64\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBmediump_int8_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::int16\fP \fBmediump_int16_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::int32\fP \fBmediump_int32_t\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBmediump_int64_t\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBmediump_i8\fP"
.br
.ti -1c
.RI "typedef \fBdetail::int16\fP \fBmediump_i16\fP"
.br
.ti -1c
.RI "typedef \fBdetail::int32\fP \fBmediump_i32\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBmediump_i64\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBhighp_int8\fP"
.br
.ti -1c
.RI "typedef \fBdetail::int16\fP \fBhighp_int16\fP"
.br
.ti -1c
.RI "typedef \fBdetail::int32\fP \fBhighp_int32\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBhighp_int64\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBhighp_int8_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::int16\fP \fBhighp_int16_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::int32\fP \fBhighp_int32_t\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBhighp_int64_t\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBhighp_i8\fP"
.br
.ti -1c
.RI "typedef \fBdetail::int16\fP \fBhighp_i16\fP"
.br
.ti -1c
.RI "typedef \fBdetail::int32\fP \fBhighp_i32\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBhighp_i64\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBint8\fP"
.br
.ti -1c
.RI "typedef detail::int16 \fBint16\fP"
.br
.ti -1c
.RI "typedef detail::int32 \fBint32\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBint64\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBint8_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::int16\fP \fBint16_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::int32\fP \fBint32_t\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBint64_t\fP"
.br
.ti -1c
.RI "typedef detail::int8 \fBi8\fP"
.br
.ti -1c
.RI "typedef \fBdetail::int16\fP \fBi16\fP"
.br
.ti -1c
.RI "typedef \fBdetail::int32\fP \fBi32\fP"
.br
.ti -1c
.RI "typedef detail::int64 \fBi64\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBi8\fP, lowp > \fBlowp_i8vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBi8\fP, lowp > \fBlowp_i8vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBi8\fP, lowp > \fBlowp_i8vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBi8\fP, lowp > \fBlowp_i8vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBi8\fP, mediump > \fBmediump_i8vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBi8\fP, mediump > \fBmediump_i8vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBi8\fP, mediump > \fBmediump_i8vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBi8\fP, mediump > \fBmediump_i8vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBi8\fP, highp > \fBhighp_i8vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBi8\fP, highp > \fBhighp_i8vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBi8\fP, highp > \fBhighp_i8vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBi8\fP, highp > \fBhighp_i8vec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i8vec1\fP \fBi8vec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i8vec2\fP \fBi8vec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i8vec3\fP \fBi8vec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i8vec4\fP \fBi8vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBi16\fP, lowp > \fBlowp_i16vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBi16\fP, lowp > \fBlowp_i16vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBi16\fP, lowp > \fBlowp_i16vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBi16\fP, lowp > \fBlowp_i16vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBi16\fP, mediump > \fBmediump_i16vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBi16\fP, mediump > \fBmediump_i16vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBi16\fP, mediump > \fBmediump_i16vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBi16\fP, mediump > \fBmediump_i16vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBi16\fP, highp > \fBhighp_i16vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBi16\fP, highp > \fBhighp_i16vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBi16\fP, highp > \fBhighp_i16vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBi16\fP, highp > \fBhighp_i16vec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i16vec1\fP \fBi16vec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i16vec2\fP \fBi16vec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i16vec3\fP \fBi16vec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i16vec4\fP \fBi16vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBi32\fP, lowp > \fBlowp_i32vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBi32\fP, lowp > \fBlowp_i32vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBi32\fP, lowp > \fBlowp_i32vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBi32\fP, lowp > \fBlowp_i32vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBi32\fP, mediump > \fBmediump_i32vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBi32\fP, mediump > \fBmediump_i32vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBi32\fP, mediump > \fBmediump_i32vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBi32\fP, mediump > \fBmediump_i32vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBi32\fP, highp > \fBhighp_i32vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBi32\fP, highp > \fBhighp_i32vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBi32\fP, highp > \fBhighp_i32vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBi32\fP, highp > \fBhighp_i32vec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i32vec1\fP \fBi32vec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i32vec2\fP \fBi32vec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i32vec3\fP \fBi32vec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i32vec4\fP \fBi32vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBi64\fP, lowp > \fBlowp_i64vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBi64\fP, lowp > \fBlowp_i64vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBi64\fP, lowp > \fBlowp_i64vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBi64\fP, lowp > \fBlowp_i64vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBi64\fP, mediump > \fBmediump_i64vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBi64\fP, mediump > \fBmediump_i64vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBi64\fP, mediump > \fBmediump_i64vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBi64\fP, mediump > \fBmediump_i64vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBi64\fP, highp > \fBhighp_i64vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBi64\fP, highp > \fBhighp_i64vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBi64\fP, highp > \fBhighp_i64vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBi64\fP, highp > \fBhighp_i64vec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i64vec1\fP \fBi64vec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i64vec2\fP \fBi64vec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i64vec3\fP \fBi64vec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_i64vec4\fP \fBi64vec4\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint8\fP \fBlowp_uint8\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint16\fP \fBlowp_uint16\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint32\fP \fBlowp_uint32\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBlowp_uint64\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint8\fP \fBlowp_uint8_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint16\fP \fBlowp_uint16_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint32\fP \fBlowp_uint32_t\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBlowp_uint64_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint8\fP \fBlowp_u8\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint16\fP \fBlowp_u16\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint32\fP \fBlowp_u32\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBlowp_u64\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint8\fP \fBmediump_uint8\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint16\fP \fBmediump_uint16\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint32\fP \fBmediump_uint32\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBmediump_uint64\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint8\fP \fBmediump_uint8_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint16\fP \fBmediump_uint16_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint32\fP \fBmediump_uint32_t\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBmediump_uint64_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint8\fP \fBmediump_u8\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint16\fP \fBmediump_u16\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint32\fP \fBmediump_u32\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBmediump_u64\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint8\fP \fBhighp_uint8\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint16\fP \fBhighp_uint16\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint32\fP \fBhighp_uint32\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBhighp_uint64\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint8\fP \fBhighp_uint8_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint16\fP \fBhighp_uint16_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint32\fP \fBhighp_uint32_t\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBhighp_uint64_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint8\fP \fBhighp_u8\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint16\fP \fBhighp_u16\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint32\fP \fBhighp_u32\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBhighp_u64\fP"
.br
.ti -1c
.RI "typedef detail::uint8 \fBuint8\fP"
.br
.ti -1c
.RI "typedef detail::uint16 \fBuint16\fP"
.br
.ti -1c
.RI "typedef detail::uint32 \fBuint32\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBuint64\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint8\fP \fBuint8_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint16\fP \fBuint16_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint32\fP \fBuint32_t\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBuint64_t\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint8\fP \fBu8\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint16\fP \fBu16\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint32\fP \fBu32\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBu64\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBu8\fP, lowp > \fBlowp_u8vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBu8\fP, lowp > \fBlowp_u8vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBu8\fP, lowp > \fBlowp_u8vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBu8\fP, lowp > \fBlowp_u8vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBu8\fP, mediump > \fBmediump_u8vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBu8\fP, mediump > \fBmediump_u8vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBu8\fP, mediump > \fBmediump_u8vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBu8\fP, mediump > \fBmediump_u8vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBu8\fP, highp > \fBhighp_u8vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBu8\fP, highp > \fBhighp_u8vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBu8\fP, highp > \fBhighp_u8vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBu8\fP, highp > \fBhighp_u8vec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u8vec1\fP \fBu8vec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u8vec2\fP \fBu8vec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u8vec3\fP \fBu8vec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u8vec4\fP \fBu8vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBu16\fP, lowp > \fBlowp_u16vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBu16\fP, lowp > \fBlowp_u16vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBu16\fP, lowp > \fBlowp_u16vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBu16\fP, lowp > \fBlowp_u16vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBu16\fP, mediump > \fBmediump_u16vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBu16\fP, mediump > \fBmediump_u16vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBu16\fP, mediump > \fBmediump_u16vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBu16\fP, mediump > \fBmediump_u16vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBu16\fP, highp > \fBhighp_u16vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBu16\fP, highp > \fBhighp_u16vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBu16\fP, highp > \fBhighp_u16vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBu16\fP, highp > \fBhighp_u16vec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u16vec1\fP \fBu16vec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u16vec2\fP \fBu16vec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u16vec3\fP \fBu16vec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u16vec4\fP \fBu16vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBu32\fP, lowp > \fBlowp_u32vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBu32\fP, lowp > \fBlowp_u32vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBu32\fP, lowp > \fBlowp_u32vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBu32\fP, lowp > \fBlowp_u32vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBu32\fP, mediump > \fBmediump_u32vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBu32\fP, mediump > \fBmediump_u32vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBu32\fP, mediump > \fBmediump_u32vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBu32\fP, mediump > \fBmediump_u32vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBu32\fP, highp > \fBhighp_u32vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBu32\fP, highp > \fBhighp_u32vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBu32\fP, highp > \fBhighp_u32vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBu32\fP, highp > \fBhighp_u32vec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u32vec1\fP \fBu32vec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u32vec2\fP \fBu32vec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u32vec3\fP \fBu32vec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u32vec4\fP \fBu32vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBu64\fP, lowp > \fBlowp_u64vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBu64\fP, lowp > \fBlowp_u64vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBu64\fP, lowp > \fBlowp_u64vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBu64\fP, lowp > \fBlowp_u64vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBu64\fP, mediump > \fBmediump_u64vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBu64\fP, mediump > \fBmediump_u64vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBu64\fP, mediump > \fBmediump_u64vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBu64\fP, mediump > \fBmediump_u64vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBu64\fP, highp > \fBhighp_u64vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBu64\fP, highp > \fBhighp_u64vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBu64\fP, highp > \fBhighp_u64vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBu64\fP, highp > \fBhighp_u64vec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u64vec1\fP \fBu64vec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u64vec2\fP \fBu64vec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u64vec3\fP \fBu64vec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_u64vec4\fP \fBu64vec4\fP"
.br
.ti -1c
.RI "typedef detail::float32 \fBlowp_float32\fP"
.br
.ti -1c
.RI "typedef detail::float64 \fBlowp_float64\fP"
.br
.ti -1c
.RI "typedef detail::float32 \fBlowp_float32_t\fP"
.br
.ti -1c
.RI "typedef detail::float64 \fBlowp_float64_t\fP"
.br
.ti -1c
.RI "typedef \fBfloat32\fP \fBlowp_f32\fP"
.br
.ti -1c
.RI "typedef \fBfloat64\fP \fBlowp_f64\fP"
.br
.ti -1c
.RI "typedef detail::float32 \fBmediump_float32\fP"
.br
.ti -1c
.RI "typedef detail::float64 \fBmediump_float64\fP"
.br
.ti -1c
.RI "typedef detail::float32 \fBmediump_float32_t\fP"
.br
.ti -1c
.RI "typedef detail::float64 \fBmediump_float64_t\fP"
.br
.ti -1c
.RI "typedef \fBfloat32\fP \fBmediump_f32\fP"
.br
.ti -1c
.RI "typedef \fBfloat64\fP \fBmediump_f64\fP"
.br
.ti -1c
.RI "typedef detail::float32 \fBhighp_float32\fP"
.br
.ti -1c
.RI "typedef detail::float64 \fBhighp_float64\fP"
.br
.ti -1c
.RI "typedef detail::float32 \fBhighp_float32_t\fP"
.br
.ti -1c
.RI "typedef detail::float64 \fBhighp_float64_t\fP"
.br
.ti -1c
.RI "typedef \fBfloat32\fP \fBhighp_f32\fP"
.br
.ti -1c
.RI "typedef \fBfloat64\fP \fBhighp_f64\fP"
.br
.ti -1c
.RI "typedef \fBhighp_float32\fP \fBfloat32\fP"
.br
.ti -1c
.RI "typedef \fBhighp_float64\fP \fBfloat64\fP"
.br
.ti -1c
.RI "typedef \fBhighp_float32_t\fP \fBfloat32_t\fP"
.br
.ti -1c
.RI "typedef \fBhighp_float64_t\fP \fBfloat64_t\fP"
.br
.ti -1c
.RI "typedef \fBhighp_float32_t\fP \fBf32\fP"
.br
.ti -1c
.RI "typedef \fBhighp_float64_t\fP \fBf64\fP"
.br
.ti -1c
.RI "typedef tvec1< float, lowp > \fBlowp_vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< float, lowp > \fBlowp_vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< float, lowp > \fBlowp_vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< float, lowp > \fBlowp_vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< float, lowp > \fBlowp_fvec1\fP"
.br
.ti -1c
.RI "typedef tvec2< float, lowp > \fBlowp_fvec2\fP"
.br
.ti -1c
.RI "typedef tvec3< float, lowp > \fBlowp_fvec3\fP"
.br
.ti -1c
.RI "typedef tvec4< float, lowp > \fBlowp_fvec4\fP"
.br
.ti -1c
.RI "typedef tvec1< float, mediump > \fBmediump_vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< float, mediump > \fBmediump_vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< float, mediump > \fBmediump_vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< float, mediump > \fBmediump_vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< float, mediump > \fBmediump_fvec1\fP"
.br
.ti -1c
.RI "typedef tvec2< float, mediump > \fBmediump_fvec2\fP"
.br
.ti -1c
.RI "typedef tvec3< float, mediump > \fBmediump_fvec3\fP"
.br
.ti -1c
.RI "typedef tvec4< float, mediump > \fBmediump_fvec4\fP"
.br
.ti -1c
.RI "typedef tvec1< float, highp > \fBhighp_vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< float, highp > \fBhighp_vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< float, highp > \fBhighp_vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< float, highp > \fBhighp_vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< float, highp > \fBhighp_fvec1\fP"
.br
.ti -1c
.RI "typedef tvec2< float, highp > \fBhighp_fvec2\fP"
.br
.ti -1c
.RI "typedef tvec3< float, highp > \fBhighp_fvec3\fP"
.br
.ti -1c
.RI "typedef tvec4< float, highp > \fBhighp_fvec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBf32\fP, lowp > \fBlowp_f32vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBf32\fP, lowp > \fBlowp_f32vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBf32\fP, lowp > \fBlowp_f32vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBf32\fP, lowp > \fBlowp_f32vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBf32\fP, mediump > \fBmediump_f32vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBf32\fP, mediump > \fBmediump_f32vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBf32\fP, mediump > \fBmediump_f32vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBf32\fP, mediump > \fBmediump_f32vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBf32\fP, highp > \fBhighp_f32vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBf32\fP, highp > \fBhighp_f32vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBf32\fP, highp > \fBhighp_f32vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBf32\fP, highp > \fBhighp_f32vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBf64\fP, lowp > \fBlowp_f64vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBf64\fP, lowp > \fBlowp_f64vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBf64\fP, lowp > \fBlowp_f64vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBf64\fP, lowp > \fBlowp_f64vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBf64\fP, mediump > \fBmediump_f64vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBf64\fP, mediump > \fBmediump_f64vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBf64\fP, mediump > \fBmediump_f64vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBf64\fP, mediump > \fBmediump_f64vec4\fP"
.br
.ti -1c
.RI "typedef tvec1< \fBf64\fP, highp > \fBhighp_f64vec1\fP"
.br
.ti -1c
.RI "typedef tvec2< \fBf64\fP, highp > \fBhighp_f64vec2\fP"
.br
.ti -1c
.RI "typedef tvec3< \fBf64\fP, highp > \fBhighp_f64vec3\fP"
.br
.ti -1c
.RI "typedef tvec4< \fBf64\fP, highp > \fBhighp_f64vec4\fP"
.br
.ti -1c
.RI "typedef tmat2x2< \fBf32\fP, lowp > \fBlowp_fmat2x2\fP"
.br
.ti -1c
.RI "typedef tmat2x3< \fBf32\fP, lowp > \fBlowp_fmat2x3\fP"
.br
.ti -1c
.RI "typedef tmat2x4< \fBf32\fP, lowp > \fBlowp_fmat2x4\fP"
.br
.ti -1c
.RI "typedef tmat3x2< \fBf32\fP, lowp > \fBlowp_fmat3x2\fP"
.br
.ti -1c
.RI "typedef tmat3x3< \fBf32\fP, lowp > \fBlowp_fmat3x3\fP"
.br
.ti -1c
.RI "typedef tmat3x4< \fBf32\fP, lowp > \fBlowp_fmat3x4\fP"
.br
.ti -1c
.RI "typedef tmat4x2< \fBf32\fP, lowp > \fBlowp_fmat4x2\fP"
.br
.ti -1c
.RI "typedef tmat4x3< \fBf32\fP, lowp > \fBlowp_fmat4x3\fP"
.br
.ti -1c
.RI "typedef tmat4x4< \fBf32\fP, lowp > \fBlowp_fmat4x4\fP"
.br
.ti -1c
.RI "typedef \fBlowp_fmat2x2\fP \fBlowp_fmat2\fP"
.br
.ti -1c
.RI "typedef \fBlowp_fmat3x3\fP \fBlowp_fmat3\fP"
.br
.ti -1c
.RI "typedef \fBlowp_fmat4x4\fP \fBlowp_fmat4\fP"
.br
.ti -1c
.RI "typedef tmat2x2< \fBf32\fP, mediump > \fBmediump_fmat2x2\fP"
.br
.ti -1c
.RI "typedef tmat2x3< \fBf32\fP, mediump > \fBmediump_fmat2x3\fP"
.br
.ti -1c
.RI "typedef tmat2x4< \fBf32\fP, mediump > \fBmediump_fmat2x4\fP"
.br
.ti -1c
.RI "typedef tmat3x2< \fBf32\fP, mediump > \fBmediump_fmat3x2\fP"
.br
.ti -1c
.RI "typedef tmat3x3< \fBf32\fP, mediump > \fBmediump_fmat3x3\fP"
.br
.ti -1c
.RI "typedef tmat3x4< \fBf32\fP, mediump > \fBmediump_fmat3x4\fP"
.br
.ti -1c
.RI "typedef tmat4x2< \fBf32\fP, mediump > \fBmediump_fmat4x2\fP"
.br
.ti -1c
.RI "typedef tmat4x3< \fBf32\fP, mediump > \fBmediump_fmat4x3\fP"
.br
.ti -1c
.RI "typedef tmat4x4< \fBf32\fP, mediump > \fBmediump_fmat4x4\fP"
.br
.ti -1c
.RI "typedef \fBmediump_fmat2x2\fP \fBmediump_fmat2\fP"
.br
.ti -1c
.RI "typedef \fBmediump_fmat3x3\fP \fBmediump_fmat3\fP"
.br
.ti -1c
.RI "typedef \fBmediump_fmat4x4\fP \fBmediump_fmat4\fP"
.br
.ti -1c
.RI "typedef tmat2x2< \fBf32\fP, highp > \fBhighp_fmat2x2\fP"
.br
.ti -1c
.RI "typedef tmat2x3< \fBf32\fP, highp > \fBhighp_fmat2x3\fP"
.br
.ti -1c
.RI "typedef tmat2x4< \fBf32\fP, highp > \fBhighp_fmat2x4\fP"
.br
.ti -1c
.RI "typedef tmat3x2< \fBf32\fP, highp > \fBhighp_fmat3x2\fP"
.br
.ti -1c
.RI "typedef tmat3x3< \fBf32\fP, highp > \fBhighp_fmat3x3\fP"
.br
.ti -1c
.RI "typedef tmat3x4< \fBf32\fP, highp > \fBhighp_fmat3x4\fP"
.br
.ti -1c
.RI "typedef tmat4x2< \fBf32\fP, highp > \fBhighp_fmat4x2\fP"
.br
.ti -1c
.RI "typedef tmat4x3< \fBf32\fP, highp > \fBhighp_fmat4x3\fP"
.br
.ti -1c
.RI "typedef tmat4x4< \fBf32\fP, highp > \fBhighp_fmat4x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_fmat2x2\fP \fBhighp_fmat2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_fmat3x3\fP \fBhighp_fmat3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_fmat4x4\fP \fBhighp_fmat4\fP"
.br
.ti -1c
.RI "typedef tmat2x2< \fBf32\fP, lowp > \fBlowp_f32mat2x2\fP"
.br
.ti -1c
.RI "typedef tmat2x3< \fBf32\fP, lowp > \fBlowp_f32mat2x3\fP"
.br
.ti -1c
.RI "typedef tmat2x4< \fBf32\fP, lowp > \fBlowp_f32mat2x4\fP"
.br
.ti -1c
.RI "typedef tmat3x2< \fBf32\fP, lowp > \fBlowp_f32mat3x2\fP"
.br
.ti -1c
.RI "typedef tmat3x3< \fBf32\fP, lowp > \fBlowp_f32mat3x3\fP"
.br
.ti -1c
.RI "typedef tmat3x4< \fBf32\fP, lowp > \fBlowp_f32mat3x4\fP"
.br
.ti -1c
.RI "typedef tmat4x2< \fBf32\fP, lowp > \fBlowp_f32mat4x2\fP"
.br
.ti -1c
.RI "typedef tmat4x3< \fBf32\fP, lowp > \fBlowp_f32mat4x3\fP"
.br
.ti -1c
.RI "typedef tmat4x4< \fBf32\fP, lowp > \fBlowp_f32mat4x4\fP"
.br
.ti -1c
.RI "typedef \fBlowp_f32mat2x2\fP \fBlowp_f32mat2\fP"
.br
.ti -1c
.RI "typedef \fBlowp_f32mat3x3\fP \fBlowp_f32mat3\fP"
.br
.ti -1c
.RI "typedef \fBlowp_f32mat4x4\fP \fBlowp_f32mat4\fP"
.br
.ti -1c
.RI "typedef tmat2x2< \fBf32\fP, mediump > \fBmediump_f32mat2x2\fP"
.br
.ti -1c
.RI "typedef tmat2x3< \fBf32\fP, mediump > \fBmediump_f32mat2x3\fP"
.br
.ti -1c
.RI "typedef tmat2x4< \fBf32\fP, mediump > \fBmediump_f32mat2x4\fP"
.br
.ti -1c
.RI "typedef tmat3x2< \fBf32\fP, mediump > \fBmediump_f32mat3x2\fP"
.br
.ti -1c
.RI "typedef tmat3x3< \fBf32\fP, mediump > \fBmediump_f32mat3x3\fP"
.br
.ti -1c
.RI "typedef tmat3x4< \fBf32\fP, mediump > \fBmediump_f32mat3x4\fP"
.br
.ti -1c
.RI "typedef tmat4x2< \fBf32\fP, mediump > \fBmediump_f32mat4x2\fP"
.br
.ti -1c
.RI "typedef tmat4x3< \fBf32\fP, mediump > \fBmediump_f32mat4x3\fP"
.br
.ti -1c
.RI "typedef tmat4x4< \fBf32\fP, mediump > \fBmediump_f32mat4x4\fP"
.br
.ti -1c
.RI "typedef \fBmediump_f32mat2x2\fP \fBmediump_f32mat2\fP"
.br
.ti -1c
.RI "typedef \fBmediump_f32mat3x3\fP \fBmediump_f32mat3\fP"
.br
.ti -1c
.RI "typedef \fBmediump_f32mat4x4\fP \fBmediump_f32mat4\fP"
.br
.ti -1c
.RI "typedef tmat2x2< \fBf32\fP, highp > \fBhighp_f32mat2x2\fP"
.br
.ti -1c
.RI "typedef tmat2x3< \fBf32\fP, highp > \fBhighp_f32mat2x3\fP"
.br
.ti -1c
.RI "typedef tmat2x4< \fBf32\fP, highp > \fBhighp_f32mat2x4\fP"
.br
.ti -1c
.RI "typedef tmat3x2< \fBf32\fP, highp > \fBhighp_f32mat3x2\fP"
.br
.ti -1c
.RI "typedef tmat3x3< \fBf32\fP, highp > \fBhighp_f32mat3x3\fP"
.br
.ti -1c
.RI "typedef tmat3x4< \fBf32\fP, highp > \fBhighp_f32mat3x4\fP"
.br
.ti -1c
.RI "typedef tmat4x2< \fBf32\fP, highp > \fBhighp_f32mat4x2\fP"
.br
.ti -1c
.RI "typedef tmat4x3< \fBf32\fP, highp > \fBhighp_f32mat4x3\fP"
.br
.ti -1c
.RI "typedef tmat4x4< \fBf32\fP, highp > \fBhighp_f32mat4x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat2x2\fP \fBhighp_f32mat2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat3x3\fP \fBhighp_f32mat3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat4x4\fP \fBhighp_f32mat4\fP"
.br
.ti -1c
.RI "typedef tmat2x2< \fBf64\fP, lowp > \fBlowp_f64mat2x2\fP"
.br
.ti -1c
.RI "typedef tmat2x3< \fBf64\fP, lowp > \fBlowp_f64mat2x3\fP"
.br
.ti -1c
.RI "typedef tmat2x4< \fBf64\fP, lowp > \fBlowp_f64mat2x4\fP"
.br
.ti -1c
.RI "typedef tmat3x2< \fBf64\fP, lowp > \fBlowp_f64mat3x2\fP"
.br
.ti -1c
.RI "typedef tmat3x3< \fBf64\fP, lowp > \fBlowp_f64mat3x3\fP"
.br
.ti -1c
.RI "typedef tmat3x4< \fBf64\fP, lowp > \fBlowp_f64mat3x4\fP"
.br
.ti -1c
.RI "typedef tmat4x2< \fBf64\fP, lowp > \fBlowp_f64mat4x2\fP"
.br
.ti -1c
.RI "typedef tmat4x3< \fBf64\fP, lowp > \fBlowp_f64mat4x3\fP"
.br
.ti -1c
.RI "typedef tmat4x4< \fBf64\fP, lowp > \fBlowp_f64mat4x4\fP"
.br
.ti -1c
.RI "typedef \fBlowp_f64mat2x2\fP \fBlowp_f64mat2\fP"
.br
.ti -1c
.RI "typedef \fBlowp_f64mat3x3\fP \fBlowp_f64mat3\fP"
.br
.ti -1c
.RI "typedef \fBlowp_f64mat4x4\fP \fBlowp_f64mat4\fP"
.br
.ti -1c
.RI "typedef tmat2x2< \fBf64\fP, mediump > \fBmediump_f64mat2x2\fP"
.br
.ti -1c
.RI "typedef tmat2x3< \fBf64\fP, mediump > \fBmediump_f64mat2x3\fP"
.br
.ti -1c
.RI "typedef tmat2x4< \fBf64\fP, mediump > \fBmediump_f64mat2x4\fP"
.br
.ti -1c
.RI "typedef tmat3x2< \fBf64\fP, mediump > \fBmediump_f64mat3x2\fP"
.br
.ti -1c
.RI "typedef tmat3x3< \fBf64\fP, mediump > \fBmediump_f64mat3x3\fP"
.br
.ti -1c
.RI "typedef tmat3x4< \fBf64\fP, mediump > \fBmediump_f64mat3x4\fP"
.br
.ti -1c
.RI "typedef tmat4x2< \fBf64\fP, mediump > \fBmediump_f64mat4x2\fP"
.br
.ti -1c
.RI "typedef tmat4x3< \fBf64\fP, mediump > \fBmediump_f64mat4x3\fP"
.br
.ti -1c
.RI "typedef tmat4x4< \fBf64\fP, mediump > \fBmediump_f64mat4x4\fP"
.br
.ti -1c
.RI "typedef \fBmediump_f64mat2x2\fP \fBmediump_f64mat2\fP"
.br
.ti -1c
.RI "typedef \fBmediump_f64mat3x3\fP \fBmediump_f64mat3\fP"
.br
.ti -1c
.RI "typedef \fBmediump_f64mat4x4\fP \fBmediump_f64mat4\fP"
.br
.ti -1c
.RI "typedef tmat2x2< \fBf64\fP, highp > \fBhighp_f64mat2x2\fP"
.br
.ti -1c
.RI "typedef tmat2x3< \fBf64\fP, highp > \fBhighp_f64mat2x3\fP"
.br
.ti -1c
.RI "typedef tmat2x4< \fBf64\fP, highp > \fBhighp_f64mat2x4\fP"
.br
.ti -1c
.RI "typedef tmat3x2< \fBf64\fP, highp > \fBhighp_f64mat3x2\fP"
.br
.ti -1c
.RI "typedef tmat3x3< \fBf64\fP, highp > \fBhighp_f64mat3x3\fP"
.br
.ti -1c
.RI "typedef tmat3x4< \fBf64\fP, highp > \fBhighp_f64mat3x4\fP"
.br
.ti -1c
.RI "typedef tmat4x2< \fBf64\fP, highp > \fBhighp_f64mat4x2\fP"
.br
.ti -1c
.RI "typedef tmat4x3< \fBf64\fP, highp > \fBhighp_f64mat4x3\fP"
.br
.ti -1c
.RI "typedef tmat4x4< \fBf64\fP, highp > \fBhighp_f64mat4x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat2x2\fP \fBhighp_f64mat2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat3x3\fP \fBhighp_f64mat3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat4x4\fP \fBhighp_f64mat4\fP"
.br
.ti -1c
.RI "typedef \fBtquat\fP< \fBf32\fP, lowp > \fBlowp_f32quat\fP"
.br
.ti -1c
.RI "typedef \fBtquat\fP< \fBf64\fP, lowp > \fBlowp_f64quat\fP"
.br
.ti -1c
.RI "typedef \fBtquat\fP< \fBf32\fP, mediump > \fBmediump_f32quat\fP"
.br
.ti -1c
.RI "typedef \fBtquat\fP< \fBf64\fP, mediump > \fBmediump_f64quat\fP"
.br
.ti -1c
.RI "typedef \fBtquat\fP< \fBf32\fP, highp > \fBhighp_f32quat\fP"
.br
.ti -1c
.RI "typedef \fBtquat\fP< \fBf64\fP, highp > \fBhighp_f64quat\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32vec1\fP \fBfvec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32vec2\fP \fBfvec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32vec3\fP \fBfvec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32vec4\fP \fBfvec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat2x2\fP \fBfmat2x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat2x3\fP \fBfmat2x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat2x4\fP \fBfmat2x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat3x2\fP \fBfmat3x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat3x3\fP \fBfmat3x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat3x4\fP \fBfmat3x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat4x2\fP \fBfmat4x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat4x3\fP \fBfmat4x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat4x4\fP \fBfmat4x4\fP"
.br
.ti -1c
.RI "typedef \fBfmat2x2\fP \fBfmat2\fP"
.br
.ti -1c
.RI "typedef \fBfmat3x3\fP \fBfmat3\fP"
.br
.ti -1c
.RI "typedef \fBfmat4x4\fP \fBfmat4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32vec1\fP \fBf32vec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32vec2\fP \fBf32vec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32vec3\fP \fBf32vec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32vec4\fP \fBf32vec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat2x2\fP \fBf32mat2x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat2x3\fP \fBf32mat2x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat2x4\fP \fBf32mat2x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat3x2\fP \fBf32mat3x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat3x3\fP \fBf32mat3x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat3x4\fP \fBf32mat3x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat4x2\fP \fBf32mat4x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat4x3\fP \fBf32mat4x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32mat4x4\fP \fBf32mat4x4\fP"
.br
.ti -1c
.RI "typedef \fBf32mat2x2\fP \fBf32mat2\fP"
.br
.ti -1c
.RI "typedef \fBf32mat3x3\fP \fBf32mat3\fP"
.br
.ti -1c
.RI "typedef \fBf32mat4x4\fP \fBf32mat4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f32quat\fP \fBf32quat\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64vec1\fP \fBf64vec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64vec2\fP \fBf64vec2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64vec3\fP \fBf64vec3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64vec4\fP \fBf64vec4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat2x2\fP \fBf64mat2x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat2x3\fP \fBf64mat2x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat2x4\fP \fBf64mat2x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat3x2\fP \fBf64mat3x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat3x3\fP \fBf64mat3x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat3x4\fP \fBf64mat3x4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat4x2\fP \fBf64mat4x2\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat4x3\fP \fBf64mat4x3\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64mat4x4\fP \fBf64mat4x4\fP"
.br
.ti -1c
.RI "typedef \fBf64mat2x2\fP \fBf64mat2\fP"
.br
.ti -1c
.RI "typedef \fBf64mat3x3\fP \fBf64mat3\fP"
.br
.ti -1c
.RI "typedef \fBf64mat4x4\fP \fBf64mat4\fP"
.br
.ti -1c
.RI "typedef \fBhighp_f64quat\fP \fBf64quat\fP"
.br
.ti -1c
.RI "typedef tmat2x2< int, highp > \fBhighp_imat2\fP"
.br
.ti -1c
.RI "typedef tmat3x3< int, highp > \fBhighp_imat3\fP"
.br
.ti -1c
.RI "typedef tmat4x4< int, highp > \fBhighp_imat4\fP"
.br
.ti -1c
.RI "typedef tmat2x2< int, highp > \fBhighp_imat2x2\fP"
.br
.ti -1c
.RI "typedef tmat2x3< int, highp > \fBhighp_imat2x3\fP"
.br
.ti -1c
.RI "typedef tmat2x4< int, highp > \fBhighp_imat2x4\fP"
.br
.ti -1c
.RI "typedef tmat3x2< int, highp > \fBhighp_imat3x2\fP"
.br
.ti -1c
.RI "typedef tmat3x3< int, highp > \fBhighp_imat3x3\fP"
.br
.ti -1c
.RI "typedef tmat3x4< int, highp > \fBhighp_imat3x4\fP"
.br
.ti -1c
.RI "typedef tmat4x2< int, highp > \fBhighp_imat4x2\fP"
.br
.ti -1c
.RI "typedef tmat4x3< int, highp > \fBhighp_imat4x3\fP"
.br
.ti -1c
.RI "typedef tmat4x4< int, highp > \fBhighp_imat4x4\fP"
.br
.ti -1c
.RI "typedef tmat2x2< int, mediump > \fBmediump_imat2\fP"
.br
.ti -1c
.RI "typedef tmat3x3< int, mediump > \fBmediump_imat3\fP"
.br
.ti -1c
.RI "typedef tmat4x4< int, mediump > \fBmediump_imat4\fP"
.br
.ti -1c
.RI "typedef tmat2x2< int, mediump > \fBmediump_imat2x2\fP"
.br
.ti -1c
.RI "typedef tmat2x3< int, mediump > \fBmediump_imat2x3\fP"
.br
.ti -1c
.RI "typedef tmat2x4< int, mediump > \fBmediump_imat2x4\fP"
.br
.ti -1c
.RI "typedef tmat3x2< int, mediump > \fBmediump_imat3x2\fP"
.br
.ti -1c
.RI "typedef tmat3x3< int, mediump > \fBmediump_imat3x3\fP"
.br
.ti -1c
.RI "typedef tmat3x4< int, mediump > \fBmediump_imat3x4\fP"
.br
.ti -1c
.RI "typedef tmat4x2< int, mediump > \fBmediump_imat4x2\fP"
.br
.ti -1c
.RI "typedef tmat4x3< int, mediump > \fBmediump_imat4x3\fP"
.br
.ti -1c
.RI "typedef tmat4x4< int, mediump > \fBmediump_imat4x4\fP"
.br
.ti -1c
.RI "typedef tmat2x2< int, lowp > \fBlowp_imat2\fP"
.br
.ti -1c
.RI "typedef tmat3x3< int, lowp > \fBlowp_imat3\fP"
.br
.ti -1c
.RI "typedef tmat4x4< int, lowp > \fBlowp_imat4\fP"
.br
.ti -1c
.RI "typedef tmat2x2< int, lowp > \fBlowp_imat2x2\fP"
.br
.ti -1c
.RI "typedef tmat2x3< int, lowp > \fBlowp_imat2x3\fP"
.br
.ti -1c
.RI "typedef tmat2x4< int, lowp > \fBlowp_imat2x4\fP"
.br
.ti -1c
.RI "typedef tmat3x2< int, lowp > \fBlowp_imat3x2\fP"
.br
.ti -1c
.RI "typedef tmat3x3< int, lowp > \fBlowp_imat3x3\fP"
.br
.ti -1c
.RI "typedef tmat3x4< int, lowp > \fBlowp_imat3x4\fP"
.br
.ti -1c
.RI "typedef tmat4x2< int, lowp > \fBlowp_imat4x2\fP"
.br
.ti -1c
.RI "typedef tmat4x3< int, lowp > \fBlowp_imat4x3\fP"
.br
.ti -1c
.RI "typedef tmat4x4< int, lowp > \fBlowp_imat4x4\fP"
.br
.ti -1c
.RI "typedef tmat2x2< \fBuint\fP, highp > \fBhighp_umat2\fP"
.br
.ti -1c
.RI "typedef tmat3x3< \fBuint\fP, highp > \fBhighp_umat3\fP"
.br
.ti -1c
.RI "typedef tmat4x4< \fBuint\fP, highp > \fBhighp_umat4\fP"
.br
.ti -1c
.RI "typedef tmat2x2< \fBuint\fP, highp > \fBhighp_umat2x2\fP"
.br
.ti -1c
.RI "typedef tmat2x3< \fBuint\fP, highp > \fBhighp_umat2x3\fP"
.br
.ti -1c
.RI "typedef tmat2x4< \fBuint\fP, highp > \fBhighp_umat2x4\fP"
.br
.ti -1c
.RI "typedef tmat3x2< \fBuint\fP, highp > \fBhighp_umat3x2\fP"
.br
.ti -1c
.RI "typedef tmat3x3< \fBuint\fP, highp > \fBhighp_umat3x3\fP"
.br
.ti -1c
.RI "typedef tmat3x4< \fBuint\fP, highp > \fBhighp_umat3x4\fP"
.br
.ti -1c
.RI "typedef tmat4x2< \fBuint\fP, highp > \fBhighp_umat4x2\fP"
.br
.ti -1c
.RI "typedef tmat4x3< \fBuint\fP, highp > \fBhighp_umat4x3\fP"
.br
.ti -1c
.RI "typedef tmat4x4< \fBuint\fP, highp > \fBhighp_umat4x4\fP"
.br
.ti -1c
.RI "typedef tmat2x2< \fBuint\fP, mediump > \fBmediump_umat2\fP"
.br
.ti -1c
.RI "typedef tmat3x3< \fBuint\fP, mediump > \fBmediump_umat3\fP"
.br
.ti -1c
.RI "typedef tmat4x4< \fBuint\fP, mediump > \fBmediump_umat4\fP"
.br
.ti -1c
.RI "typedef tmat2x2< \fBuint\fP, mediump > \fBmediump_umat2x2\fP"
.br
.ti -1c
.RI "typedef tmat2x3< \fBuint\fP, mediump > \fBmediump_umat2x3\fP"
.br
.ti -1c
.RI "typedef tmat2x4< \fBuint\fP, mediump > \fBmediump_umat2x4\fP"
.br
.ti -1c
.RI "typedef tmat3x2< \fBuint\fP, mediump > \fBmediump_umat3x2\fP"
.br
.ti -1c
.RI "typedef tmat3x3< \fBuint\fP, mediump > \fBmediump_umat3x3\fP"
.br
.ti -1c
.RI "typedef tmat3x4< \fBuint\fP, mediump > \fBmediump_umat3x4\fP"
.br
.ti -1c
.RI "typedef tmat4x2< \fBuint\fP, mediump > \fBmediump_umat4x2\fP"
.br
.ti -1c
.RI "typedef tmat4x3< \fBuint\fP, mediump > \fBmediump_umat4x3\fP"
.br
.ti -1c
.RI "typedef tmat4x4< \fBuint\fP, mediump > \fBmediump_umat4x4\fP"
.br
.ti -1c
.RI "typedef tmat2x2< \fBuint\fP, lowp > \fBlowp_umat2\fP"
.br
.ti -1c
.RI "typedef tmat3x3< \fBuint\fP, lowp > \fBlowp_umat3\fP"
.br
.ti -1c
.RI "typedef tmat4x4< \fBuint\fP, lowp > \fBlowp_umat4\fP"
.br
.ti -1c
.RI "typedef tmat2x2< \fBuint\fP, lowp > \fBlowp_umat2x2\fP"
.br
.ti -1c
.RI "typedef tmat2x3< \fBuint\fP, lowp > \fBlowp_umat2x3\fP"
.br
.ti -1c
.RI "typedef tmat2x4< \fBuint\fP, lowp > \fBlowp_umat2x4\fP"
.br
.ti -1c
.RI "typedef tmat3x2< \fBuint\fP, lowp > \fBlowp_umat3x2\fP"
.br
.ti -1c
.RI "typedef tmat3x3< \fBuint\fP, lowp > \fBlowp_umat3x3\fP"
.br
.ti -1c
.RI "typedef tmat3x4< \fBuint\fP, lowp > \fBlowp_umat3x4\fP"
.br
.ti -1c
.RI "typedef tmat4x2< \fBuint\fP, lowp > \fBlowp_umat4x2\fP"
.br
.ti -1c
.RI "typedef tmat4x3< \fBuint\fP, lowp > \fBlowp_umat4x3\fP"
.br
.ti -1c
.RI "typedef tmat4x4< \fBuint\fP, lowp > \fBlowp_umat4x4\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat2\fP \fBimat2\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat3\fP \fBimat3\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat4\fP \fBimat4\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat2x2\fP \fBimat2x2\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat2x3\fP \fBimat2x3\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat2x4\fP \fBimat2x4\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat3x2\fP \fBimat3x2\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat3x3\fP \fBimat3x3\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat3x4\fP \fBimat3x4\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat4x2\fP \fBimat4x2\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat4x3\fP \fBimat4x3\fP"
.br
.ti -1c
.RI "typedef \fBmediump_imat4x4\fP \fBimat4x4\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat2\fP \fBumat2\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat3\fP \fBumat3\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat4\fP \fBumat4\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat2x2\fP \fBumat2x2\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat2x3\fP \fBumat2x3\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat2x4\fP \fBumat2x4\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat3x2\fP \fBumat3x2\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat3x3\fP \fBumat3x3\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat3x4\fP \fBumat3x4\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat4x2\fP \fBumat4x2\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat4x3\fP \fBumat4x3\fP"
.br
.ti -1c
.RI "typedef \fBmediump_umat4x4\fP \fBumat4x4\fP"
.br
.ti -1c
.RI "typedef highp_dvec1_t \fBhighp_dvec1\fP"
.br
.ti -1c
.RI "typedef mediump_dvec1_t \fBmediump_dvec1\fP"
.br
.ti -1c
.RI "typedef lowp_dvec1_t \fBlowp_dvec1\fP"
.br
.ti -1c
.RI "typedef highp_ivec1_t \fBhighp_ivec1\fP"
.br
.ti -1c
.RI "typedef mediump_ivec1_t \fBmediump_ivec1\fP"
.br
.ti -1c
.RI "typedef lowp_ivec1_t \fBlowp_ivec1\fP"
.br
.ti -1c
.RI "typedef highp_uvec1_t \fBhighp_uvec1\fP"
.br
.ti -1c
.RI "typedef mediump_uvec1_t \fBmediump_uvec1\fP"
.br
.ti -1c
.RI "typedef lowp_uvec1_t \fBlowp_uvec1\fP"
.br
.ti -1c
.RI "typedef highp_bvec1_t \fBhighp_bvec1\fP"
.br
.ti -1c
.RI "typedef mediump_bvec1_t \fBmediump_bvec1\fP"
.br
.ti -1c
.RI "typedef lowp_bvec1_t \fBlowp_bvec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_bvec1\fP \fBbvec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_vec1\fP \fBvec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_dvec1\fP \fBdvec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_ivec1\fP \fBivec1\fP"
.br
.ti -1c
.RI "typedef \fBhighp_uvec1\fP \fBuvec1\fP"
.br
.ti -1c
.RI "typedef bool \fBbool1\fP"
.br
.RI "\fIboolean type with 1 component\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tvec2< bool, highp > \fBbool2\fP"
.br
.RI "\fIboolean type with 2 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tvec3< bool, highp > \fBbool3\fP"
.br
.RI "\fIboolean type with 3 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tvec4< bool, highp > \fBbool4\fP"
.br
.RI "\fIboolean type with 4 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef bool \fBbool1x1\fP"
.br
.RI "\fIboolean matrix with 1 x 1 component\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat2x2< bool, highp > \fBbool2x2\fP"
.br
.RI "\fIboolean matrix with 2 x 2 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat2x3< bool, highp > \fBbool2x3\fP"
.br
.RI "\fIboolean matrix with 2 x 3 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat2x4< bool, highp > \fBbool2x4\fP"
.br
.RI "\fIboolean matrix with 2 x 4 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat3x2< bool, highp > \fBbool3x2\fP"
.br
.RI "\fIboolean matrix with 3 x 2 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat3x3< bool, highp > \fBbool3x3\fP"
.br
.RI "\fIboolean matrix with 3 x 3 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat3x4< bool, highp > \fBbool3x4\fP"
.br
.RI "\fIboolean matrix with 3 x 4 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat4x2< bool, highp > \fBbool4x2\fP"
.br
.RI "\fIboolean matrix with 4 x 2 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat4x3< bool, highp > \fBbool4x3\fP"
.br
.RI "\fIboolean matrix with 4 x 3 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat4x4< bool, highp > \fBbool4x4\fP"
.br
.RI "\fIboolean matrix with 4 x 4 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef int \fBint1\fP"
.br
.RI "\fIinteger vector with 1 component\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tvec2< int, highp > \fBint2\fP"
.br
.RI "\fIinteger vector with 2 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tvec3< int, highp > \fBint3\fP"
.br
.RI "\fIinteger vector with 3 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tvec4< int, highp > \fBint4\fP"
.br
.RI "\fIinteger vector with 4 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef int \fBint1x1\fP"
.br
.RI "\fIinteger matrix with 1 component\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat2x2< int, highp > \fBint2x2\fP"
.br
.RI "\fIinteger matrix with 2 x 2 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat2x3< int, highp > \fBint2x3\fP"
.br
.RI "\fIinteger matrix with 2 x 3 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat2x4< int, highp > \fBint2x4\fP"
.br
.RI "\fIinteger matrix with 2 x 4 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat3x2< int, highp > \fBint3x2\fP"
.br
.RI "\fIinteger matrix with 3 x 2 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat3x3< int, highp > \fBint3x3\fP"
.br
.RI "\fIinteger matrix with 3 x 3 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat3x4< int, highp > \fBint3x4\fP"
.br
.RI "\fIinteger matrix with 3 x 4 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat4x2< int, highp > \fBint4x2\fP"
.br
.RI "\fIinteger matrix with 4 x 2 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat4x3< int, highp > \fBint4x3\fP"
.br
.RI "\fIinteger matrix with 4 x 3 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat4x4< int, highp > \fBint4x4\fP"
.br
.RI "\fIinteger matrix with 4 x 4 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef float \fBfloat1\fP"
.br
.RI "\fIsingle-precision floating-point vector with 1 component\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tvec2< float, highp > \fBfloat2\fP"
.br
.RI "\fIsingle-precision floating-point vector with 2 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tvec3< float, highp > \fBfloat3\fP"
.br
.RI "\fIsingle-precision floating-point vector with 3 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tvec4< float, highp > \fBfloat4\fP"
.br
.RI "\fIsingle-precision floating-point vector with 4 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef float \fBfloat1x1\fP"
.br
.RI "\fIsingle-precision floating-point matrix with 1 component\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat2x2< float, highp > \fBfloat2x2\fP"
.br
.RI "\fIsingle-precision floating-point matrix with 2 x 2 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat2x3< float, highp > \fBfloat2x3\fP"
.br
.RI "\fIsingle-precision floating-point matrix with 2 x 3 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat2x4< float, highp > \fBfloat2x4\fP"
.br
.RI "\fIsingle-precision floating-point matrix with 2 x 4 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat3x2< float, highp > \fBfloat3x2\fP"
.br
.RI "\fIsingle-precision floating-point matrix with 3 x 2 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat3x3< float, highp > \fBfloat3x3\fP"
.br
.RI "\fIsingle-precision floating-point matrix with 3 x 3 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat3x4< float, highp > \fBfloat3x4\fP"
.br
.RI "\fIsingle-precision floating-point matrix with 3 x 4 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat4x2< float, highp > \fBfloat4x2\fP"
.br
.RI "\fIsingle-precision floating-point matrix with 4 x 2 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat4x3< float, highp > \fBfloat4x3\fP"
.br
.RI "\fIsingle-precision floating-point matrix with 4 x 3 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat4x4< float, highp > \fBfloat4x4\fP"
.br
.RI "\fIsingle-precision floating-point matrix with 4 x 4 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef double \fBdouble1\fP"
.br
.RI "\fIdouble-precision floating-point vector with 1 component\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tvec2< double, highp > \fBdouble2\fP"
.br
.RI "\fIdouble-precision floating-point vector with 2 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tvec3< double, highp > \fBdouble3\fP"
.br
.RI "\fIdouble-precision floating-point vector with 3 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tvec4< double, highp > \fBdouble4\fP"
.br
.RI "\fIdouble-precision floating-point vector with 4 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef double \fBdouble1x1\fP"
.br
.RI "\fIdouble-precision floating-point matrix with 1 component\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat2x2< double, highp > \fBdouble2x2\fP"
.br
.RI "\fIdouble-precision floating-point matrix with 2 x 2 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat2x3< double, highp > \fBdouble2x3\fP"
.br
.RI "\fIdouble-precision floating-point matrix with 2 x 3 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat2x4< double, highp > \fBdouble2x4\fP"
.br
.RI "\fIdouble-precision floating-point matrix with 2 x 4 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat3x2< double, highp > \fBdouble3x2\fP"
.br
.RI "\fIdouble-precision floating-point matrix with 3 x 2 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat3x3< double, highp > \fBdouble3x3\fP"
.br
.RI "\fIdouble-precision floating-point matrix with 3 x 3 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat3x4< double, highp > \fBdouble3x4\fP"
.br
.RI "\fIdouble-precision floating-point matrix with 3 x 4 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat4x2< double, highp > \fBdouble4x2\fP"
.br
.RI "\fIdouble-precision floating-point matrix with 4 x 2 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat4x3< double, highp > \fBdouble4x3\fP"
.br
.RI "\fIdouble-precision floating-point matrix with 4 x 3 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef tmat4x4< double, highp > \fBdouble4x4\fP"
.br
.RI "\fIdouble-precision floating-point matrix with 4 x 4 components\&. (From GLM_GTX_compatibility extension) \fP"
.ti -1c
.RI "typedef \fBtdualquat\fP< float, lowp > \fBlowp_dualquat\fP"
.br
.ti -1c
.RI "typedef \fBtdualquat\fP< float, mediump > \fBmediump_dualquat\fP"
.br
.ti -1c
.RI "typedef \fBtdualquat\fP< float, highp > \fBhighp_dualquat\fP"
.br
.ti -1c
.RI "typedef \fBtdualquat\fP< float, lowp > \fBlowp_fdualquat\fP"
.br
.ti -1c
.RI "typedef \fBtdualquat\fP< float, mediump > \fBmediump_fdualquat\fP"
.br
.ti -1c
.RI "typedef \fBtdualquat\fP< float, highp > \fBhighp_fdualquat\fP"
.br
.ti -1c
.RI "typedef \fBtdualquat\fP< double, lowp > \fBlowp_ddualquat\fP"
.br
.ti -1c
.RI "typedef \fBtdualquat\fP< double, mediump > \fBmediump_ddualquat\fP"
.br
.ti -1c
.RI "typedef \fBtdualquat\fP< double, highp > \fBhighp_ddualquat\fP"
.br
.ti -1c
.RI "typedef \fBhighp_fdualquat\fP \fBdualquat\fP"
.br
.ti -1c
.RI "typedef \fBhighp_fdualquat\fP \fBfdualquat\fP"
.br
.ti -1c
.RI "typedef \fBhighp_ddualquat\fP \fBddualquat\fP"
.br
.ti -1c
.RI "typedef signed int \fBsint\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint8\fP \fBbyte\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint16\fP \fBword\fP"
.br
.ti -1c
.RI "typedef \fBdetail::uint32\fP \fBdword\fP"
.br
.ti -1c
.RI "typedef detail::uint64 \fBqword\fP"
.br
.ti -1c
.RI "template<typename T , typename Vec > using \fBreturn_type_scalar_multiplication\fP = typename std::enable_if< !std::is_same< T, float >::value &&std::is_arithmetic< T >::value, Vec >::type"
.br
.ti -1c
.RI "typedef tvec1< std::size_t, defaultp > \fBsize1\fP"
.br
.ti -1c
.RI "typedef tvec2< std::size_t, defaultp > \fBsize2\fP"
.br
.ti -1c
.RI "typedef tvec3< std::size_t, defaultp > \fBsize3\fP"
.br
.ti -1c
.RI "typedef tvec4< std::size_t, defaultp > \fBsize4\fP"
.br
.ti -1c
.RI "typedef tvec1< std::size_t, defaultp > \fBsize1_t\fP"
.br
.ti -1c
.RI "typedef tvec2< std::size_t, defaultp > \fBsize2_t\fP"
.br
.ti -1c
.RI "typedef tvec3< std::size_t, defaultp > \fBsize3_t\fP"
.br
.ti -1c
.RI "typedef tvec4< std::size_t, defaultp > \fBsize4_t\fP"
.br
.ti -1c
.RI "typedef tmat2x2< float, lowp > \fBlowp_mat2\fP"
.br
.ti -1c
.RI "typedef tmat2x2< float, mediump > \fBmediump_mat2\fP"
.br
.ti -1c
.RI "typedef tmat2x2< float, highp > \fBhighp_mat2\fP"
.br
.ti -1c
.RI "typedef tmat2x2< float, lowp > \fBlowp_mat2x2\fP"
.br
.ti -1c
.RI "typedef tmat2x2< float, mediump > \fBmediump_mat2x2\fP"
.br
.ti -1c
.RI "typedef tmat2x2< float, highp > \fBhighp_mat2x2\fP"
.br
.ti -1c
.RI "typedef tmat2x3< float, lowp > \fBlowp_mat2x3\fP"
.br
.ti -1c
.RI "typedef tmat2x3< float, mediump > \fBmediump_mat2x3\fP"
.br
.ti -1c
.RI "typedef tmat2x3< float, highp > \fBhighp_mat2x3\fP"
.br
.ti -1c
.RI "typedef tmat2x4< float, lowp > \fBlowp_mat2x4\fP"
.br
.ti -1c
.RI "typedef tmat2x4< float, mediump > \fBmediump_mat2x4\fP"
.br
.ti -1c
.RI "typedef tmat2x4< float, highp > \fBhighp_mat2x4\fP"
.br
.ti -1c
.RI "typedef tmat3x2< float, lowp > \fBlowp_mat3x2\fP"
.br
.ti -1c
.RI "typedef tmat3x2< float, mediump > \fBmediump_mat3x2\fP"
.br
.ti -1c
.RI "typedef tmat3x2< float, highp > \fBhighp_mat3x2\fP"
.br
.ti -1c
.RI "typedef tmat3x3< float, lowp > \fBlowp_mat3\fP"
.br
.ti -1c
.RI "typedef tmat3x3< float, mediump > \fBmediump_mat3\fP"
.br
.ti -1c
.RI "typedef tmat3x3< float, highp > \fBhighp_mat3\fP"
.br
.ti -1c
.RI "typedef tmat3x3< float, lowp > \fBlowp_mat3x3\fP"
.br
.ti -1c
.RI "typedef tmat3x3< float, mediump > \fBmediump_mat3x3\fP"
.br
.ti -1c
.RI "typedef tmat3x3< float, highp > \fBhighp_mat3x3\fP"
.br
.ti -1c
.RI "typedef tmat3x4< float, lowp > \fBlowp_mat3x4\fP"
.br
.ti -1c
.RI "typedef tmat3x4< float, mediump > \fBmediump_mat3x4\fP"
.br
.ti -1c
.RI "typedef tmat3x4< float, highp > \fBhighp_mat3x4\fP"
.br
.ti -1c
.RI "typedef tmat4x2< float, lowp > \fBlowp_mat4x2\fP"
.br
.ti -1c
.RI "typedef tmat4x2< float, mediump > \fBmediump_mat4x2\fP"
.br
.ti -1c
.RI "typedef tmat4x2< float, highp > \fBhighp_mat4x2\fP"
.br
.ti -1c
.RI "typedef tmat4x3< float, lowp > \fBlowp_mat4x3\fP"
.br
.ti -1c
.RI "typedef tmat4x3< float, mediump > \fBmediump_mat4x3\fP"
.br
.ti -1c
.RI "typedef tmat4x3< float, highp > \fBhighp_mat4x3\fP"
.br
.ti -1c
.RI "typedef tmat4x4< float, lowp > \fBlowp_mat4\fP"
.br
.ti -1c
.RI "typedef tmat4x4< float, mediump > \fBmediump_mat4\fP"
.br
.ti -1c
.RI "typedef tmat4x4< float, highp > \fBhighp_mat4\fP"
.br
.ti -1c
.RI "typedef tmat4x4< float, lowp > \fBlowp_mat4x4\fP"
.br
.ti -1c
.RI "typedef tmat4x4< float, mediump > \fBmediump_mat4x4\fP"
.br
.ti -1c
.RI "typedef tmat4x4< float, highp > \fBhighp_mat4x4\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL genIUType \fBmask\fP (genIUType Bits)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecIUType> GLM_FUNC_DECL vecIUType< T, P > \fBmask\fP (vecIUType< T, P > const &v)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL genIUType \fBbitfieldRotateRight\fP (genIUType In, int Shift)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBbitfieldRotateRight\fP (vecType< T, P > const &In, int Shift)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL genIUType \fBbitfieldRotateLeft\fP (genIUType In, int Shift)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBbitfieldRotateLeft\fP (vecType< T, P > const &In, int Shift)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL genIUType \fBbitfieldFillOne\fP (genIUType Value, int FirstBit, int BitCount)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBbitfieldFillOne\fP (vecType< T, P > const &Value, int FirstBit, int BitCount)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL genIUType \fBbitfieldFillZero\fP (genIUType Value, int FirstBit, int BitCount)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBbitfieldFillZero\fP (vecType< T, P > const &Value, int FirstBit, int BitCount)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBint16\fP \fBbitfieldInterleave\fP (\fBint8\fP x, \fBint8\fP y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint16\fP \fBbitfieldInterleave\fP (\fBuint8\fP x, \fBuint8\fP y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBint32\fP \fBbitfieldInterleave\fP (\fBint16\fP x, \fBint16\fP y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint32\fP \fBbitfieldInterleave\fP (\fBuint16\fP x, \fBuint16\fP y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBint64\fP \fBbitfieldInterleave\fP (\fBint32\fP x, \fBint32\fP y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint64\fP \fBbitfieldInterleave\fP (\fBuint32\fP x, \fBuint32\fP y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBint32\fP \fBbitfieldInterleave\fP (\fBint8\fP x, \fBint8\fP y, \fBint8\fP z)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint32\fP \fBbitfieldInterleave\fP (\fBuint8\fP x, \fBuint8\fP y, \fBuint8\fP z)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBint64\fP \fBbitfieldInterleave\fP (\fBint16\fP x, \fBint16\fP y, \fBint16\fP z)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint64\fP \fBbitfieldInterleave\fP (\fBuint16\fP x, \fBuint16\fP y, \fBuint16\fP z)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBint64\fP \fBbitfieldInterleave\fP (\fBint32\fP x, \fBint32\fP y, \fBint32\fP z)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint64\fP \fBbitfieldInterleave\fP (\fBuint32\fP x, \fBuint32\fP y, \fBuint32\fP z)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBint32\fP \fBbitfieldInterleave\fP (\fBint8\fP x, \fBint8\fP y, \fBint8\fP z, \fBint8\fP w)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint32\fP \fBbitfieldInterleave\fP (\fBuint8\fP x, \fBuint8\fP y, \fBuint8\fP z, \fBuint8\fP w)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBint64\fP \fBbitfieldInterleave\fP (\fBint16\fP x, \fBint16\fP y, \fBint16\fP z, \fBint16\fP w)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint64\fP \fBbitfieldInterleave\fP (\fBuint16\fP x, \fBuint16\fP y, \fBuint16\fP z, \fBuint16\fP w)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_QUALIFIER genIUType \fBmask\fP (genIUType Bits)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecIUType> GLM_FUNC_QUALIFIER vecIUType< T, P > \fBmask\fP (vecIUType< T, P > const &v)"
.br
.ti -1c
.RI "template<typename genIType > GLM_FUNC_QUALIFIER genIType \fBbitfieldRotateRight\fP (genIType In, int Shift)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBbitfieldRotateRight\fP (vecType< T, P > const &In, int Shift)"
.br
.ti -1c
.RI "template<typename genIType > GLM_FUNC_QUALIFIER genIType \fBbitfieldRotateLeft\fP (genIType In, int Shift)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBbitfieldRotateLeft\fP (vecType< T, P > const &In, int Shift)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_QUALIFIER genIUType \fBbitfieldFillOne\fP (genIUType Value, int FirstBit, int BitCount)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBbitfieldFillOne\fP (vecType< T, P > const &Value, int FirstBit, int BitCount)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_QUALIFIER genIUType \fBbitfieldFillZero\fP (genIUType Value, int FirstBit, int BitCount)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBbitfieldFillZero\fP (vecType< T, P > const &Value, int FirstBit, int BitCount)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBconvertLinearToSRGB\fP (vecType< T, P > const &ColorLinear)"
.br
.RI "\fIConvert a linear color to sRGB color using a standard gamma correction\&. \fP"
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBconvertLinearToSRGB\fP (vecType< T, P > const &ColorLinear, T Gamma)"
.br
.RI "\fIConvert a linear color to sRGB color using a custom gamma correction\&. \fP"
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBconvertSRGBToLinear\fP (vecType< T, P > const &ColorSRGB)"
.br
.RI "\fIConvert a sRGB color to linear color using a standard gamma correction\&. \fP"
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBconvertSRGBToLinear\fP (vecType< T, P > const &ColorSRGB, T Gamma)"
.br
.RI "\fIConvert a sRGB color to linear color using a custom gamma correction\&. \fP"
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBconvertLinearToSRGB\fP (vecType< T, P > const &ColorLinear)"
.br
.RI "\fIConvert a linear color to sRGB color using a standard gamma correction\&. \fP"
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBconvertLinearToSRGB\fP (vecType< T, P > const &ColorLinear, T Gamma)"
.br
.RI "\fIConvert a linear color to sRGB color using a custom gamma correction\&. \fP"
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBconvertSRGBToLinear\fP (vecType< T, P > const &ColorSRGB)"
.br
.RI "\fIConvert a sRGB color to linear color using a standard gamma correction\&. \fP"
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBconvertSRGBToLinear\fP (vecType< T, P > const &ColorSRGB, T Gamma)"
.br
.RI "\fIConvert a sRGB color to linear color using a custom gamma correction\&. \fP"
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBepsilon\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBzero\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBone\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBpi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBtwo_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBroot_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBhalf_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBthree_over_two_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBquarter_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBone_over_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBone_over_two_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBtwo_over_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBfour_over_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBtwo_over_root_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBone_over_root_two\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBroot_half_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBroot_two_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBroot_ln_four\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBe\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBeuler\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBroot_two\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBroot_three\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBroot_five\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBln_two\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBln_ten\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBln_ln_two\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBthird\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBtwo_thirds\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL GLM_CONSTEXPR genType \fBgolden_ratio\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBepsilon\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBzero\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBone\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBpi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBtwo_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBroot_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBhalf_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBthree_over_two_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBquarter_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBone_over_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBone_over_two_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBtwo_over_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBfour_over_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBtwo_over_root_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBone_over_root_two\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBroot_half_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBroot_two_pi\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBroot_ln_four\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBe\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBeuler\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBroot_two\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBroot_three\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBroot_five\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBln_two\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBln_ten\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBln_ln_two\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBthird\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBtwo_thirds\fP ()"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType \fBgolden_ratio\fP ()"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< bool, P > \fBepsilonEqual\fP (vecType< T, P > const &x, vecType< T, P > const &y, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL bool \fBepsilonEqual\fP (genType const &x, genType const &y, genType const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::boolType \fBepsilonNotEqual\fP (genType const &x, genType const &y, typename genType::value_type const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL bool \fBepsilonNotEqual\fP (genType const &x, genType const &y, genType const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER bool \fBepsilonEqual\fP (float const &x, float const &y, float const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER bool \fBepsilonEqual\fP (double const &x, double const &y, double const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER bool \fBepsilonNotEqual\fP (float const &x, float const &y, float const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER bool \fBepsilonNotEqual\fP (double const &x, double const &y, double const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< bool, P > \fBepsilonEqual\fP (vecType< T, P > const &x, vecType< T, P > const &y, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< bool, P > \fBepsilonEqual\fP (vecType< T, P > const &x, vecType< T, P > const &y, vecType< T, P > const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< bool, P > \fBepsilonNotEqual\fP (vecType< T, P > const &x, vecType< T, P > const &y, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< bool, P > \fBepsilonNotEqual\fP (vecType< T, P > const &x, vecType< T, P > const &y, vecType< T, P > const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< bool, P > \fBepsilonEqual\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< bool, P > \fBepsilonNotEqual\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL genIUType \fBlog2\fP (genIUType x)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL genIUType \fBmod\fP (genIUType x, genIUType y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBmod\fP (vecType< T, P > const &x, T y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBmod\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::row_type \fBrow\fP (genType const &m, length_t index)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBrow\fP (genType const &m, length_t index, typename genType::row_type const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::col_type \fBcolumn\fP (genType const &m, length_t index)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBcolumn\fP (genType const &m, length_t index, typename genType::col_type const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBrow\fP (genType const &m, length_t index, typename genType::row_type const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType::row_type \fBrow\fP (genType const &m, length_t index)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBcolumn\fP (genType const &m, length_t index, typename genType::col_type const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType::col_type \fBcolumn\fP (genType const &m, length_t index)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBaffineInverse\fP (genType const &m)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBinverseTranspose\fP (genType const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBaffineInverse\fP (tmat3x3< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBaffineInverse\fP (tmat4x4< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat2x2< T, P > \fBinverseTranspose\fP (tmat2x2< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBinverseTranspose\fP (tmat3x3< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBinverseTranspose\fP (tmat4x4< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBtranslate\fP (tmat4x4< T, P > const &m, tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBrotate\fP (tmat4x4< T, P > const &m, T \fBangle\fP, tvec3< T, P > const &\fBaxis\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBscale\fP (tmat4x4< T, P > const &m, tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBortho\fP (T left, T right, T bottom, T top, T zNear, T zFar)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBortho\fP (T left, T right, T bottom, T top)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBfrustum\fP (T left, T right, T bottom, T top, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBperspective\fP (T fovy, T aspect, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBperspectiveRH\fP (T fovy, T aspect, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBperspectiveLH\fP (T fovy, T aspect, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBperspectiveFov\fP (T fov, T width, T height, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBperspectiveFovRH\fP (T fov, T width, T height, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBperspectiveFovLH\fP (T fov, T width, T height, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBinfinitePerspective\fP (T fovy, T aspect, T near)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBtweakedInfinitePerspective\fP (T fovy, T aspect, T near)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBtweakedInfinitePerspective\fP (T fovy, T aspect, T near, T ep)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_DECL tvec3< T, P > \fBproject\fP (tvec3< T, P > const &obj, tmat4x4< T, P > const &model, tmat4x4< T, P > const &\fBproj\fP, tvec4< U, P > const &viewport)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_DECL tvec3< T, P > \fBunProject\fP (tvec3< T, P > const &win, tmat4x4< T, P > const &model, tmat4x4< T, P > const &\fBproj\fP, tvec4< U, P > const &viewport)"
.br
.ti -1c
.RI "template<typename T , precision P, typename U > GLM_FUNC_DECL tmat4x4< T, P > \fBpickMatrix\fP (tvec2< T, P > const &center, tvec2< T, P > const &delta, tvec4< U, P > const &viewport)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBlookAt\fP (tvec3< T, P > const &eye, tvec3< T, P > const &center, tvec3< T, P > const &up)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBlookAtRH\fP (tvec3< T, P > const &eye, tvec3< T, P > const &center, tvec3< T, P > const &up)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBlookAtLH\fP (tvec3< T, P > const &eye, tvec3< T, P > const &center, tvec3< T, P > const &up)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBtranslate\fP (tmat4x4< T, P > const &m, tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBrotate\fP (tmat4x4< T, P > const &m, T \fBangle\fP, tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBrotate_slow\fP (tmat4x4< T, P > const &m, T \fBangle\fP, tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBscale\fP (tmat4x4< T, P > const &m, tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBscale_slow\fP (tmat4x4< T, P > const &m, tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBortho\fP (T left, T right, T bottom, T top, T zNear, T zFar)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBortho\fP (T left, T right, T bottom, T top)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBfrustum\fP (T left, T right, T bottom, T top, T nearVal, T farVal)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBperspective\fP (T fovy, T aspect, T zNear, T zFar)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBperspectiveRH\fP (T fovy, T aspect, T zNear, T zFar)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBperspectiveLH\fP (T fovy, T aspect, T zNear, T zFar)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBperspectiveFov\fP (T fov, T width, T height, T zNear, T zFar)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBperspectiveFovRH\fP (T fov, T width, T height, T zNear, T zFar)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBperspectiveFovLH\fP (T fov, T width, T height, T zNear, T zFar)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBinfinitePerspective\fP (T fovy, T aspect, T zNear)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBtweakedInfinitePerspective\fP (T fovy, T aspect, T zNear, T ep)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBtweakedInfinitePerspective\fP (T fovy, T aspect, T zNear)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBproject\fP (tvec3< T, P > const &obj, tmat4x4< T, P > const &model, tmat4x4< T, P > const &\fBproj\fP, tvec4< U, P > const &viewport)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBunProject\fP (tvec3< T, P > const &win, tmat4x4< T, P > const &model, tmat4x4< T, P > const &\fBproj\fP, tvec4< U, P > const &viewport)"
.br
.ti -1c
.RI "template<typename T , precision P, typename U > GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBpickMatrix\fP (tvec2< T, P > const &center, tvec2< T, P > const &delta, tvec4< U, P > const &viewport)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBlookAt\fP (tvec3< T, P > const &eye, tvec3< T, P > const &center, tvec3< T, P > const &up)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBlookAtRH\fP (tvec3< T, P > const &eye, tvec3< T, P > const &center, tvec3< T, P > const &up)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBlookAtLH\fP (tvec3< T, P > const &eye, tvec3< T, P > const &center, tvec3< T, P > const &up)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL T \fBperlin\fP (vecType< T, P > const &p)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL T \fBperlin\fP (vecType< T, P > const &p, vecType< T, P > const &rep)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL T \fBsimplex\fP (vecType< T, P > const &p)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBperlin\fP (tvec2< T, P > const &Position)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBperlin\fP (tvec3< T, P > const &Position)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBperlin\fP (tvec4< T, P > const &Position)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBperlin\fP (tvec2< T, P > const &Position, tvec2< T, P > const &rep)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBperlin\fP (tvec3< T, P > const &Position, tvec3< T, P > const &rep)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBperlin\fP (tvec4< T, P > const &Position, tvec4< T, P > const &rep)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBsimplex\fP (glm::tvec2< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBsimplex\fP (tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBsimplex\fP (tvec4< T, P > const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint8\fP \fBpackUnorm1x8\fP (float v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL float \fBunpackUnorm1x8\fP (\fBuint8\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint16\fP \fBpackUnorm2x8\fP (vec2 const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL vec2 \fBunpackUnorm2x8\fP (\fBuint16\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint8\fP \fBpackSnorm1x8\fP (float s)"
.br
.ti -1c
.RI "GLM_FUNC_DECL float \fBunpackSnorm1x8\fP (\fBuint8\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint16\fP \fBpackSnorm2x8\fP (vec2 const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL vec2 \fBunpackSnorm2x8\fP (\fBuint16\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint16\fP \fBpackUnorm1x16\fP (float v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL float \fBunpackUnorm1x16\fP (\fBuint16\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint64\fP \fBpackUnorm4x16\fP (vec4 const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL vec4 \fBunpackUnorm4x16\fP (\fBuint64\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint16\fP \fBpackSnorm1x16\fP (float v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL float \fBunpackSnorm1x16\fP (\fBuint16\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint64\fP \fBpackSnorm4x16\fP (vec4 const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL vec4 \fBunpackSnorm4x16\fP (\fBuint64\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint16\fP \fBpackHalf1x16\fP (float v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL float \fBunpackHalf1x16\fP (\fBuint16\fP v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint64\fP \fBpackHalf4x16\fP (vec4 const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL vec4 \fBunpackHalf4x16\fP (\fBuint64\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint32\fP \fBpackI3x10_1x2\fP (ivec4 const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL ivec4 \fBunpackI3x10_1x2\fP (\fBuint32\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint32\fP \fBpackU3x10_1x2\fP (uvec4 const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL uvec4 \fBunpackU3x10_1x2\fP (\fBuint32\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint32\fP \fBpackSnorm3x10_1x2\fP (vec4 const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL vec4 \fBunpackSnorm3x10_1x2\fP (\fBuint32\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint32\fP \fBpackUnorm3x10_1x2\fP (vec4 const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL vec4 \fBunpackUnorm3x10_1x2\fP (\fBuint32\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint32\fP \fBpackF2x11_1x10\fP (vec3 const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL vec3 \fBunpackF2x11_1x10\fP (\fBuint32\fP p)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER \fBuint64\fP \fBpackHalf4x16\fP (glm::vec4 const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBoperator\-\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBoperator+\fP (\fBtquat\fP< T, P > const &q, \fBtquat\fP< T, P > const &p)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBoperator*\fP (\fBtquat\fP< T, P > const &q, \fBtquat\fP< T, P > const &p)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBoperator*\fP (\fBtquat\fP< T, P > const &q, tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBoperator*\fP (tvec3< T, P > const &v, \fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec4< T, P > \fBoperator*\fP (\fBtquat\fP< T, P > const &q, tvec4< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec4< T, P > \fBoperator*\fP (tvec4< T, P > const &v, \fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBoperator*\fP (\fBtquat\fP< T, P > const &q, T const &s)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBoperator*\fP (T const &s, \fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBoperator/\fP (\fBtquat\fP< T, P > const &q, T const &s)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBlength\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBnormalize\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class quatType> GLM_FUNC_DECL T \fBdot\fP (quatType< T, P > const &x, quatType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBmix\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y, T a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBlerp\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y, T a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBslerp\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y, T a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBconjugate\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBinverse\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBrotate\fP (\fBtquat\fP< T, P > const &q, T const &\fBangle\fP, tvec3< T, P > const &\fBaxis\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBeulerAngles\fP (\fBtquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBroll\fP (\fBtquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBpitch\fP (\fBtquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fByaw\fP (\fBtquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat3x3< T, P > \fBmat3_cast\fP (\fBtquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBmat4_cast\fP (\fBtquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBquat_cast\fP (tmat3x3< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBquat_cast\fP (tmat4x4< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBangle\fP (\fBtquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBaxis\fP (\fBtquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBangleAxis\fP (T const &\fBangle\fP, tvec3< T, P > const &\fBaxis\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec4< bool, P > \fBlessThan\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec4< bool, P > \fBlessThanEqual\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec4< bool, P > \fBgreaterThan\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec4< bool, P > \fBgreaterThanEqual\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec4< bool, P > \fBequal\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec4< bool, P > \fBnotEqual\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBconjugate\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBinverse\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBoperator\-\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBoperator+\fP (\fBtquat\fP< T, P > const &q, \fBtquat\fP< T, P > const &p)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBoperator*\fP (\fBtquat\fP< T, P > const &q, \fBtquat\fP< T, P > const &p)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBoperator*\fP (\fBtquat\fP< T, P > const &q, tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBoperator*\fP (tvec3< T, P > const &v, \fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< T, P > \fBoperator*\fP (\fBtquat\fP< T, P > const &q, tvec4< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< T, P > \fBoperator*\fP (tvec4< T, P > const &v, \fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBoperator*\fP (\fBtquat\fP< T, P > const &q, T const &s)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBoperator*\fP (T const &s, \fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBoperator/\fP (\fBtquat\fP< T, P > const &q, T const &s)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER bool \fBoperator==\fP (\fBtquat\fP< T, P > const &q1, \fBtquat\fP< T, P > const &q2)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER bool \fBoperator!=\fP (\fBtquat\fP< T, P > const &q1, \fBtquat\fP< T, P > const &q2)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBlength\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBnormalize\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBcross\fP (\fBtquat\fP< T, P > const &q1, \fBtquat\fP< T, P > const &q2)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBmix\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y, T a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBlerp\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y, T a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBslerp\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y, T a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBrotate\fP (\fBtquat\fP< T, P > const &q, T const &\fBangle\fP, tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBeulerAngles\fP (\fBtquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBroll\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBpitch\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fByaw\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBmat3_cast\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBmat4_cast\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBquat_cast\fP (tmat3x3< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBquat_cast\fP (tmat4x4< T, P > const &m4)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBangle\fP (\fBtquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBaxis\fP (\fBtquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBangleAxis\fP (T const &\fBangle\fP, tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< bool, P > \fBlessThan\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< bool, P > \fBlessThanEqual\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< bool, P > \fBgreaterThan\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< bool, P > \fBgreaterThanEqual\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< bool, P > \fBequal\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< bool, P > \fBnotEqual\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y)"
.br
.ti -1c
.RI "template<typename genTYpe > GLM_FUNC_DECL genTYpe \fBlinearRand\fP (genTYpe Min, genTYpe Max)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBlinearRand\fP (vecType< T, P > const &Min, vecType< T, P > const &Max)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBgaussRand\fP (genType Mean, genType Deviation)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tvec2< T, defaultp > \fBcircularRand\fP (T Radius)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tvec3< T, defaultp > \fBsphericalRand\fP (T Radius)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tvec2< T, defaultp > \fBdiskRand\fP (T Radius)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tvec3< T, defaultp > \fBballRand\fP (T Radius)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBlinearRand\fP (genType Min, genType Max)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBlinearRand\fP (vecType< T, P > const &Min, vecType< T, P > const &Max)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBgaussRand\fP (genType Mean, genType Deviation)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBgaussRand\fP (vecType< T, P > const &Mean, vecType< T, P > const &Deviation)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tvec2< T, defaultp > \fBdiskRand\fP (T Radius)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tvec3< T, defaultp > \fBballRand\fP (T Radius)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tvec2< T, defaultp > \fBcircularRand\fP (T Radius)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tvec3< T, defaultp > \fBsphericalRand\fP (T Radius)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBsec\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBcsc\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBcot\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBasec\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBacsc\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBacot\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBsech\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBcsch\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBcoth\fP (genType const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBasech\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBacsch\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBacoth\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBsec\fP (genType \fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBsec\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBcsc\fP (genType \fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBcsc\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBcot\fP (genType \fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBcot\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBasec\fP (genType x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBasec\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBacsc\fP (genType x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBacsc\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBacot\fP (genType x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBacot\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBsech\fP (genType \fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBsech\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBcsch\fP (genType \fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBcsch\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBcoth\fP (genType \fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBcoth\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBasech\fP (genType x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBasech\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBacsch\fP (genType x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBacsch\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBacoth\fP (genType x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBacoth\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL bool \fBisPowerOfTwo\fP (genIUType Value)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< bool, P > \fBisPowerOfTwo\fP (vecType< T, P > const &value)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL genIUType \fBceilPowerOfTwo\fP (genIUType Value)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBceilPowerOfTwo\fP (vecType< T, P > const &value)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL genIUType \fBfloorPowerOfTwo\fP (genIUType Value)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBfloorPowerOfTwo\fP (vecType< T, P > const &value)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL genIUType \fBroundPowerOfTwo\fP (genIUType Value)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBroundPowerOfTwo\fP (vecType< T, P > const &value)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL bool \fBisMultiple\fP (genIUType Value, genIUType Multiple)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< bool, P > \fBisMultiple\fP (vecType< T, P > const &Value, T Multiple)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< bool, P > \fBisMultiple\fP (vecType< T, P > const &Value, vecType< T, P > const &Multiple)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBceilMultiple\fP (genType Source, genType Multiple)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBceilMultiple\fP (vecType< T, P > const &Source, vecType< T, P > const &Multiple)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBfloorMultiple\fP (genType Source, genType Multiple)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBfloorMultiple\fP (vecType< T, P > const &Source, vecType< T, P > const &Multiple)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBroundMultiple\fP (genType Source, genType Multiple)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBroundMultiple\fP (vecType< T, P > const &Source, vecType< T, P > const &Multiple)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER bool \fBisPowerOfTwo\fP (genType Value)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< bool, P > \fBisPowerOfTwo\fP (vecType< T, P > const &Value)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBceilPowerOfTwo\fP (genType value)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBceilPowerOfTwo\fP (vecType< T, P > const &v)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfloorPowerOfTwo\fP (genType value)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBfloorPowerOfTwo\fP (vecType< T, P > const &v)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_QUALIFIER genIUType \fBroundPowerOfTwo\fP (genIUType value)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBroundPowerOfTwo\fP (vecType< T, P > const &v)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER bool \fBisMultiple\fP (genType Value, genType Multiple)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< bool, P > \fBisMultiple\fP (vecType< T, P > const &Value, T Multiple)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< bool, P > \fBisMultiple\fP (vecType< T, P > const &Value, vecType< T, P > const &Multiple)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBceilMultiple\fP (genType Source, genType Multiple)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBceilMultiple\fP (vecType< T, P > const &Source, vecType< T, P > const &Multiple)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfloorMultiple\fP (genType Source, genType Multiple)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBfloorMultiple\fP (vecType< T, P > const &Source, vecType< T, P > const &Multiple)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBroundMultiple\fP (genType Source, genType Multiple)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBroundMultiple\fP (vecType< T, P > const &Source, vecType< T, P > const &Multiple)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::value_type const * \fBvalue_ptr\fP (genType const &vec)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tvec2< T, defaultp > \fBmake_vec2\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tvec3< T, defaultp > \fBmake_vec3\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tvec4< T, defaultp > \fBmake_vec4\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat2x2< T, defaultp > \fBmake_mat2x2\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat2x3< T, defaultp > \fBmake_mat2x3\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat2x4< T, defaultp > \fBmake_mat2x4\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat3x2< T, defaultp > \fBmake_mat3x2\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat3x3< T, defaultp > \fBmake_mat3x3\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat3x4< T, defaultp > \fBmake_mat3x4\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x2< T, defaultp > \fBmake_mat4x2\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x3< T, defaultp > \fBmake_mat4x3\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBmake_mat4x4\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat2x2< T, defaultp > \fBmake_mat2\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat3x3< T, defaultp > \fBmake_mat3\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBmake_mat4\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBtquat\fP< T, defaultp > \fBmake_quat\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const * \fBvalue_ptr\fP (tvec2< T, P > const &vec)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (tvec2< T, P > &vec)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const * \fBvalue_ptr\fP (tvec3< T, P > const &vec)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (tvec3< T, P > &vec)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const * \fBvalue_ptr\fP (tvec4< T, P > const &vec)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (tvec4< T, P > &vec)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const * \fBvalue_ptr\fP (tmat2x2< T, P > const &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (tmat2x2< T, P > &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const * \fBvalue_ptr\fP (tmat3x3< T, P > const &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (tmat3x3< T, P > &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const * \fBvalue_ptr\fP (tmat4x4< T, P > const &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (tmat4x4< T, P > &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const * \fBvalue_ptr\fP (tmat2x3< T, P > const &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (tmat2x3< T, P > &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const * \fBvalue_ptr\fP (tmat3x2< T, P > const &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (tmat3x2< T, P > &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const * \fBvalue_ptr\fP (tmat2x4< T, P > const &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (tmat2x4< T, P > &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const * \fBvalue_ptr\fP (tmat4x2< T, P > const &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (tmat4x2< T, P > &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const * \fBvalue_ptr\fP (tmat3x4< T, P > const &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (tmat3x4< T, P > &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const * \fBvalue_ptr\fP (tmat4x3< T, P > const &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (tmat4x3< T, P > &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T const * \fBvalue_ptr\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T * \fBvalue_ptr\fP (\fBtquat\fP< T, P > &q)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tvec2< T, defaultp > \fBmake_vec2\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tvec3< T, defaultp > \fBmake_vec3\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tvec4< T, defaultp > \fBmake_vec4\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat2x2< T, defaultp > \fBmake_mat2x2\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat2x3< T, defaultp > \fBmake_mat2x3\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat2x4< T, defaultp > \fBmake_mat2x4\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat3x2< T, defaultp > \fBmake_mat3x2\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat3x3< T, defaultp > \fBmake_mat3x3\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat3x4< T, defaultp > \fBmake_mat3x4\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x2< T, defaultp > \fBmake_mat4x2\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x3< T, defaultp > \fBmake_mat4x3\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBmake_mat4x4\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat2x2< T, defaultp > \fBmake_mat2\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat3x3< T, defaultp > \fBmake_mat3\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBmake_mat4\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBtquat\fP< T, defaultp > \fBmake_quat\fP (T const *const ptr)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBnext_float\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBprev_float\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBnext_float\fP (genType const &x, \fBuint\fP const &Distance)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBprev_float\fP (genType const &x, \fBuint\fP const &Distance)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBuint\fP \fBfloat_distance\fP (T const &x, T const &y)"
.br
.ti -1c
.RI "template<typename T , template< typename > class vecType> GLM_FUNC_DECL vecType< \fBuint\fP > \fBfloat_distance\fP (vecType< T > const &x, vecType< T > const &y)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER float \fBnext_float\fP (float const &x)"
.br
.ti -1c
.RI "template<> GLM_FUNC_QUALIFIER double \fBnext_float\fP (double const &x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBnext_float\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER float \fBprev_float\fP (float const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER double \fBprev_float\fP (double const &x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBprev_float\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBnext_float\fP (T const &x, \fBuint\fP const &ulps)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBnext_float\fP (vecType< T, P > const &x, vecType< \fBuint\fP, P > const &ulps)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBprev_float\fP (T const &x, \fBuint\fP const &ulps)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBprev_float\fP (vecType< T, P > const &x, vecType< \fBuint\fP, P > const &ulps)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER \fBuint\fP \fBfloat_distance\fP (T const &x, T const &y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< \fBuint\fP, P > \fBfloat_distance\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_DECL U \fBassociatedMin\fP (T x, U a, T y, U b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL tvec2< U, P > \fBassociatedMin\fP (vecType< T, P > const &x, vecType< U, P > const &a, vecType< T, P > const &y, vecType< U, P > const &b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< U, P > \fBassociatedMin\fP (T x, const vecType< U, P > &a, T y, const vecType< U, P > &b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< U, P > \fBassociatedMin\fP (vecType< T, P > const &x, U a, vecType< T, P > const &y, U b)"
.br
.ti -1c
.RI "template<typename T , typename U > GLM_FUNC_DECL U \fBassociatedMin\fP (T x, U a, T y, U b, T z, U c)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< U, P > \fBassociatedMin\fP (vecType< T, P > const &x, vecType< U, P > const &a, vecType< T, P > const &y, vecType< U, P > const &b, vecType< T, P > const &z, vecType< U, P > const &c)"
.br
.ti -1c
.RI "template<typename T , typename U > GLM_FUNC_DECL U \fBassociatedMin\fP (T x, U a, T y, U b, T z, U c, T w, U d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< U, P > \fBassociatedMin\fP (vecType< T, P > const &x, vecType< U, P > const &a, vecType< T, P > const &y, vecType< U, P > const &b, vecType< T, P > const &z, vecType< U, P > const &c, vecType< T, P > const &w, vecType< U, P > const &d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< U, P > \fBassociatedMin\fP (T x, vecType< U, P > const &a, T y, vecType< U, P > const &b, T z, vecType< U, P > const &c, T w, vecType< U, P > const &d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< U, P > \fBassociatedMin\fP (vecType< T, P > const &x, U a, vecType< T, P > const &y, U b, vecType< T, P > const &z, U c, vecType< T, P > const &w, U d)"
.br
.ti -1c
.RI "template<typename T , typename U > GLM_FUNC_DECL U \fBassociatedMax\fP (T x, U a, T y, U b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL tvec2< U, P > \fBassociatedMax\fP (vecType< T, P > const &x, vecType< U, P > const &a, vecType< T, P > const &y, vecType< U, P > const &b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBassociatedMax\fP (T x, vecType< U, P > const &a, T y, vecType< U, P > const &b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< U, P > \fBassociatedMax\fP (vecType< T, P > const &x, U a, vecType< T, P > const &y, U b)"
.br
.ti -1c
.RI "template<typename T , typename U > GLM_FUNC_DECL U \fBassociatedMax\fP (T x, U a, T y, U b, T z, U c)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< U, P > \fBassociatedMax\fP (vecType< T, P > const &x, vecType< U, P > const &a, vecType< T, P > const &y, vecType< U, P > const &b, vecType< T, P > const &z, vecType< U, P > const &c)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBassociatedMax\fP (T x, vecType< U, P > const &a, T y, vecType< U, P > const &b, T z, vecType< U, P > const &c)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< U, P > \fBassociatedMax\fP (vecType< T, P > const &x, U a, vecType< T, P > const &y, U b, vecType< T, P > const &z, U c)"
.br
.ti -1c
.RI "template<typename T , typename U > GLM_FUNC_DECL U \fBassociatedMax\fP (T x, U a, T y, U b, T z, U c, T w, U d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< U, P > \fBassociatedMax\fP (vecType< T, P > const &x, vecType< U, P > const &a, vecType< T, P > const &y, vecType< U, P > const &b, vecType< T, P > const &z, vecType< U, P > const &c, vecType< T, P > const &w, vecType< U, P > const &d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< U, P > \fBassociatedMax\fP (T x, vecType< U, P > const &a, T y, vecType< U, P > const &b, T z, vecType< U, P > const &c, T w, vecType< U, P > const &d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< U, P > \fBassociatedMax\fP (vecType< T, P > const &x, U a, vecType< T, P > const &y, U b, vecType< T, P > const &z, U c, vecType< T, P > const &w, U d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P> GLM_FUNC_QUALIFIER U \fBassociatedMin\fP (T x, U a, T y, U b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER tvec2< U, P > \fBassociatedMin\fP (vecType< T, P > const &x, vecType< U, P > const &a, vecType< T, P > const &y, vecType< U, P > const &b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< U, P > \fBassociatedMin\fP (T x, const vecType< U, P > &a, T y, const vecType< U, P > &b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< U, P > \fBassociatedMin\fP (vecType< T, P > const &x, U a, vecType< T, P > const &y, U b)"
.br
.ti -1c
.RI "template<typename T , typename U > GLM_FUNC_QUALIFIER U \fBassociatedMin\fP (T x, U a, T y, U b, T z, U c)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< U, P > \fBassociatedMin\fP (vecType< T, P > const &x, vecType< U, P > const &a, vecType< T, P > const &y, vecType< U, P > const &b, vecType< T, P > const &z, vecType< U, P > const &c)"
.br
.ti -1c
.RI "template<typename T , typename U > GLM_FUNC_QUALIFIER U \fBassociatedMin\fP (T x, U a, T y, U b, T z, U c, T w, U d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< U, P > \fBassociatedMin\fP (vecType< T, P > const &x, vecType< U, P > const &a, vecType< T, P > const &y, vecType< U, P > const &b, vecType< T, P > const &z, vecType< U, P > const &c, vecType< T, P > const &w, vecType< U, P > const &d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< U, P > \fBassociatedMin\fP (T x, vecType< U, P > const &a, T y, vecType< U, P > const &b, T z, vecType< U, P > const &c, T w, vecType< U, P > const &d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< U, P > \fBassociatedMin\fP (vecType< T, P > const &x, U a, vecType< T, P > const &y, U b, vecType< T, P > const &z, U c, vecType< T, P > const &w, U d)"
.br
.ti -1c
.RI "template<typename T , typename U > GLM_FUNC_QUALIFIER U \fBassociatedMax\fP (T x, U a, T y, U b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER tvec2< U, P > \fBassociatedMax\fP (vecType< T, P > const &x, vecType< U, P > const &a, vecType< T, P > const &y, vecType< U, P > const &b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBassociatedMax\fP (T x, vecType< U, P > const &a, T y, vecType< U, P > const &b)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< U, P > \fBassociatedMax\fP (vecType< T, P > const &x, U a, vecType< T, P > const &y, U b)"
.br
.ti -1c
.RI "template<typename T , typename U > GLM_FUNC_QUALIFIER U \fBassociatedMax\fP (T x, U a, T y, U b, T z, U c)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< U, P > \fBassociatedMax\fP (vecType< T, P > const &x, vecType< U, P > const &a, vecType< T, P > const &y, vecType< U, P > const &b, vecType< T, P > const &z, vecType< U, P > const &c)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBassociatedMax\fP (T x, vecType< U, P > const &a, T y, vecType< U, P > const &b, T z, vecType< U, P > const &c)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< U, P > \fBassociatedMax\fP (vecType< T, P > const &x, U a, vecType< T, P > const &y, U b, vecType< T, P > const &z, U c)"
.br
.ti -1c
.RI "template<typename T , typename U > GLM_FUNC_QUALIFIER U \fBassociatedMax\fP (T x, U a, T y, U b, T z, U c, T w, U d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< U, P > \fBassociatedMax\fP (vecType< T, P > const &x, vecType< U, P > const &a, vecType< T, P > const &y, vecType< U, P > const &b, vecType< T, P > const &z, vecType< U, P > const &c, vecType< T, P > const &w, vecType< U, P > const &d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< U, P > \fBassociatedMax\fP (T x, vecType< U, P > const &a, T y, vecType< U, P > const &b, T z, vecType< U, P > const &c, T w, vecType< U, P > const &d)"
.br
.ti -1c
.RI "template<typename T , typename U , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< U, P > \fBassociatedMax\fP (vecType< T, P > const &x, U a, vecType< T, P > const &y, U b, vecType< T, P > const &z, U c, vecType< T, P > const &w, U d)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL genIUType \fBhighestBitValue\fP (genIUType Value)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBhighestBitValue\fP (vecType< T, P > const &value)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_DEPRECATED GLM_FUNC_DECL genIUType \fBpowerOfTwoAbove\fP (genIUType Value)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_DEPRECATED GLM_FUNC_DECL vecType< T, P > \fBpowerOfTwoAbove\fP (vecType< T, P > const &value)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_DEPRECATED GLM_FUNC_DECL genIUType \fBpowerOfTwoBelow\fP (genIUType Value)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_DEPRECATED GLM_FUNC_DECL vecType< T, P > \fBpowerOfTwoBelow\fP (vecType< T, P > const &value)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_DEPRECATED GLM_FUNC_DECL genIUType \fBpowerOfTwoNearest\fP (genIUType Value)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_DEPRECATED GLM_FUNC_DECL vecType< T, P > \fBpowerOfTwoNearest\fP (vecType< T, P > const &value)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_QUALIFIER genIUType \fBhighestBitValue\fP (genIUType Value)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBhighestBitValue\fP (vecType< T, P > const &v)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBpowerOfTwoAbove\fP (genType value)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBpowerOfTwoAbove\fP (vecType< T, P > const &v)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBpowerOfTwoBelow\fP (genType value)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBpowerOfTwoBelow\fP (vecType< T, P > const &v)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBpowerOfTwoNearest\fP (genType value)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBpowerOfTwoNearest\fP (vecType< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBclosestPointOnLine\fP (tvec3< T, P > const &point, tvec3< T, P > const &a, tvec3< T, P > const &b)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec2< T, P > \fBclosestPointOnLine\fP (tvec2< T, P > const &point, tvec2< T, P > const &a, tvec2< T, P > const &b)"
.br
.RI "\fI2d lines work as well \fP"
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBclosestPointOnLine\fP (tvec3< T, P > const &point, tvec3< T, P > const &a, tvec3< T, P > const &b)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2< T, P > \fBclosestPointOnLine\fP (tvec2< T, P > const &point, tvec2< T, P > const &a, tvec2< T, P > const &b)"
.br
.RI "\fI2d lines work as well \fP"
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBrgbColor\fP (tvec3< T, P > const &hsvValue)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBhsvColor\fP (tvec3< T, P > const &rgbValue)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBsaturation\fP (T const s)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBsaturation\fP (T const s, tvec3< T, P > const &color)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec4< T, P > \fBsaturation\fP (T const s, tvec4< T, P > const &color)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBluminosity\fP (tvec3< T, P > const &color)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBrgbColor\fP (const tvec3< T, P > &\fBhsvColor\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBhsvColor\fP (const tvec3< T, P > &\fBrgbColor\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBsaturation\fP (T const s)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBsaturation\fP (const T s, const tvec3< T, P > &color)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< T, P > \fBsaturation\fP (const T s, const tvec4< T, P > &color)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBluminosity\fP (const tvec3< T, P > &color)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBrgb2YCoCg\fP (tvec3< T, P > const &\fBrgbColor\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBYCoCg2rgb\fP (tvec3< T, P > const &YCoCgColor)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBrgb2YCoCgR\fP (tvec3< T, P > const &\fBrgbColor\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBYCoCgR2rgb\fP (tvec3< T, P > const &YCoCgColor)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBrgb2YCoCg\fP (tvec3< T, P > const &\fBrgbColor\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBYCoCg2rgb\fP (tvec3< T, P > const &YCoCgColor)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBrgb2YCoCgR\fP (tvec3< T, P > const &\fBrgbColor\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBYCoCgR2rgb\fP (tvec3< T, P > const &YCoCgRColor)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::bool_type \fBisdenormal\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBfmod\fP (vecType< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER bool \fBisdenormal\fP (T const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec1< T, P >::bool_type \fBisdenormal\fP (tvec1< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2< T, P >::bool_type \fBisdenormal\fP (tvec2< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P >::bool_type \fBisdenormal\fP (tvec3< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< T, P >::bool_type \fBisdenormal\fP (tvec4< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfmod\fP (genType x, genType y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBfmod\fP (vecType< T, P > const &x, T y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBfmod\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBlerp\fP (T x, T y, T a)"
.br
.RI "\fIReturns x * (1\&.0 - a) + y * a, i\&.e\&., the linear blend of x and y using the floating-point value a\&. The value for a is not restricted to the range [0, 1]\&. (From GLM_GTX_compatibility) \fP"
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2< T, P > \fBlerp\fP (const tvec2< T, P > &x, const tvec2< T, P > &y, T a)"
.br
.RI "\fIReturns x * (1\&.0 - a) + y * a, i\&.e\&., the linear blend of x and y using the floating-point value a\&. The value for a is not restricted to the range [0, 1]\&. (From GLM_GTX_compatibility) \fP"
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBlerp\fP (const tvec3< T, P > &x, const tvec3< T, P > &y, T a)"
.br
.RI "\fIReturns x * (1\&.0 - a) + y * a, i\&.e\&., the linear blend of x and y using the floating-point value a\&. The value for a is not restricted to the range [0, 1]\&. (From GLM_GTX_compatibility) \fP"
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< T, P > \fBlerp\fP (const tvec4< T, P > &x, const tvec4< T, P > &y, T a)"
.br
.RI "\fIReturns x * (1\&.0 - a) + y * a, i\&.e\&., the linear blend of x and y using the floating-point value a\&. The value for a is not restricted to the range [0, 1]\&. (From GLM_GTX_compatibility) \fP"
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2< T, P > \fBlerp\fP (const tvec2< T, P > &x, const tvec2< T, P > &y, const tvec2< T, P > &a)"
.br
.RI "\fIReturns the component-wise result of x * (1\&.0 - a) + y * a, i\&.e\&., the linear blend of x and y using vector a\&. The value for a is not restricted to the range [0, 1]\&. (From GLM_GTX_compatibility) \fP"
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBlerp\fP (const tvec3< T, P > &x, const tvec3< T, P > &y, const tvec3< T, P > &a)"
.br
.RI "\fIReturns the component-wise result of x * (1\&.0 - a) + y * a, i\&.e\&., the linear blend of x and y using vector a\&. The value for a is not restricted to the range [0, 1]\&. (From GLM_GTX_compatibility) \fP"
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< T, P > \fBlerp\fP (const tvec4< T, P > &x, const tvec4< T, P > &y, const tvec4< T, P > &a)"
.br
.RI "\fIReturns the component-wise result of x * (1\&.0 - a) + y * a, i\&.e\&., the linear blend of x and y using vector a\&. The value for a is not restricted to the range [0, 1]\&. (From GLM_GTX_compatibility) \fP"
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBsaturate\fP (T x)"
.br
.RI "\fIReturns clamp(x, 0, 1) for each component in x\&. (From GLM_GTX_compatibility) \fP"
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2< T, P > \fBsaturate\fP (const tvec2< T, P > &x)"
.br
.RI "\fIReturns clamp(x, 0, 1) for each component in x\&. (From GLM_GTX_compatibility) \fP"
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBsaturate\fP (const tvec3< T, P > &x)"
.br
.RI "\fIReturns clamp(x, 0, 1) for each component in x\&. (From GLM_GTX_compatibility) \fP"
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< T, P > \fBsaturate\fP (const tvec4< T, P > &x)"
.br
.RI "\fIReturns clamp(x, 0, 1) for each component in x\&. (From GLM_GTX_compatibility) \fP"
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBatan2\fP (T x, T y)"
.br
.RI "\fIArc tangent\&. Returns an angle whose tangent is y/x\&. The signs of x and y are used to determine what quadrant the angle is in\&. The range of values returned by this function is [-PI, PI]\&. Results are undefined if x and y are both 0\&. (From GLM_GTX_compatibility) \fP"
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2< T, P > \fBatan2\fP (const tvec2< T, P > &x, const tvec2< T, P > &y)"
.br
.RI "\fIArc tangent\&. Returns an angle whose tangent is y/x\&. The signs of x and y are used to determine what quadrant the angle is in\&. The range of values returned by this function is [-PI, PI]\&. Results are undefined if x and y are both 0\&. (From GLM_GTX_compatibility) \fP"
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBatan2\fP (const tvec3< T, P > &x, const tvec3< T, P > &y)"
.br
.RI "\fIArc tangent\&. Returns an angle whose tangent is y/x\&. The signs of x and y are used to determine what quadrant the angle is in\&. The range of values returned by this function is [-PI, PI]\&. Results are undefined if x and y are both 0\&. (From GLM_GTX_compatibility) \fP"
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< T, P > \fBatan2\fP (const tvec4< T, P > &x, const tvec4< T, P > &y)"
.br
.RI "\fIArc tangent\&. Returns an angle whose tangent is y/x\&. The signs of x and y are used to determine what quadrant the angle is in\&. The range of values returned by this function is [-PI, PI]\&. Results are undefined if x and y are both 0\&. (From GLM_GTX_compatibility) \fP"
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL bool \fBisfinite\fP (genType const &x)"
.br
.RI "\fITest whether or not a scalar or each vector component is a finite value\&. (From GLM_GTX_compatibility) \fP"
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec1< bool, P > \fBisfinite\fP (const tvec1< T, P > &x)"
.br
.RI "\fITest whether or not a scalar or each vector component is a finite value\&. (From GLM_GTX_compatibility) \fP"
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec2< bool, P > \fBisfinite\fP (const tvec2< T, P > &x)"
.br
.RI "\fITest whether or not a scalar or each vector component is a finite value\&. (From GLM_GTX_compatibility) \fP"
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< bool, P > \fBisfinite\fP (const tvec3< T, P > &x)"
.br
.RI "\fITest whether or not a scalar or each vector component is a finite value\&. (From GLM_GTX_compatibility) \fP"
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec4< bool, P > \fBisfinite\fP (const tvec4< T, P > &x)"
.br
.RI "\fITest whether or not a scalar or each vector component is a finite value\&. (From GLM_GTX_compatibility) \fP"
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER bool \fBisfinite\fP (genType const &x)"
.br
.RI "\fITest whether or not a scalar or each vector component is a finite value\&. (From GLM_GTX_compatibility) \fP"
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec1< bool, P > \fBisfinite\fP (tvec1< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2< bool, P > \fBisfinite\fP (tvec2< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< bool, P > \fBisfinite\fP (tvec3< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< bool, P > \fBisfinite\fP (tvec4< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::value_type \fBcompAdd\fP (genType const &v)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::value_type \fBcompMul\fP (genType const &v)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::value_type \fBcompMin\fP (genType const &v)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::value_type \fBcompMax\fP (genType const &v)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER T \fBcompAdd\fP (vecType< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER T \fBcompMul\fP (vecType< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER T \fBcompMin\fP (vecType< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER T \fBcompMax\fP (vecType< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtdualquat\fP< T, P > \fBoperator+\fP (\fBtdualquat\fP< T, P > const &q, \fBtdualquat\fP< T, P > const &p)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtdualquat\fP< T, P > \fBoperator*\fP (\fBtdualquat\fP< T, P > const &q, \fBtdualquat\fP< T, P > const &p)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtdualquat\fP< T, P > \fBoperator*\fP (\fBtdualquat\fP< T, P > const &q, T const &s)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtdualquat\fP< T, P > \fBoperator*\fP (T const &s, \fBtdualquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtdualquat\fP< T, P > \fBoperator/\fP (\fBtdualquat\fP< T, P > const &q, T const &s)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtdualquat\fP< T, P > \fBnormalize\fP (\fBtdualquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtdualquat\fP< T, P > \fBlerp\fP (\fBtdualquat\fP< T, P > const &x, \fBtdualquat\fP< T, P > const &y, T const &a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtdualquat\fP< T, P > \fBinverse\fP (\fBtdualquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat2x4< T, P > \fBmat2x4_cast\fP (\fBtdualquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat3x4< T, P > \fBmat3x4_cast\fP (\fBtdualquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtdualquat\fP< T, P > \fBdualquat_cast\fP (tmat2x4< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtdualquat\fP< T, P > \fBdualquat_cast\fP (tmat3x4< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtdualquat\fP< T, P > \fBoperator\-\fP (\fBtdualquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtdualquat\fP< T, P > \fBoperator+\fP (\fBtdualquat\fP< T, P > const &q, \fBtdualquat\fP< T, P > const &p)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtdualquat\fP< T, P > \fBoperator*\fP (\fBtdualquat\fP< T, P > const &p, \fBtdualquat\fP< T, P > const &o)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBoperator*\fP (\fBtdualquat\fP< T, P > const &q, tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBoperator*\fP (tvec3< T, P > const &v, \fBtdualquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< T, P > \fBoperator*\fP (\fBtdualquat\fP< T, P > const &q, tvec4< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< T, P > \fBoperator*\fP (tvec4< T, P > const &v, \fBtdualquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtdualquat\fP< T, P > \fBoperator*\fP (\fBtdualquat\fP< T, P > const &q, T const &s)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtdualquat\fP< T, P > \fBoperator*\fP (T const &s, \fBtdualquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtdualquat\fP< T, P > \fBoperator/\fP (\fBtdualquat\fP< T, P > const &q, T const &s)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER bool \fBoperator==\fP (\fBtdualquat\fP< T, P > const &q1, \fBtdualquat\fP< T, P > const &q2)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER bool \fBoperator!=\fP (\fBtdualquat\fP< T, P > const &q1, \fBtdualquat\fP< T, P > const &q2)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtdualquat\fP< T, P > \fBnormalize\fP (\fBtdualquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtdualquat\fP< T, P > \fBlerp\fP (\fBtdualquat\fP< T, P > const &x, \fBtdualquat\fP< T, P > const &y, T const &a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtdualquat\fP< T, P > \fBinverse\fP (\fBtdualquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat2x4< T, P > \fBmat2x4_cast\fP (\fBtdualquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x4< T, P > \fBmat3x4_cast\fP (\fBtdualquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtdualquat\fP< T, P > \fBdualquat_cast\fP (tmat2x4< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtdualquat\fP< T, P > \fBdualquat_cast\fP (tmat3x4< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBeulerAngleX\fP (T const &angleX)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBeulerAngleY\fP (T const &angleY)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBeulerAngleZ\fP (T const &angleZ)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBeulerAngleXY\fP (T const &angleX, T const &angleY)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBeulerAngleYX\fP (T const &angleY, T const &angleX)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBeulerAngleXZ\fP (T const &angleX, T const &angleZ)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBeulerAngleZX\fP (T const &\fBangle\fP, T const &angleX)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBeulerAngleYZ\fP (T const &angleY, T const &angleZ)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBeulerAngleZY\fP (T const &angleZ, T const &angleY)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBeulerAngleXYZ\fP (T const &t1, T const &t2, T const &t3)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fBeulerAngleYXZ\fP (T const &\fByaw\fP, T const &\fBpitch\fP, T const &\fBroll\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat4x4< T, defaultp > \fByawPitchRoll\fP (T const &\fByaw\fP, T const &\fBpitch\fP, T const &\fBroll\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat2x2< T, defaultp > \fBorientate2\fP (T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL tmat3x3< T, defaultp > \fBorientate3\fP (T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat3x3< T, P > \fBorientate3\fP (tvec3< T, P > const &angles)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBorientate4\fP (tvec3< T, P > const &angles)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL void \fBextractEulerAngleXYZ\fP (tmat4x4< T, defaultp > &M, T &t1, T &t2, T &t3)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBeulerAngleX\fP (T const &angleX)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBeulerAngleY\fP (T const &angleY)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBeulerAngleZ\fP (T const &angleZ)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBeulerAngleXY\fP (T const &angleX, T const &angleY)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBeulerAngleYX\fP (T const &angleY, T const &angleX)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBeulerAngleXZ\fP (T const &angleX, T const &angleZ)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBeulerAngleZX\fP (T const &angleZ, T const &angleX)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBeulerAngleYZ\fP (T const &angleY, T const &angleZ)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBeulerAngleZY\fP (T const &angleZ, T const &angleY)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBeulerAngleXYZ\fP (T const &t1, T const &t2, T const &t3)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fBeulerAngleYXZ\fP (T const &\fByaw\fP, T const &\fBpitch\fP, T const &\fBroll\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat4x4< T, defaultp > \fByawPitchRoll\fP (T const &\fByaw\fP, T const &\fBpitch\fP, T const &\fBroll\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat2x2< T, defaultp > \fBorientate2\fP (T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER tmat3x3< T, defaultp > \fBorientate3\fP (T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBorientate3\fP (tvec3< T, P > const &angles)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBorientate4\fP (tvec3< T, P > const &angles)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBextend\fP (genType const &Origin, genType const &Source, typename genType::value_type const Length)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBextend\fP (genType const &Origin, genType const &Source, genType const &Distance)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2< T, P > \fBextend\fP (tvec2< T, P > const &Origin, tvec2< T, P > const &Source, T const &Distance)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBextend\fP (tvec3< T, P > const &Origin, tvec3< T, P > const &Source, T const &Distance)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< T, P > \fBextend\fP (tvec4< T, P > const &Origin, tvec4< T, P > const &Source, T const &Distance)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBmin\fP (T const &x, T const &y, T const &z)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_DECL C< T > \fBmin\fP (C< T > const &x, typename C< T >::T const &y, typename C< T >::T const &z)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_DECL C< T > \fBmin\fP (C< T > const &x, C< T > const &y, C< T > const &z)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBmin\fP (T const &x, T const &y, T const &z, T const &w)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_DECL C< T > \fBmin\fP (C< T > const &x, typename C< T >::T const &y, typename C< T >::T const &z, typename C< T >::T const &w)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_DECL C< T > \fBmin\fP (C< T > const &x, C< T > const &y, C< T > const &z, C< T > const &w)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBmax\fP (T const &x, T const &y, T const &z)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_DECL C< T > \fBmax\fP (C< T > const &x, typename C< T >::T const &y, typename C< T >::T const &z)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_DECL C< T > \fBmax\fP (C< T > const &x, C< T > const &y, C< T > const &z)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBmax\fP (T const &x, T const &y, T const &z, T const &w)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_DECL C< T > \fBmax\fP (C< T > const &x, typename C< T >::T const &y, typename C< T >::T const &z, typename C< T >::T const &w)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_DECL C< T > \fBmax\fP (C< T > const &x, C< T > const &y, C< T > const &z, C< T > const &w)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBmin\fP (T const &x, T const &y, T const &z)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_QUALIFIER C< T > \fBmin\fP (C< T > const &x, typename C< T >::T const &y, typename C< T >::T const &z)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_QUALIFIER C< T > \fBmin\fP (C< T > const &x, C< T > const &y, C< T > const &z)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBmin\fP (T const &x, T const &y, T const &z, T const &w)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_QUALIFIER C< T > \fBmin\fP (C< T > const &x, typename C< T >::T const &y, typename C< T >::T const &z, typename C< T >::T const &w)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_QUALIFIER C< T > \fBmin\fP (C< T > const &x, C< T > const &y, C< T > const &z, C< T > const &w)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBmax\fP (T const &x, T const &y, T const &z)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_QUALIFIER C< T > \fBmax\fP (C< T > const &x, typename C< T >::T const &y, typename C< T >::T const &z)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_QUALIFIER C< T > \fBmax\fP (C< T > const &x, C< T > const &y, C< T > const &z)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBmax\fP (T const &x, T const &y, T const &z, T const &w)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_QUALIFIER C< T > \fBmax\fP (C< T > const &x, typename C< T >::T const &y, typename C< T >::T const &z, typename C< T >::T const &w)"
.br
.ti -1c
.RI "template<typename T , template< typename > class C> GLM_FUNC_QUALIFIER C< T > \fBmax\fP (C< T > const &x, C< T > const &y, C< T > const &z, C< T > const &w)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBfastPow\fP (genType x, genType y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBfastPow\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename genTypeT , typename genTypeU > GLM_FUNC_DECL genTypeT \fBfastPow\fP (genTypeT x, genTypeU y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBfastPow\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBfastExp\fP (T x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBfastExp\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBfastLog\fP (T x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBfastLog\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBfastExp2\fP (T x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBfastExp2\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBfastLog2\fP (T x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBfastLog2\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfastPow\fP (genType x, genType y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBfastPow\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBfastPow\fP (T x, int y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBfastPow\fP (vecType< T, P > const &x, vecType< int, P > const &y)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBfastExp\fP (T x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBfastExp\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfastLog\fP (genType x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBfastLog\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfastExp2\fP (genType x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBfastExp2\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfastLog2\fP (genType x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBfastLog2\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBfastSqrt\fP (genType x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBfastSqrt\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBfastInverseSqrt\fP (genType x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBfastInverseSqrt\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBfastLength\fP (genType x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL T \fBfastLength\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBfastDistance\fP (genType x, genType y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL T \fBfastDistance\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBfastNormalize\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfastSqrt\fP (genType x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBfastSqrt\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfastInverseSqrt\fP (genType x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBfastInverseSqrt\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfastLength\fP (genType x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER T \fBfastLength\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfastDistance\fP (genType x, genType y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER T \fBfastDistance\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfastNormalize\fP (genType x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBfastNormalize\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBwrapAngle\fP (T \fBangle\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBfastSin\fP (T \fBangle\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBfastCos\fP (T \fBangle\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBfastTan\fP (T \fBangle\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBfastAsin\fP (T \fBangle\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBfastAcos\fP (T \fBangle\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBfastAtan\fP (T y, T x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBfastAtan\fP (T \fBangle\fP)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBwrapAngle\fP (T \fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBwrapAngle\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBfastCos\fP (T x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBfastCos\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBfastSin\fP (T x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBfastSin\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBfastTan\fP (T x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBfastTan\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBfastAsin\fP (T x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBfastAsin\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBfastAcos\fP (T x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBfastAcos\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBfastAtan\fP (T y, T x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBfastAtan\fP (vecType< T, P > const &y, vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBfastAtan\fP (T x)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBfastAtan\fP (vecType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBradialGradient\fP (tvec2< T, P > const &Center, T const &Radius, tvec2< T, P > const &Focal, tvec2< T, P > const &Position)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBlinearGradient\fP (tvec2< T, P > const &Point0, tvec2< T, P > const &Point1, tvec2< T, P > const &Position)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBradialGradient\fP (tvec2< T, P > const &Center, T const &Radius, tvec2< T, P > const &Focal, tvec2< T, P > const &Position)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBlinearGradient\fP (tvec2< T, P > const &Point0, tvec2< T, P > const &Point1, tvec2< T, P > const &Position)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL bool \fBrightHanded\fP (tvec3< T, P > const &tangent, tvec3< T, P > const &binormal, tvec3< T, P > const &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL bool \fBleftHanded\fP (tvec3< T, P > const &tangent, tvec3< T, P > const &binormal, tvec3< T, P > const &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER bool \fBrightHanded\fP (tvec3< T, P > const &tangent, tvec3< T, P > const &binormal, tvec3< T, P > const &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER bool \fBleftHanded\fP (tvec3< T, P > const &tangent, tvec3< T, P > const &binormal, tvec3< T, P > const &normal)"
.br
.ti -1c
.RI "GLM_FUNC_DECL int \fBpow\fP (int x, int y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL int \fBsqrt\fP (int x)"
.br
.ti -1c
.RI "GLM_FUNC_DECL unsigned int \fBfloor_log2\fP (unsigned int x)"
.br
.ti -1c
.RI "GLM_FUNC_DECL int \fBmod\fP (int x, int y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBfactorial\fP (genType const &x)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint\fP \fBpow\fP (\fBuint\fP x, \fBuint\fP y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint\fP \fBsqrt\fP (\fBuint\fP x)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint\fP \fBmod\fP (\fBuint\fP x, \fBuint\fP y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint\fP \fBnlz\fP (\fBuint\fP x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBfactorial\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2< T, P > \fBfactorial\fP (tvec2< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBfactorial\fP (tvec3< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< T, P > \fBfactorial\fP (tvec4< T, P > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL bool \fBintersectRayPlane\fP (genType const &orig, genType const &dir, genType const &planeOrig, genType const &planeNormal, typename genType::value_type &intersectionDistance)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL bool \fBintersectRayTriangle\fP (genType const &orig, genType const &dir, genType const &vert0, genType const &vert1, genType const &vert2, genType &baryPosition)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL bool \fBintersectLineTriangle\fP (genType const &orig, genType const &dir, genType const &vert0, genType const &vert1, genType const &vert2, genType &position)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL bool \fBintersectRaySphere\fP (genType const &rayStarting, genType const &rayNormalizedDirection, genType const &sphereCenter, typename genType::value_type const sphereRadiusSquered, typename genType::value_type &intersectionDistance)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL bool \fBintersectRaySphere\fP (genType const &rayStarting, genType const &rayNormalizedDirection, genType const &sphereCenter, const typename genType::value_type sphereRadius, genType &intersectionPosition, genType &intersectionNormal)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL bool \fBintersectLineSphere\fP (genType const &point0, genType const &point1, genType const &sphereCenter, typename genType::value_type sphereRadius, genType &intersectionPosition1, genType &intersectionNormal1, genType &intersectionPosition2=genType(), genType &intersectionNormal2=genType())"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER bool \fBintersectRayPlane\fP (genType const &orig, genType const &dir, genType const &planeOrig, genType const &planeNormal, typename genType::value_type &intersectionDistance)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER bool \fBintersectRayTriangle\fP (genType const &orig, genType const &dir, genType const &v0, genType const &v1, genType const &v2, genType &baryPosition)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER bool \fBintersectLineTriangle\fP (genType const &orig, genType const &dir, genType const &vert0, genType const &vert1, genType const &vert2, genType &position)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER bool \fBintersectRaySphere\fP (genType const &rayStarting, genType const &rayNormalizedDirection, genType const &sphereCenter, const typename genType::value_type sphereRadiusSquered, typename genType::value_type &intersectionDistance)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER bool \fBintersectRaySphere\fP (genType const &rayStarting, genType const &rayNormalizedDirection, genType const &sphereCenter, const typename genType::value_type sphereRadius, genType &intersectionPosition, genType &intersectionNormal)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER bool \fBintersectLineSphere\fP (genType const &point0, genType const &point1, genType const &sphereCenter, typename genType::value_type sphereRadius, genType &intersectionPoint1, genType &intersectionNormal1, genType &intersectionPoint2, genType &intersectionNormal2)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_DECL std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &, \fBtquat\fP< T, P > const &)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_DECL std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &, tvec1< T, P > const &)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_DECL std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &, tvec2< T, P > const &)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_DECL std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &, tvec3< T, P > const &)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_DECL std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &, tvec4< T, P > const &)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_DECL std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &, tmat2x2< T, P > const &)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_DECL std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &, tmat2x3< T, P > const &)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_DECL std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &, tmat2x4< T, P > const &)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_DECL std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &, tmat3x2< T, P > const &)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_DECL std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &, tmat3x3< T, P > const &)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_DECL std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &, tmat3x4< T, P > const &)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_DECL std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &, tmat4x2< T, P > const &)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_DECL std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &, tmat4x3< T, P > const &)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_DECL std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &, tmat4x4< T, P > const &)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_DECL std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &, std::pair< tmat4x4< T, P > const, tmat4x4< T, P > const  > const &)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_DECL std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &, std::pair< tmat4x4< T, P >, tmat4x4< T, P > > const &)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_QUALIFIER std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &os, \fBtquat\fP< T, P > const &a)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_QUALIFIER std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &os, tvec1< T, P > const &a)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_QUALIFIER std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &os, tvec2< T, P > const &a)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_QUALIFIER std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &os, tvec3< T, P > const &a)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_QUALIFIER std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &os, tvec4< T, P > const &a)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_QUALIFIER std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &os, tmat2x2< T, P > const &a)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_QUALIFIER std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &os, tmat2x3< T, P > const &a)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_QUALIFIER std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &os, tmat2x4< T, P > const &a)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_QUALIFIER std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &os, tmat3x2< T, P > const &a)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_QUALIFIER std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &os, tmat3x3< T, P > const &a)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_QUALIFIER std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &os, tmat3x4< T, P > const &a)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_QUALIFIER std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &os, tmat4x2< T, P > const &a)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_QUALIFIER std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &os, tmat4x3< T, P > const &a)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_QUALIFIER std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &os, tmat4x4< T, P > const &a)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_QUALIFIER std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &os, std::pair< tmat4x4< T, P > const, tmat4x4< T, P > const  > const &a)"
.br
.ti -1c
.RI "template<typename CTy , typename CTr , typename T , precision P> GLM_FUNC_QUALIFIER std::basic_ostream< CTy, CTr > & \fBoperator<<\fP (std::basic_ostream< CTy, CTr > &os, std::pair< tmat4x4< T, P >, tmat4x4< T, P > > const &a)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBlog\fP (genType x, genType base)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBsign\fP (vecType< T, P > const &x, vecType< T, P > const &base)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBlog\fP (genType const &x, genType const &base)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< T, P > \fBlog\fP (vecType< T, P > const &x, vecType< T, P > const &base)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat3x3< T, P > \fBmatrixCross3\fP (tvec3< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBmatrixCross4\fP (tvec3< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBmatrixCross3\fP (tvec3< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBmatrixCross4\fP (tvec3< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL bool \fBdecompose\fP (tmat4x4< T, P > const &modelMatrix, tvec3< T, P > &\fBscale\fP, \fBtquat\fP< T, P > &\fBorientation\fP, tvec3< T, P > &translation, tvec3< T, P > &skew, tvec4< T, P > &\fBperspective\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBcombine\fP (tvec3< T, P > const &a, tvec3< T, P > const &b, T ascl, T bscl)"
.br
.RI "\fIMake a linear combination of two vectors and return the result\&. \fP"
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER void \fBv3Scale\fP (tvec3< T, P > &v, T desiredLength)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER bool \fBdecompose\fP (tmat4x4< T, P > const &ModelMatrix, tvec3< T, P > &Scale, \fBtquat\fP< T, P > &Orientation, tvec3< T, P > &Translation, tvec3< T, P > &Skew, tvec4< T, P > &Perspective)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL void \fBaxisAngle\fP (tmat4x4< T, P > const &mat, tvec3< T, P > &\fBaxis\fP, T &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBaxisAngleMatrix\fP (tvec3< T, P > const &\fBaxis\fP, T const \fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBextractMatrixRotation\fP (tmat4x4< T, P > const &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBinterpolate\fP (tmat4x4< T, P > const &m1, tmat4x4< T, P > const &m2, T const delta)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER void \fBaxisAngle\fP (tmat4x4< T, P > const &mat, tvec3< T, P > &\fBaxis\fP, T &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBaxisAngleMatrix\fP (tvec3< T, P > const &\fBaxis\fP, T const \fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBextractMatrixRotation\fP (tmat4x4< T, P > const &mat)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBinterpolate\fP (tmat4x4< T, P > const &m1, tmat4x4< T, P > const &m2, T const delta)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat2x2< T, P > \fBrowMajor2\fP (tvec2< T, P > const &v1, tvec2< T, P > const &v2)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat2x2< T, P > \fBrowMajor2\fP (tmat2x2< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat3x3< T, P > \fBrowMajor3\fP (tvec3< T, P > const &v1, tvec3< T, P > const &v2, tvec3< T, P > const &v3)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat3x3< T, P > \fBrowMajor3\fP (tmat3x3< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBrowMajor4\fP (tvec4< T, P > const &v1, tvec4< T, P > const &v2, tvec4< T, P > const &v3, tvec4< T, P > const &v4)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBrowMajor4\fP (tmat4x4< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat2x2< T, P > \fBcolMajor2\fP (tvec2< T, P > const &v1, tvec2< T, P > const &v2)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat2x2< T, P > \fBcolMajor2\fP (tmat2x2< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat3x3< T, P > \fBcolMajor3\fP (tvec3< T, P > const &v1, tvec3< T, P > const &v2, tvec3< T, P > const &v3)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat3x3< T, P > \fBcolMajor3\fP (tmat3x3< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBcolMajor4\fP (tvec4< T, P > const &v1, tvec4< T, P > const &v2, tvec4< T, P > const &v3, tvec4< T, P > const &v4)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBcolMajor4\fP (tmat4x4< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat2x2< T, P > \fBrowMajor2\fP (tvec2< T, P > const &v1, tvec2< T, P > const &v2)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat2x2< T, P > \fBrowMajor2\fP (const tmat2x2< T, P > &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBrowMajor3\fP (const tvec3< T, P > &v1, const tvec3< T, P > &v2, const tvec3< T, P > &v3)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBrowMajor3\fP (const tmat3x3< T, P > &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBrowMajor4\fP (const tvec4< T, P > &v1, const tvec4< T, P > &v2, const tvec4< T, P > &v3, const tvec4< T, P > &v4)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBrowMajor4\fP (const tmat4x4< T, P > &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat2x2< T, P > \fBcolMajor2\fP (const tvec2< T, P > &v1, const tvec2< T, P > &v2)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat2x2< T, P > \fBcolMajor2\fP (const tmat2x2< T, P > &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBcolMajor3\fP (const tvec3< T, P > &v1, const tvec3< T, P > &v2, const tvec3< T, P > &v3)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBcolMajor3\fP (const tmat3x3< T, P > &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBcolMajor4\fP (const tvec4< T, P > &v1, const tvec4< T, P > &v2, const tvec4< T, P > &v3, const tvec4< T, P > &v4)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBcolMajor4\fP (const tmat4x4< T, P > &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat2x2< T, P > \fBdiagonal2x2\fP (tvec2< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat2x3< T, P > \fBdiagonal2x3\fP (tvec2< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat2x4< T, P > \fBdiagonal2x4\fP (tvec2< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat3x2< T, P > \fBdiagonal3x2\fP (tvec2< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat3x3< T, P > \fBdiagonal3x3\fP (tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat3x4< T, P > \fBdiagonal3x4\fP (tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x2< T, P > \fBdiagonal4x2\fP (tvec2< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x3< T, P > \fBdiagonal4x3\fP (tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBdiagonal4x4\fP (tvec4< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat2x2< T, P > \fBdiagonal2x2\fP (tvec2< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat2x3< T, P > \fBdiagonal2x3\fP (tvec2< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat2x4< T, P > \fBdiagonal2x4\fP (tvec2< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x2< T, P > \fBdiagonal3x2\fP (tvec2< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBdiagonal3x3\fP (tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x4< T, P > \fBdiagonal3x4\fP (tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBdiagonal4x4\fP (tvec4< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x3< T, P > \fBdiagonal4x3\fP (tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x2< T, P > \fBdiagonal4x2\fP (tvec2< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL bool \fBisNull\fP (tmat2x2< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL bool \fBisNull\fP (tmat3x3< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL bool \fBisNull\fP (tmat4x4< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class matType> GLM_FUNC_DECL bool \fBisIdentity\fP (matType< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL bool \fBisNormalized\fP (tmat2x2< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL bool \fBisNormalized\fP (tmat3x3< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL bool \fBisNormalized\fP (tmat4x4< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class matType> GLM_FUNC_DECL bool \fBisOrthogonal\fP (matType< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER bool \fBisNull\fP (tmat2x2< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER bool \fBisNull\fP (tmat3x3< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER bool \fBisNull\fP (tmat4x4< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class matType> GLM_FUNC_QUALIFIER bool \fBisIdentity\fP (matType< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER bool \fBisNormalized\fP (tmat2x2< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER bool \fBisNormalized\fP (tmat3x3< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER bool \fBisNormalized\fP (tmat4x4< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class matType> GLM_FUNC_QUALIFIER bool \fBisOrthogonal\fP (matType< T, P > const &m, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBtranslate\fP (tmat3x3< T, P > const &m, tvec2< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBrotate\fP (tmat3x3< T, P > const &m, T \fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBscale\fP (tmat3x3< T, P > const &m, tvec2< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBshearX\fP (tmat3x3< T, P > const &m, T y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBshearY\fP (tmat3x3< T, P > const &m, T x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBmixedProduct\fP (tvec3< T, P > const &v1, tvec3< T, P > const &v2, tvec3< T, P > const &v3)"
.br
.RI "\fIMixed product of 3 vectors (from GLM_GTX_mixed_product extension) \fP"
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBmixedProduct\fP (tvec3< T, P > const &v1, tvec3< T, P > const &v2, tvec3< T, P > const &v3)"
.br
.RI "\fIMixed product of 3 vectors (from GLM_GTX_mixed_product extension) \fP"
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBlength2\fP (T const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::value_type \fBlength2\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL T \fBdistance2\fP (T const &p0, T const &p1)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType::value_type \fBdistance2\fP (genType const &p0, genType const &p1)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBl1Norm\fP (tvec3< T, P > const &x, tvec3< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBl1Norm\fP (tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBl2Norm\fP (tvec3< T, P > const &x, tvec3< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBl2Norm\fP (tvec3< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBlxNorm\fP (tvec3< T, P > const &x, tvec3< T, P > const &y, unsigned int Depth)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBlxNorm\fP (tvec3< T, P > const &x, unsigned int Depth)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBlength2\fP (T const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBlength2\fP (tvec2< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBlength2\fP (tvec3< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBlength2\fP (tvec4< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER T \fBdistance2\fP (T const &p0, T const &p1)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBdistance2\fP (tvec2< T, P > const &p0, tvec2< T, P > const &p1)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBdistance2\fP (tvec3< T, P > const &p0, tvec3< T, P > const &p1)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBdistance2\fP (tvec4< T, P > const &p0, tvec4< T, P > const &p1)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBl1Norm\fP (tvec3< T, P > const &a, tvec3< T, P > const &b)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBl1Norm\fP (tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBl2Norm\fP (tvec3< T, P > const &a, tvec3< T, P > const &b)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBl2Norm\fP (tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBlxNorm\fP (tvec3< T, P > const &x, tvec3< T, P > const &y, unsigned int Depth)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBlxNorm\fP (tvec3< T, P > const &v, unsigned int Depth)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBtriangleNormal\fP (tvec3< T, P > const &p1, tvec3< T, P > const &p2, tvec3< T, P > const &p3)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBtriangleNormal\fP (tvec3< T, P > const &p1, tvec3< T, P > const &p2, tvec3< T, P > const &p3)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL T \fBnormalizeDot\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL T \fBfastNormalizeDot\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER T \fBnormalizeDot\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER T \fBfastNormalizeDot\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBpow2\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBpow3\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBpow4\fP (genType const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat3x3< T, P > \fBorthonormalize\fP (tmat3x3< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBorthonormalize\fP (tvec3< T, P > const &x, tvec3< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBorthonormalize\fP (tmat3x3< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBorthonormalize\fP (tvec3< T, P > const &x, tvec3< T, P > const &y)"
.br
.ti -1c
.RI "template<typename vecType > GLM_FUNC_DECL vecType \fBperp\fP (vecType const &x, vecType const &Normal)"
.br
.ti -1c
.RI "template<typename vecType > GLM_FUNC_QUALIFIER vecType \fBperp\fP (vecType const &x, vecType const &Normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBpolar\fP (tvec3< T, P > const &\fBeuclidean\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBeuclidean\fP (tvec2< T, P > const &\fBpolar\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBpolar\fP (tvec3< T, P > const &\fBeuclidean\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBeuclidean\fP (tvec2< T, P > const &\fBpolar\fP)"
.br
.ti -1c
.RI "template<typename vecType > GLM_FUNC_DECL vecType \fBproj\fP (vecType const &x, vecType const &Normal)"
.br
.ti -1c
.RI "template<typename vecType > GLM_FUNC_QUALIFIER vecType \fBproj\fP (vecType const &x, vecType const &Normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBcross\fP (\fBtquat\fP< T, P > const &q, tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBcross\fP (tvec3< T, P > const &v, \fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBsquad\fP (\fBtquat\fP< T, P > const &q1, \fBtquat\fP< T, P > const &q2, \fBtquat\fP< T, P > const &s1, \fBtquat\fP< T, P > const &s2, T const &h)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBintermediate\fP (\fBtquat\fP< T, P > const &prev, \fBtquat\fP< T, P > const &curr, \fBtquat\fP< T, P > const &next)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBexp\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBlog\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBpow\fP (\fBtquat\fP< T, P > const &x, T const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBrotate\fP (\fBtquat\fP< T, P > const &q, tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec4< T, P > \fBrotate\fP (\fBtquat\fP< T, P > const &q, tvec4< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBextractRealComponent\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat3x3< T, P > \fBtoMat3\fP (\fBtquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBtoMat4\fP (\fBtquat\fP< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBtoQuat\fP (tmat3x3< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBtoQuat\fP (tmat4x4< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBshortMix\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y, T const &a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBfastMix\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y, T const &a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBrotation\fP (tvec3< T, P > const &orig, tvec3< T, P > const &dest)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBlength2\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBcross\fP (tvec3< T, P > const &v, \fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBcross\fP (\fBtquat\fP< T, P > const &q, tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBsquad\fP (\fBtquat\fP< T, P > const &q1, \fBtquat\fP< T, P > const &q2, \fBtquat\fP< T, P > const &s1, \fBtquat\fP< T, P > const &s2, T const &h)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBintermediate\fP (\fBtquat\fP< T, P > const &prev, \fBtquat\fP< T, P > const &curr, \fBtquat\fP< T, P > const &next)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBexp\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBlog\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBpow\fP (\fBtquat\fP< T, P > const &x, T const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBrotate\fP (\fBtquat\fP< T, P > const &q, tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< T, P > \fBrotate\fP (\fBtquat\fP< T, P > const &q, tvec4< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBextractRealComponent\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBlength2\fP (\fBtquat\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBshortMix\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y, T const &a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBfastMix\fP (\fBtquat\fP< T, P > const &x, \fBtquat\fP< T, P > const &y, T const &a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBrotation\fP (tvec3< T, P > const &orig, tvec3< T, P > const &dest)"
.br
.ti -1c
.RI "template<typename genType > const genType::value_type * \fBbegin\fP (genType const &v)"
.br
.ti -1c
.RI "template<typename genType > const genType::value_type * \fBend\fP (genType const &v)"
.br
.ti -1c
.RI "template<typename genType > genType::value_type * \fBbegin\fP (genType &v)"
.br
.ti -1c
.RI "template<typename genType > genType::value_type * \fBend\fP (genType &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBrotateNormalizedAxis\fP (tmat4x4< T, P > const &m, T const &\fBangle\fP, tvec3< T, P > const &\fBaxis\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL \fBtquat\fP< T, P > \fBrotateNormalizedAxis\fP (\fBtquat\fP< T, P > const &q, T const &\fBangle\fP, tvec3< T, P > const &\fBaxis\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBrotateNormalizedAxis\fP (tmat4x4< T, P > const &m, T const &\fBangle\fP, tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP< T, P > \fBrotateNormalizedAxis\fP (\fBtquat\fP< T, P > const &q, T const &\fBangle\fP, tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBslerp\fP (tvec3< T, P > const &x, tvec3< T, P > const &y, T const &a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec2< T, P > \fBrotate\fP (tvec2< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBrotate\fP (tvec3< T, P > const &v, T const &\fBangle\fP, tvec3< T, P > const &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec4< T, P > \fBrotate\fP (tvec4< T, P > const &v, T const &\fBangle\fP, tvec3< T, P > const &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBrotateX\fP (tvec3< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBrotateY\fP (tvec3< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec3< T, P > \fBrotateZ\fP (tvec3< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec4< T, P > \fBrotateX\fP (tvec4< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec4< T, P > \fBrotateY\fP (tvec4< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tvec4< T, P > \fBrotateZ\fP (tvec4< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBorientation\fP (tvec3< T, P > const &Normal, tvec3< T, P > const &Up)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBslerp\fP (tvec3< T, P > const &x, tvec3< T, P > const &y, T const &a)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2< T, P > \fBrotate\fP (tvec2< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBrotate\fP (tvec3< T, P > const &v, T const &\fBangle\fP, tvec3< T, P > const &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< T, P > \fBrotate\fP (tvec4< T, P > const &v, T const &\fBangle\fP, tvec3< T, P > const &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBrotateX\fP (tvec3< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBrotateY\fP (tvec3< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBrotateZ\fP (tvec3< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< T, P > \fBrotateX\fP (tvec4< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< T, P > \fBrotateY\fP (tvec4< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< T, P > \fBrotateZ\fP (tvec4< T, P > const &v, T const &\fBangle\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBorientation\fP (tvec3< T, P > const &Normal, tvec3< T, P > const &Up)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER bool \fBlessThan\fP (T const &x, T const &y)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER bool \fBlessThanEqual\fP (T const &x, T const &y)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER bool \fBgreaterThan\fP (T const &x, T const &y)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER bool \fBgreaterThanEqual\fP (T const &x, T const &y)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER bool \fBequal\fP (T const &x, T const &y)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER bool \fBnotEqual\fP (T const &x, T const &y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER bool \fBany\fP (bool const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER bool \fBall\fP (bool const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER bool \fBnot_\fP (bool const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER mat4 \fBmat4_cast\fP (detail::fmat4x4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fmat4x4SIMD \fBmatrixCompMult\fP (detail::fmat4x4SIMD const &x, detail::fmat4x4SIMD const &y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fmat4x4SIMD \fBouterProduct\fP (detail::fvec4SIMD const &c, detail::fvec4SIMD const &r)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fmat4x4SIMD \fBtranspose\fP (detail::fmat4x4SIMD const &m)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER float \fBdeterminant\fP (detail::fmat4x4SIMD const &m)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER \fBquat\fP \fBquat_cast\fP (detail::fquatSIMD const &x)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_QUALIFIER detail::fquatSIMD \fBquatSIMD_cast_impl\fP (const T m0[], const T m1[], const T m2[])"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fquatSIMD \fBquatSIMD_cast\fP (detail::fmat4x4SIMD const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER detail::fquatSIMD \fBquatSIMD_cast\fP (tmat4x4< T, P > const &m)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER detail::fquatSIMD \fBquatSIMD_cast\fP (tmat3x3< T, P > const &m)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fmat4x4SIMD \fBmat4SIMD_cast\fP (detail::fquatSIMD const &q)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER mat4 \fBmat4_cast\fP (detail::fquatSIMD const &q)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER float \fBlength\fP (detail::fquatSIMD const &q)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fquatSIMD \fBnormalize\fP (detail::fquatSIMD const &q)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER float \fBdot\fP (detail::fquatSIMD const &q1, detail::fquatSIMD const &q2)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fquatSIMD \fBmix\fP (detail::fquatSIMD const &x, detail::fquatSIMD const &y, float const &a)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fquatSIMD \fBlerp\fP (detail::fquatSIMD const &x, detail::fquatSIMD const &y, float const &a)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fquatSIMD \fBslerp\fP (detail::fquatSIMD const &x, detail::fquatSIMD const &y, float const &a)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fquatSIMD \fBfastMix\fP (detail::fquatSIMD const &x, detail::fquatSIMD const &y, float const &a)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fquatSIMD \fBfastSlerp\fP (detail::fquatSIMD const &x, detail::fquatSIMD const &y, float const &a)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fquatSIMD \fBconjugate\fP (detail::fquatSIMD const &q)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fquatSIMD \fBinverse\fP (detail::fquatSIMD const &q)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fquatSIMD \fBangleAxisSIMD\fP (float const &\fBangle\fP, vec3 const &v)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fquatSIMD \fBangleAxisSIMD\fP (float const &\fBangle\fP, float const &x, float const &y, float const &z)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER __m128 \fBfastSin\fP (__m128 x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER vec4 \fBvec4_cast\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBabs\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBsign\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBfloor\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBtrunc\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBround\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBceil\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBfract\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBmod\fP (detail::fvec4SIMD const &x, detail::fvec4SIMD const &y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBmod\fP (detail::fvec4SIMD const &x, float const &y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBmin\fP (detail::fvec4SIMD const &x, detail::fvec4SIMD const &y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBmin\fP (detail::fvec4SIMD const &x, float const &y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBmax\fP (detail::fvec4SIMD const &x, detail::fvec4SIMD const &y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBmax\fP (detail::fvec4SIMD const &x, float const &y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBclamp\fP (detail::fvec4SIMD const &x, detail::fvec4SIMD const &minVal, detail::fvec4SIMD const &maxVal)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBclamp\fP (detail::fvec4SIMD const &x, float const &minVal, float const &maxVal)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBmix\fP (detail::fvec4SIMD const &x, detail::fvec4SIMD const &y, detail::fvec4SIMD const &a)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBstep\fP (detail::fvec4SIMD const &edge, detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBstep\fP (float const &edge, detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBsmoothstep\fP (detail::fvec4SIMD const &edge0, detail::fvec4SIMD const &edge1, detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBsmoothstep\fP (float const &edge0, float const &edge1, detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBfma\fP (detail::fvec4SIMD const &a, detail::fvec4SIMD const &b, detail::fvec4SIMD const &c)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER float \fBlength\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER float \fBfastLength\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER float \fBniceLength\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBlength4\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBfastLength4\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBniceLength4\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER float \fBdistance\fP (detail::fvec4SIMD const &p0, detail::fvec4SIMD const &p1)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBdistance4\fP (detail::fvec4SIMD const &p0, detail::fvec4SIMD const &p1)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER float \fBdot\fP (detail::fvec4SIMD const &x, detail::fvec4SIMD const &y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBdot4\fP (detail::fvec4SIMD const &x, detail::fvec4SIMD const &y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBcross\fP (detail::fvec4SIMD const &x, detail::fvec4SIMD const &y)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBnormalize\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBfastNormalize\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBfaceforward\fP (detail::fvec4SIMD const &N, detail::fvec4SIMD const &I, detail::fvec4SIMD const &Nref)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBreflect\fP (detail::fvec4SIMD const &I, detail::fvec4SIMD const &N)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBrefract\fP (detail::fvec4SIMD const &I, detail::fvec4SIMD const &N, float const &eta)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBsqrt\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBniceSqrt\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBfastSqrt\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBinversesqrt\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "GLM_FUNC_QUALIFIER detail::fvec4SIMD \fBfastInversesqrt\fP (detail::fvec4SIMD const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBcatmullRom\fP (genType const &v1, genType const &v2, genType const &v3, genType const &v4, typename genType::value_type const &s)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBhermite\fP (genType const &v1, genType const &t1, genType const &v2, genType const &t2, typename genType::value_type const &s)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBcubic\fP (genType const &v1, genType const &v2, genType const &v3, genType const &v4, typename genType::value_type const &s)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBcatmullRom\fP (genType const &v1, genType const &v2, genType const &v3, genType const &v4, typename genType::value_type const &s)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBhermite\fP (genType const &v1, genType const &t1, genType const &v2, genType const &t2, typename genType::value_type const &s)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBcubic\fP (genType const &v1, genType const &v2, genType const &v3, genType const &v4, typename genType::value_type const &s)"
.br
.ti -1c
.RI "template<template< typename, precision > class matType, typename T , precision P> GLM_FUNC_DECL std::string \fBto_string\fP (matType< T, P > const &x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBtranslate\fP (tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBrotate\fP (T \fBangle\fP, tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBscale\fP (tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBtranslate\fP (tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBrotate\fP (T \fBangle\fP, tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBscale\fP (tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat3x3< T, P > \fBshearX2D\fP (tmat3x3< T, P > const &m, T y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat3x3< T, P > \fBshearY2D\fP (tmat3x3< T, P > const &m, T x)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBshearX3D\fP (const tmat4x4< T, P > &m, T y, T z)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBshearY3D\fP (const tmat4x4< T, P > &m, T x, T z)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBshearZ3D\fP (const tmat4x4< T, P > &m, T x, T y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat3x3< T, P > \fBproj2D\fP (const tmat3x3< T, P > &m, const tvec3< T, P > &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBproj3D\fP (const tmat4x4< T, P > &m, const tvec3< T, P > &normal)"
.br
.ti -1c
.RI "template<typename valType , precision P> GLM_FUNC_DECL tmat4x4< valType, P > \fBscaleBias\fP (valType \fBscale\fP, valType bias)"
.br
.ti -1c
.RI "template<typename valType , precision P> GLM_FUNC_DECL tmat4x4< valType, P > \fBscaleBias\fP (tmat4x4< valType, P > const &m, valType \fBscale\fP, valType bias)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBshearX2D\fP (const tmat3x3< T, P > &m, T s)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBshearY2D\fP (const tmat3x3< T, P > &m, T s)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBshearX3D\fP (const tmat4x4< T, P > &m, T s, T t)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBshearY3D\fP (const tmat4x4< T, P > &m, T s, T t)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBshearZ3D\fP (const tmat4x4< T, P > &m, T s, T t)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBreflect2D\fP (const tmat3x3< T, P > &m, const tvec3< T, P > &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBreflect3D\fP (const tmat4x4< T, P > &m, const tvec3< T, P > &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBproj2D\fP (const tmat3x3< T, P > &m, const tvec3< T, P > &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBproj3D\fP (const tmat4x4< T, P > &m, const tvec3< T, P > &normal)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBscaleBias\fP (T \fBscale\fP, T bias)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4< T, P > \fBscaleBias\fP (const tmat4x4< T, P > &m, T \fBscale\fP, T bias)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_int8\fP, aligned_lowp_int8, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_int16\fP, aligned_lowp_int16, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_int32\fP, aligned_lowp_int32, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_int64\fP, aligned_lowp_int64, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_int8_t\fP, aligned_lowp_int8_t, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_int16_t\fP, aligned_lowp_int16_t, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_int32_t\fP, aligned_lowp_int32_t, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_int64_t\fP, aligned_lowp_int64_t, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_i8\fP, aligned_lowp_i8, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_i16\fP, aligned_lowp_i16, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_i32\fP, aligned_lowp_i32, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_i64\fP, aligned_lowp_i64, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_int8\fP, aligned_mediump_int8, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_int16\fP, aligned_mediump_int16, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_int32\fP, aligned_mediump_int32, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_int64\fP, aligned_mediump_int64, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_int8_t\fP, aligned_mediump_int8_t, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_int16_t\fP, aligned_mediump_int16_t, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_int32_t\fP, aligned_mediump_int32_t, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_int64_t\fP, aligned_mediump_int64_t, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_i8\fP, aligned_mediump_i8, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_i16\fP, aligned_mediump_i16, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_i32\fP, aligned_mediump_i32, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_i64\fP, aligned_mediump_i64, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_int8\fP, aligned_highp_int8, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_int16\fP, aligned_highp_int16, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_int32\fP, aligned_highp_int32, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_int64\fP, aligned_highp_int64, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_int8_t\fP, aligned_highp_int8_t, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_int16_t\fP, aligned_highp_int16_t, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_int32_t\fP, aligned_highp_int32_t, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_int64_t\fP, aligned_highp_int64_t, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_i8\fP, aligned_highp_i8, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_i16\fP, aligned_highp_i16, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_i32\fP, aligned_highp_i32, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_i64\fP, aligned_highp_i64, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBint8\fP, aligned_int8, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBint16\fP, aligned_int16, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBint32\fP, aligned_int32, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBint64\fP, aligned_int64, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBint8_t\fP, aligned_int8_t, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBint16_t\fP, aligned_int16_t, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBint32_t\fP, aligned_int32_t, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBint64_t\fP, aligned_int64_t, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBi8\fP, aligned_i8, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBi16\fP, aligned_i16, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBi32\fP, aligned_i32, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBi64\fP, aligned_i64, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBivec1\fP, aligned_ivec1, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (ivec2, aligned_ivec2, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (ivec3, aligned_ivec3, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (ivec4, aligned_ivec4, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBi8vec1\fP, aligned_i8vec1, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBi8vec2\fP, aligned_i8vec2, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBi8vec3\fP, aligned_i8vec3, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBi8vec4\fP, aligned_i8vec4, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBi16vec1\fP, aligned_i16vec1, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBi16vec2\fP, aligned_i16vec2, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBi16vec3\fP, aligned_i16vec3, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBi16vec4\fP, aligned_i16vec4, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBi32vec1\fP, aligned_i32vec1, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBi32vec2\fP, aligned_i32vec2, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBi32vec3\fP, aligned_i32vec3, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBi32vec4\fP, aligned_i32vec4, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBi64vec1\fP, aligned_i64vec1, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBi64vec2\fP, aligned_i64vec2, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBi64vec3\fP, aligned_i64vec3, 32)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBi64vec4\fP, aligned_i64vec4, 32)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_uint8\fP, aligned_lowp_uint8, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_uint16\fP, aligned_lowp_uint16, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_uint32\fP, aligned_lowp_uint32, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_uint64\fP, aligned_lowp_uint64, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_uint8_t\fP, aligned_lowp_uint8_t, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_uint16_t\fP, aligned_lowp_uint16_t, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_uint32_t\fP, aligned_lowp_uint32_t, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_uint64_t\fP, aligned_lowp_uint64_t, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_u8\fP, aligned_lowp_u8, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_u16\fP, aligned_lowp_u16, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_u32\fP, aligned_lowp_u32, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBlowp_u64\fP, aligned_lowp_u64, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_uint8\fP, aligned_mediump_uint8, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_uint16\fP, aligned_mediump_uint16, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_uint32\fP, aligned_mediump_uint32, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_uint64\fP, aligned_mediump_uint64, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_uint8_t\fP, aligned_mediump_uint8_t, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_uint16_t\fP, aligned_mediump_uint16_t, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_uint32_t\fP, aligned_mediump_uint32_t, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_uint64_t\fP, aligned_mediump_uint64_t, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_u8\fP, aligned_mediump_u8, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_u16\fP, aligned_mediump_u16, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_u32\fP, aligned_mediump_u32, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBmediump_u64\fP, aligned_mediump_u64, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_uint8\fP, aligned_highp_uint8, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_uint16\fP, aligned_highp_uint16, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_uint32\fP, aligned_highp_uint32, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_uint64\fP, aligned_highp_uint64, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_uint8_t\fP, aligned_highp_uint8_t, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_uint16_t\fP, aligned_highp_uint16_t, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_uint32_t\fP, aligned_highp_uint32_t, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_uint64_t\fP, aligned_highp_uint64_t, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_u8\fP, aligned_highp_u8, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_u16\fP, aligned_highp_u16, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_u32\fP, aligned_highp_u32, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBhighp_u64\fP, aligned_highp_u64, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBuint8\fP, aligned_uint8, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBuint16\fP, aligned_uint16, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBuint32\fP, aligned_uint32, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBuint64\fP, aligned_uint64, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBuint8_t\fP, aligned_uint8_t, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBuint16_t\fP, aligned_uint16_t, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBuint32_t\fP, aligned_uint32_t, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBuint64_t\fP, aligned_uint64_t, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBu8\fP, aligned_u8, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBu16\fP, aligned_u16, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBu32\fP, aligned_u32, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBu64\fP, aligned_u64, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBuvec1\fP, aligned_uvec1, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (uvec2, aligned_uvec2, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (uvec3, aligned_uvec3, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (uvec4, aligned_uvec4, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBu8vec1\fP, aligned_u8vec1, 1)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBu8vec2\fP, aligned_u8vec2, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBu8vec3\fP, aligned_u8vec3, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBu8vec4\fP, aligned_u8vec4, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBu16vec1\fP, aligned_u16vec1, 2)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBu16vec2\fP, aligned_u16vec2, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBu16vec3\fP, aligned_u16vec3, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBu16vec4\fP, aligned_u16vec4, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBu32vec1\fP, aligned_u32vec1, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBu32vec2\fP, aligned_u32vec2, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBu32vec3\fP, aligned_u32vec3, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBu32vec4\fP, aligned_u32vec4, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBu64vec1\fP, aligned_u64vec1, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBu64vec2\fP, aligned_u64vec2, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBu64vec3\fP, aligned_u64vec3, 32)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBu64vec4\fP, aligned_u64vec4, 32)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBfloat32\fP, aligned_float32, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBfloat64\fP, aligned_float64, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBfloat32_t\fP, aligned_float32_t, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBfloat64_t\fP, aligned_float64_t, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBfloat32\fP, aligned_f32, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBfloat64\fP, aligned_f64, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBvec1\fP, aligned_vec1, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (vec2, aligned_vec2, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (vec3, aligned_vec3, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (vec4, aligned_vec4, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBfvec1\fP, aligned_fvec1, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBfvec2\fP, aligned_fvec2, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBfvec3\fP, aligned_fvec3, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBfvec4\fP, aligned_fvec4, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf32vec1\fP, aligned_f32vec1, 4)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf32vec2\fP, aligned_f32vec2, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf32vec3\fP, aligned_f32vec3, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf32vec4\fP, aligned_f32vec4, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBdvec1\fP, aligned_dvec1, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (dvec2, aligned_dvec2, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (dvec3, aligned_dvec3, 32)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (dvec4, aligned_dvec4, 32)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf64vec1\fP, aligned_f64vec1, 8)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf64vec2\fP, aligned_f64vec2, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf64vec3\fP, aligned_f64vec3, 32)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf64vec4\fP, aligned_f64vec4, 32)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (mat2, aligned_mat2, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (mat3, aligned_mat3, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (mat4, aligned_mat4, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (mat2x2, aligned_mat2x2, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (mat3x3, aligned_mat3x3, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (mat4x4, aligned_mat4x4, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBfmat2x2\fP, aligned_fmat2, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBfmat3x3\fP, aligned_fmat3, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBfmat4x4\fP, aligned_fmat4, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBfmat2x2\fP, aligned_fmat2x2, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBfmat2x3\fP, aligned_fmat2x3, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBfmat2x4\fP, aligned_fmat2x4, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBfmat3x2\fP, aligned_fmat3x2, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBfmat3x3\fP, aligned_fmat3x3, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBfmat3x4\fP, aligned_fmat3x4, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBfmat4x2\fP, aligned_fmat4x2, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBfmat4x3\fP, aligned_fmat4x3, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBfmat4x4\fP, aligned_fmat4x4, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf32mat2x2\fP, aligned_f32mat2, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf32mat3x3\fP, aligned_f32mat3, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf32mat4x4\fP, aligned_f32mat4, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf32mat2x2\fP, aligned_f32mat2x2, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf32mat2x3\fP, aligned_f32mat2x3, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf32mat2x4\fP, aligned_f32mat2x4, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf32mat3x2\fP, aligned_f32mat3x2, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf32mat3x3\fP, aligned_f32mat3x3, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf32mat3x4\fP, aligned_f32mat3x4, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf32mat4x2\fP, aligned_f32mat4x2, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf32mat4x3\fP, aligned_f32mat4x3, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf32mat4x4\fP, aligned_f32mat4x4, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf64mat2x2\fP, aligned_f64mat2, 32)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf64mat3x3\fP, aligned_f64mat3, 32)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf64mat4x4\fP, aligned_f64mat4, 32)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf64mat2x2\fP, aligned_f64mat2x2, 32)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf64mat2x3\fP, aligned_f64mat2x3, 32)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf64mat2x4\fP, aligned_f64mat2x4, 32)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf64mat3x2\fP, aligned_f64mat3x2, 32)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf64mat3x3\fP, aligned_f64mat3x3, 32)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf64mat3x4\fP, aligned_f64mat3x4, 32)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf64mat4x2\fP, aligned_f64mat4x2, 32)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf64mat4x3\fP, aligned_f64mat4x3, 32)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf64mat4x4\fP, aligned_f64mat4x4, 32)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBquat\fP, aligned_quat, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBfquat\fP, aligned_fquat, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBdquat\fP, aligned_dquat, 32)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf32quat\fP, aligned_f32quat, 16)"
.br
.ti -1c
.RI "\fBGLM_ALIGNED_TYPEDEF\fP (\fBf64quat\fP, aligned_f64quat, 32)"
.br
.ti -1c
.RI "template<typename vecType > GLM_FUNC_DECL vecType::value_type \fBangle\fP (vecType const &x, vecType const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBorientedAngle\fP (tvec2< T, P > const &x, tvec2< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBorientedAngle\fP (tvec3< T, P > const &x, tvec3< T, P > const &y, tvec3< T, P > const &ref)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBangle\fP (genType const &x, genType const &y)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER T \fBangle\fP (vecType< T, P > const &x, vecType< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBorientedAngle\fP (tvec2< T, P > const &x, tvec2< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER T \fBorientedAngle\fP (tvec3< T, P > const &x, tvec3< T, P > const &y, tvec3< T, P > const &ref)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL bool \fBareCollinear\fP (vecType< T, P > const &v0, vecType< T, P > const &v1, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL bool \fBareOrthogonal\fP (vecType< T, P > const &v0, vecType< T, P > const &v1, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL bool \fBisNormalized\fP (vecType< T, P > const &v, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL bool \fBisNull\fP (vecType< T, P > const &v, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< bool, P > \fBisCompNull\fP (vecType< T, P > const &v, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL bool \fBareOrthonormal\fP (vecType< T, P > const &v0, vecType< T, P > const &v1, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER bool \fBareCollinear\fP (vecType< T, P > const &v0, vecType< T, P > const &v1, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER bool \fBareOrthogonal\fP (vecType< T, P > const &v0, vecType< T, P > const &v1, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER bool \fBisNormalized\fP (vecType< T, P > const &v, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER bool \fBisNull\fP (vecType< T, P > const &v, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType< bool, P > \fBisCompNull\fP (vecType< T, P > const &v, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2< bool, P > \fBisCompNull\fP (tvec2< T, P > const &v, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< bool, P > \fBisCompNull\fP (tvec3< T, P > const &v, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< bool, P > \fBisCompNull\fP (tvec4< T, P > const &v, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER bool \fBareOrthonormal\fP (vecType< T, P > const &v0, vecType< T, P > const &v1, T const &\fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBclamp\fP (genType const &Texcoord)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBrepeat\fP (genType const &Texcoord)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBmirrorClamp\fP (genType const &Texcoord)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBmirrorRepeat\fP (genType const &Texcoord)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBclamp\fP (genType const &Texcoord)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2< T, P > \fBclamp\fP (tvec2< T, P > const &Texcoord)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBclamp\fP (tvec3< T, P > const &Texcoord)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< T, P > \fBclamp\fP (tvec4< T, P > const &Texcoord)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBrepeat\fP (genType const &Texcoord)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2< T, P > \fBrepeat\fP (tvec2< T, P > const &Texcoord)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBrepeat\fP (tvec3< T, P > const &Texcoord)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< T, P > \fBrepeat\fP (tvec4< T, P > const &Texcoord)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBmirrorClamp\fP (genType const &Texcoord)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2< T, P > \fBmirrorClamp\fP (tvec2< T, P > const &Texcoord)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBmirrorClamp\fP (tvec3< T, P > const &Texcoord)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< T, P > \fBmirrorClamp\fP (tvec4< T, P > const &Texcoord)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_QUALIFIER genType \fBmirrorRepeat\fP (genType const &Texcoord)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2< T, P > \fBmirrorRepeat\fP (tvec2< T, P > const &Texcoord)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3< T, P > \fBmirrorRepeat\fP (tvec3< T, P > const &Texcoord)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4< T, P > \fBmirrorRepeat\fP (tvec4< T, P > const &Texcoord)"
.br
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "typedef \fBhighp_bvec1\fP \fBglm::bvec1\fP"
1 component vector of boolean\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_vec1\fP extension\&. 
.RE
.PP

.SS "typedef \fBhighp_dquat\fP \fBglm::dquat\fP"
\fBQuaternion\fP of default double-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "typedef \fBhighp_dvec1\fP \fBglm::dvec1\fP"
1 component vector of floating-point numbers\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_vec1\fP extension\&. 
.RE
.PP

.SS "typedef \fBhighp_fquat\fP \fBglm::fquat\fP"
\fBQuaternion\fP of default single-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP
.RE
.PP
Default single-precision floating-point quaternion\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef highp_bvec1_t \fBglm::highp_bvec1\fP"
1 component vector of high precision boolean\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_vec1\fP extension\&. 
.RE
.PP

.SS "typedef \fBtquat\fP<double, highp> \fBglm::highp_dquat\fP"
\fBQuaternion\fP of high double-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "typedef highp_dvec1_t \fBglm::highp_dvec1\fP"
1 component vector of high precision floating-point numbers\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_vec1\fP extension\&. 
.RE
.PP

.SS "typedef \fBfloat32\fP \fBglm::highp_f32\fP"
High 32 bit single-precision floating-point scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBhighp_f32mat2x2\fP \fBglm::highp_f32mat2\fP"
High single-precision floating-point 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP High single-precision floating-point 2x2 matrix\&. 
.PP
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x2<\fBf32\fP, highp> \fBglm::highp_f32mat2x2\fP"
High single-precision floating-point 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP High single-precision floating-point 2x2 matrix\&. 
.PP
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x3<\fBf32\fP, highp> \fBglm::highp_f32mat2x3\fP"
High single-precision floating-point 2x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x4<\fBf32\fP, highp> \fBglm::highp_f32mat2x4\fP"
High single-precision floating-point 2x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBhighp_f32mat3x3\fP \fBglm::highp_f32mat3\fP"
High single-precision floating-point 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x2<\fBf32\fP, highp> \fBglm::highp_f32mat3x2\fP"
High single-precision floating-point 3x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x3<\fBf32\fP, highp> \fBglm::highp_f32mat3x3\fP"
High single-precision floating-point 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x4<\fBf32\fP, highp> \fBglm::highp_f32mat3x4\fP"
High single-precision floating-point 3x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBhighp_f32mat4x4\fP \fBglm::highp_f32mat4\fP"
High single-precision floating-point 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x2<\fBf32\fP, highp> \fBglm::highp_f32mat4x2\fP"
High single-precision floating-point 4x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x3<\fBf32\fP, highp> \fBglm::highp_f32mat4x3\fP"
High single-precision floating-point 4x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x4<\fBf32\fP, highp> \fBglm::highp_f32mat4x4\fP"
High single-precision floating-point 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBtquat\fP<\fBf32\fP, highp> \fBglm::highp_f32quat\fP"
High single-precision floating-point quaternion\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1<\fBf32\fP, highp> \fBglm::highp_f32vec1\fP"
High single-precision floating-point vector of 1 component\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBf32\fP, highp> \fBglm::highp_f32vec2\fP"
High single-precision floating-point vector of 2 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<\fBf32\fP, highp> \fBglm::highp_f32vec3\fP"
High single-precision floating-point vector of 3 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<\fBf32\fP, highp> \fBglm::highp_f32vec4\fP"
High single-precision floating-point vector of 4 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBfloat64\fP \fBglm::highp_f64\fP"
High 64 bit double-precision floating-point scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBhighp_f64mat2x2\fP \fBglm::highp_f64mat2\fP"
High double-precision floating-point 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP High double-precision floating-point 2x2 matrix\&. 
.PP
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x2<\fBf64\fP, highp> \fBglm::highp_f64mat2x2\fP"
High double-precision floating-point 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP High double-precision floating-point 2x2 matrix\&. 
.PP
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x3<\fBf64\fP, highp> \fBglm::highp_f64mat2x3\fP"
High double-precision floating-point 2x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x4<\fBf64\fP, highp> \fBglm::highp_f64mat2x4\fP"
High double-precision floating-point 2x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBhighp_f64mat3x3\fP \fBglm::highp_f64mat3\fP"
High double-precision floating-point 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x2<\fBf64\fP, highp> \fBglm::highp_f64mat3x2\fP"
High double-precision floating-point 3x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x3<\fBf64\fP, highp> \fBglm::highp_f64mat3x3\fP"
High double-precision floating-point 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x4<\fBf64\fP, highp> \fBglm::highp_f64mat3x4\fP"
High double-precision floating-point 3x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBhighp_f64mat4x4\fP \fBglm::highp_f64mat4\fP"
High double-precision floating-point 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x2<\fBf64\fP, highp> \fBglm::highp_f64mat4x2\fP"
High double-precision floating-point 4x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x3<\fBf64\fP, highp> \fBglm::highp_f64mat4x3\fP"
High double-precision floating-point 4x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x4<\fBf64\fP, highp> \fBglm::highp_f64mat4x4\fP"
High double-precision floating-point 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBtquat\fP<\fBf64\fP, highp> \fBglm::highp_f64quat\fP"
High double-precision floating-point quaternion\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1<\fBf64\fP, highp> \fBglm::highp_f64vec1\fP"
High double-precision floating-point vector of 1 component\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBf64\fP, highp> \fBglm::highp_f64vec2\fP"
High double-precision floating-point vector of 2 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<\fBf64\fP, highp> \fBglm::highp_f64vec3\fP"
High double-precision floating-point vector of 3 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<\fBf64\fP, highp> \fBglm::highp_f64vec4\fP"
High double-precision floating-point vector of 4 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef detail::float32 \fBglm::highp_float32\fP"
High 32 bit single-precision floating-point scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef detail::float32 \fBglm::highp_float32_t\fP"
High 32 bit single-precision floating-point scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef detail::float64 \fBglm::highp_float64\fP"
High 64 bit double-precision floating-point scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef detail::float64 \fBglm::highp_float64_t\fP"
High 64 bit double-precision floating-point scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBhighp_fmat2x2\fP \fBglm::highp_fmat2\fP"
High single-precision floating-point 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP High single-precision floating-point 2x2 matrix\&. 
.PP
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x2<\fBf32\fP, highp> \fBglm::highp_fmat2x2\fP"
High single-precision floating-point 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP High single-precision floating-point 2x2 matrix\&. 
.PP
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x3<\fBf32\fP, highp> \fBglm::highp_fmat2x3\fP"
High single-precision floating-point 2x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x4<\fBf32\fP, highp> \fBglm::highp_fmat2x4\fP"
High single-precision floating-point 2x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBhighp_fmat3x3\fP \fBglm::highp_fmat3\fP"
High single-precision floating-point 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x2<\fBf32\fP, highp> \fBglm::highp_fmat3x2\fP"
High single-precision floating-point 3x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x3<\fBf32\fP, highp> \fBglm::highp_fmat3x3\fP"
High single-precision floating-point 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x4<\fBf32\fP, highp> \fBglm::highp_fmat3x4\fP"
High single-precision floating-point 3x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBhighp_fmat4x4\fP \fBglm::highp_fmat4\fP"
High single-precision floating-point 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x2<\fBf32\fP, highp> \fBglm::highp_fmat4x2\fP"
High single-precision floating-point 4x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x3<\fBf32\fP, highp> \fBglm::highp_fmat4x3\fP"
High single-precision floating-point 4x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x4<\fBf32\fP, highp> \fBglm::highp_fmat4x4\fP"
High single-precision floating-point 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBhighp_quat\fP \fBglm::highp_fquat\fP"
\fBQuaternion\fP of high single-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "typedef tvec1<float, highp> \fBglm::highp_fvec1\fP"
High single-precision floating-point vector of 1 component\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<float, highp> \fBglm::highp_fvec2\fP"
High Single-precision floating-point vector of 2 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBPrecision types\fP 
.RE
.PP

.SS "typedef tvec3<float, highp> \fBglm::highp_fvec3\fP"
High Single-precision floating-point vector of 3 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBPrecision types\fP 
.RE
.PP

.SS "typedef tvec4<float, highp> \fBglm::highp_fvec4\fP"
High Single-precision floating-point vector of 4 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBPrecision types\fP 
.RE
.PP

.SS "typedef tvec1<\fBi16\fP, highp> \fBglm::highp_i16vec1\fP"
High precision 16 bit signed integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBi16\fP, highp> \fBglm::highp_i16vec2\fP"
High precision 16 bit signed integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<\fBi16\fP, highp> \fBglm::highp_i16vec3\fP"
High precision 16 bit signed integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<\fBi16\fP, highp> \fBglm::highp_i16vec4\fP"
High precision 16 bit signed integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1< \fBi32\fP, highp > \fBglm::highp_i32vec1\fP"
High precision 32 bit signed integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2< \fBi32\fP, highp > \fBglm::highp_i32vec2\fP"
High precision 32 bit signed integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3< \fBi32\fP, highp > \fBglm::highp_i32vec3\fP"
High precision 32 bit signed integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4< \fBi32\fP, highp > \fBglm::highp_i32vec4\fP"
High precision 32 bit signed integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1<\fBi64\fP, highp> \fBglm::highp_i64vec1\fP"
High precision 64 bit signed integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBi64\fP, highp> \fBglm::highp_i64vec2\fP"
High precision 64 bit signed integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<\fBi64\fP, highp> \fBglm::highp_i64vec3\fP"
High precision 64 bit signed integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<\fBi64\fP, highp> \fBglm::highp_i64vec4\fP"
High precision 64 bit signed integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1<\fBi8\fP, highp> \fBglm::highp_i8vec1\fP"
High precision 8 bit signed integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBi8\fP, highp> \fBglm::highp_i8vec2\fP"
High precision 8 bit signed integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<\fBi8\fP, highp> \fBglm::highp_i8vec3\fP"
High precision 8 bit signed integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<\fBi8\fP, highp> \fBglm::highp_i8vec4\fP"
High precision 8 bit signed integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef highp_ivec1_t \fBglm::highp_ivec1\fP"
1 component vector of high precision signed integer numbers\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_vec1\fP extension\&. 
.RE
.PP

.SS "typedef tmat2x2<float, highp> \fBglm::highp_mat2\fP"
2 columns of 2 components matrix of high precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat2x2<float, highp> \fBglm::highp_mat2x2\fP"
2 columns of 2 components matrix of high precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat2x3<float, highp> \fBglm::highp_mat2x3\fP"
2 columns of 3 components matrix of high precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat2x4<float, highp> \fBglm::highp_mat2x4\fP"
2 columns of 4 components matrix of high precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat3x3<float, highp> \fBglm::highp_mat3\fP"
3 columns of 3 components matrix of high precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat3x2<float, highp> \fBglm::highp_mat3x2\fP"
3 columns of 2 components matrix of high precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat3x3<float, highp> \fBglm::highp_mat3x3\fP"
3 columns of 3 components matrix of high precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat3x4<float, highp> \fBglm::highp_mat3x4\fP"
3 columns of 4 components matrix of high precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat4x4<float, highp> \fBglm::highp_mat4\fP"
4 columns of 4 components matrix of high precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat4x2<float, highp> \fBglm::highp_mat4x2\fP"
4 columns of 2 components matrix of high precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat4x3<float, highp> \fBglm::highp_mat4x3\fP"
4 columns of 3 components matrix of high precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat4x4<float, highp> \fBglm::highp_mat4x4\fP"
4 columns of 4 components matrix of high precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef \fBtquat\fP<float, highp> \fBglm::highp_quat\fP"
\fBQuaternion\fP of high single-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "typedef tvec1<\fBu16\fP, highp> \fBglm::highp_u16vec1\fP"
High precision 16 bit unsigned integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBu16\fP, highp> \fBglm::highp_u16vec2\fP"
High precision 16 bit unsigned integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<\fBu16\fP, highp> \fBglm::highp_u16vec3\fP"
High precision 16 bit unsigned integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<\fBu16\fP, highp> \fBglm::highp_u16vec4\fP"
High precision 16 bit unsigned integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1< \fBu32\fP, highp > \fBglm::highp_u32vec1\fP"
High precision 32 bit unsigned integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2< \fBu32\fP, highp > \fBglm::highp_u32vec2\fP"
High precision 32 bit unsigned integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3< \fBu32\fP, highp > \fBglm::highp_u32vec3\fP"
High precision 32 bit unsigned integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4< \fBu32\fP, highp > \fBglm::highp_u32vec4\fP"
High precision 32 bit unsigned integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1<\fBu64\fP, highp> \fBglm::highp_u64vec1\fP"
High precision 64 bit unsigned integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBu64\fP, highp> \fBglm::highp_u64vec2\fP"
High precision 64 bit unsigned integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<\fBu64\fP, highp> \fBglm::highp_u64vec3\fP"
High precision 64 bit unsigned integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<\fBu64\fP, highp> \fBglm::highp_u64vec4\fP"
High precision 64 bit unsigned integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1<\fBu8\fP, highp> \fBglm::highp_u8vec1\fP"
High precision 8 bit unsigned integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBu8\fP, highp> \fBglm::highp_u8vec2\fP"
High precision 8 bit unsigned integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<\fBu8\fP, highp> \fBglm::highp_u8vec3\fP"
High precision 8 bit unsigned integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<\fBu8\fP, highp> \fBglm::highp_u8vec4\fP"
High precision 8 bit unsigned integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef highp_uvec1_t \fBglm::highp_uvec1\fP"
1 component vector of high precision unsigned integer numbers\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_vec1\fP extension\&. 
.RE
.PP

.SS "typedef highp_vec1_t \fBglm::highp_vec1\fP"
High single-precision floating-point vector of 1 component\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP
.RE
.PP
1 component vector of high precision floating-point numbers\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_vec1\fP extension\&. 
.RE
.PP

.SS "typedef tvec2<float, highp> \fBglm::highp_vec2\fP"
High Single-precision floating-point vector of 2 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBPrecision types\fP 
.RE
.PP

.SS "typedef tvec3<float, highp> \fBglm::highp_vec3\fP"
High Single-precision floating-point vector of 3 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBPrecision types\fP 
.RE
.PP

.SS "typedef tvec4<float, highp> \fBglm::highp_vec4\fP"
High Single-precision floating-point vector of 4 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBPrecision types\fP 
.RE
.PP

.SS "typedef \fBhighp_ivec1\fP \fBglm::ivec1\fP"
1 component vector of signed integer numbers\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_vec1\fP extension\&. 
.RE
.PP

.SS "typedef lowp_bvec1_t \fBglm::lowp_bvec1\fP"
1 component vector of low precision boolean\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_vec1\fP extension\&. 
.RE
.PP

.SS "typedef \fBtquat\fP<double, lowp> \fBglm::lowp_dquat\fP"
\fBQuaternion\fP of low double-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "typedef lowp_dvec1_t \fBglm::lowp_dvec1\fP"
1 component vector of low precision floating-point numbers\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_vec1\fP extension\&. 
.RE
.PP

.SS "typedef \fBfloat32\fP \fBglm::lowp_f32\fP"
Low 32 bit single-precision floating-point scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBlowp_f32mat2x2\fP \fBglm::lowp_f32mat2\fP"
Low single-precision floating-point 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP Low single-precision floating-point 2x2 matrix\&. 
.PP
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x2<\fBf32\fP, lowp> \fBglm::lowp_f32mat2x2\fP"
Low single-precision floating-point 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP Low single-precision floating-point 2x2 matrix\&. 
.PP
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x3<\fBf32\fP, lowp> \fBglm::lowp_f32mat2x3\fP"
Low single-precision floating-point 2x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x4<\fBf32\fP, lowp> \fBglm::lowp_f32mat2x4\fP"
Low single-precision floating-point 2x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBlowp_f32mat3x3\fP \fBglm::lowp_f32mat3\fP"
Low single-precision floating-point 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x2<\fBf32\fP, lowp> \fBglm::lowp_f32mat3x2\fP"
Low single-precision floating-point 3x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x3<\fBf32\fP, lowp> \fBglm::lowp_f32mat3x3\fP"
Low single-precision floating-point 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x4<\fBf32\fP, lowp> \fBglm::lowp_f32mat3x4\fP"
Low single-precision floating-point 3x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBlowp_f32mat4x4\fP \fBglm::lowp_f32mat4\fP"
Low single-precision floating-point 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x2<\fBf32\fP, lowp> \fBglm::lowp_f32mat4x2\fP"
Low single-precision floating-point 4x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x3<\fBf32\fP, lowp> \fBglm::lowp_f32mat4x3\fP"
Low single-precision floating-point 4x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x4<\fBf32\fP, lowp> \fBglm::lowp_f32mat4x4\fP"
Low single-precision floating-point 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBtquat\fP<\fBf32\fP, lowp> \fBglm::lowp_f32quat\fP"
Low single-precision floating-point quaternion\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1<\fBf32\fP, lowp> \fBglm::lowp_f32vec1\fP"
Low single-precision floating-point vector of 1 component\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBf32\fP, lowp> \fBglm::lowp_f32vec2\fP"
Low single-precision floating-point vector of 2 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBPrecision types\fP 
.RE
.PP

.SS "typedef tvec3<\fBf32\fP, lowp> \fBglm::lowp_f32vec3\fP"
Low single-precision floating-point vector of 3 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBPrecision types\fP 
.RE
.PP

.SS "typedef tvec4<\fBf32\fP, lowp> \fBglm::lowp_f32vec4\fP"
Low single-precision floating-point vector of 4 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBPrecision types\fP 
.RE
.PP

.SS "typedef \fBfloat64\fP \fBglm::lowp_f64\fP"
Low 64 bit double-precision floating-point scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBlowp_f64mat2x2\fP \fBglm::lowp_f64mat2\fP"
Low double-precision floating-point 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP Low double-precision floating-point 2x2 matrix\&. 
.PP
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x2<\fBf64\fP, lowp> \fBglm::lowp_f64mat2x2\fP"
Low double-precision floating-point 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP Low double-precision floating-point 2x2 matrix\&. 
.PP
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x3<\fBf64\fP, lowp> \fBglm::lowp_f64mat2x3\fP"
Low double-precision floating-point 2x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x4<\fBf64\fP, lowp> \fBglm::lowp_f64mat2x4\fP"
Low double-precision floating-point 2x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBlowp_f64mat3x3\fP \fBglm::lowp_f64mat3\fP"
Low double-precision floating-point 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x2<\fBf64\fP, lowp> \fBglm::lowp_f64mat3x2\fP"
Low double-precision floating-point 3x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x3<\fBf64\fP, lowp> \fBglm::lowp_f64mat3x3\fP"
Low double-precision floating-point 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x4<\fBf64\fP, lowp> \fBglm::lowp_f64mat3x4\fP"
Low double-precision floating-point 3x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBlowp_f64mat4x4\fP \fBglm::lowp_f64mat4\fP"
Low double-precision floating-point 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x2<\fBf64\fP, lowp> \fBglm::lowp_f64mat4x2\fP"
Low double-precision floating-point 4x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x3<\fBf64\fP, lowp> \fBglm::lowp_f64mat4x3\fP"
Low double-precision floating-point 4x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x4<\fBf64\fP, lowp> \fBglm::lowp_f64mat4x4\fP"
Low double-precision floating-point 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBtquat\fP<\fBf64\fP, lowp> \fBglm::lowp_f64quat\fP"
Low double-precision floating-point quaternion\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1<\fBf64\fP, lowp> \fBglm::lowp_f64vec1\fP"
Low double-precision floating-point vector of 1 component\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBf64\fP, lowp> \fBglm::lowp_f64vec2\fP"
Low double-precision floating-point vector of 2 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<\fBf64\fP, lowp> \fBglm::lowp_f64vec3\fP"
Low double-precision floating-point vector of 3 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<\fBf64\fP, lowp> \fBglm::lowp_f64vec4\fP"
Low double-precision floating-point vector of 4 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef detail::float32 \fBglm::lowp_float32\fP"
Low 32 bit single-precision floating-point scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef detail::float32 \fBglm::lowp_float32_t\fP"
Low 32 bit single-precision floating-point scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef detail::float64 \fBglm::lowp_float64\fP"
Low 64 bit double-precision floating-point scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef detail::float64 \fBglm::lowp_float64_t\fP"
Low 64 bit double-precision floating-point scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBlowp_fmat2x2\fP \fBglm::lowp_fmat2\fP"
Low single-precision floating-point 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP Low single-precision floating-point 2x2 matrix\&. 
.PP
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x2<\fBf32\fP, lowp> \fBglm::lowp_fmat2x2\fP"
Low single-precision floating-point 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP Low single-precision floating-point 2x2 matrix\&. 
.PP
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x3<\fBf32\fP, lowp> \fBglm::lowp_fmat2x3\fP"
Low single-precision floating-point 2x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x4<\fBf32\fP, lowp> \fBglm::lowp_fmat2x4\fP"
Low single-precision floating-point 2x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBlowp_fmat3x3\fP \fBglm::lowp_fmat3\fP"
Low single-precision floating-point 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x2<\fBf32\fP, lowp> \fBglm::lowp_fmat3x2\fP"
Low single-precision floating-point 3x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x3<\fBf32\fP, lowp> \fBglm::lowp_fmat3x3\fP"
Low single-precision floating-point 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x4<\fBf32\fP, lowp> \fBglm::lowp_fmat3x4\fP"
Low single-precision floating-point 3x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBlowp_fmat4x4\fP \fBglm::lowp_fmat4\fP"
Low single-precision floating-point 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x2<\fBf32\fP, lowp> \fBglm::lowp_fmat4x2\fP"
Low single-precision floating-point 4x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x3<\fBf32\fP, lowp> \fBglm::lowp_fmat4x3\fP"
Low single-precision floating-point 4x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x4<\fBf32\fP, lowp> \fBglm::lowp_fmat4x4\fP"
Low single-precision floating-point 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBlowp_quat\fP \fBglm::lowp_fquat\fP"
\fBQuaternion\fP of low single-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "typedef tvec1<float, lowp> \fBglm::lowp_fvec1\fP"
Low single-precision floating-point vector of 1 component\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<float, lowp> \fBglm::lowp_fvec2\fP"
Low single-precision floating-point vector of 2 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<float, lowp> \fBglm::lowp_fvec3\fP"
Low single-precision floating-point vector of 3 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<float, lowp> \fBglm::lowp_fvec4\fP"
Low single-precision floating-point vector of 4 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1<\fBi16\fP, lowp> \fBglm::lowp_i16vec1\fP"
Low precision 16 bit signed integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBi16\fP, lowp> \fBglm::lowp_i16vec2\fP"
Low precision 16 bit signed integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<\fBi16\fP, lowp> \fBglm::lowp_i16vec3\fP"
Low precision 16 bit signed integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<\fBi16\fP, lowp> \fBglm::lowp_i16vec4\fP"
Low precision 16 bit signed integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1< \fBi32\fP, lowp > \fBglm::lowp_i32vec1\fP"
Low precision 32 bit signed integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2< \fBi32\fP, lowp > \fBglm::lowp_i32vec2\fP"
Low precision 32 bit signed integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3< \fBi32\fP, lowp > \fBglm::lowp_i32vec3\fP"
Low precision 32 bit signed integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4< \fBi32\fP, lowp > \fBglm::lowp_i32vec4\fP"
Low precision 32 bit signed integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1<\fBi64\fP, lowp> \fBglm::lowp_i64vec1\fP"
Low precision 64 bit signed integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBi64\fP, lowp> \fBglm::lowp_i64vec2\fP"
Low precision 64 bit signed integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<\fBi64\fP, lowp> \fBglm::lowp_i64vec3\fP"
Low precision 64 bit signed integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<\fBi64\fP, lowp> \fBglm::lowp_i64vec4\fP"
Low precision 64 bit signed integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1<\fBi8\fP, lowp> \fBglm::lowp_i8vec1\fP"
Low precision 8 bit signed integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBi8\fP, lowp> \fBglm::lowp_i8vec2\fP"
Low precision 8 bit signed integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<\fBi8\fP, lowp> \fBglm::lowp_i8vec3\fP"
Low precision 8 bit signed integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<\fBi8\fP, lowp> \fBglm::lowp_i8vec4\fP"
Low precision 8 bit signed integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef lowp_ivec1_t \fBglm::lowp_ivec1\fP"
1 component vector of low precision signed integer numbers\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_vec1\fP extension\&. 
.RE
.PP

.SS "typedef tmat2x2<float, lowp> \fBglm::lowp_mat2\fP"
2 columns of 2 components matrix of low precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat2x2<float, lowp> \fBglm::lowp_mat2x2\fP"
2 columns of 2 components matrix of low precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat2x3<float, lowp> \fBglm::lowp_mat2x3\fP"
2 columns of 3 components matrix of low precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat2x4<float, lowp> \fBglm::lowp_mat2x4\fP"
2 columns of 4 components matrix of low precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat3x3<float, lowp> \fBglm::lowp_mat3\fP"
3 columns of 3 components matrix of low precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat3x2<float, lowp> \fBglm::lowp_mat3x2\fP"
3 columns of 2 components matrix of low precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat3x3<float, lowp> \fBglm::lowp_mat3x3\fP"
3 columns of 3 components matrix of low precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat3x4<float, lowp> \fBglm::lowp_mat3x4\fP"
3 columns of 4 components matrix of low precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat4x4<float, lowp> \fBglm::lowp_mat4\fP"
4 columns of 4 components matrix of low precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat4x2<float, lowp> \fBglm::lowp_mat4x2\fP"
4 columns of 2 components matrix of low precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat4x3<float, lowp> \fBglm::lowp_mat4x3\fP"
4 columns of 3 components matrix of low precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat4x4<float, lowp> \fBglm::lowp_mat4x4\fP"
4 columns of 4 components matrix of low precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef \fBtquat\fP<float, lowp> \fBglm::lowp_quat\fP"
\fBQuaternion\fP of low single-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "typedef tvec1<\fBu16\fP, lowp> \fBglm::lowp_u16vec1\fP"
Low precision 16 bit unsigned integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBu16\fP, lowp> \fBglm::lowp_u16vec2\fP"
Low precision 16 bit unsigned integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<\fBu16\fP, lowp> \fBglm::lowp_u16vec3\fP"
Low precision 16 bit unsigned integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<\fBu16\fP, lowp> \fBglm::lowp_u16vec4\fP"
Low precision 16 bit unsigned integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1< \fBu32\fP, lowp > \fBglm::lowp_u32vec1\fP"
Low precision 32 bit unsigned integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2< \fBu32\fP, lowp > \fBglm::lowp_u32vec2\fP"
Low precision 32 bit unsigned integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3< \fBu32\fP, lowp > \fBglm::lowp_u32vec3\fP"
Low precision 32 bit unsigned integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4< \fBu32\fP, lowp > \fBglm::lowp_u32vec4\fP"
Low precision 32 bit unsigned integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1<\fBu64\fP, lowp> \fBglm::lowp_u64vec1\fP"
Low precision 64 bit unsigned integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBu64\fP, lowp> \fBglm::lowp_u64vec2\fP"
Low precision 64 bit unsigned integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<\fBu64\fP, lowp> \fBglm::lowp_u64vec3\fP"
Low precision 64 bit unsigned integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<\fBu64\fP, lowp> \fBglm::lowp_u64vec4\fP"
Low precision 64 bit unsigned integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1<\fBu8\fP, lowp> \fBglm::lowp_u8vec1\fP"
Low precision 8 bit unsigned integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBu8\fP, lowp> \fBglm::lowp_u8vec2\fP"
Low precision 8 bit unsigned integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<\fBu8\fP, lowp> \fBglm::lowp_u8vec3\fP"
Low precision 8 bit unsigned integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<\fBu8\fP, lowp> \fBglm::lowp_u8vec4\fP"
Low precision 8 bit unsigned integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef lowp_uvec1_t \fBglm::lowp_uvec1\fP"
1 component vector of low precision unsigned integer numbers\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_vec1\fP extension\&. 
.RE
.PP

.SS "typedef lowp_vec1_t \fBglm::lowp_vec1\fP"
Low single-precision floating-point vector of 1 component\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP
.RE
.PP
1 component vector of low precision floating-point numbers\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_vec1\fP extension\&. 
.RE
.PP

.SS "typedef tvec2<float, lowp> \fBglm::lowp_vec2\fP"
Low single-precision floating-point vector of 2 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBPrecision types\fP 
.RE
.PP

.SS "typedef tvec3<float, lowp> \fBglm::lowp_vec3\fP"
Low single-precision floating-point vector of 3 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBPrecision types\fP 
.RE
.PP

.SS "typedef tvec4<float, lowp> \fBglm::lowp_vec4\fP"
Low single-precision floating-point vector of 4 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBPrecision types\fP 
.RE
.PP

.SS "typedef mediump_bvec1_t \fBglm::mediump_bvec1\fP"
1 component vector of medium precision boolean\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_vec1\fP extension\&. 
.RE
.PP

.SS "typedef \fBtquat\fP<double, mediump> \fBglm::mediump_dquat\fP"
\fBQuaternion\fP of medium double-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "typedef mediump_dvec1_t \fBglm::mediump_dvec1\fP"
1 component vector of medium precision floating-point numbers\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_vec1\fP extension\&. 
.RE
.PP

.SS "typedef \fBfloat32\fP \fBglm::mediump_f32\fP"
Medium 32 bit single-precision floating-point scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBmediump_f32mat2x2\fP \fBglm::mediump_f32mat2\fP"
Medium single-precision floating-point 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP Medium single-precision floating-point 2x2 matrix\&. 
.PP
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x2<\fBf32\fP, mediump> \fBglm::mediump_f32mat2x2\fP"
High single-precision floating-point 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP Low single-precision floating-point 2x2 matrix\&. 
.PP
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x3<\fBf32\fP, mediump> \fBglm::mediump_f32mat2x3\fP"
Medium single-precision floating-point 2x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x4<\fBf32\fP, mediump> \fBglm::mediump_f32mat2x4\fP"
Medium single-precision floating-point 2x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBmediump_f32mat3x3\fP \fBglm::mediump_f32mat3\fP"
Medium single-precision floating-point 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x2<\fBf32\fP, mediump> \fBglm::mediump_f32mat3x2\fP"
Medium single-precision floating-point 3x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x3<\fBf32\fP, mediump> \fBglm::mediump_f32mat3x3\fP"
Medium single-precision floating-point 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x4<\fBf32\fP, mediump> \fBglm::mediump_f32mat3x4\fP"
Medium single-precision floating-point 3x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBmediump_f32mat4x4\fP \fBglm::mediump_f32mat4\fP"
Medium single-precision floating-point 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x2<\fBf32\fP, mediump> \fBglm::mediump_f32mat4x2\fP"
Medium single-precision floating-point 4x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x3<\fBf32\fP, mediump> \fBglm::mediump_f32mat4x3\fP"
Medium single-precision floating-point 4x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x4<\fBf32\fP, mediump> \fBglm::mediump_f32mat4x4\fP"
Medium single-precision floating-point 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBtquat\fP<\fBf32\fP, mediump> \fBglm::mediump_f32quat\fP"
Medium single-precision floating-point quaternion\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1<\fBf32\fP, mediump> \fBglm::mediump_f32vec1\fP"
Medium single-precision floating-point vector of 1 component\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBf32\fP, mediump> \fBglm::mediump_f32vec2\fP"
Medium single-precision floating-point vector of 2 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBPrecision types\fP 
.RE
.PP

.SS "typedef tvec3<\fBf32\fP, mediump> \fBglm::mediump_f32vec3\fP"
Medium single-precision floating-point vector of 3 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBPrecision types\fP 
.RE
.PP

.SS "typedef tvec4<\fBf32\fP, mediump> \fBglm::mediump_f32vec4\fP"
Medium single-precision floating-point vector of 4 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBPrecision types\fP 
.RE
.PP

.SS "typedef \fBfloat64\fP \fBglm::mediump_f64\fP"
Medium 64 bit double-precision floating-point scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBmediump_f64mat2x2\fP \fBglm::mediump_f64mat2\fP"
Medium double-precision floating-point 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP Medium double-precision floating-point 2x2 matrix\&. 
.PP
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x2<\fBf64\fP, mediump> \fBglm::mediump_f64mat2x2\fP"
Medium double-precision floating-point 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP Medium double-precision floating-point 2x2 matrix\&. 
.PP
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x3<\fBf64\fP, mediump> \fBglm::mediump_f64mat2x3\fP"
Medium double-precision floating-point 2x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x4<\fBf64\fP, mediump> \fBglm::mediump_f64mat2x4\fP"
Medium double-precision floating-point 2x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBmediump_f64mat3x3\fP \fBglm::mediump_f64mat3\fP"
Medium double-precision floating-point 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x2<\fBf64\fP, mediump> \fBglm::mediump_f64mat3x2\fP"
Medium double-precision floating-point 3x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x3<\fBf64\fP, mediump> \fBglm::mediump_f64mat3x3\fP"
Medium double-precision floating-point 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x4<\fBf64\fP, mediump> \fBglm::mediump_f64mat3x4\fP"
Medium double-precision floating-point 3x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBmediump_f64mat4x4\fP \fBglm::mediump_f64mat4\fP"
Medium double-precision floating-point 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x2<\fBf64\fP, mediump> \fBglm::mediump_f64mat4x2\fP"
Medium double-precision floating-point 4x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x3<\fBf64\fP, mediump> \fBglm::mediump_f64mat4x3\fP"
Medium double-precision floating-point 4x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x4<\fBf64\fP, mediump> \fBglm::mediump_f64mat4x4\fP"
Medium double-precision floating-point 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBtquat\fP<\fBf64\fP, mediump> \fBglm::mediump_f64quat\fP"
Medium double-precision floating-point quaternion\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1<\fBf64\fP, mediump> \fBglm::mediump_f64vec1\fP"
Medium double-precision floating-point vector of 1 component\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBf64\fP, mediump> \fBglm::mediump_f64vec2\fP"
Medium double-precision floating-point vector of 2 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<\fBf64\fP, mediump> \fBglm::mediump_f64vec3\fP"
Medium double-precision floating-point vector of 3 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<\fBf64\fP, mediump> \fBglm::mediump_f64vec4\fP"
Medium double-precision floating-point vector of 4 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef detail::float32 \fBglm::mediump_float32\fP"
Medium 32 bit single-precision floating-point scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef detail::float32 \fBglm::mediump_float32_t\fP"
Medium 32 bit single-precision floating-point scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef detail::float64 \fBglm::mediump_float64\fP"
Medium 64 bit double-precision floating-point scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef detail::float64 \fBglm::mediump_float64_t\fP"
Medium 64 bit double-precision floating-point scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBmediump_fmat2x2\fP \fBglm::mediump_fmat2\fP"
Medium single-precision floating-point 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP Medium single-precision floating-point 2x2 matrix\&. 
.PP
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x2<\fBf32\fP, mediump> \fBglm::mediump_fmat2x2\fP"
Medium single-precision floating-point 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP Medium single-precision floating-point 2x2 matrix\&. 
.PP
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x3<\fBf32\fP, mediump> \fBglm::mediump_fmat2x3\fP"
Medium single-precision floating-point 2x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat2x4<\fBf32\fP, mediump> \fBglm::mediump_fmat2x4\fP"
Medium single-precision floating-point 2x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBmediump_fmat3x3\fP \fBglm::mediump_fmat3\fP"
Medium single-precision floating-point 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x2<\fBf32\fP, mediump> \fBglm::mediump_fmat3x2\fP"
Medium single-precision floating-point 3x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x3<\fBf32\fP, mediump> \fBglm::mediump_fmat3x3\fP"
Medium single-precision floating-point 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat3x4<\fBf32\fP, mediump> \fBglm::mediump_fmat3x4\fP"
Medium single-precision floating-point 3x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBmediump_fmat4x4\fP \fBglm::mediump_fmat4\fP"
Medium single-precision floating-point 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x2<\fBf32\fP, mediump> \fBglm::mediump_fmat4x2\fP"
Medium single-precision floating-point 4x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x3<\fBf32\fP, mediump> \fBglm::mediump_fmat4x3\fP"
Medium single-precision floating-point 4x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tmat4x4<\fBf32\fP, mediump> \fBglm::mediump_fmat4x4\fP"
Medium single-precision floating-point 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef \fBmediump_quat\fP \fBglm::mediump_fquat\fP"
\fBQuaternion\fP of medium single-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "typedef tvec1<float, mediump> \fBglm::mediump_fvec1\fP"
Medium single-precision floating-point vector of 1 component\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<float, mediump> \fBglm::mediump_fvec2\fP"
Medium Single-precision floating-point vector of 2 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<float, mediump> \fBglm::mediump_fvec3\fP"
Medium Single-precision floating-point vector of 3 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<float, mediump> \fBglm::mediump_fvec4\fP"
Medium Single-precision floating-point vector of 4 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1<\fBi16\fP, mediump> \fBglm::mediump_i16vec1\fP"
Medium precision 16 bit signed integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBi16\fP, mediump> \fBglm::mediump_i16vec2\fP"
Medium precision 16 bit signed integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<\fBi16\fP, mediump> \fBglm::mediump_i16vec3\fP"
Medium precision 16 bit signed integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<\fBi16\fP, mediump> \fBglm::mediump_i16vec4\fP"
Medium precision 16 bit signed integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1< \fBi32\fP, mediump > \fBglm::mediump_i32vec1\fP"
Medium precision 32 bit signed integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2< \fBi32\fP, mediump > \fBglm::mediump_i32vec2\fP"
Medium precision 32 bit signed integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3< \fBi32\fP, mediump > \fBglm::mediump_i32vec3\fP"
Medium precision 32 bit signed integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4< \fBi32\fP, mediump > \fBglm::mediump_i32vec4\fP"
Medium precision 32 bit signed integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1<\fBi64\fP, mediump> \fBglm::mediump_i64vec1\fP"
Medium precision 64 bit signed integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBi64\fP, mediump> \fBglm::mediump_i64vec2\fP"
Medium precision 64 bit signed integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<\fBi64\fP, mediump> \fBglm::mediump_i64vec3\fP"
Medium precision 64 bit signed integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<\fBi64\fP, mediump> \fBglm::mediump_i64vec4\fP"
Medium precision 64 bit signed integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1<\fBi8\fP, mediump> \fBglm::mediump_i8vec1\fP"
Medium precision 8 bit signed integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBi8\fP, mediump> \fBglm::mediump_i8vec2\fP"
Medium precision 8 bit signed integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<\fBi8\fP, mediump> \fBglm::mediump_i8vec3\fP"
Medium precision 8 bit signed integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<\fBi8\fP, mediump> \fBglm::mediump_i8vec4\fP"
Medium precision 8 bit signed integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef mediump_ivec1_t \fBglm::mediump_ivec1\fP"
1 component vector of medium precision signed integer numbers\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_vec1\fP extension\&. 
.RE
.PP

.SS "typedef tmat2x2<float, mediump> \fBglm::mediump_mat2\fP"
2 columns of 2 components matrix of medium precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat2x2<float, mediump> \fBglm::mediump_mat2x2\fP"
2 columns of 2 components matrix of medium precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat2x3<float, mediump> \fBglm::mediump_mat2x3\fP"
2 columns of 3 components matrix of medium precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat2x4<float, mediump> \fBglm::mediump_mat2x4\fP"
2 columns of 4 components matrix of medium precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat3x3<float, mediump> \fBglm::mediump_mat3\fP"
3 columns of 3 components matrix of medium precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat3x2<float, mediump> \fBglm::mediump_mat3x2\fP"
3 columns of 2 components matrix of medium precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat3x3<float, mediump> \fBglm::mediump_mat3x3\fP"
3 columns of 3 components matrix of medium precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat3x4<float, mediump> \fBglm::mediump_mat3x4\fP"
3 columns of 4 components matrix of medium precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat4x4<float, mediump> \fBglm::mediump_mat4\fP"
4 columns of 4 components matrix of medium precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat4x2<float, mediump> \fBglm::mediump_mat4x2\fP"
4 columns of 2 components matrix of medium precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat4x3<float, mediump> \fBglm::mediump_mat4x3\fP"
4 columns of 3 components matrix of medium precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef tmat4x4<float, mediump> \fBglm::mediump_mat4x4\fP"
4 columns of 4 components matrix of medium precision floating-point numbers\&. There is no guarantee on the actual precision\&.
.PP
\fBSee also:\fP
.RS 4
\fCGLSL 4\&.20\&.8 specification, section 4\&.1\&.6 Matrices\fP 
.PP
\fCGLSL 4\&.20\&.8 specification, section 4\&.7\&.2 Precision Qualifier\fP 
.RE
.PP

.SS "typedef \fBtquat\fP<float, mediump> \fBglm::mediump_quat\fP"
\fBQuaternion\fP of medium single-precision floating-point numbers\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "typedef tvec1<\fBu16\fP, mediump> \fBglm::mediump_u16vec1\fP"
Medium precision 16 bit unsigned integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBu16\fP, mediump> \fBglm::mediump_u16vec2\fP"
Medium precision 16 bit unsigned integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<\fBu16\fP, mediump> \fBglm::mediump_u16vec3\fP"
Medium precision 16 bit unsigned integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<\fBu16\fP, mediump> \fBglm::mediump_u16vec4\fP"
Medium precision 16 bit unsigned integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1< \fBu32\fP, mediump > \fBglm::mediump_u32vec1\fP"
Medium precision 32 bit unsigned integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2< \fBu32\fP, mediump > \fBglm::mediump_u32vec2\fP"
Medium precision 32 bit unsigned integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3< \fBu32\fP, mediump > \fBglm::mediump_u32vec3\fP"
Medium precision 32 bit unsigned integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4< \fBu32\fP, mediump > \fBglm::mediump_u32vec4\fP"
Medium precision 32 bit unsigned integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1<\fBu64\fP, mediump> \fBglm::mediump_u64vec1\fP"
Medium precision 64 bit unsigned integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBu64\fP, mediump> \fBglm::mediump_u64vec2\fP"
Medium precision 64 bit unsigned integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<\fBu64\fP, mediump> \fBglm::mediump_u64vec3\fP"
Medium precision 64 bit unsigned integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<\fBu64\fP, mediump> \fBglm::mediump_u64vec4\fP"
Medium precision 64 bit unsigned integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec1<\fBu8\fP, mediump> \fBglm::mediump_u8vec1\fP"
Medium precision 8 bit unsigned integer scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec2<\fBu8\fP, mediump> \fBglm::mediump_u8vec2\fP"
Medium precision 8 bit unsigned integer vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec3<\fBu8\fP, mediump> \fBglm::mediump_u8vec3\fP"
Medium precision 8 bit unsigned integer vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef tvec4<\fBu8\fP, mediump> \fBglm::mediump_u8vec4\fP"
Medium precision 8 bit unsigned integer vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP 
.RE
.PP

.SS "typedef mediump_uvec1_t \fBglm::mediump_uvec1\fP"
1 component vector of medium precision unsigned integer numbers\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_vec1\fP extension\&. 
.RE
.PP

.SS "typedef mediump_vec1_t \fBglm::mediump_vec1\fP"
Medium single-precision floating-point vector of 1 component\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_type_precision\fP
.RE
.PP
1 component vector of medium precision floating-point numbers\&. There is no guarantee on the actual precision\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_vec1\fP extension\&. 
.RE
.PP

.SS "typedef tvec2<float, mediump> \fBglm::mediump_vec2\fP"
Medium Single-precision floating-point vector of 2 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBPrecision types\fP 
.RE
.PP

.SS "typedef tvec3<float, mediump> \fBglm::mediump_vec3\fP"
Medium Single-precision floating-point vector of 3 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBPrecision types\fP 
.RE
.PP

.SS "typedef tvec4<float, mediump> \fBglm::mediump_vec4\fP"
Medium Single-precision floating-point vector of 4 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBPrecision types\fP 
.RE
.PP

.SS "typedef \fBhighp_quat\fP \fBglm::quat\fP"

.PP
\fBQuaternion\fP of default single-precision floating-point numbers\&. 
.SS "template<typename T , typename Vec > using \fBglm::return_type_scalar_multiplication\fP = typedef typename std::enable_if< !std::is_same<T, float>::value && std::is_arithmetic<T>::value, Vec >::type"

.SS "typedef \fBhighp_uvec1\fP \fBglm::uvec1\fP"
1 component vector of unsigned integer numbers\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_vec1\fP extension\&. 
.RE
.PP

.SS "typedef \fBhighp_vec1\fP \fBglm::vec1\fP"
1 component vector of floating-point numbers\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_vec1\fP extension\&. 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::abs (detail::fvec4SIMD const & x)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::acot (genType x)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::acot (vecType< T, P > const & x)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::acoth (genType x)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::acoth (vecType< T, P > const & x)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::acsc (genType x)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::acsc (vecType< T, P > const & x)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::acsch (genType x)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::acsch (vecType< T, P > const & x)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3<T, P> glm::affineInverse (tmat3x3< T, P > const & m)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4<T, P> glm::affineInverse (tmat4x4< T, P > const & m)"

.SS "GLM_FUNC_QUALIFIER bool glm::all (bool const & x)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::angle (genType const & x, genType const & y)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER T glm::angle (vecType< T, P > const & x, vecType< T, P > const & y)"

.SS "GLM_FUNC_QUALIFIER detail::fquatSIMD glm::angleAxisSIMD (float const & angle, vec3 const & v)"

.SS "GLM_FUNC_QUALIFIER detail::fquatSIMD glm::angleAxisSIMD (float const & angle, float const & x, float const & y, float const & z)"

.SS "GLM_FUNC_QUALIFIER bool glm::any (bool const & x)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::asec (genType x)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::asec (vecType< T, P > const & x)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::asech (genType x)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::asech (vecType< T, P > const & x)"

.SS "template<typename genIType > GLM_FUNC_QUALIFIER genIType glm::bitfieldRotateLeft (genIType In, int Shift)"

.SS "template<typename genIType > GLM_FUNC_QUALIFIER genIType glm::bitfieldRotateRight (genIType In, int Shift)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::ceil (detail::fvec4SIMD const & x)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::ceilPowerOfTwo (genType value)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2<T, P> glm::clamp (tvec2< T, P > const & Texcoord)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3<T, P> glm::clamp (tvec3< T, P > const & Texcoord)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4<T, P> glm::clamp (tvec4< T, P > const & Texcoord)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::clamp (detail::fvec4SIMD const & x, detail::fvec4SIMD const & minVal, detail::fvec4SIMD const & maxVal)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::clamp (detail::fvec4SIMD const & x, float const & minVal, float const & maxVal)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat2x2<T, P> glm::colMajor2 (const tvec2< T, P > & v1, const tvec2< T, P > & v2)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat2x2<T, P> glm::colMajor2 (const tmat2x2< T, P > & m)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3<T, P> glm::colMajor3 (const tvec3< T, P > & v1, const tvec3< T, P > & v2, const tvec3< T, P > & v3)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3<T, P> glm::colMajor3 (const tmat3x3< T, P > & m)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4<T, P> glm::colMajor4 (const tvec4< T, P > & v1, const tvec4< T, P > & v2, const tvec4< T, P > & v3, const tvec4< T, P > & v4)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4<T, P> glm::colMajor4 (const tmat4x4< T, P > & m)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3<T, P> glm::combine (tvec3< T, P > const & a, tvec3< T, P > const & b, T ascl, T bscl)"

.PP
Make a linear combination of two vectors and return the result\&. 
.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER T glm::compAdd (vecType< T, P > const & v)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER T glm::compMax (vecType< T, P > const & v)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER T glm::compMin (vecType< T, P > const & v)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER T glm::compMul (vecType< T, P > const & v)"

.SS "GLM_FUNC_QUALIFIER detail::fquatSIMD glm::conjugate (detail::fquatSIMD const & q)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::cot (genType angle)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::cot (vecType< T, P > const & x)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::coth (genType angle)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::coth (vecType< T, P > const & x)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtquat\fP<T, P> glm::cross (\fBtquat\fP< T, P > const & q1, \fBtquat\fP< T, P > const & q2)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::cross (detail::fvec4SIMD const & x, detail::fvec4SIMD const & y)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::csc (genType angle)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::csc (vecType< T, P > const & x)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::csch (genType angle)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::csch (vecType< T, P > const & x)"

.SS "GLM_FUNC_QUALIFIER float glm::determinant (detail::fmat4x4SIMD const & m)"

.SS "GLM_FUNC_QUALIFIER float glm::distance (detail::fvec4SIMD const & p0, detail::fvec4SIMD const & p1)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER T glm::distance2 (tvec2< T, P > const & p0, tvec2< T, P > const & p1)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER T glm::distance2 (tvec3< T, P > const & p0, tvec3< T, P > const & p1)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER T glm::distance2 (tvec4< T, P > const & p0, tvec4< T, P > const & p1)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::distance4 (detail::fvec4SIMD const & p0, detail::fvec4SIMD const & p1)"

.SS "GLM_FUNC_QUALIFIER float glm::dot (detail::fquatSIMD const & q1, detail::fquatSIMD const & q2)"

.SS "GLM_FUNC_QUALIFIER float glm::dot (detail::fvec4SIMD const & x, detail::fvec4SIMD const & y)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::dot4 (detail::fvec4SIMD const & x, detail::fvec4SIMD const & y)"

.SS "template<> GLM_FUNC_QUALIFIER bool glm::epsilonEqual (float const & x, float const & y, float const & epsilon)"

.SS "template<> GLM_FUNC_QUALIFIER bool glm::epsilonEqual (double const & x, double const & y, double const & epsilon)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<bool, P> glm::epsilonEqual (vecType< T, P > const & x, vecType< T, P > const & y, vecType< T, P > const & epsilon)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4<bool, P> glm::epsilonEqual (\fBtquat\fP< T, P > const & x, \fBtquat\fP< T, P > const & y, T const & epsilon)"

.SS "template<> GLM_FUNC_QUALIFIER bool glm::epsilonNotEqual (float const & x, float const & y, float const & epsilon)"

.SS "template<> GLM_FUNC_QUALIFIER bool glm::epsilonNotEqual (double const & x, double const & y, double const & epsilon)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<bool, P> glm::epsilonNotEqual (vecType< T, P > const & x, vecType< T, P > const & y, T const & epsilon)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<bool, P> glm::epsilonNotEqual (vecType< T, P > const & x, vecType< T, P > const & y, vecType< T, P > const & epsilon)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4<bool, P> glm::epsilonNotEqual (\fBtquat\fP< T, P > const & x, \fBtquat\fP< T, P > const & y, T const & epsilon)"

.SS "template<typename T > GLM_FUNC_QUALIFIER bool glm::equal (T const & x, T const & y)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::extend (genType const & Origin, genType const & Source, genType const & Distance)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2<T, P> glm::extend (tvec2< T, P > const & Origin, tvec2< T, P > const & Source, T const & Distance)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3<T, P> glm::extend (tvec3< T, P > const & Origin, tvec3< T, P > const & Source, T const & Distance)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4<T, P> glm::extend (tvec4< T, P > const & Origin, tvec4< T, P > const & Source, T const & Distance)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::faceforward (detail::fvec4SIMD const & N, detail::fvec4SIMD const & I, detail::fvec4SIMD const & Nref)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2<T, P> glm::factorial (tvec2< T, P > const & x)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3<T, P> glm::factorial (tvec3< T, P > const & x)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4<T, P> glm::factorial (tvec4< T, P > const & x)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::fastAcos (vecType< T, P > const & x)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::fastAsin (vecType< T, P > const & x)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::fastAtan (vecType< T, P > const & y, vecType< T, P > const & x)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::fastAtan (vecType< T, P > const & x)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::fastCos (vecType< T, P > const & x)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::fastExp2 (genType x)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::fastInversesqrt (detail::fvec4SIMD const & x)"

.SS "GLM_FUNC_QUALIFIER float glm::fastLength (detail::fvec4SIMD const & x)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::fastLength4 (detail::fvec4SIMD const & x)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::fastLog (genType x)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::fastLog2 (genType x)"

.SS "GLM_FUNC_QUALIFIER detail::fquatSIMD glm::fastMix (detail::fquatSIMD const & x, detail::fquatSIMD const & y, float const & a)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::fastNormalize (genType x)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::fastNormalize (vecType< T, P > const & x)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::fastNormalize (detail::fvec4SIMD const & x)"

.SS "template<typename T > GLM_FUNC_QUALIFIER T glm::fastPow (T x, int y)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::fastPow (vecType< T, P > const & x, vecType< int, P > const & y)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::fastSin (vecType< T, P > const & x)"

.SS "GLM_FUNC_QUALIFIER __m128 glm::fastSin (__m128 x)"

.SS "GLM_FUNC_QUALIFIER detail::fquatSIMD glm::fastSlerp (detail::fquatSIMD const & x, detail::fquatSIMD const & y, float const & a)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::fastSqrt (detail::fvec4SIMD const & x)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::fastTan (vecType< T, P > const & x)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<\fBuint\fP, P> glm::float_distance (vecType< T, P > const & x, vecType< T, P > const & y)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::floor (detail::fvec4SIMD const & x)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::floorPowerOfTwo (genType value)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::fma (detail::fvec4SIMD const & a, detail::fvec4SIMD const & b, detail::fvec4SIMD const & c)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::fmod (genType x, genType y)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::fmod (vecType< T, P > const & x, T y)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::fmod (vecType< T, P > const & x, vecType< T, P > const & y)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::fract (detail::fvec4SIMD const & x)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::gaussRand (vecType< T, P > const & Mean, vecType< T, P > const & Deviation)"

.SS "template<typename T > GLM_FUNC_QUALIFIER bool glm::greaterThan (T const & x, T const & y)"

.SS "template<typename T > GLM_FUNC_QUALIFIER bool glm::greaterThanEqual (T const & x, T const & y)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3<T, P> glm::hsvColor (const tvec3< T, P > & rgbColor)"

.SS "GLM_FUNC_QUALIFIER detail::fquatSIMD glm::inverse (detail::fquatSIMD const & q)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::inversesqrt (detail::fvec4SIMD const & x)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat2x2<T, P> glm::inverseTranspose (tmat2x2< T, P > const & m)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3<T, P> glm::inverseTranspose (tmat3x3< T, P > const & m)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4<T, P> glm::inverseTranspose (tmat4x4< T, P > const & m)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2<bool, P> glm::isCompNull (tvec2< T, P > const & v, T const & epsilon)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3<bool, P> glm::isCompNull (tvec3< T, P > const & v, T const & epsilon)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4<bool, P> glm::isCompNull (tvec4< T, P > const & v, T const & epsilon)"

.SS "template<typename T > GLM_FUNC_QUALIFIER bool glm::isdenormal (T const & x)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec1<T, P>::bool_type glm::isdenormal (tvec1< T, P > const & x)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2<T, P>::bool_type glm::isdenormal (tvec2< T, P > const & x)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3<T, P>::bool_type glm::isdenormal (tvec3< T, P > const & x)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4<T, P>::bool_type glm::isdenormal (tvec4< T, P > const & x)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec1<bool, P> glm::isfinite (tvec1< T, P > const & x)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2<bool, P> glm::isfinite (tvec2< T, P > const & x)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3<bool, P> glm::isfinite (tvec3< T, P > const & x)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4<bool, P> glm::isfinite (tvec4< T, P > const & x)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER bool glm::isMultiple (genType Value, genType Multiple)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER bool glm::isPowerOfTwo (genType Value)"

.SS "GLM_FUNC_QUALIFIER float glm::length (detail::fquatSIMD const & q)"

.SS "GLM_FUNC_QUALIFIER float glm::length (detail::fvec4SIMD const & x)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER T glm::length2 (tvec2< T, P > const & x)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER T glm::length2 (tvec3< T, P > const & x)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER T glm::length2 (tvec4< T, P > const & x)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::length4 (detail::fvec4SIMD const & x)"

.SS "GLM_FUNC_QUALIFIER detail::fquatSIMD glm::lerp (detail::fquatSIMD const & x, detail::fquatSIMD const & y, float const & a)"

.SS "template<typename T > GLM_FUNC_QUALIFIER bool glm::lessThan (T const & x, T const & y)"

.SS "template<typename T > GLM_FUNC_QUALIFIER bool glm::lessThanEqual (T const & x, T const & y)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::linearRand (genType Min, genType Max)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::log (genType const & x, genType const & base)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::log (vecType< T, P > const & x, vecType< T, P > const & base)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER T glm::luminosity (const tvec3< T, P > & color)"

.SS "GLM_FUNC_QUALIFIER mat4 glm::mat4_cast (detail::fquatSIMD const & q)"

.SS "GLM_FUNC_QUALIFIER mat4 glm::mat4_cast (detail::fmat4x4SIMD const & x)"

.SS "GLM_FUNC_QUALIFIER detail::fmat4x4SIMD glm::mat4SIMD_cast (detail::fquatSIMD const & q)"

.SS "GLM_FUNC_QUALIFIER detail::fmat4x4SIMD glm::matrixCompMult (detail::fmat4x4SIMD const & x, detail::fmat4x4SIMD const & y)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::max (detail::fvec4SIMD const & x, detail::fvec4SIMD const & y)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::max (detail::fvec4SIMD const & x, float const & y)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::min (detail::fvec4SIMD const & x, detail::fvec4SIMD const & y)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::min (detail::fvec4SIMD const & x, float const & y)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2<T, P> glm::mirrorClamp (tvec2< T, P > const & Texcoord)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3<T, P> glm::mirrorClamp (tvec3< T, P > const & Texcoord)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4<T, P> glm::mirrorClamp (tvec4< T, P > const & Texcoord)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2<T, P> glm::mirrorRepeat (tvec2< T, P > const & Texcoord)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3<T, P> glm::mirrorRepeat (tvec3< T, P > const & Texcoord)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4<T, P> glm::mirrorRepeat (tvec4< T, P > const & Texcoord)"

.SS "GLM_FUNC_QUALIFIER detail::fquatSIMD glm::mix (detail::fquatSIMD const & x, detail::fquatSIMD const & y, float const & a)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::mix (detail::fvec4SIMD const & x, detail::fvec4SIMD const & y, detail::fvec4SIMD const & a)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::mod (detail::fvec4SIMD const & x, detail::fvec4SIMD const & y)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::mod (detail::fvec4SIMD const & x, float const & y)"

.SS "template<> GLM_FUNC_QUALIFIER float glm::next_float (float const & x)"

.SS "template<> GLM_FUNC_QUALIFIER double glm::next_float (double const & x)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::next_float (vecType< T, P > const & x)"

.SS "template<typename T > GLM_FUNC_QUALIFIER T glm::next_float (T const & x, \fBuint\fP const & ulps)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::next_float (vecType< T, P > const & x, vecType< \fBuint\fP, P > const & ulps)"

.SS "GLM_FUNC_QUALIFIER float glm::niceLength (detail::fvec4SIMD const & x)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::niceLength4 (detail::fvec4SIMD const & x)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::niceSqrt (detail::fvec4SIMD const & x)"

.SS "GLM_FUNC_QUALIFIER detail::fquatSIMD glm::normalize (detail::fquatSIMD const & q)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::normalize (detail::fvec4SIMD const & x)"

.SS "GLM_FUNC_QUALIFIER bool glm::not_ (bool const & x)"

.SS "template<typename T > GLM_FUNC_QUALIFIER bool glm::notEqual (T const & x, T const & y)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER bool glm::operator!= (\fBtdualquat\fP< T, P > const & q1, \fBtdualquat\fP< T, P > const & q2)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER bool glm::operator!= (\fBtquat\fP< T, P > const & q1, \fBtquat\fP< T, P > const & q2)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3<T, P> glm::operator* (\fBtdualquat\fP< T, P > const & q, tvec3< T, P > const & v)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3<T, P> glm::operator* (tvec3< T, P > const & v, \fBtdualquat\fP< T, P > const & q)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4<T, P> glm::operator* (\fBtdualquat\fP< T, P > const & q, tvec4< T, P > const & v)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4<T, P> glm::operator* (tvec4< T, P > const & v, \fBtdualquat\fP< T, P > const & q)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtdualquat\fP<T, P> glm::operator\- (\fBtdualquat\fP< T, P > const & q)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER bool glm::operator== (\fBtdualquat\fP< T, P > const & q1, \fBtdualquat\fP< T, P > const & q2)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER bool glm::operator== (\fBtquat\fP< T, P > const & q1, \fBtquat\fP< T, P > const & q2)"

.SS "GLM_FUNC_QUALIFIER detail::fmat4x4SIMD glm::outerProduct (detail::fvec4SIMD const & c, detail::fvec4SIMD const & r)"

.SS "GLM_FUNC_QUALIFIER \fBuint64\fP glm::packHalf4x16 (glm::vec4 const & v)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER T glm::perlin (tvec2< T, P > const & Position)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER T glm::perlin (tvec3< T, P > const & Position)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER T glm::perlin (tvec4< T, P > const & Position)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER T glm::perlin (tvec2< T, P > const & Position, tvec2< T, P > const & rep)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER T glm::perlin (tvec3< T, P > const & Position, tvec3< T, P > const & rep)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER T glm::perlin (tvec4< T, P > const & Position, tvec4< T, P > const & rep)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::powerOfTwoAbove (genType value)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::powerOfTwoBelow (genType value)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::powerOfTwoNearest (genType value)"

.SS "GLM_FUNC_QUALIFIER float glm::prev_float (float const & x)"

.SS "GLM_FUNC_QUALIFIER double glm::prev_float (double const & x)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::prev_float (vecType< T, P > const & x)"

.SS "template<typename T > GLM_FUNC_QUALIFIER T glm::prev_float (T const & x, \fBuint\fP const & ulps)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::prev_float (vecType< T, P > const & x, vecType< \fBuint\fP, P > const & ulps)"

.SS "GLM_FUNC_QUALIFIER \fBquat\fP glm::quat_cast (detail::fquatSIMD const & x)"

.SS "GLM_FUNC_QUALIFIER detail::fquatSIMD glm::quatSIMD_cast (detail::fmat4x4SIMD const & m)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER detail::fquatSIMD glm::quatSIMD_cast (tmat4x4< T, P > const & m)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER detail::fquatSIMD glm::quatSIMD_cast (tmat3x3< T, P > const & m)"

.SS "template<typename T > GLM_FUNC_QUALIFIER detail::fquatSIMD glm::quatSIMD_cast_impl (const T m0[], const T m1[], const T m2[])"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::reflect (detail::fvec4SIMD const & I, detail::fvec4SIMD const & N)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3<T, P> glm::reflect2D (const tmat3x3< T, P > & m, const tvec3< T, P > & normal)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4<T, P> glm::reflect3D (const tmat4x4< T, P > & m, const tvec3< T, P > & normal)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::refract (detail::fvec4SIMD const & I, detail::fvec4SIMD const & N, float const & eta)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec2<T, P> glm::repeat (tvec2< T, P > const & Texcoord)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3<T, P> glm::repeat (tvec3< T, P > const & Texcoord)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4<T, P> glm::repeat (tvec4< T, P > const & Texcoord)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3<T, P> glm::rgbColor (const tvec3< T, P > & hsvColor)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4<T, P> glm::rotate_slow (tmat4x4< T, P > const & m, T angle, tvec3< T, P > const & v)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::round (detail::fvec4SIMD const & x)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat2x2<T, P> glm::rowMajor2 (const tmat2x2< T, P > & m)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3<T, P> glm::rowMajor3 (const tvec3< T, P > & v1, const tvec3< T, P > & v2, const tvec3< T, P > & v3)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3<T, P> glm::rowMajor3 (const tmat3x3< T, P > & m)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4<T, P> glm::rowMajor4 (const tvec4< T, P > & v1, const tvec4< T, P > & v2, const tvec4< T, P > & v3, const tvec4< T, P > & v4)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4<T, P> glm::rowMajor4 (const tmat4x4< T, P > & m)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec3<T, P> glm::saturation (const T s, const tvec3< T, P > & color)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tvec4<T, P> glm::saturation (const T s, const tvec4< T, P > & color)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4<T, P> glm::scale_slow (tmat4x4< T, P > const & m, tvec3< T, P > const & v)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4<T, P> glm::scaleBias (T scale, T bias)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat4x4<T, P> glm::scaleBias (const tmat4x4< T, P > & m, T scale, T bias)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::sec (genType angle)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::sec (vecType< T, P > const & x)"

.SS "template<typename genType > GLM_FUNC_QUALIFIER genType glm::sech (genType angle)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::sech (vecType< T, P > const & x)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3<T, P> glm::shearX2D (const tmat3x3< T, P > & m, T s)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3<T, P> glm::shearY2D (const tmat3x3< T, P > & m, T s)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::sign (detail::fvec4SIMD const & x)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER T glm::simplex (glm::tvec2< T, P > const & v)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER T glm::simplex (tvec3< T, P > const & v)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER T glm::simplex (tvec4< T, P > const & v)"

.SS "GLM_FUNC_QUALIFIER detail::fquatSIMD glm::slerp (detail::fquatSIMD const & x, detail::fquatSIMD const & y, float const & a)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::smoothstep (detail::fvec4SIMD const & edge0, detail::fvec4SIMD const & edge1, detail::fvec4SIMD const & x)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::smoothstep (float const & edge0, float const & edge1, detail::fvec4SIMD const & x)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::sqrt (detail::fvec4SIMD const & x)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::step (detail::fvec4SIMD const & edge, detail::fvec4SIMD const & x)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::step (float const & edge, detail::fvec4SIMD const & x)"

.SS "GLM_FUNC_QUALIFIER detail::fmat4x4SIMD glm::transpose (detail::fmat4x4SIMD const & m)"

.SS "GLM_FUNC_QUALIFIER detail::fvec4SIMD glm::trunc (detail::fvec4SIMD const & x)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER void glm::v3Scale (tvec3< T, P > & v, T desiredLength)"

.SS "GLM_FUNC_QUALIFIER vec4 glm::vec4_cast (detail::fvec4SIMD const & x)"

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_QUALIFIER vecType<T, P> glm::wrapAngle (vecType< T, P > const & x)"

.SH "Author"
.PP 
Generated automatically by Doxygen for Fusion3D from the source code\&.
