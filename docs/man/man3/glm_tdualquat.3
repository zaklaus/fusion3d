.TH "glm::tdualquat< T, P >" 3 "Tue Nov 24 2015" "Version 0.0.0.1" "Fusion3D" \" -*- nroff -*-
.ad l
.nh
.SH NAME
glm::tdualquat< T, P > \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <dual_quaternion\&.hpp>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef T \fBvalue_type\fP"
.br
.ti -1c
.RI "typedef \fBglm::tquat\fP< T, P > \fBpart_type\fP"
.br
.ti -1c
.RI "typedef length_t \fBlength_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "GLM_FUNC_DECL GLM_CONSTEXPR \fBlength_type\fP \fBlength\fP () const "
.br
.RI "\fIReturn the count of components of a dual quaternion\&. \fP"
.ti -1c
.RI "GLM_FUNC_DECL \fBpart_type\fP & \fBoperator[]\fP (\fBlength_type\fP i)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBpart_type\fP const & \fBoperator[]\fP (\fBlength_type\fP i) const "
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtdualquat\fP () GLM_DEFAULT_CTOR"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtdualquat\fP (\fBtdualquat\fP< T, P > const &d) GLM_DEFAULT"
.br
.ti -1c
.RI "template<precision Q> GLM_FUNC_DECL \fBtdualquat\fP (\fBtdualquat\fP< T, Q > const &d)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtdualquat\fP (ctor)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtdualquat\fP (\fBtquat\fP< T, P > const &\fBreal\fP)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtdualquat\fP (\fBtquat\fP< T, P > const &\fBorientation\fP, tvec3< T, P > const &translation)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtdualquat\fP (\fBtquat\fP< T, P > const &\fBreal\fP, \fBtquat\fP< T, P > const &\fBdual\fP)"
.br
.ti -1c
.RI "template<typename U , precision Q> GLM_FUNC_DECL GLM_EXPLICIT \fBtdualquat\fP (\fBtdualquat\fP< U, Q > const &q)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtdualquat\fP (tmat2x4< T, P > const &holder_mat)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtdualquat\fP (tmat3x4< T, P > const &aug_mat)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtdualquat\fP< T, P > & \fBoperator=\fP (\fBtdualquat\fP< T, P > const &m) GLM_DEFAULT"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtdualquat\fP< T, P > & \fBoperator=\fP (\fBtdualquat\fP< U, P > const &m)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtdualquat\fP< T, P > & \fBoperator*=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtdualquat\fP< T, P > & \fBoperator/=\fP (U s)"
.br
.ti -1c
.RI "template<precision Q> GLM_FUNC_QUALIFIER \fBtdualquat\fP (\fBtdualquat\fP< T, Q > const &d)"
.br
.RI "\fIGLM_HAS_DEFAULTED_FUNCTIONS\&. \fP"
.ti -1c
.RI "template<typename U, precision Q> GLM_FUNC_QUALIFIER \fBtdualquat\fP (\fBtdualquat\fP< U, Q > const &q)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtdualquat\fP< T, P > & \fBoperator=\fP (\fBtdualquat\fP< U, P > const &q)"
.br
.RI "\fIGLM_HAS_DEFAULTED_FUNCTIONS\&. \fP"
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtdualquat\fP< T, P > & \fBoperator*=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtdualquat\fP< T, P > & \fBoperator/=\fP (U s)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBglm::tquat\fP< T, P > \fBreal\fP"
.br
.ti -1c
.RI "\fBglm::tquat\fP< T, P > \fBdual\fP"
.br
.in -1c
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename T, precision P = defaultp> typedef length_t \fBglm::tdualquat\fP< T, P >::\fBlength_type\fP"

.SS "template<typename T, precision P = defaultp> typedef \fBglm::tquat\fP<T, P> \fBglm::tdualquat\fP< T, P >::\fBpart_type\fP"

.SS "template<typename T, precision P = defaultp> typedef T \fBglm::tdualquat\fP< T, P >::\fBvalue_type\fP"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBglm::tdualquat\fP< T, P >::\fBtdualquat\fP ()"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBglm::tdualquat\fP< T, P >::\fBtdualquat\fP (\fBtdualquat\fP< T, P > const & d)"

.SS "template<typename T, precision P = defaultp> template<precision Q> GLM_FUNC_DECL \fBglm::tdualquat\fP< T, P >::\fBtdualquat\fP (\fBtdualquat\fP< T, Q > const & d)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBglm::tdualquat\fP< T, P >::\fBtdualquat\fP (ctor)\fC [explicit]\fP"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBglm::tdualquat\fP< T, P >::\fBtdualquat\fP (\fBtquat\fP< T, P > const & real)\fC [explicit]\fP"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBglm::tdualquat\fP< T, P >::\fBtdualquat\fP (\fBtquat\fP< T, P > const & orientation, tvec3< T, P > const & translation)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBglm::tdualquat\fP< T, P >::\fBtdualquat\fP (\fBtquat\fP< T, P > const & real, \fBtquat\fP< T, P > const & dual)"

.SS "template<typename T, precision P = defaultp> template<typename U , precision Q> GLM_FUNC_DECL GLM_EXPLICIT \fBglm::tdualquat\fP< T, P >::\fBtdualquat\fP (\fBtdualquat\fP< U, Q > const & q)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBglm::tdualquat\fP< T, P >::\fBtdualquat\fP (tmat2x4< T, P > const & holder_mat)\fC [explicit]\fP"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBglm::tdualquat\fP< T, P >::\fBtdualquat\fP (tmat3x4< T, P > const & aug_mat)\fC [explicit]\fP"

.SS "template<typename T, precision P = defaultp> template<precision Q> GLM_FUNC_QUALIFIER \fBglm::tdualquat\fP< T, P >::\fBtdualquat\fP (\fBtdualquat\fP< T, Q > const & d)"

.PP
GLM_HAS_DEFAULTED_FUNCTIONS\&. 
.SS "template<typename T, precision P = defaultp> template<typename U, precision Q> GLM_FUNC_QUALIFIER \fBglm::tdualquat\fP< T, P >::\fBtdualquat\fP (\fBtdualquat\fP< U, Q > const & q)"

.SH "Member Function Documentation"
.PP 
.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER GLM_CONSTEXPR \fBtdualquat\fP< T, P >::\fBlength_type\fP \fBglm::tdualquat\fP< T, P >::length () const"

.PP
Return the count of components of a dual quaternion\&. 
.SS "template<typename T, precision P = defaultp> template<typename U > GLM_FUNC_DECL \fBtdualquat\fP<T, P>& \fBglm::tdualquat\fP< T, P >::operator*= (U s)"

.SS "template<typename T, precision P = defaultp> template<typename U > GLM_FUNC_QUALIFIER \fBtdualquat\fP<T, P>& \fBglm::tdualquat\fP< T, P >::operator*= (U s)"

.SS "template<typename T, precision P = defaultp> template<typename U > GLM_FUNC_DECL \fBtdualquat\fP<T, P>& \fBglm::tdualquat\fP< T, P >::operator/= (U s)"

.SS "template<typename T, precision P = defaultp> template<typename U > GLM_FUNC_QUALIFIER \fBtdualquat\fP<T, P>& \fBglm::tdualquat\fP< T, P >::operator/= (U s)"

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER \fBtdualquat\fP< T, P > & \fBglm::tdualquat\fP< T, P >::operator= (\fBtdualquat\fP< T, P > const & m)"

.SS "template<typename T, precision P = defaultp> template<typename U > GLM_FUNC_DECL \fBtdualquat\fP<T, P>& \fBglm::tdualquat\fP< T, P >::operator= (\fBtdualquat\fP< U, P > const & m)"

.SS "template<typename T, precision P = defaultp> template<typename U > GLM_FUNC_QUALIFIER \fBtdualquat\fP<T, P>& \fBglm::tdualquat\fP< T, P >::operator= (\fBtdualquat\fP< U, P > const & q)"

.PP
GLM_HAS_DEFAULTED_FUNCTIONS\&. 
.SS "template<typename T, precision P = defaultp> GLM_FUNC_DECL \fBpart_type\fP& \fBglm::tdualquat\fP< T, P >::operator[] (\fBlength_type\fP i)"

.SS "template<typename T, precision P = defaultp> GLM_FUNC_DECL \fBpart_type\fP const& \fBglm::tdualquat\fP< T, P >::operator[] (\fBlength_type\fP i) const"

.SH "Member Data Documentation"
.PP 
.SS "template<typename T, precision P = defaultp> \fBglm::tquat\fP<T, P> \fBglm::tdualquat\fP< T, P >::dual"

.SS "template<typename T, precision P = defaultp> \fBglm::tquat\fP<T, P> \fBglm::tdualquat\fP< T, P >::real"


.SH "Author"
.PP 
Generated automatically by Doxygen for Fusion3D from the source code\&.
