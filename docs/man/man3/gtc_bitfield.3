.TH "gtc_bitfield" 3 "Tue Nov 24 2015" "Version 0.0.0.1" "Fusion3D" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gtc_bitfield \- GLM_GTC_bitfield
.PP
Allow to perform bit operations on integer values\&.  

.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL genIUType \fBglm::mask\fP (genIUType Bits)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecIUType> GLM_FUNC_DECL vecIUType< T, P > \fBglm::mask\fP (vecIUType< T, P > const &v)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL genIUType \fBglm::bitfieldRotateRight\fP (genIUType In, int Shift)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBglm::bitfieldRotateRight\fP (vecType< T, P > const &In, int Shift)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL genIUType \fBglm::bitfieldRotateLeft\fP (genIUType In, int Shift)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBglm::bitfieldRotateLeft\fP (vecType< T, P > const &In, int Shift)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL genIUType \fBglm::bitfieldFillOne\fP (genIUType Value, int FirstBit, int BitCount)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBglm::bitfieldFillOne\fP (vecType< T, P > const &Value, int FirstBit, int BitCount)"
.br
.ti -1c
.RI "template<typename genIUType > GLM_FUNC_DECL genIUType \fBglm::bitfieldFillZero\fP (genIUType Value, int FirstBit, int BitCount)"
.br
.ti -1c
.RI "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType< T, P > \fBglm::bitfieldFillZero\fP (vecType< T, P > const &Value, int FirstBit, int BitCount)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBint16\fP \fBglm::bitfieldInterleave\fP (int8 x, int8 y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint16\fP \fBglm::bitfieldInterleave\fP (\fBuint8\fP x, \fBuint8\fP y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBint32\fP \fBglm::bitfieldInterleave\fP (\fBint16\fP x, \fBint16\fP y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint32\fP \fBglm::bitfieldInterleave\fP (\fBuint16\fP x, \fBuint16\fP y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL int64 \fBglm::bitfieldInterleave\fP (\fBint32\fP x, \fBint32\fP y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL uint64 \fBglm::bitfieldInterleave\fP (\fBuint32\fP x, \fBuint32\fP y)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBint32\fP \fBglm::bitfieldInterleave\fP (int8 x, int8 y, int8 z)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint32\fP \fBglm::bitfieldInterleave\fP (\fBuint8\fP x, \fBuint8\fP y, \fBuint8\fP z)"
.br
.ti -1c
.RI "GLM_FUNC_DECL int64 \fBglm::bitfieldInterleave\fP (\fBint16\fP x, \fBint16\fP y, \fBint16\fP z)"
.br
.ti -1c
.RI "GLM_FUNC_DECL uint64 \fBglm::bitfieldInterleave\fP (\fBuint16\fP x, \fBuint16\fP y, \fBuint16\fP z)"
.br
.ti -1c
.RI "GLM_FUNC_DECL int64 \fBglm::bitfieldInterleave\fP (\fBint32\fP x, \fBint32\fP y, \fBint32\fP z)"
.br
.ti -1c
.RI "GLM_FUNC_DECL uint64 \fBglm::bitfieldInterleave\fP (\fBuint32\fP x, \fBuint32\fP y, \fBuint32\fP z)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBint32\fP \fBglm::bitfieldInterleave\fP (int8 x, int8 y, int8 z, int8 w)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBuint32\fP \fBglm::bitfieldInterleave\fP (\fBuint8\fP x, \fBuint8\fP y, \fBuint8\fP z, \fBuint8\fP w)"
.br
.ti -1c
.RI "GLM_FUNC_DECL int64 \fBglm::bitfieldInterleave\fP (\fBint16\fP x, \fBint16\fP y, \fBint16\fP z, \fBint16\fP w)"
.br
.ti -1c
.RI "GLM_FUNC_DECL uint64 \fBglm::bitfieldInterleave\fP (\fBuint16\fP x, \fBuint16\fP y, \fBuint16\fP z, \fBuint16\fP w)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Allow to perform bit operations on integer values\&. 

<\fBglm/gtc/bitfield\&.hpp\fP> need to be included to use these functionalities\&. 
.SH "Function Documentation"
.PP 
.SS "template<typename genIUType > GLM_FUNC_DECL genIUType glm::bitfieldFillOne (genIUType Value, int FirstBit, int BitCount)"
Set to 1 a range of bits\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType<T, P> glm::bitfieldFillOne (vecType< T, P > const & Value, int FirstBit, int BitCount)"
Set to 1 a range of bits\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "template<typename genIUType > GLM_FUNC_DECL genIUType glm::bitfieldFillZero (genIUType Value, int FirstBit, int BitCount)"
Set to 0 a range of bits\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType<T, P> glm::bitfieldFillZero (vecType< T, P > const & Value, int FirstBit, int BitCount)"
Set to 0 a range of bits\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "GLM_FUNC_QUALIFIER \fBint16\fP glm::bitfieldInterleave (\fBint8\fP x, \fBint8\fP y)"
Interleaves the bits of x and y\&. The first bit is the first bit of x followed by the first bit of y\&. The other bits are interleaved following the previous sequence\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "GLM_FUNC_QUALIFIER \fBuint16\fP glm::bitfieldInterleave (\fBuint8\fP x, \fBuint8\fP y)"
Interleaves the bits of x and y\&. The first bit is the first bit of x followed by the first bit of y\&. The other bits are interleaved following the previous sequence\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "GLM_FUNC_QUALIFIER \fBint32\fP glm::bitfieldInterleave (\fBint16\fP x, \fBint16\fP y)"
Interleaves the bits of x and y\&. The first bit is the first bit of x followed by the first bit of y\&. The other bits are interleaved following the previous sequence\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "GLM_FUNC_QUALIFIER \fBuint32\fP glm::bitfieldInterleave (\fBuint16\fP x, \fBuint16\fP y)"
Interleaves the bits of x and y\&. The first bit is the first bit of x followed by the first bit of y\&. The other bits are interleaved following the previous sequence\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "GLM_FUNC_QUALIFIER int64 glm::bitfieldInterleave (\fBint32\fP x, \fBint32\fP y)"
Interleaves the bits of x and y\&. The first bit is the first bit of x followed by the first bit of y\&. The other bits are interleaved following the previous sequence\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "GLM_FUNC_QUALIFIER uint64 glm::bitfieldInterleave (\fBuint32\fP x, \fBuint32\fP y)"
Interleaves the bits of x and y\&. The first bit is the first bit of x followed by the first bit of y\&. The other bits are interleaved following the previous sequence\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "GLM_FUNC_QUALIFIER \fBint32\fP glm::bitfieldInterleave (\fBint8\fP x, \fBint8\fP y, \fBint8\fP z)"
Interleaves the bits of x, y and z\&. The first bit is the first bit of x followed by the first bit of y and the first bit of z\&. The other bits are interleaved following the previous sequence\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "GLM_FUNC_QUALIFIER \fBuint32\fP glm::bitfieldInterleave (\fBuint8\fP x, \fBuint8\fP y, \fBuint8\fP z)"
Interleaves the bits of x, y and z\&. The first bit is the first bit of x followed by the first bit of y and the first bit of z\&. The other bits are interleaved following the previous sequence\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "GLM_FUNC_QUALIFIER int64 glm::bitfieldInterleave (\fBint16\fP x, \fBint16\fP y, \fBint16\fP z)"
Interleaves the bits of x, y and z\&. The first bit is the first bit of x followed by the first bit of y and the first bit of z\&. The other bits are interleaved following the previous sequence\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "GLM_FUNC_QUALIFIER uint64 glm::bitfieldInterleave (\fBuint16\fP x, \fBuint16\fP y, \fBuint16\fP z)"
Interleaves the bits of x, y and z\&. The first bit is the first bit of x followed by the first bit of y and the first bit of z\&. The other bits are interleaved following the previous sequence\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "GLM_FUNC_QUALIFIER int64 glm::bitfieldInterleave (\fBint32\fP x, \fBint32\fP y, \fBint32\fP z)"
Interleaves the bits of x, y and z\&. The first bit is the first bit of x followed by the first bit of y and the first bit of z\&. The other bits are interleaved following the previous sequence\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "GLM_FUNC_QUALIFIER uint64 glm::bitfieldInterleave (\fBuint32\fP x, \fBuint32\fP y, \fBuint32\fP z)"
Interleaves the bits of x, y and z\&. The first bit is the first bit of x followed by the first bit of y and the first bit of z\&. The other bits are interleaved following the previous sequence\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "GLM_FUNC_QUALIFIER \fBint32\fP glm::bitfieldInterleave (\fBint8\fP x, \fBint8\fP y, \fBint8\fP z, \fBint8\fP w)"
Interleaves the bits of x, y, z and w\&. The first bit is the first bit of x followed by the first bit of y, the first bit of z and finally the first bit of w\&. The other bits are interleaved following the previous sequence\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "GLM_FUNC_QUALIFIER \fBuint32\fP glm::bitfieldInterleave (\fBuint8\fP x, \fBuint8\fP y, \fBuint8\fP z, \fBuint8\fP w)"
Interleaves the bits of x, y, z and w\&. The first bit is the first bit of x followed by the first bit of y, the first bit of z and finally the first bit of w\&. The other bits are interleaved following the previous sequence\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "GLM_FUNC_QUALIFIER int64 glm::bitfieldInterleave (\fBint16\fP x, \fBint16\fP y, \fBint16\fP z, \fBint16\fP w)"
Interleaves the bits of x, y, z and w\&. The first bit is the first bit of x followed by the first bit of y, the first bit of z and finally the first bit of w\&. The other bits are interleaved following the previous sequence\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "GLM_FUNC_QUALIFIER uint64 glm::bitfieldInterleave (\fBuint16\fP x, \fBuint16\fP y, \fBuint16\fP z, \fBuint16\fP w)"
Interleaves the bits of x, y, z and w\&. The first bit is the first bit of x followed by the first bit of y, the first bit of z and finally the first bit of w\&. The other bits are interleaved following the previous sequence\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "template<typename genIUType > GLM_FUNC_DECL genIUType glm::bitfieldRotateLeft (genIUType In, int Shift)"
Rotate all bits to the left\&. All the bits dropped in the left side are inserted back on the right side\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType<T, P> glm::bitfieldRotateLeft (vecType< T, P > const & In, int Shift)"
Rotate all bits to the left\&. All the bits dropped in the left side are inserted back on the right side\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "template<typename genIUType > GLM_FUNC_DECL genIUType glm::bitfieldRotateRight (genIUType In, int Shift)"
Rotate all bits to the right\&. All the bits dropped in the right side are inserted back on the left side\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "template<typename T , precision P, template< typename, precision > class vecType> GLM_FUNC_DECL vecType<T, P> glm::bitfieldRotateRight (vecType< T, P > const & In, int Shift)"
Rotate all bits to the right\&. All the bits dropped in the right side are inserted back on the left side\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "template<typename genIUType > GLM_FUNC_DECL genIUType glm::mask (genIUType Bits)"
Build a mask of 'count' bits
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SS "template<typename T , precision P, template< typename, precision > class vecIUType> GLM_FUNC_DECL vecIUType<T, P> glm::mask (vecIUType< T, P > const & v)"
Build a mask of 'count' bits
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_bitfield\fP 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Fusion3D from the source code\&.
