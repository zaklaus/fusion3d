.TH "gtx_matrix_operation" 3 "Tue Nov 24 2015" "Version 0.0.0.1" "Fusion3D" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gtx_matrix_operation \- GLM_GTX_matrix_operation
.PP
Build diagonal matrices from vectors\&.  

.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat2x2< T, P > \fBglm::diagonal2x2\fP (tvec2< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat2x3< T, P > \fBglm::diagonal2x3\fP (tvec2< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat2x4< T, P > \fBglm::diagonal2x4\fP (tvec2< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat3x2< T, P > \fBglm::diagonal3x2\fP (tvec2< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat3x3< T, P > \fBglm::diagonal3x3\fP (tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat3x4< T, P > \fBglm::diagonal3x4\fP (tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x2< T, P > \fBglm::diagonal4x2\fP (tvec2< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x3< T, P > \fBglm::diagonal4x3\fP (tvec3< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL tmat4x4< T, P > \fBglm::diagonal4x4\fP (tvec4< T, P > const &v)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Build diagonal matrices from vectors\&. 

<\fBglm/gtx/matrix_operation\&.hpp\fP> need to be included to use these functionalities\&. 
.SH "Function Documentation"
.PP 
.SS "template<typename T , precision P> GLM_FUNC_DECL tmat2x2<T, P> glm::diagonal2x2 (tvec2< T, P > const & v)"
Build a diagonal matrix\&. From GLM_GTX_matrix_operation extension\&. 
.SS "template<typename T , precision P> GLM_FUNC_DECL tmat2x3<T, P> glm::diagonal2x3 (tvec2< T, P > const & v)"
Build a diagonal matrix\&. From GLM_GTX_matrix_operation extension\&. 
.SS "template<typename T , precision P> GLM_FUNC_DECL tmat2x4<T, P> glm::diagonal2x4 (tvec2< T, P > const & v)"
Build a diagonal matrix\&. From GLM_GTX_matrix_operation extension\&. 
.SS "template<typename T , precision P> GLM_FUNC_DECL tmat3x2<T, P> glm::diagonal3x2 (tvec2< T, P > const & v)"
Build a diagonal matrix\&. From GLM_GTX_matrix_operation extension\&. 
.SS "template<typename T , precision P> GLM_FUNC_DECL tmat3x3<T, P> glm::diagonal3x3 (tvec3< T, P > const & v)"
Build a diagonal matrix\&. From GLM_GTX_matrix_operation extension\&. 
.SS "template<typename T , precision P> GLM_FUNC_DECL tmat3x4<T, P> glm::diagonal3x4 (tvec3< T, P > const & v)"
Build a diagonal matrix\&. From GLM_GTX_matrix_operation extension\&. 
.SS "template<typename T , precision P> GLM_FUNC_DECL tmat4x2<T, P> glm::diagonal4x2 (tvec2< T, P > const & v)"
Build a diagonal matrix\&. From GLM_GTX_matrix_operation extension\&. 
.SS "template<typename T , precision P> GLM_FUNC_DECL tmat4x3<T, P> glm::diagonal4x3 (tvec3< T, P > const & v)"
Build a diagonal matrix\&. From GLM_GTX_matrix_operation extension\&. 
.SS "template<typename T , precision P> GLM_FUNC_DECL tmat4x4<T, P> glm::diagonal4x4 (tvec4< T, P > const & v)"
Build a diagonal matrix\&. From GLM_GTX_matrix_operation extension\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for Fusion3D from the source code\&.
