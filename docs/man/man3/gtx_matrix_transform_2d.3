.TH "gtx_matrix_transform_2d" 3 "Tue Nov 24 2015" "Version 0.0.0.1" "Fusion3D" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gtx_matrix_transform_2d \- GLM_GTX_matrix_transform_2d
.PP
Defines functions that generate common 2d transformation matrices\&.  

.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBglm::translate\fP (tmat3x3< T, P > const &m, tvec2< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBglm::rotate\fP (tmat3x3< T, P > const &m, T angle)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBglm::scale\fP (tmat3x3< T, P > const &m, tvec2< T, P > const &v)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBglm::shearX\fP (tmat3x3< T, P > const &m, T y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > \fBglm::shearY\fP (tmat3x3< T, P > const &m, T x)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Defines functions that generate common 2d transformation matrices\&. 

<\fBglm/gtx/matrix_transform_2d\&.hpp\fP> need to be included to use these functionalities\&. 
.SH "Function Documentation"
.PP 
.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > glm::rotate (tmat3x3< T, P > const & m, T angle)"
Builds a rotation 3 * 3 matrix created from an angle\&.
.PP
\fBParameters:\fP
.RS 4
\fIm\fP \fBInput\fP matrix multiplied by this translation matrix\&. 
.br
\fIangle\fP Rotation angle expressed in radians if GLM_FORCE_RADIANS is defined or degrees otherwise\&. 
.RE
.PP

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > glm::scale (tmat3x3< T, P > const & m, tvec2< T, P > const & v)"
Builds a scale 3 * 3 matrix created from a vector of 2 components\&.
.PP
\fBParameters:\fP
.RS 4
\fIm\fP \fBInput\fP matrix multiplied by this translation matrix\&. 
.br
\fIv\fP Coordinates of a scale vector\&. 
.RE
.PP

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > glm::shearX (tmat3x3< T, P > const & m, T y)"
Builds an horizontal (parallel to the x axis) shear 3 * 3 matrix\&.
.PP
\fBParameters:\fP
.RS 4
\fIm\fP \fBInput\fP matrix multiplied by this translation matrix\&. 
.br
\fIy\fP Shear factor\&. 
.RE
.PP

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > glm::shearY (tmat3x3< T, P > const & m, T x)"
Builds a vertical (parallel to the y axis) shear 3 * 3 matrix\&.
.PP
\fBParameters:\fP
.RS 4
\fIm\fP \fBInput\fP matrix multiplied by this translation matrix\&. 
.br
\fIx\fP Shear factor\&. 
.RE
.PP

.SS "template<typename T , precision P> GLM_FUNC_QUALIFIER tmat3x3< T, P > glm::translate (tmat3x3< T, P > const & m, tvec2< T, P > const & v)"
Builds a translation 3 * 3 matrix created from a vector of 2 components\&.
.PP
\fBParameters:\fP
.RS 4
\fIm\fP \fBInput\fP matrix multiplied by this translation matrix\&. 
.br
\fIv\fP Coordinates of a translation vector\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Fusion3D from the source code\&.
