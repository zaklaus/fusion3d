.TH "gtx_type_aligned" 3 "Tue Nov 24 2015" "Version 0.0.0.1" "Fusion3D" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gtx_type_aligned \- GLM_GTX_type_aligned
.PP
Defines aligned types\&.  

.SS "Functions"

.in +1c
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_int8, aligned_lowp_int8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_int16, aligned_lowp_int16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_int32, aligned_lowp_int32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_int64, aligned_lowp_int64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_int8_t, aligned_lowp_int8_t, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_int16_t, aligned_lowp_int16_t, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_int32_t, aligned_lowp_int32_t, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_int64_t, aligned_lowp_int64_t, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_i8, aligned_lowp_i8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_i16, aligned_lowp_i16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_i32, aligned_lowp_i32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_i64, aligned_lowp_i64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_int8, aligned_mediump_int8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_int16, aligned_mediump_int16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_int32, aligned_mediump_int32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_int64, aligned_mediump_int64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_int8_t, aligned_mediump_int8_t, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_int16_t, aligned_mediump_int16_t, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_int32_t, aligned_mediump_int32_t, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_int64_t, aligned_mediump_int64_t, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_i8, aligned_mediump_i8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_i16, aligned_mediump_i16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_i32, aligned_mediump_i32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_i64, aligned_mediump_i64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_int8, aligned_highp_int8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_int16, aligned_highp_int16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_int32, aligned_highp_int32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_int64, aligned_highp_int64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_int8_t, aligned_highp_int8_t, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_int16_t, aligned_highp_int16_t, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_int32_t, aligned_highp_int32_t, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_int64_t, aligned_highp_int64_t, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_i8, aligned_highp_i8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_i16, aligned_highp_i16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_i32, aligned_highp_i32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_i64, aligned_highp_i64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (int8, aligned_int8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBint16\fP, aligned_int16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBint32\fP, aligned_int32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (int64, aligned_int64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBint8_t\fP, aligned_int8_t, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBint16_t\fP, aligned_int16_t, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBint32_t\fP, aligned_int32_t, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBint64_t\fP, aligned_int64_t, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i8, aligned_i8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i16, aligned_i16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i32, aligned_i32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i64, aligned_i64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (ivec1, aligned_ivec1, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (ivec2, aligned_ivec2, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (ivec3, aligned_ivec3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (ivec4, aligned_ivec4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i8vec1, aligned_i8vec1, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i8vec2, aligned_i8vec2, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i8vec3, aligned_i8vec3, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i8vec4, aligned_i8vec4, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i16vec1, aligned_i16vec1, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i16vec2, aligned_i16vec2, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i16vec3, aligned_i16vec3, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i16vec4, aligned_i16vec4, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i32vec1, aligned_i32vec1, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i32vec2, aligned_i32vec2, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i32vec3, aligned_i32vec3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i32vec4, aligned_i32vec4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i64vec1, aligned_i64vec1, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i64vec2, aligned_i64vec2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i64vec3, aligned_i64vec3, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i64vec4, aligned_i64vec4, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_uint8, aligned_lowp_uint8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_uint16, aligned_lowp_uint16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_uint32, aligned_lowp_uint32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_uint64, aligned_lowp_uint64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_uint8_t, aligned_lowp_uint8_t, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_uint16_t, aligned_lowp_uint16_t, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_uint32_t, aligned_lowp_uint32_t, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_uint64_t, aligned_lowp_uint64_t, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_u8, aligned_lowp_u8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_u16, aligned_lowp_u16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_u32, aligned_lowp_u32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_u64, aligned_lowp_u64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_uint8, aligned_mediump_uint8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_uint16, aligned_mediump_uint16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_uint32, aligned_mediump_uint32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_uint64, aligned_mediump_uint64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_uint8_t, aligned_mediump_uint8_t, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_uint16_t, aligned_mediump_uint16_t, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_uint32_t, aligned_mediump_uint32_t, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_uint64_t, aligned_mediump_uint64_t, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_u8, aligned_mediump_u8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_u16, aligned_mediump_u16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_u32, aligned_mediump_u32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_u64, aligned_mediump_u64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_uint8, aligned_highp_uint8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_uint16, aligned_highp_uint16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_uint32, aligned_highp_uint32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_uint64, aligned_highp_uint64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_uint8_t, aligned_highp_uint8_t, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_uint16_t, aligned_highp_uint16_t, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_uint32_t, aligned_highp_uint32_t, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_uint64_t, aligned_highp_uint64_t, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_u8, aligned_highp_u8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_u16, aligned_highp_u16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_u32, aligned_highp_u32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_u64, aligned_highp_u64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBuint8\fP, aligned_uint8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBuint16\fP, aligned_uint16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBuint32\fP, aligned_uint32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (uint64, aligned_uint64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBuint8_t\fP, aligned_uint8_t, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBuint16_t\fP, aligned_uint16_t, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBuint32_t\fP, aligned_uint32_t, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBuint64_t\fP, aligned_uint64_t, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u8, aligned_u8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u16, aligned_u16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u32, aligned_u32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u64, aligned_u64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (uvec1, aligned_uvec1, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (uvec2, aligned_uvec2, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (uvec3, aligned_uvec3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (uvec4, aligned_uvec4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u8vec1, aligned_u8vec1, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u8vec2, aligned_u8vec2, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u8vec3, aligned_u8vec3, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u8vec4, aligned_u8vec4, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u16vec1, aligned_u16vec1, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u16vec2, aligned_u16vec2, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u16vec3, aligned_u16vec3, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u16vec4, aligned_u16vec4, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u32vec1, aligned_u32vec1, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u32vec2, aligned_u32vec2, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u32vec3, aligned_u32vec3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u32vec4, aligned_u32vec4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u64vec1, aligned_u64vec1, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u64vec2, aligned_u64vec2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u64vec3, aligned_u64vec3, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u64vec4, aligned_u64vec4, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (float32, aligned_float32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (float64, aligned_float64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (float32_t, aligned_float32_t, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (float64_t, aligned_float64_t, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (float32, aligned_f32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (float64, aligned_f64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (vec1, aligned_vec1, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (vec2, aligned_vec2, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (vec3, aligned_vec3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (vec4, aligned_vec4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fvec1, aligned_fvec1, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fvec2, aligned_fvec2, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fvec3, aligned_fvec3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fvec4, aligned_fvec4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32vec1, aligned_f32vec1, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32vec2, aligned_f32vec2, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32vec3, aligned_f32vec3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32vec4, aligned_f32vec4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (dvec1, aligned_dvec1, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (dvec2, aligned_dvec2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (dvec3, aligned_dvec3, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (dvec4, aligned_dvec4, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64vec1, aligned_f64vec1, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64vec2, aligned_f64vec2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64vec3, aligned_f64vec3, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64vec4, aligned_f64vec4, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mat2, aligned_mat2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mat3, aligned_mat3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mat4, aligned_mat4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mat2x2, aligned_mat2x2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mat3x3, aligned_mat3x3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mat4x4, aligned_mat4x4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat2x2, aligned_fmat2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat3x3, aligned_fmat3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat4x4, aligned_fmat4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat2x2, aligned_fmat2x2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat2x3, aligned_fmat2x3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat2x4, aligned_fmat2x4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat3x2, aligned_fmat3x2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat3x3, aligned_fmat3x3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat3x4, aligned_fmat3x4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat4x2, aligned_fmat4x2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat4x3, aligned_fmat4x3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat4x4, aligned_fmat4x4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat2x2, aligned_f32mat2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat3x3, aligned_f32mat3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat4x4, aligned_f32mat4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat2x2, aligned_f32mat2x2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat2x3, aligned_f32mat2x3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat2x4, aligned_f32mat2x4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat3x2, aligned_f32mat3x2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat3x3, aligned_f32mat3x3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat3x4, aligned_f32mat3x4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat4x2, aligned_f32mat4x2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat4x3, aligned_f32mat4x3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat4x4, aligned_f32mat4x4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat2x2, aligned_f64mat2, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat3x3, aligned_f64mat3, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat4x4, aligned_f64mat4, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat2x2, aligned_f64mat2x2, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat2x3, aligned_f64mat2x3, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat2x4, aligned_f64mat2x4, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat3x2, aligned_f64mat3x2, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat3x3, aligned_f64mat3x3, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat3x4, aligned_f64mat3x4, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat4x2, aligned_f64mat4x2, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat4x3, aligned_f64mat4x3, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat4x4, aligned_f64mat4x4, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (quat, aligned_quat, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fquat, aligned_fquat, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (dquat, aligned_dquat, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32quat, aligned_f32quat, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64quat, aligned_f64quat, 32)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Defines aligned types\&. 

\fBPrecision types\fP defines aligned types\&.
.PP
<\fBglm/gtx/type_aligned\&.hpp\fP> need to be included to use these functionalities\&. 
.SH "Function Documentation"
.PP 
.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_int8\fP, aligned_lowp_int8, 1)"
Low precision 8 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_int16\fP, aligned_lowp_int16, 2)"
Low precision 16 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_int32\fP, aligned_lowp_int32, 4)"
Low precision 32 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_int64\fP, aligned_lowp_int64, 8)"
Low precision 64 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_int8_t\fP, aligned_lowp_int8_t, 1)"
Low precision 8 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_int16_t\fP, aligned_lowp_int16_t, 2)"
Low precision 16 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_int32_t\fP, aligned_lowp_int32_t, 4)"
Low precision 32 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_int64_t\fP, aligned_lowp_int64_t, 8)"
Low precision 64 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_i8\fP, aligned_lowp_i8, 1)"
Low precision 8 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_i16\fP, aligned_lowp_i16, 2)"
Low precision 16 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_i32\fP, aligned_lowp_i32, 4)"
Low precision 32 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_i64\fP, aligned_lowp_i64, 8)"
Low precision 64 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_int8\fP, aligned_mediump_int8, 1)"
Medium precision 8 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_int16\fP, aligned_mediump_int16, 2)"
Medium precision 16 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_int32\fP, aligned_mediump_int32, 4)"
Medium precision 32 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_int64\fP, aligned_mediump_int64, 8)"
Medium precision 64 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_int8_t\fP, aligned_mediump_int8_t, 1)"
Medium precision 8 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_int16_t\fP, aligned_mediump_int16_t, 2)"
Medium precision 16 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_int32_t\fP, aligned_mediump_int32_t, 4)"
Medium precision 32 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_int64_t\fP, aligned_mediump_int64_t, 8)"
Medium precision 64 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_i8\fP, aligned_mediump_i8, 1)"
Medium precision 8 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_i16\fP, aligned_mediump_i16, 2)"
Medium precision 16 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_i32\fP, aligned_mediump_i32, 4)"
Medium precision 32 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_i64\fP, aligned_mediump_i64, 8)"
Medium precision 64 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_int8\fP, aligned_highp_int8, 1)"
High precision 8 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_int16\fP, aligned_highp_int16, 2)"
High precision 16 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_int32\fP, aligned_highp_int32, 4)"
High precision 32 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_int64\fP, aligned_highp_int64, 8)"
High precision 64 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_int8_t\fP, aligned_highp_int8_t, 1)"
High precision 8 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_int16_t\fP, aligned_highp_int16_t, 2)"
High precision 16 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_int32_t\fP, aligned_highp_int32_t, 4)"
High precision 32 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_int64_t\fP, aligned_highp_int64_t, 8)"
High precision 64 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_i8\fP, aligned_highp_i8, 1)"
High precision 8 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_i16\fP, aligned_highp_i16, 2)"
High precision 16 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_i32\fP, aligned_highp_i32, 4)"
High precision 32 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_i64\fP, aligned_highp_i64, 8)"
High precision 64 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBint8\fP, aligned_int8, 1)"
Default precision 8 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBint16\fP, aligned_int16, 2)"
Default precision 16 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBint32\fP, aligned_int32, 4)"
Default precision 32 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBint64\fP, aligned_int64, 8)"
Default precision 64 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBint8_t\fP, aligned_int8_t, 1)"
Default precision 8 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBint16_t\fP, aligned_int16_t, 2)"
Default precision 16 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBint32_t\fP, aligned_int32_t, 4)"
Default precision 32 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBint64_t\fP, aligned_int64_t, 8)"
Default precision 64 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBi8\fP, aligned_i8, 1)"
Default precision 8 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBi16\fP, aligned_i16, 2)"
Default precision 16 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBi32\fP, aligned_i32, 4)"
Default precision 32 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBi64\fP, aligned_i64, 8)"
Default precision 64 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBivec1\fP, aligned_ivec1, 4)"
Default precision 32 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (ivec2, aligned_ivec2, 8)"
Default precision 32 bit signed integer aligned vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (ivec3, aligned_ivec3, 16)"
Default precision 32 bit signed integer aligned vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (ivec4, aligned_ivec4, 16)"
Default precision 32 bit signed integer aligned vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBi8vec1\fP, aligned_i8vec1, 1)"
Default precision 8 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBi8vec2\fP, aligned_i8vec2, 2)"
Default precision 8 bit signed integer aligned vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBi8vec3\fP, aligned_i8vec3, 4)"
Default precision 8 bit signed integer aligned vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBi8vec4\fP, aligned_i8vec4, 4)"
Default precision 8 bit signed integer aligned vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBi16vec1\fP, aligned_i16vec1, 2)"
Default precision 16 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBi16vec2\fP, aligned_i16vec2, 4)"
Default precision 16 bit signed integer aligned vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBi16vec3\fP, aligned_i16vec3, 8)"
Default precision 16 bit signed integer aligned vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBi16vec4\fP, aligned_i16vec4, 8)"
Default precision 16 bit signed integer aligned vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBi32vec1\fP, aligned_i32vec1, 4)"
Default precision 32 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBi32vec2\fP, aligned_i32vec2, 8)"
Default precision 32 bit signed integer aligned vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBi32vec3\fP, aligned_i32vec3, 16)"
Default precision 32 bit signed integer aligned vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBi32vec4\fP, aligned_i32vec4, 16)"
Default precision 32 bit signed integer aligned vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBi64vec1\fP, aligned_i64vec1, 8)"
Default precision 64 bit signed integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBi64vec2\fP, aligned_i64vec2, 16)"
Default precision 64 bit signed integer aligned vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBi64vec3\fP, aligned_i64vec3, 32)"
Default precision 64 bit signed integer aligned vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBi64vec4\fP, aligned_i64vec4, 32)"
Default precision 64 bit signed integer aligned vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_uint8\fP, aligned_lowp_uint8, 1)"
Low precision 8 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_uint16\fP, aligned_lowp_uint16, 2)"
Low precision 16 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_uint32\fP, aligned_lowp_uint32, 4)"
Low precision 32 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_uint64\fP, aligned_lowp_uint64, 8)"
Low precision 64 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_uint8_t\fP, aligned_lowp_uint8_t, 1)"
Low precision 8 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_uint16_t\fP, aligned_lowp_uint16_t, 2)"
Low precision 16 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_uint32_t\fP, aligned_lowp_uint32_t, 4)"
Low precision 32 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_uint64_t\fP, aligned_lowp_uint64_t, 8)"
Low precision 64 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_u8\fP, aligned_lowp_u8, 1)"
Low precision 8 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_u16\fP, aligned_lowp_u16, 2)"
Low precision 16 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_u32\fP, aligned_lowp_u32, 4)"
Low precision 32 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBlowp_u64\fP, aligned_lowp_u64, 8)"
Low precision 64 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_uint8\fP, aligned_mediump_uint8, 1)"
Medium precision 8 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_uint16\fP, aligned_mediump_uint16, 2)"
Medium precision 16 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_uint32\fP, aligned_mediump_uint32, 4)"
Medium precision 32 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_uint64\fP, aligned_mediump_uint64, 8)"
Medium precision 64 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_uint8_t\fP, aligned_mediump_uint8_t, 1)"
Medium precision 8 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_uint16_t\fP, aligned_mediump_uint16_t, 2)"
Medium precision 16 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_uint32_t\fP, aligned_mediump_uint32_t, 4)"
Medium precision 32 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_uint64_t\fP, aligned_mediump_uint64_t, 8)"
Medium precision 64 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_u8\fP, aligned_mediump_u8, 1)"
Medium precision 8 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_u16\fP, aligned_mediump_u16, 2)"
Medium precision 16 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_u32\fP, aligned_mediump_u32, 4)"
Medium precision 32 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBmediump_u64\fP, aligned_mediump_u64, 8)"
Medium precision 64 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_uint8\fP, aligned_highp_uint8, 1)"
High precision 8 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_uint16\fP, aligned_highp_uint16, 2)"
High precision 16 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_uint32\fP, aligned_highp_uint32, 4)"
High precision 32 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_uint64\fP, aligned_highp_uint64, 8)"
High precision 64 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_uint8_t\fP, aligned_highp_uint8_t, 1)"
High precision 8 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_uint16_t\fP, aligned_highp_uint16_t, 2)"
High precision 16 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_uint32_t\fP, aligned_highp_uint32_t, 4)"
High precision 32 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_uint64_t\fP, aligned_highp_uint64_t, 8)"
High precision 64 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_u8\fP, aligned_highp_u8, 1)"
High precision 8 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_u16\fP, aligned_highp_u16, 2)"
High precision 16 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_u32\fP, aligned_highp_u32, 4)"
High precision 32 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBhighp_u64\fP, aligned_highp_u64, 8)"
High precision 64 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBuint8\fP, aligned_uint8, 1)"
Default precision 8 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBuint16\fP, aligned_uint16, 2)"
Default precision 16 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBuint32\fP, aligned_uint32, 4)"
Default precision 32 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBuint64\fP, aligned_uint64, 8)"
Default precision 64 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBuint8_t\fP, aligned_uint8_t, 1)"
Default precision 8 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBuint16_t\fP, aligned_uint16_t, 2)"
Default precision 16 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBuint32_t\fP, aligned_uint32_t, 4)"
Default precision 32 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBuint64_t\fP, aligned_uint64_t, 8)"
Default precision 64 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBu8\fP, aligned_u8, 1)"
Default precision 8 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBu16\fP, aligned_u16, 2)"
Default precision 16 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBu32\fP, aligned_u32, 4)"
Default precision 32 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBu64\fP, aligned_u64, 8)"
Default precision 64 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBuvec1\fP, aligned_uvec1, 4)"
Default precision 32 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (uvec2, aligned_uvec2, 8)"
Default precision 32 bit unsigned integer aligned vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (uvec3, aligned_uvec3, 16)"
Default precision 32 bit unsigned integer aligned vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (uvec4, aligned_uvec4, 16)"
Default precision 32 bit unsigned integer aligned vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBu8vec1\fP, aligned_u8vec1, 1)"
Default precision 8 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBu8vec2\fP, aligned_u8vec2, 2)"
Default precision 8 bit unsigned integer aligned vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBu8vec3\fP, aligned_u8vec3, 4)"
Default precision 8 bit unsigned integer aligned vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBu8vec4\fP, aligned_u8vec4, 4)"
Default precision 8 bit unsigned integer aligned vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBu16vec1\fP, aligned_u16vec1, 2)"
Default precision 16 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBu16vec2\fP, aligned_u16vec2, 4)"
Default precision 16 bit unsigned integer aligned vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBu16vec3\fP, aligned_u16vec3, 8)"
Default precision 16 bit unsigned integer aligned vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBu16vec4\fP, aligned_u16vec4, 8)"
Default precision 16 bit unsigned integer aligned vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBu32vec1\fP, aligned_u32vec1, 4)"
Default precision 32 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBu32vec2\fP, aligned_u32vec2, 8)"
Default precision 32 bit unsigned integer aligned vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBu32vec3\fP, aligned_u32vec3, 16)"
Default precision 32 bit unsigned integer aligned vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBu32vec4\fP, aligned_u32vec4, 16)"
Default precision 32 bit unsigned integer aligned vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBu64vec1\fP, aligned_u64vec1, 8)"
Default precision 64 bit unsigned integer aligned scalar type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBu64vec2\fP, aligned_u64vec2, 16)"
Default precision 64 bit unsigned integer aligned vector of 2 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBu64vec3\fP, aligned_u64vec3, 32)"
Default precision 64 bit unsigned integer aligned vector of 3 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBu64vec4\fP, aligned_u64vec4, 32)"
Default precision 64 bit unsigned integer aligned vector of 4 components type\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBfloat32\fP, aligned_float32, 4)"
32 bit single-precision floating-point aligned scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBfloat64\fP, aligned_float64, 8)"
64 bit double-precision floating-point aligned scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBfloat32_t\fP, aligned_float32_t, 4)"
32 bit single-precision floating-point aligned scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBfloat64_t\fP, aligned_float64_t, 8)"
64 bit double-precision floating-point aligned scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBfloat32\fP, aligned_f32, 4)"
32 bit single-precision floating-point aligned scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBfloat64\fP, aligned_f64, 8)"
64 bit double-precision floating-point aligned scalar\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBvec1\fP, aligned_vec1, 4)"
Single-precision floating-point aligned vector of 1 component\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (vec2, aligned_vec2, 8)"
Single-precision floating-point aligned vector of 2 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (vec3, aligned_vec3, 16)"
Single-precision floating-point aligned vector of 3 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (vec4, aligned_vec4, 16)"
Single-precision floating-point aligned vector of 4 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBfvec1\fP, aligned_fvec1, 4)"
Single-precision floating-point aligned vector of 1 component\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBfvec2\fP, aligned_fvec2, 8)"
Single-precision floating-point aligned vector of 2 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBfvec3\fP, aligned_fvec3, 16)"
Single-precision floating-point aligned vector of 3 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBfvec4\fP, aligned_fvec4, 16)"
Single-precision floating-point aligned vector of 4 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf32vec1\fP, aligned_f32vec1, 4)"
Single-precision floating-point aligned vector of 1 component\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf32vec2\fP, aligned_f32vec2, 8)"
Single-precision floating-point aligned vector of 2 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf32vec3\fP, aligned_f32vec3, 16)"
Single-precision floating-point aligned vector of 3 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf32vec4\fP, aligned_f32vec4, 16)"
Single-precision floating-point aligned vector of 4 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBdvec1\fP, aligned_dvec1, 8)"
Double-precision floating-point aligned vector of 1 component\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (dvec2, aligned_dvec2, 16)"
Double-precision floating-point aligned vector of 2 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (dvec3, aligned_dvec3, 32)"
Double-precision floating-point aligned vector of 3 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (dvec4, aligned_dvec4, 32)"
Double-precision floating-point aligned vector of 4 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf64vec1\fP, aligned_f64vec1, 8)"
Double-precision floating-point aligned vector of 1 component\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf64vec2\fP, aligned_f64vec2, 16)"
Double-precision floating-point aligned vector of 2 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf64vec3\fP, aligned_f64vec3, 32)"
Double-precision floating-point aligned vector of 3 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf64vec4\fP, aligned_f64vec4, 32)"
Double-precision floating-point aligned vector of 4 components\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (mat2, aligned_mat2, 16)"
Single-precision floating-point aligned 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP Single-precision floating-point aligned 2x2 matrix\&. 
.PP
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (mat3, aligned_mat3, 16)"
Single-precision floating-point aligned 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (mat4, aligned_mat4, 16)"
Single-precision floating-point aligned 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (mat2x2, aligned_mat2x2, 16)"
Single-precision floating-point aligned 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP Single-precision floating-point aligned 2x2 matrix\&. 
.PP
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (mat3x3, aligned_mat3x3, 16)"
Single-precision floating-point aligned 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (mat4x4, aligned_mat4x4, 16)"
Single-precision floating-point aligned 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBfmat2x2\fP, aligned_fmat2, 16)"
Single-precision floating-point aligned 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP Single-precision floating-point aligned 2x2 matrix\&. 
.PP
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBfmat3x3\fP, aligned_fmat3, 16)"
Single-precision floating-point aligned 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBfmat4x4\fP, aligned_fmat4, 16)"
Single-precision floating-point aligned 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBfmat2x2\fP, aligned_fmat2x2, 16)"
Single-precision floating-point aligned 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP Single-precision floating-point aligned 2x2 matrix\&. 
.PP
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBfmat2x3\fP, aligned_fmat2x3, 16)"
Single-precision floating-point aligned 2x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBfmat2x4\fP, aligned_fmat2x4, 16)"
Single-precision floating-point aligned 2x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBfmat3x2\fP, aligned_fmat3x2, 16)"
Single-precision floating-point aligned 3x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBfmat3x3\fP, aligned_fmat3x3, 16)"
Single-precision floating-point aligned 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBfmat3x4\fP, aligned_fmat3x4, 16)"
Single-precision floating-point aligned 3x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBfmat4x2\fP, aligned_fmat4x2, 16)"
Single-precision floating-point aligned 4x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBfmat4x3\fP, aligned_fmat4x3, 16)"
Single-precision floating-point aligned 4x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBfmat4x4\fP, aligned_fmat4x4, 16)"
Single-precision floating-point aligned 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf32mat2x2\fP, aligned_f32mat2, 16)"
Single-precision floating-point aligned 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP Single-precision floating-point aligned 2x2 matrix\&. 
.PP
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf32mat3x3\fP, aligned_f32mat3, 16)"
Single-precision floating-point aligned 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf32mat4x4\fP, aligned_f32mat4, 16)"
Single-precision floating-point aligned 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf32mat2x2\fP, aligned_f32mat2x2, 16)"
Single-precision floating-point aligned 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP Single-precision floating-point aligned 2x2 matrix\&. 
.PP
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf32mat2x3\fP, aligned_f32mat2x3, 16)"
Single-precision floating-point aligned 2x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf32mat2x4\fP, aligned_f32mat2x4, 16)"
Single-precision floating-point aligned 2x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf32mat3x2\fP, aligned_f32mat3x2, 16)"
Single-precision floating-point aligned 3x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf32mat3x3\fP, aligned_f32mat3x3, 16)"
Single-precision floating-point aligned 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf32mat3x4\fP, aligned_f32mat3x4, 16)"
Single-precision floating-point aligned 3x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf32mat4x2\fP, aligned_f32mat4x2, 16)"
Single-precision floating-point aligned 4x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf32mat4x3\fP, aligned_f32mat4x3, 16)"
Single-precision floating-point aligned 4x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf32mat4x4\fP, aligned_f32mat4x4, 16)"
Single-precision floating-point aligned 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf64mat2x2\fP, aligned_f64mat2, 32)"
Double-precision floating-point aligned 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP Double-precision floating-point aligned 2x2 matrix\&. 
.PP
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf64mat3x3\fP, aligned_f64mat3, 32)"
Double-precision floating-point aligned 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf64mat4x4\fP, aligned_f64mat4, 32)"
Double-precision floating-point aligned 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf64mat2x2\fP, aligned_f64mat2x2, 32)"
Double-precision floating-point aligned 1x1 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP Double-precision floating-point aligned 2x2 matrix\&. 
.PP
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf64mat2x3\fP, aligned_f64mat2x3, 32)"
Double-precision floating-point aligned 2x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf64mat2x4\fP, aligned_f64mat2x4, 32)"
Double-precision floating-point aligned 2x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf64mat3x2\fP, aligned_f64mat3x2, 32)"
Double-precision floating-point aligned 3x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf64mat3x3\fP, aligned_f64mat3x3, 32)"
Double-precision floating-point aligned 3x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf64mat3x4\fP, aligned_f64mat3x4, 32)"
Double-precision floating-point aligned 3x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf64mat4x2\fP, aligned_f64mat4x2, 32)"
Double-precision floating-point aligned 4x2 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf64mat4x3\fP, aligned_f64mat4x3, 32)"
Double-precision floating-point aligned 4x3 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf64mat4x4\fP, aligned_f64mat4x4, 32)"
Double-precision floating-point aligned 4x4 matrix\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBquat\fP, aligned_quat, 16)"
Single-precision floating-point aligned quaternion\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBfquat\fP, aligned_fquat, 16)"
Single-precision floating-point aligned quaternion\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBdquat\fP, aligned_dquat, 32)"
Double-precision floating-point aligned quaternion\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf32quat\fP, aligned_f32quat, 16)"
Single-precision floating-point aligned quaternion\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SS "glm::GLM_ALIGNED_TYPEDEF (\fBf64quat\fP, aligned_f64quat, 32)"
Double-precision floating-point aligned quaternion\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_type_aligned\fP 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Fusion3D from the source code\&.
