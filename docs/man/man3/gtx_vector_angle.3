.TH "gtx_vector_angle" 3 "Tue Nov 24 2015" "Version 0.0.0.1" "Fusion3D" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gtx_vector_angle \- GLM_GTX_vector_angle
.PP
Compute angle between vectors\&.  

.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename vecType > GLM_FUNC_DECL vecType::value_type \fBglm::angle\fP (vecType const &x, vecType const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBglm::orientedAngle\fP (tvec2< T, P > const &x, tvec2< T, P > const &y)"
.br
.ti -1c
.RI "template<typename T , precision P> GLM_FUNC_DECL T \fBglm::orientedAngle\fP (tvec3< T, P > const &x, tvec3< T, P > const &y, tvec3< T, P > const &ref)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Compute angle between vectors\&. 

<\fBglm/gtx/vector_angle\&.hpp\fP> need to be included to use these functionalities\&. 
.SH "Function Documentation"
.PP 
.SS "template<typename vecType > GLM_FUNC_DECL vecType::value_type glm::angle (vecType const & x, vecType const & y)"
Returns the absolute angle between two vectors Parameters need to be normalized\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_vector_angle\fP extension 
.RE
.PP

.SS "template<typename T , precision P> GLM_FUNC_DECL T glm::orientedAngle (tvec2< T, P > const & x, tvec2< T, P > const & y)"
Returns the oriented angle between two 2d vectors Parameters need to be normalized\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_vector_angle\fP extension\&.
.RE
.PP
\fBTodo\fP
.RS 4
epsilon is hard coded to 0\&.01 
.RE
.PP

.SS "template<typename T , precision P> GLM_FUNC_DECL T glm::orientedAngle (tvec3< T, P > const & x, tvec3< T, P > const & y, tvec3< T, P > const & ref)"
Returns the oriented angle between two 3d vectors based from a reference axis\&. Parameters need to be normalized\&. 
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_vector_angle\fP extension\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Fusion3D from the source code\&.
