.TH "F:/Fusion3D_work/src/staticLibs/glm/gtx/type_aligned.hpp" 3 "Tue Nov 24 2015" "Version 0.0.0.1" "Fusion3D" \" -*- nroff -*-
.ad l
.nh
.SH NAME
F:/Fusion3D_work/src/staticLibs/glm/gtx/type_aligned.hpp \- 
.SH SYNOPSIS
.br
.PP
\fC#include '\&.\&./gtc/type_precision\&.hpp'\fP
.br
\fC#include 'type_aligned\&.inl'\fP
.br

.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBglm\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_int8, aligned_lowp_int8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_int16, aligned_lowp_int16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_int32, aligned_lowp_int32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_int64, aligned_lowp_int64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_int8_t, aligned_lowp_int8_t, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_int16_t, aligned_lowp_int16_t, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_int32_t, aligned_lowp_int32_t, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_int64_t, aligned_lowp_int64_t, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_i8, aligned_lowp_i8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_i16, aligned_lowp_i16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_i32, aligned_lowp_i32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_i64, aligned_lowp_i64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_int8, aligned_mediump_int8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_int16, aligned_mediump_int16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_int32, aligned_mediump_int32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_int64, aligned_mediump_int64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_int8_t, aligned_mediump_int8_t, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_int16_t, aligned_mediump_int16_t, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_int32_t, aligned_mediump_int32_t, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_int64_t, aligned_mediump_int64_t, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_i8, aligned_mediump_i8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_i16, aligned_mediump_i16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_i32, aligned_mediump_i32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_i64, aligned_mediump_i64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_int8, aligned_highp_int8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_int16, aligned_highp_int16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_int32, aligned_highp_int32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_int64, aligned_highp_int64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_int8_t, aligned_highp_int8_t, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_int16_t, aligned_highp_int16_t, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_int32_t, aligned_highp_int32_t, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_int64_t, aligned_highp_int64_t, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_i8, aligned_highp_i8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_i16, aligned_highp_i16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_i32, aligned_highp_i32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_i64, aligned_highp_i64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (int8, aligned_int8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBint16\fP, aligned_int16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBint32\fP, aligned_int32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (int64, aligned_int64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBint8_t\fP, aligned_int8_t, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBint16_t\fP, aligned_int16_t, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBint32_t\fP, aligned_int32_t, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBint64_t\fP, aligned_int64_t, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i8, aligned_i8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i16, aligned_i16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i32, aligned_i32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i64, aligned_i64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (ivec1, aligned_ivec1, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (ivec2, aligned_ivec2, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (ivec3, aligned_ivec3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (ivec4, aligned_ivec4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i8vec1, aligned_i8vec1, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i8vec2, aligned_i8vec2, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i8vec3, aligned_i8vec3, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i8vec4, aligned_i8vec4, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i16vec1, aligned_i16vec1, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i16vec2, aligned_i16vec2, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i16vec3, aligned_i16vec3, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i16vec4, aligned_i16vec4, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i32vec1, aligned_i32vec1, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i32vec2, aligned_i32vec2, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i32vec3, aligned_i32vec3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i32vec4, aligned_i32vec4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i64vec1, aligned_i64vec1, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i64vec2, aligned_i64vec2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i64vec3, aligned_i64vec3, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (i64vec4, aligned_i64vec4, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_uint8, aligned_lowp_uint8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_uint16, aligned_lowp_uint16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_uint32, aligned_lowp_uint32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_uint64, aligned_lowp_uint64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_uint8_t, aligned_lowp_uint8_t, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_uint16_t, aligned_lowp_uint16_t, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_uint32_t, aligned_lowp_uint32_t, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_uint64_t, aligned_lowp_uint64_t, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_u8, aligned_lowp_u8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_u16, aligned_lowp_u16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_u32, aligned_lowp_u32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (lowp_u64, aligned_lowp_u64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_uint8, aligned_mediump_uint8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_uint16, aligned_mediump_uint16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_uint32, aligned_mediump_uint32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_uint64, aligned_mediump_uint64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_uint8_t, aligned_mediump_uint8_t, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_uint16_t, aligned_mediump_uint16_t, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_uint32_t, aligned_mediump_uint32_t, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_uint64_t, aligned_mediump_uint64_t, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_u8, aligned_mediump_u8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_u16, aligned_mediump_u16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_u32, aligned_mediump_u32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mediump_u64, aligned_mediump_u64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_uint8, aligned_highp_uint8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_uint16, aligned_highp_uint16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_uint32, aligned_highp_uint32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_uint64, aligned_highp_uint64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_uint8_t, aligned_highp_uint8_t, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_uint16_t, aligned_highp_uint16_t, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_uint32_t, aligned_highp_uint32_t, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_uint64_t, aligned_highp_uint64_t, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_u8, aligned_highp_u8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_u16, aligned_highp_u16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_u32, aligned_highp_u32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (highp_u64, aligned_highp_u64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBuint8\fP, aligned_uint8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBuint16\fP, aligned_uint16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBuint32\fP, aligned_uint32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (uint64, aligned_uint64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBuint8_t\fP, aligned_uint8_t, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBuint16_t\fP, aligned_uint16_t, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBuint32_t\fP, aligned_uint32_t, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (\fBuint64_t\fP, aligned_uint64_t, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u8, aligned_u8, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u16, aligned_u16, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u32, aligned_u32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u64, aligned_u64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (uvec1, aligned_uvec1, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (uvec2, aligned_uvec2, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (uvec3, aligned_uvec3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (uvec4, aligned_uvec4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u8vec1, aligned_u8vec1, 1)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u8vec2, aligned_u8vec2, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u8vec3, aligned_u8vec3, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u8vec4, aligned_u8vec4, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u16vec1, aligned_u16vec1, 2)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u16vec2, aligned_u16vec2, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u16vec3, aligned_u16vec3, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u16vec4, aligned_u16vec4, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u32vec1, aligned_u32vec1, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u32vec2, aligned_u32vec2, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u32vec3, aligned_u32vec3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u32vec4, aligned_u32vec4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u64vec1, aligned_u64vec1, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u64vec2, aligned_u64vec2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u64vec3, aligned_u64vec3, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (u64vec4, aligned_u64vec4, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (float32, aligned_float32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (float64, aligned_float64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (float32_t, aligned_float32_t, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (float64_t, aligned_float64_t, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (float32, aligned_f32, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (float64, aligned_f64, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (vec1, aligned_vec1, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (vec2, aligned_vec2, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (vec3, aligned_vec3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (vec4, aligned_vec4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fvec1, aligned_fvec1, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fvec2, aligned_fvec2, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fvec3, aligned_fvec3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fvec4, aligned_fvec4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32vec1, aligned_f32vec1, 4)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32vec2, aligned_f32vec2, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32vec3, aligned_f32vec3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32vec4, aligned_f32vec4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (dvec1, aligned_dvec1, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (dvec2, aligned_dvec2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (dvec3, aligned_dvec3, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (dvec4, aligned_dvec4, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64vec1, aligned_f64vec1, 8)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64vec2, aligned_f64vec2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64vec3, aligned_f64vec3, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64vec4, aligned_f64vec4, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mat2, aligned_mat2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mat3, aligned_mat3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mat4, aligned_mat4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mat2x2, aligned_mat2x2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mat3x3, aligned_mat3x3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (mat4x4, aligned_mat4x4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat2x2, aligned_fmat2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat3x3, aligned_fmat3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat4x4, aligned_fmat4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat2x2, aligned_fmat2x2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat2x3, aligned_fmat2x3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat2x4, aligned_fmat2x4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat3x2, aligned_fmat3x2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat3x3, aligned_fmat3x3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat3x4, aligned_fmat3x4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat4x2, aligned_fmat4x2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat4x3, aligned_fmat4x3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fmat4x4, aligned_fmat4x4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat2x2, aligned_f32mat2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat3x3, aligned_f32mat3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat4x4, aligned_f32mat4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat2x2, aligned_f32mat2x2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat2x3, aligned_f32mat2x3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat2x4, aligned_f32mat2x4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat3x2, aligned_f32mat3x2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat3x3, aligned_f32mat3x3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat3x4, aligned_f32mat3x4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat4x2, aligned_f32mat4x2, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat4x3, aligned_f32mat4x3, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32mat4x4, aligned_f32mat4x4, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat2x2, aligned_f64mat2, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat3x3, aligned_f64mat3, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat4x4, aligned_f64mat4, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat2x2, aligned_f64mat2x2, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat2x3, aligned_f64mat2x3, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat2x4, aligned_f64mat2x4, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat3x2, aligned_f64mat3x2, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat3x3, aligned_f64mat3x3, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat3x4, aligned_f64mat3x4, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat4x2, aligned_f64mat4x2, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat4x3, aligned_f64mat4x3, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64mat4x4, aligned_f64mat4x4, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (quat, aligned_quat, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (fquat, aligned_fquat, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (dquat, aligned_dquat, 32)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f32quat, aligned_f32quat, 16)"
.br
.ti -1c
.RI "\fBglm::GLM_ALIGNED_TYPEDEF\fP (f64quat, aligned_f64quat, 32)"
.br
.in -1c
.SH "Detailed Description"
.PP 
OpenGL Mathematics (glm\&.g-truc\&.net)
.PP
Copyright (c) 2005 - 2015 G-Truc Creation (www\&.g-truc\&.net) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
.PP
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software\&.
.PP
Restrictions: By making use of the Software for military purposes, you choose to make a Bunny unhappy\&.
.PP
THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT\&. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE\&.
.PP
\fBGLM_GTX_type_aligned\fP
.PP
\fBDate:\fP
.RS 4
2014-11-23 / 2014-12-23 
.RE
.PP
\fBAuthor:\fP
.RS 4
Christophe Riccio
.RE
.PP
\fBSee also:\fP
.RS 4
\fBGLM Core\fP (dependence) 
.PP
\fBGLM_GTC_quaternion\fP (dependence) 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Fusion3D from the source code\&.
