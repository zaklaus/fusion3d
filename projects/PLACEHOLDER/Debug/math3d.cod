; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	e:\fusion3d_work\engine\src\core\math3d.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

	ORG $+3
?btInfinityMask@@3HA DD 07f800000H			; btInfinityMask
	ORG $+1
$SG4294813793 DB 'Assert e:\fusion3d_work\lib\bullet3\include\BulletColli'
	DB	'sion/BroadphaseCollision/btAxisSweep3.h:%u (m_firstFreeHandle'
	DB	')', 0aH, 00H
	ORG $+1
$SG4294813792 DB 'Assert e:\fusion3d_work\lib\bullet3\include\BulletColli'
	DB	'sion/BroadphaseCollision/btAxisSweep3.h:%u (handle > 0 && han'
	DB	'dle < m_maxHandles)', 0aH, 00H
	ORG $+3
?btNanMask@@3HA DD 07f800001H				; btNanMask
$SG4294813795 DB 'Assert e:\fusion3d_work\lib\bullet3\include\BulletColli'
	DB	'sion/BroadphaseCollision/btAxisSweep3.h:%u (!pair.m_algorithm'
	DB	')', 0aH, 00H
	ORG $+1
$SG4294813794 DB 'Assert e:\fusion3d_work\lib\bullet3\include\BulletColli'
	DB	'sion/BroadphaseCollision/btAxisSweep3.h:%u (!pair.m_algorithm'
	DB	')', 0aH, 00H
	ORG $+1
$SG4294813791 DB 'Assert e:\fusion3d_work\lib\bullet3\include\BulletColli'
	DB	'sion/BroadphaseCollision/btAxisSweep3.h:%u (m_firstFreeHandle'
	DB	')', 0aH, 00H
	ORG $+1
$SG4294813790 DB 'Assert e:\fusion3d_work\lib\bullet3\include\BulletColli'
	DB	'sion/BroadphaseCollision/btAxisSweep3.h:%u (handle > 0 && han'
	DB	'dle < m_maxHandles)', 0aH, 00H
PUBLIC	??DQuaternion@@QBE?AV0@ABV?$Vector3@M@@@Z	; Quaternion::operator*
PUBLIC	?Rotate@Vector3f@@QBE?AV1@ABVQuaternion@@@Z	; Vector3f::Rotate
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\core\math3d.cpp
_TEXT	SEGMENT
_ret$ = -88						; size = 12
$T1 = -72						; size = 16
_w$ = -52						; size = 16
_conjugateQ$ = -28					; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_rotation$ = 12						; size = 4
?Rotate@Vector3f@@QBE?AV1@ABVQuaternion@@@Z PROC	; Vector3f::Rotate
; _this$ = ecx

; 20   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	57		 push	 edi
  00007	51		 push	 ecx
  00008	8d 7d a4	 lea	 edi, DWORD PTR [ebp-92]
  0000b	b9 17 00 00 00	 mov	 ecx, 23			; 00000017H
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	59		 pop	 ecx
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00022	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 21   : 	Quaternion conjugateQ = rotation.Conjugate();

  00025	8d 45 e4	 lea	 eax, DWORD PTR _conjugateQ$[ebp]
  00028	50		 push	 eax
  00029	8b 4d 0c	 mov	 ecx, DWORD PTR _rotation$[ebp]
  0002c	e8 00 00 00 00	 call	 ?Conjugate@Quaternion@@QBE?AV1@XZ ; Quaternion::Conjugate

; 22   : 	Quaternion w = rotation * (*this) * conjugateQ;

  00031	8d 4d e4	 lea	 ecx, DWORD PTR _conjugateQ$[ebp]
  00034	51		 push	 ecx
  00035	8d 55 cc	 lea	 edx, DWORD PTR _w$[ebp]
  00038	52		 push	 edx
  00039	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	50		 push	 eax
  0003d	8d 4d b8	 lea	 ecx, DWORD PTR $T1[ebp]
  00040	51		 push	 ecx
  00041	8b 4d 0c	 mov	 ecx, DWORD PTR _rotation$[ebp]
  00044	e8 00 00 00 00	 call	 ??DQuaternion@@QBE?AV0@ABV?$Vector3@M@@@Z ; Quaternion::operator*
  00049	8b c8		 mov	 ecx, eax
  0004b	e8 00 00 00 00	 call	 ??DQuaternion@@QBE?AV0@ABV0@@Z ; Quaternion::operator*

; 23   : 
; 24   : 	Vector3f ret(w.GetX(), w.GetY(), w.GetZ());

  00050	8d 4d cc	 lea	 ecx, DWORD PTR _w$[ebp]
  00053	e8 00 00 00 00	 call	 ?GetZ@?$Vector4@M@@QBEMXZ ; Vector4<float>::GetZ
  00058	51		 push	 ecx
  00059	d9 1c 24	 fstp	 DWORD PTR [esp]
  0005c	8d 4d cc	 lea	 ecx, DWORD PTR _w$[ebp]
  0005f	e8 00 00 00 00	 call	 ?GetY@?$Vector4@M@@QBEMXZ ; Vector4<float>::GetY
  00064	51		 push	 ecx
  00065	d9 1c 24	 fstp	 DWORD PTR [esp]
  00068	8d 4d cc	 lea	 ecx, DWORD PTR _w$[ebp]
  0006b	e8 00 00 00 00	 call	 ?GetX@?$Vector4@M@@QBEMXZ ; Vector4<float>::GetX
  00070	51		 push	 ecx
  00071	d9 1c 24	 fstp	 DWORD PTR [esp]
  00074	8d 4d a8	 lea	 ecx, DWORD PTR _ret$[ebp]
  00077	e8 00 00 00 00	 call	 ??0Vector3f@@QAE@MMM@Z	; Vector3f::Vector3f

; 25   : 
; 26   : 	return ret;

  0007c	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0007f	8b 45 a8	 mov	 eax, DWORD PTR _ret$[ebp]
  00082	89 02		 mov	 DWORD PTR [edx], eax
  00084	8b 4d ac	 mov	 ecx, DWORD PTR _ret$[ebp+4]
  00087	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0008a	8b 45 b0	 mov	 eax, DWORD PTR _ret$[ebp+8]
  0008d	89 42 08	 mov	 DWORD PTR [edx+8], eax
  00090	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 27   : }

  00093	52		 push	 edx
  00094	8b cd		 mov	 ecx, ebp
  00096	50		 push	 eax
  00097	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@Rotate
  0009d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000a2	58		 pop	 eax
  000a3	5a		 pop	 edx
  000a4	5f		 pop	 edi
  000a5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a8	33 cd		 xor	 ecx, ebp
  000aa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000af	83 c4 5c	 add	 esp, 92			; 0000005cH
  000b2	3b ec		 cmp	 ebp, esp
  000b4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c2 08 00	 ret	 8
  000bf	90		 npad	 1
$LN7@Rotate:
  000c0	03 00 00 00	 DD	 3
  000c4	00 00 00 00	 DD	 $LN6@Rotate
$LN6@Rotate:
  000c8	e4 ff ff ff	 DD	 -28			; ffffffe4H
  000cc	10 00 00 00	 DD	 16			; 00000010H
  000d0	00 00 00 00	 DD	 $LN3@Rotate
  000d4	cc ff ff ff	 DD	 -52			; ffffffccH
  000d8	10 00 00 00	 DD	 16			; 00000010H
  000dc	00 00 00 00	 DD	 $LN4@Rotate
  000e0	a8 ff ff ff	 DD	 -88			; ffffffa8H
  000e4	0c 00 00 00	 DD	 12			; 0000000cH
  000e8	00 00 00 00	 DD	 $LN5@Rotate
$LN5@Rotate:
  000ec	72		 DB	 114			; 00000072H
  000ed	65		 DB	 101			; 00000065H
  000ee	74		 DB	 116			; 00000074H
  000ef	00		 DB	 0
$LN4@Rotate:
  000f0	77		 DB	 119			; 00000077H
  000f1	00		 DB	 0
$LN3@Rotate:
  000f2	63		 DB	 99			; 00000063H
  000f3	6f		 DB	 111			; 0000006fH
  000f4	6e		 DB	 110			; 0000006eH
  000f5	6a		 DB	 106			; 0000006aH
  000f6	75		 DB	 117			; 00000075H
  000f7	67		 DB	 103			; 00000067H
  000f8	61		 DB	 97			; 00000061H
  000f9	74		 DB	 116			; 00000074H
  000fa	65		 DB	 101			; 00000065H
  000fb	51		 DB	 81			; 00000051H
  000fc	00		 DB	 0
?Rotate@Vector3f@@QBE?AV1@ABVQuaternion@@@Z ENDP	; Vector3f::Rotate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\core\math3d.h
;	COMDAT ??DQuaternion@@QBE?AV0@ABV?$Vector3@M@@@Z
_TEXT	SEGMENT
tv337 = -196						; size = 4
tv387 = -192						; size = 4
tv333 = -188						; size = 4
tv385 = -184						; size = 4
tv329 = -180						; size = 4
tv383 = -176						; size = 4
tv325 = -172						; size = 4
tv381 = -168						; size = 4
tv321 = -164						; size = 4
tv379 = -160						; size = 4
tv317 = -156						; size = 4
tv313 = -152						; size = 4
tv377 = -148						; size = 4
tv309 = -144						; size = 4
tv375 = -140						; size = 4
tv305 = -136						; size = 4
tv373 = -132						; size = 4
tv301 = -128						; size = 4
tv371 = -124						; size = 4
tv297 = -120						; size = 4
tv369 = -116						; size = 4
tv293 = -112						; size = 4
tv289 = -108						; size = 4
tv367 = -104						; size = 4
tv285 = -100						; size = 4
tv365 = -96						; size = 4
tv281 = -92						; size = 4
tv363 = -88						; size = 4
tv277 = -84						; size = 4
tv361 = -80						; size = 4
tv273 = -76						; size = 4
tv359 = -72						; size = 4
tv269 = -68						; size = 4
tv265 = -64						; size = 4
tv357 = -60						; size = 4
tv261 = -56						; size = 4
tv355 = -52						; size = 4
tv257 = -48						; size = 4
tv353 = -44						; size = 4
tv253 = -40						; size = 4
tv351 = -36						; size = 4
tv249 = -32						; size = 4
tv349 = -28						; size = 4
tv245 = -24						; size = 4
__z$ = -20						; size = 4
__y$ = -16						; size = 4
__x$ = -12						; size = 4
__w$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??DQuaternion@@QBE?AV0@ABV?$Vector3@M@@@Z PROC		; Quaternion::operator*, COMDAT
; _this$ = ecx

; 1020 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	57		 push	 edi
  0000a	51		 push	 ecx
  0000b	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00011	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	59		 pop	 ecx
  0001e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1021 : 		const float _w = - (GetX() * v.GetX()) - (GetY() * v.GetY()) - (GetZ() * v.GetZ());

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?GetX@?$Vector4@M@@QBEMXZ ; Vector4<float>::GetX
  00029	d9 5d e8	 fstp	 DWORD PTR tv245[ebp]
  0002c	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR tv245[ebp]
  00031	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00034	f3 0f 11 45 e4	 movss	 DWORD PTR tv349[ebp], xmm0
  00039	e8 00 00 00 00	 call	 ?GetX@?$Vector3@M@@QBEMXZ ; Vector3<float>::GetX
  0003e	d9 5d e0	 fstp	 DWORD PTR tv249[ebp]
  00041	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR tv349[ebp]
  00046	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR tv249[ebp]
  0004b	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	f3 0f 11 45 dc	 movss	 DWORD PTR tv351[ebp], xmm0
  0005a	e8 00 00 00 00	 call	 ?GetY@?$Vector4@M@@QBEMXZ ; Vector4<float>::GetY
  0005f	d9 5d d8	 fstp	 DWORD PTR tv253[ebp]
  00062	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR tv253[ebp]
  00067	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  0006a	f3 0f 11 45 d4	 movss	 DWORD PTR tv353[ebp], xmm0
  0006f	e8 00 00 00 00	 call	 ?GetY@?$Vector3@M@@QBEMXZ ; Vector3<float>::GetY
  00074	d9 5d d0	 fstp	 DWORD PTR tv257[ebp]
  00077	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR tv353[ebp]
  0007c	f3 0f 59 45 d0	 mulss	 xmm0, DWORD PTR tv257[ebp]
  00081	f3 0f 10 4d dc	 movss	 xmm1, DWORD PTR tv351[ebp]
  00086	f3 0f 5c c8	 subss	 xmm1, xmm0
  0008a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008d	f3 0f 11 4d cc	 movss	 DWORD PTR tv355[ebp], xmm1
  00092	e8 00 00 00 00	 call	 ?GetZ@?$Vector4@M@@QBEMXZ ; Vector4<float>::GetZ
  00097	d9 5d c8	 fstp	 DWORD PTR tv261[ebp]
  0009a	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR tv261[ebp]
  0009f	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  000a2	f3 0f 11 45 c4	 movss	 DWORD PTR tv357[ebp], xmm0
  000a7	e8 00 00 00 00	 call	 ?GetZ@?$Vector3@M@@QBEMXZ ; Vector3<float>::GetZ
  000ac	d9 5d c0	 fstp	 DWORD PTR tv265[ebp]
  000af	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR tv357[ebp]
  000b4	f3 0f 59 45 c0	 mulss	 xmm0, DWORD PTR tv265[ebp]
  000b9	f3 0f 10 4d cc	 movss	 xmm1, DWORD PTR tv355[ebp]
  000be	f3 0f 5c c8	 subss	 xmm1, xmm0
  000c2	f3 0f 11 4d f8	 movss	 DWORD PTR __w$[ebp], xmm1

; 1022 : 		const float _x =   (GetW() * v.GetX()) + (GetY() * v.GetZ()) - (GetZ() * v.GetY());

  000c7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ca	e8 00 00 00 00	 call	 ?GetW@?$Vector4@M@@QBEMXZ ; Vector4<float>::GetW
  000cf	d9 5d bc	 fstp	 DWORD PTR tv269[ebp]
  000d2	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR tv269[ebp]
  000d7	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  000da	f3 0f 11 45 b8	 movss	 DWORD PTR tv359[ebp], xmm0
  000df	e8 00 00 00 00	 call	 ?GetX@?$Vector3@M@@QBEMXZ ; Vector3<float>::GetX
  000e4	d9 5d b4	 fstp	 DWORD PTR tv273[ebp]
  000e7	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR tv359[ebp]
  000ec	f3 0f 59 45 b4	 mulss	 xmm0, DWORD PTR tv273[ebp]
  000f1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f4	f3 0f 11 45 b0	 movss	 DWORD PTR tv361[ebp], xmm0
  000f9	e8 00 00 00 00	 call	 ?GetY@?$Vector4@M@@QBEMXZ ; Vector4<float>::GetY
  000fe	d9 5d ac	 fstp	 DWORD PTR tv277[ebp]
  00101	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv277[ebp]
  00106	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00109	f3 0f 11 45 a8	 movss	 DWORD PTR tv363[ebp], xmm0
  0010e	e8 00 00 00 00	 call	 ?GetZ@?$Vector3@M@@QBEMXZ ; Vector3<float>::GetZ
  00113	d9 5d a4	 fstp	 DWORD PTR tv281[ebp]
  00116	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv363[ebp]
  0011b	f3 0f 59 45 a4	 mulss	 xmm0, DWORD PTR tv281[ebp]
  00120	f3 0f 10 4d b0	 movss	 xmm1, DWORD PTR tv361[ebp]
  00125	f3 0f 58 c8	 addss	 xmm1, xmm0
  00129	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0012c	f3 0f 11 4d a0	 movss	 DWORD PTR tv365[ebp], xmm1
  00131	e8 00 00 00 00	 call	 ?GetZ@?$Vector4@M@@QBEMXZ ; Vector4<float>::GetZ
  00136	d9 5d 9c	 fstp	 DWORD PTR tv285[ebp]
  00139	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR tv285[ebp]
  0013e	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00141	f3 0f 11 45 98	 movss	 DWORD PTR tv367[ebp], xmm0
  00146	e8 00 00 00 00	 call	 ?GetY@?$Vector3@M@@QBEMXZ ; Vector3<float>::GetY
  0014b	d9 5d 94	 fstp	 DWORD PTR tv289[ebp]
  0014e	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR tv367[ebp]
  00153	f3 0f 59 45 94	 mulss	 xmm0, DWORD PTR tv289[ebp]
  00158	f3 0f 10 4d a0	 movss	 xmm1, DWORD PTR tv365[ebp]
  0015d	f3 0f 5c c8	 subss	 xmm1, xmm0
  00161	f3 0f 11 4d f4	 movss	 DWORD PTR __x$[ebp], xmm1

; 1023 : 		const float _y =   (GetW() * v.GetY()) + (GetZ() * v.GetX()) - (GetX() * v.GetZ());

  00166	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00169	e8 00 00 00 00	 call	 ?GetW@?$Vector4@M@@QBEMXZ ; Vector4<float>::GetW
  0016e	d9 5d 90	 fstp	 DWORD PTR tv293[ebp]
  00171	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR tv293[ebp]
  00176	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00179	f3 0f 11 45 8c	 movss	 DWORD PTR tv369[ebp], xmm0
  0017e	e8 00 00 00 00	 call	 ?GetY@?$Vector3@M@@QBEMXZ ; Vector3<float>::GetY
  00183	d9 5d 88	 fstp	 DWORD PTR tv297[ebp]
  00186	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv369[ebp]
  0018b	f3 0f 59 45 88	 mulss	 xmm0, DWORD PTR tv297[ebp]
  00190	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00193	f3 0f 11 45 84	 movss	 DWORD PTR tv371[ebp], xmm0
  00198	e8 00 00 00 00	 call	 ?GetZ@?$Vector4@M@@QBEMXZ ; Vector4<float>::GetZ
  0019d	d9 5d 80	 fstp	 DWORD PTR tv301[ebp]
  001a0	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR tv301[ebp]
  001a5	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  001a8	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR tv373[ebp], xmm0
  001b0	e8 00 00 00 00	 call	 ?GetX@?$Vector3@M@@QBEMXZ ; Vector3<float>::GetX
  001b5	d9 9d 78 ff ff
	ff		 fstp	 DWORD PTR tv305[ebp]
  001bb	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR tv373[ebp]
  001c3	f3 0f 59 85 78
	ff ff ff	 mulss	 xmm0, DWORD PTR tv305[ebp]
  001cb	f3 0f 10 4d 84	 movss	 xmm1, DWORD PTR tv371[ebp]
  001d0	f3 0f 58 c8	 addss	 xmm1, xmm0
  001d4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001d7	f3 0f 11 8d 74
	ff ff ff	 movss	 DWORD PTR tv375[ebp], xmm1
  001df	e8 00 00 00 00	 call	 ?GetX@?$Vector4@M@@QBEMXZ ; Vector4<float>::GetX
  001e4	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv309[ebp]
  001ea	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv309[ebp]
  001f2	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  001f5	f3 0f 11 85 6c
	ff ff ff	 movss	 DWORD PTR tv377[ebp], xmm0
  001fd	e8 00 00 00 00	 call	 ?GetZ@?$Vector3@M@@QBEMXZ ; Vector3<float>::GetZ
  00202	d9 9d 68 ff ff
	ff		 fstp	 DWORD PTR tv313[ebp]
  00208	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR tv377[ebp]
  00210	f3 0f 59 85 68
	ff ff ff	 mulss	 xmm0, DWORD PTR tv313[ebp]
  00218	f3 0f 10 8d 74
	ff ff ff	 movss	 xmm1, DWORD PTR tv375[ebp]
  00220	f3 0f 5c c8	 subss	 xmm1, xmm0
  00224	f3 0f 11 4d f0	 movss	 DWORD PTR __y$[ebp], xmm1

; 1024 : 		const float _z =   (GetW() * v.GetZ()) + (GetX() * v.GetY()) - (GetY() * v.GetX());

  00229	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0022c	e8 00 00 00 00	 call	 ?GetW@?$Vector4@M@@QBEMXZ ; Vector4<float>::GetW
  00231	d9 9d 64 ff ff
	ff		 fstp	 DWORD PTR tv317[ebp]
  00237	f3 0f 10 85 64
	ff ff ff	 movss	 xmm0, DWORD PTR tv317[ebp]
  0023f	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00242	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR tv379[ebp], xmm0
  0024a	e8 00 00 00 00	 call	 ?GetZ@?$Vector3@M@@QBEMXZ ; Vector3<float>::GetZ
  0024f	d9 9d 5c ff ff
	ff		 fstp	 DWORD PTR tv321[ebp]
  00255	f3 0f 10 85 60
	ff ff ff	 movss	 xmm0, DWORD PTR tv379[ebp]
  0025d	f3 0f 59 85 5c
	ff ff ff	 mulss	 xmm0, DWORD PTR tv321[ebp]
  00265	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00268	f3 0f 11 85 58
	ff ff ff	 movss	 DWORD PTR tv381[ebp], xmm0
  00270	e8 00 00 00 00	 call	 ?GetX@?$Vector4@M@@QBEMXZ ; Vector4<float>::GetX
  00275	d9 9d 54 ff ff
	ff		 fstp	 DWORD PTR tv325[ebp]
  0027b	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR tv325[ebp]
  00283	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00286	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR tv383[ebp], xmm0
  0028e	e8 00 00 00 00	 call	 ?GetY@?$Vector3@M@@QBEMXZ ; Vector3<float>::GetY
  00293	d9 9d 4c ff ff
	ff		 fstp	 DWORD PTR tv329[ebp]
  00299	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR tv383[ebp]
  002a1	f3 0f 59 85 4c
	ff ff ff	 mulss	 xmm0, DWORD PTR tv329[ebp]
  002a9	f3 0f 10 8d 58
	ff ff ff	 movss	 xmm1, DWORD PTR tv381[ebp]
  002b1	f3 0f 58 c8	 addss	 xmm1, xmm0
  002b5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002b8	f3 0f 11 8d 48
	ff ff ff	 movss	 DWORD PTR tv385[ebp], xmm1
  002c0	e8 00 00 00 00	 call	 ?GetY@?$Vector4@M@@QBEMXZ ; Vector4<float>::GetY
  002c5	d9 9d 44 ff ff
	ff		 fstp	 DWORD PTR tv333[ebp]
  002cb	f3 0f 10 85 44
	ff ff ff	 movss	 xmm0, DWORD PTR tv333[ebp]
  002d3	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  002d6	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR tv387[ebp], xmm0
  002de	e8 00 00 00 00	 call	 ?GetX@?$Vector3@M@@QBEMXZ ; Vector3<float>::GetX
  002e3	d9 9d 3c ff ff
	ff		 fstp	 DWORD PTR tv337[ebp]
  002e9	f3 0f 10 85 40
	ff ff ff	 movss	 xmm0, DWORD PTR tv387[ebp]
  002f1	f3 0f 59 85 3c
	ff ff ff	 mulss	 xmm0, DWORD PTR tv337[ebp]
  002f9	f3 0f 10 8d 48
	ff ff ff	 movss	 xmm1, DWORD PTR tv385[ebp]
  00301	f3 0f 5c c8	 subss	 xmm1, xmm0
  00305	f3 0f 11 4d ec	 movss	 DWORD PTR __z$[ebp], xmm1

; 1025 : 
; 1026 : 		return Quaternion(_x, _y, _z, _w);

  0030a	51		 push	 ecx
  0030b	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR __w$[ebp]
  00310	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00315	51		 push	 ecx
  00316	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR __z$[ebp]
  0031b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00320	51		 push	 ecx
  00321	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR __y$[ebp]
  00326	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0032b	51		 push	 ecx
  0032c	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR __x$[ebp]
  00331	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00336	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00339	e8 00 00 00 00	 call	 ??0Quaternion@@QAE@MMMM@Z ; Quaternion::Quaternion
  0033e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1027 : 	}

  00341	5f		 pop	 edi
  00342	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00348	3b ec		 cmp	 ebp, esp
  0034a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0034f	8b e5		 mov	 esp, ebp
  00351	5d		 pop	 ebp
  00352	c2 08 00	 ret	 8
??DQuaternion@@QBE?AV0@ABV?$Vector3@M@@@Z ENDP		; Quaternion::operator*
_TEXT	ENDS
END
