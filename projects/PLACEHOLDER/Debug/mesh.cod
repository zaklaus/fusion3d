; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	e:\fusion3d_work\engine\src\rendering\mesh.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_1LI@OFOJDDDJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA2?$AA?$DM?$AAf?$AAl?$AAo?$AAa?$AAt?$AA?$DO@ ; `string'
PUBLIC	??_C@_1JO@DFOIHCFM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA3?$AAf?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs@ ; `string'
PUBLIC	??_C@_1JG@ILDNFCDK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAu?$AAn?$AAs?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs@ ; `string'
PUBLIC	??_C@_1BNC@NDBBHKGP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1BNA@POBKPEOD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1BMG@HPABLFEM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1BNC@HDOMJDKK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMeshData@@@8				; MeshData `RTTI Type Descriptor'
PUBLIC	??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_R3Mesh@@8					; Mesh::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_7Mesh@@6B@					; Mesh::`vftable'
PUBLIC	??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R0?AVios_base@std@@@8			; std::ios_base `RTTI Type Descriptor'
PUBLIC	??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R17A@3EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$_Iosb@H@std@@@8			; std::_Iosb<int> `RTTI Type Descriptor'
PUBLIC	??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Mesh@@8					; Mesh::`RTTI Base Class Array'
PUBLIC	??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_R4Mesh@@6B@					; Mesh::`RTTI Complete Object Locator'
PUBLIC	??_R1A@?0A@EA@MeshData@@8			; MeshData::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3MeshData@@8				; MeshData::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R1A@?0A@EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7MeshData@@6B@				; MeshData::`vftable'
PUBLIC	??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R1A@?0A@EA@Mesh@@8				; Mesh::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R2ios_base@std@@8				; std::ios_base::`RTTI Base Class Array'
PUBLIC	??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R3ios_base@std@@8				; std::ios_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R4MeshData@@6B@				; MeshData::`RTTI Complete Object Locator'
PUBLIC	??_R2?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@A@3EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R17?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AVMesh@@@8				; Mesh `RTTI Type Descriptor'
PUBLIC	??_R2MeshData@@8				; MeshData::`RTTI Base Class Array'
PUBLIC	??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
EXTRN	__imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::imbue
EXTRN	__imp_?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z:PROC
EXTRN	?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::sync
EXTRN	__imp_?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC
EXTRN	?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::setbuf
EXTRN	__imp_?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z:PROC
EXTRN	?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
EXTRN	__imp_?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z:PROC
EXTRN	?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
EXTRN	__imp_?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z:PROC
EXTRN	?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::uflow
EXTRN	__imp_?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC
EXTRN	?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
EXTRN	__imp_?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ:PROC
EXTRN	?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Unlock
EXTRN	__imp_?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC
EXTRN	?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Lock
EXTRN	__imp_?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC
EXTRN	__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z:PROC
EXTRN	__imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z:PROC
EXTRN	__imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z:PROC
EXTRN	__imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z:PROC
EXTRN	__imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z:PROC
EXTRN	__imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z:PROC
EXTRN	__imp____glewDeleteBuffers:DWORD
EXTRN	__imp____glewGenBuffers:DWORD
EXTRN	__imp__glDrawElements@16:PROC
EXTRN	__imp__aiGetMaterialTexture:PROC
EXTRN	??0btTriangleMesh@@QAE@_N0@Z:PROC		; btTriangleMesh::btTriangleMesh
EXTRN	?addTriangleIndices@btTriangleMesh@@QAEXHHH@Z:PROC ; btTriangleMesh::addTriangleIndices
EXTRN	?findOrAddVertex@btTriangleMesh@@QAEHABVbtVector3@@_N@Z:PROC ; btTriangleMesh::findOrAddVertex
EXTRN	__imp_??0Importer@Assimp@@QAE@XZ:PROC
EXTRN	__imp_??1Importer@Assimp@@QAE@XZ:PROC
EXTRN	__imp_?ReadFile@Importer@Assimp@@QAEPBUaiScene@@PBDI@Z:PROC
EXTRN	__imp____glewGenVertexArrays:DWORD
EXTRN	__imp____glewBufferData:DWORD
EXTRN	__imp____glewDeleteVertexArrays:DWORD
EXTRN	__imp_?_BADOFF@std@@3_JB:QWORD
EXTRN	__imp____glewBindBuffer:DWORD
EXTRN	__imp____glewVertexAttribPointer:DWORD
EXTRN	__imp__aiGetMaterialString:PROC
EXTRN	__imp____glewBindVertexArray:DWORD
EXTRN	__imp__aiGetMaterialFloatArray:PROC
EXTRN	__imp____glewEnableVertexAttribArray:DWORD
;	COMDAT ??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ios_base@std@@8
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2MeshData@@8
rdata$r	SEGMENT
??_R2MeshData@@8 DD FLAT:??_R1A@?0A@EA@MeshData@@8	; MeshData::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@ReferenceCounter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMesh@@@8
data$r	SEGMENT
??_R0?AVMesh@@@8 DD FLAT:??_7type_info@@6B@		; Mesh `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMesh@@', 00H
data$r	ENDS
;	COMDAT ??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R3?$_Iosb@H@std@@8 DD 00H				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@A@3EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
	DD	01H
	DD	00H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R2?$_Iosb@H@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Iosb@H@std@@8 ; std::_Iosb<int>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R4MeshData@@6B@
rdata$r	SEGMENT
??_R4MeshData@@6B@ DD 00H				; MeshData::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMeshData@@@8
	DD	FLAT:??_R3MeshData@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ios_base@std@@8
rdata$r	SEGMENT
??_R3ios_base@std@@8 DD 00H				; std::ios_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ios_base@std@@8
rdata$r	SEGMENT
??_R2ios_base@std@@8 DD FLAT:??_R1A@?0A@EA@ios_base@std@@8 ; std::ios_base::`RTTI Base Class Array'
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Mesh@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Mesh@@8 DD FLAT:??_R0?AVMesh@@@8		; Mesh::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Mesh@@8
rdata$r	ENDS
;	COMDAT ??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@
CONST	SEGMENT
??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@ DD 00H ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	050H
CONST	ENDS
;	COMDAT ??_7MeshData@@6B@
CONST	SEGMENT
??_7MeshData@@6B@ DD FLAT:??_R4MeshData@@6B@		; MeshData::`vftable'
	DD	FLAT:??_EMeshData@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R3MeshData@@8
rdata$r	SEGMENT
??_R3MeshData@@8 DD 00H					; MeshData::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2MeshData@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@MeshData@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MeshData@@8 DD FLAT:??_R0?AVMeshData@@@8	; MeshData::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MeshData@@8
rdata$r	ENDS
;	COMDAT ??_R4Mesh@@6B@
rdata$r	SEGMENT
??_R4Mesh@@6B@ DD 00H					; Mesh::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMesh@@@8
	DD	FLAT:??_R3Mesh@@8
rdata$r	ENDS
;	COMDAT ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
	DD	FLAT:?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
	DD	FLAT:?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ
	DD	FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ
	DD	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z
	DD	FLAT:?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
	DD	FLAT:?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z
	DD	FLAT:?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD 00H	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allo'
	DB	'cator@D@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2Mesh@@8
rdata$r	SEGMENT
??_R2Mesh@@8 DD	FLAT:??_R1A@?0A@EA@Mesh@@8		; Mesh::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AV?$_Iosb@H@std@@@8
data$r	SEGMENT
??_R0?AV?$_Iosb@H@std@@@8 DD FLAT:??_7type_info@@6B@	; std::_Iosb<int> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Iosb@H@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17A@3EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
	DD	00H
	DD	08H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVios_base@std@@@8
data$r	SEGMENT
??_R0?AVios_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ios_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVios_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocato'
	DB	'r@D@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_7Mesh@@6B@
CONST	SEGMENT
??_7Mesh@@6B@ DD FLAT:??_R4Mesh@@6B@			; Mesh::`vftable'
	DD	FLAT:??_EMesh@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R3Mesh@@8
rdata$r	SEGMENT
??_R3Mesh@@8 DD	00H					; Mesh::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Mesh@@8
rdata$r	ENDS
;	COMDAT ??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_R0?AVMeshData@@@8
data$r	SEGMENT
??_R0?AVMeshData@@@8 DD FLAT:??_7type_info@@6B@		; MeshData `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMeshData@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	050H
	DD	04H
	DD	FLAT:??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_1BNC@HDOMJDKK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BNC@HDOMJDKK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'T', 00H, 'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'i', 00H, 'c', 00H
	DB	'_', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, ',', 00H
	DB	's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H, 'r', 00H, 'a'
	DB	00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, 'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ' ', 00H
	DB	',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'b', 00H, 't', 00H, 'T', 00H, 'r', 00H, 'i', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'l', 00H, 'e', 00H, 'M', 00H, 'e', 00H, 's'
	DB	00H, 'h', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o'
	DB	00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, '+', 00H, '+', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BMG@HPABLFEM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BMG@HPABLFEM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'T', 00H, 'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'i', 00H, 'c', 00H
	DB	'_', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, ',', 00H
	DB	's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H, 'r', 00H, 'a'
	DB	00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, 'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ' ', 00H
	DB	',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'M', 00H, 'e', 00H, 's', 00H, 'h', 00H, 'D', 00H, 'a', 00H
	DB	't', 00H, 'a', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H
	DB	'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '+', 00H, '+', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BNA@POBKPEOD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BNA@POBKPEOD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'T', 00H, 'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'i', 00H, 'c', 00H
	DB	'_', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, ',', 00H
	DB	's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H, 'r', 00H, 'a'
	DB	00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, 'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ' ', 00H
	DB	',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'b', 00H, 't', 00H, 'T', 00H, 'r', 00H, 'i', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'l', 00H, 'e', 00H, 'M', 00H, 'e', 00H, 's'
	DB	00H, 'h', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o'
	DB	00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, '*', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BNC@NDBBHKGP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1BNC@NDBBHKGP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'T', 00H, 'r'
	DB	00H, 'e', 00H, 'e', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'T', 00H, 'r', 00H, 'e', 00H, 'e', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a'
	DB	00H, 'i', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'i', 00H, 'c', 00H
	DB	'_', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, ',', 00H
	DB	's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H, 'r', 00H, 'a'
	DB	00H, 'i', 00H, 't', 00H, 's', 00H, '<', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, 'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ' ', 00H
	DB	',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'b', 00H, 't', 00H, 'T', 00H, 'r', 00H, 'i', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'l', 00H, 'e', 00H, 'M', 00H, 'e', 00H, 's'
	DB	00H, 'h', 00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o'
	DB	00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, '=', 00H, '=', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JG@ILDNFCDK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAu?$AAn?$AAs?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs@
CONST	SEGMENT
??_C@_1JG@ILDNFCDK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAu?$AAn?$AAs?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n'
	DB	00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 'i', 00H, 'n', 00H, 't', 00H, ',', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o'
	DB	00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H
	DB	'u', 00H, 'n', 00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e'
	DB	00H, 'd', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 't', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'[', 00H, ']', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1JO@DFOIHCFM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA3?$AAf?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs@
CONST	SEGMENT
??_C@_1JO@DFOIHCFM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA3?$AAf?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'V', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '3', 00H, 'f', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, ' ', 00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '3', 00H, 'f', 00H, '>', 00H, ' ', 00H, '>', 00H, ':'
	DB	00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1LI@OFOJDDDJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA2?$AA?$DM?$AAf?$AAl?$AAo?$AAa?$AAt?$AA?$DO@
CONST	SEGMENT
??_C@_1LI@OFOJDDDJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA2?$AA?$DM?$AAf?$AAl?$AAo?$AAa?$AAt?$AA?$DO@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'V', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '2', 00H, '<', 00H, 'f'
	DB	00H, 'l', 00H, 'o', 00H, 'a', 00H, 't', 00H, '>', 00H, ',', 00H
	DB	'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '2', 00H, '<', 00H, 'f', 00H, 'l', 00H, 'o', 00H, 'a', 00H
	DB	't', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':'
	DB	00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H
	DB	00H						; `string'
?piecewise_construct@std@@3Upiecewise_construct_t@1@B	ORG $+1 ; std::piecewise_construct
	ORG $+3
$SG4294911818 DB '(Maybe you forgot to Finalize() your IndexedModel?)', 00H
	ORG $+3
$SG4294911816 DB 's', 00H, 'r', 00H, 'c', 00H, '\', 00H, 'r', 00H, 'e', 00H
	DB	'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, '\', 00H, 'm', 00H, 'e', 00H, 's', 00H, 'h', 00H, '.', 00H
	DB	'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG4294911814 DB ': Mesh already exists by the same name!', 00H
$SG4294911813 DB 'Error adding mesh ', 00H
	ORG $+1
$SG4294911817 DB 'Error: Invalid mesh! Must have same number of positions'
	DB	', texCoords, normals, and tangents! ', 00H
$SG4294911815 DB '0', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H
	ORG $+2
$SG4294911812 DB 's', 00H, 'r', 00H, 'c', 00H, '\', 00H, 'r', 00H, 'e', 00H
	DB	'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, '\', 00H, 'm', 00H, 'e', 00H, 's', 00H, 'h', 00H, '.', 00H
	DB	'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG4294911811 DB '0', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H
	ORG $+2
$SG4294911810 DB 'models/', 00H
$SG4294911809 DB '|', 00H
	ORG $+2
$SG4294911808 DB 'Mesh load failed!: ', 00H
$SG4294911807 DB 'models/error.obj', 00H
	ORG $+3
$SG4294911806 DB 's', 00H, 'r', 00H, 'c', 00H, '\', 00H, 'r', 00H, 'e', 00H
	DB	'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, '\', 00H, 'm', 00H, 'e', 00H, 's', 00H, 'h', 00H, '.', 00H
	DB	'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG4294911805 DB 'f', 00H, 'a', 00H, 'c', 00H, 'e', 00H, '.', 00H, 'm', 00H
	DB	'N', 00H, 'u', 00H, 'm', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'i'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	' ', 00H, '3', 00H, 00H, 00H
$SG4294911804 DB '_', 00H
	ORG $+2
$SG4294911803 DB 'models/', 00H
$SG4294911802 DB 'Mesh load failed!: ', 00H
$SG4294911801 DB 'models/error.obj', 00H
	ORG $+3
$SG4294911800 DB 's', 00H, 'r', 00H, 'c', 00H, '\', 00H, 'r', 00H, 'e', 00H
	DB	'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, '\', 00H, 'm', 00H, 'e', 00H, 's', 00H, 'h', 00H, '.', 00H
	DB	'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG4294911799 DB 'f', 00H, 'a', 00H, 'c', 00H, 'e', 00H, '.', 00H, 'm', 00H
	DB	'N', 00H, 'u', 00H, 'm', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'i'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, ' ', 00H, '=', 00H, '=', 00H
	DB	' ', 00H, '3', 00H, 00H, 00H
$SG4294911798 DB 'models/', 00H
$SG4294911797 DB 'Mesh load failed!: ', 00H
$SG4294911796 DB 'models/error.obj', 00H
	ORG $+3
$SG4294911795 DB '?mat.name', 00H
	ORG $+2
$SG4294911794 DB '$mat.shininess', 00H
	ORG $+1
$SG4294911793 DB 'DefaultTexture.png', 00H
	ORG $+1
$SG4294911792 DB 'default_normal.jpg', 00H
	ORG $+1
$SG4294911791 DB 'default_disp.png', 00H
	ORG $+3
$SG4294911790 DB '_', 00H
	ORG $+2
$SG4294911789 DB '_col', 00H
	ORG $+3
$SG4294911736 DB 'Assert e:\fusion3d_work\lib\bullet3\include\BulletColli'
	DB	'sion/BroadphaseCollision/btAxisSweep3.h:%u (!pair.m_algorithm'
	DB	')', 0aH, 00H
	ORG $+1
$SG4294911735 DB 'Assert e:\fusion3d_work\lib\bullet3\include\BulletColli'
	DB	'sion/BroadphaseCollision/btAxisSweep3.h:%u (!pair.m_algorithm'
	DB	')', 0aH, 00H
	ORG $+1
$SG4294911732 DB 'Assert e:\fusion3d_work\lib\bullet3\include\BulletColli'
	DB	'sion/BroadphaseCollision/btAxisSweep3.h:%u (m_firstFreeHandle'
	DB	')', 0aH, 00H
	ORG $+1
$SG4294911731 DB 'Assert e:\fusion3d_work\lib\bullet3\include\BulletColli'
	DB	'sion/BroadphaseCollision/btAxisSweep3.h:%u (handle > 0 && han'
	DB	'dle < m_maxHandles)', 0aH, 00H
	ORG $+3
?btInfinityMask@@3HA DD 07f800000H			; btInfinityMask
$SG4294911730 DB 'Assert e:\fusion3d_work\lib\bullet3\include\BulletColli'
	DB	'sion/BroadphaseCollision/btAxisSweep3.h:%u (m_firstFreeHandle'
	DB	')', 0aH, 00H
	ORG $+1
$SG4294911729 DB 'Assert e:\fusion3d_work\lib\bullet3\include\BulletColli'
	DB	'sion/BroadphaseCollision/btAxisSweep3.h:%u (handle > 0 && han'
	DB	'dle < m_maxHandles)', 0aH, 00H
	ORG $+3
?btNanMask@@3HA DD 07f800001H				; btNanMask
PUBLIC	??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
PUBLIC	??$_Debug_pointer@PAVMeshData@@@std@@YAXPAPAVMeshData@@PB_WI@Z ; std::_Debug_pointer<MeshData *>
PUBLIC	??$_Debug_range_ptr2@PAIPAI@std@@YAXPAI0AAPAIPB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range_ptr2<unsigned int *,unsigned int *>
PUBLIC	??$_Iter_cat@PAI@std@@YA?AUrandom_access_iterator_tag@0@ABQAI@Z ; std::_Iter_cat<unsigned int *>
PUBLIC	??$_Debug_range_ptr2@PAV?$Vector2@M@@PAV1@@std@@YAXPAV?$Vector2@M@@0AAPAV1@PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range_ptr2<Vector2<float> *,Vector2<float> *>
PUBLIC	??$_Iter_cat@PAV?$Vector2@M@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$Vector2@M@@@Z ; std::_Iter_cat<Vector2<float> *>
PUBLIC	??$_Debug_range_ptr2@PAPAVMeshData@@PAPAV1@@std@@YAXPAPAVMeshData@@0AAPAPAV1@PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range_ptr2<MeshData * *,MeshData * *>
PUBLIC	??$_Iter_cat@PAPAVMeshData@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVMeshData@@@Z ; std::_Iter_cat<MeshData * *>
PUBLIC	??$_Debug_range_ptr2@PAPAVMaterial@@PAPAV1@@std@@YAXPAPAVMaterial@@0AAPAPAV1@PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range_ptr2<Material * *,Material * *>
PUBLIC	??$_Iter_cat@PAPAVMaterial@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVMaterial@@@Z ; std::_Iter_cat<Material * *>
PUBLIC	??$_Debug_range_ptr2@PAPAVMesh@@PAPAV1@@std@@YAXPAPAVMesh@@0AAPAPAV1@PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range_ptr2<Mesh * *,Mesh * *>
PUBLIC	??$_Iter_cat@PAPAVMesh@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVMesh@@@Z ; std::_Iter_cat<Mesh * *>
PUBLIC	??$_Debug_range_ptr@PAIPAI@std@@YAXPAI0AAPAIPB_WI@Z ; std::_Debug_range_ptr<unsigned int *,unsigned int *>
PUBLIC	??$_Debug_range_ptr@PAV?$Vector2@M@@PAV1@@std@@YAXPAV?$Vector2@M@@0AAPAV1@PB_WI@Z ; std::_Debug_range_ptr<Vector2<float> *,Vector2<float> *>
PUBLIC	??$_Debug_range_ptr@PAPAVMeshData@@PAPAV1@@std@@YAXPAPAVMeshData@@0AAPAPAV1@PB_WI@Z ; std::_Debug_range_ptr<MeshData * *,MeshData * *>
PUBLIC	??$_Debug_range_ptr@PAPAVMaterial@@PAPAV1@@std@@YAXPAPAVMaterial@@0AAPAPAV1@PB_WI@Z ; std::_Debug_range_ptr<Material * *,Material * *>
PUBLIC	??$_Debug_range_ptr@PAPAVMesh@@PAPAV1@@std@@YAXPAPAVMesh@@0AAPAPAV1@PB_WI@Z ; std::_Debug_range_ptr<Mesh * *,Mesh * *>
PUBLIC	??$_Uninit_move@III@std@@YAPAIPAI00AAU?$_Wrap_alloc@V?$allocator@I@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<unsigned int,unsigned int,unsigned int>
PUBLIC	??$_Val_type@PAI@std@@YAPAIPAI@Z		; std::_Val_type<unsigned int *>
PUBLIC	??$_Uninit_move@PAV?$Vector2@M@@PAV1@V?$allocator@V?$Vector2@M@@@std@@V1@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Vector2<float> *,Vector2<float> *,std::allocator<Vector2<float> >,Vector2<float> >
PUBLIC	??$_Val_type@PAV?$Vector2@M@@@std@@YAPAV?$Vector2@M@@PAV1@@Z ; std::_Val_type<Vector2<float> *>
PUBLIC	??$_Uninit_move@PAVMeshData@@PAV1@PAV1@@std@@YAPAPAVMeshData@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<MeshData *,MeshData *,MeshData *>
PUBLIC	??$_Val_type@PAPAVMeshData@@@std@@YAPAPAVMeshData@@PAPAV1@@Z ; std::_Val_type<MeshData * *>
PUBLIC	??$_Uninit_move@PAVMaterial@@PAV1@PAV1@@std@@YAPAPAVMaterial@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Material *,Material *,Material *>
PUBLIC	??$_Val_type@PAPAVMaterial@@@std@@YAPAPAVMaterial@@PAPAV1@@Z ; std::_Val_type<Material * *>
PUBLIC	??$_Uninit_move@PAVMesh@@PAV1@PAV1@@std@@YAPAPAVMesh@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Mesh *,Mesh *,Mesh *>
PUBLIC	??$_Val_type@PAPAVMesh@@@std@@YAPAPAVMesh@@PAPAV1@@Z ; std::_Val_type<Mesh * *>
PUBLIC	??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > &>
PUBLIC	??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >
PUBLIC	??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >
PUBLIC	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>
PUBLIC	??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@QAEPAXI@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>::`scalar deleting destructor'
PUBLIC	??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@AAPAU21@@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::construct<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> * &>
PUBLIC	??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >
PUBLIC	??$_Uninit_move@PAIPAIU?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@YAPAIPAI00AAU?$_Wrap_alloc@V?$allocator@I@std@@@0@@Z ; std::_Uninit_move<unsigned int *,unsigned int *,std::_Wrap_alloc<std::allocator<unsigned int> > >
PUBLIC	??$_Uninit_move@PAV?$Vector2@M@@PAV1@U?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@@Z ; std::_Uninit_move<Vector2<float> *,Vector2<float> *,std::_Wrap_alloc<std::allocator<Vector2<float> > > >
PUBLIC	??$_Rechecked@PAPAVMeshData@@PAPAV1@@std@@YAAAPAPAVMeshData@@AAPAPAV1@PAPAV1@@Z ; std::_Rechecked<MeshData * *,MeshData * *>
PUBLIC	??$_Uninit_move@PAPAVMeshData@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YAPAPAVMeshData@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@@Z ; std::_Uninit_move<MeshData * *,MeshData * *,std::_Wrap_alloc<std::allocator<MeshData *> > >
PUBLIC	??$_Unchecked@PAPAVMeshData@@@std@@YAPAPAVMeshData@@PAPAV1@@Z ; std::_Unchecked<MeshData * *>
PUBLIC	??$_Uninit_move@PAPAVMaterial@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@@std@@YAPAPAVMaterial@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@0@@Z ; std::_Uninit_move<Material * *,Material * *,std::_Wrap_alloc<std::allocator<Material *> > >
PUBLIC	??$_Uninit_move@PAPAVMesh@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@@std@@YAPAPAVMesh@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@0@@Z ; std::_Uninit_move<Mesh * *,Mesh * *,std::_Wrap_alloc<std::allocator<Mesh *> > >
PUBLIC	??$?0V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > ><std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >
PUBLIC	??$?0V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > ><std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >
PUBLIC	??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::destroy<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>
PUBLIC	??$construct@II@?$allocator@I@std@@QAEXPAI$$QAI@Z ; std::allocator<unsigned int>::construct<unsigned int,unsigned int>
PUBLIC	??$construct@IABI@?$allocator@I@std@@QAEXPAIABI@Z ; std::allocator<unsigned int>::construct<unsigned int,unsigned int const &>
PUBLIC	??$construct@IAAI@?$allocator@I@std@@QAEXPAIAAI@Z ; std::allocator<unsigned int>::construct<unsigned int,unsigned int &>
PUBLIC	??$construct@VVector3f@@AAV1@@?$allocator@VVector3f@@@std@@QAEXPAVVector3f@@AAV2@@Z ; std::allocator<Vector3f>::construct<Vector3f,Vector3f &>
PUBLIC	??$construct@V?$Vector2@M@@V1@@?$allocator@V?$Vector2@M@@@std@@QAEXPAV?$Vector2@M@@$$QAV2@@Z ; std::allocator<Vector2<float> >::construct<Vector2<float>,Vector2<float> >
PUBLIC	??$construct@V?$Vector2@M@@AAV1@@?$allocator@V?$Vector2@M@@@std@@QAEXPAV?$Vector2@M@@AAV2@@Z ; std::allocator<Vector2<float> >::construct<Vector2<float>,Vector2<float> &>
PUBLIC	??$construct@PAVMeshData@@PAV1@@?$allocator@PAVMeshData@@@std@@QAEXPAPAVMeshData@@$$QAPAV2@@Z ; std::allocator<MeshData *>::construct<MeshData *,MeshData *>
PUBLIC	??$construct@PAVMaterial@@ABQAV1@@?$allocator@PAVMaterial@@@std@@QAEXPAPAVMaterial@@ABQAV2@@Z ; std::allocator<Material *>::construct<Material *,Material * const &>
PUBLIC	??$construct@PAVMaterial@@AAPAV1@@?$allocator@PAVMaterial@@@std@@QAEXPAPAVMaterial@@AAPAV2@@Z ; std::allocator<Material *>::construct<Material *,Material * &>
PUBLIC	??$construct@PAVMesh@@PAV1@@?$allocator@PAVMesh@@@std@@QAEXPAPAVMesh@@$$QAPAV2@@Z ; std::allocator<Mesh *>::construct<Mesh *,Mesh *>
PUBLIC	??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > &,void>
PUBLIC	??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >
PUBLIC	??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::operator++
PUBLIC	??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >
PUBLIC	??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::construct<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> * &>
PUBLIC	??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> * &>
PUBLIC	??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >
PUBLIC	??$_Addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@0@AAU10@U?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >
PUBLIC	??$_Uninitialized_move@PAIPAIU?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@YAPAIPAI00AAU?$_Wrap_alloc@V?$allocator@I@std@@@0@@Z ; std::_Uninitialized_move<unsigned int *,unsigned int *,std::_Wrap_alloc<std::allocator<unsigned int> > >
PUBLIC	??$_Uninitialized_move@PAV?$Vector2@M@@PAV1@U?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@@Z ; std::_Uninitialized_move<Vector2<float> *,Vector2<float> *,std::_Wrap_alloc<std::allocator<Vector2<float> > > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YAXPAPAVMeshData@@0AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<MeshData *> > >
PUBLIC	??$_Ptr_cat@PAVMeshData@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVMeshData@@0@Z ; std::_Ptr_cat<MeshData *,MeshData *>
PUBLIC	??$_Uninitialized_move@PAPAVMeshData@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YAPAPAVMeshData@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@@Z ; std::_Uninitialized_move<MeshData * *,MeshData * *,std::_Wrap_alloc<std::allocator<MeshData *> > >
PUBLIC	??$_Uninitialized_move@PAPAVMaterial@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@@std@@YAPAPAVMaterial@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@0@@Z ; std::_Uninitialized_move<Material * *,Material * *,std::_Wrap_alloc<std::allocator<Material *> > >
PUBLIC	??$_Uninitialized_move@PAPAVMesh@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@@std@@YAPAPAVMesh@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@0@@Z ; std::_Uninitialized_move<Mesh * *,Mesh * *,std::_Wrap_alloc<std::allocator<Mesh *> > >
PUBLIC	??$?0ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1><std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > const &>
PUBLIC	??$forward@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@0@ABV10@@Z ; std::forward<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > const &>
PUBLIC	??$?0ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1><std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > const &>
PUBLIC	??$forward@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@0@ABV10@@Z ; std::forward<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > const &>
PUBLIC	??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::destroy<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>
PUBLIC	??$_Addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@0@AAPAU10@U?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>
PUBLIC	??$forward@ABV?$allocator@I@std@@@std@@YAABV?$allocator@I@0@ABV10@@Z ; std::forward<std::allocator<unsigned int> const &>
PUBLIC	??$forward@ABV?$allocator@V?$Vector2@M@@@std@@@std@@YAABV?$allocator@V?$Vector2@M@@@0@ABV10@@Z ; std::forward<std::allocator<Vector2<float> > const &>
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > ><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > &,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > &,void>
PUBLIC	??$forward@ABV?$allocator@PAVMeshData@@@std@@@std@@YAABV?$allocator@PAVMeshData@@@0@ABV10@@Z ; std::forward<std::allocator<MeshData *> const &>
PUBLIC	??$forward@V?$allocator@PAVMeshData@@@std@@@std@@YA$$QAV?$allocator@PAVMeshData@@@0@AAV10@@Z ; std::forward<std::allocator<MeshData *> >
PUBLIC	??$forward@ABV?$allocator@PAVMesh@@@std@@@std@@YAABV?$allocator@PAVMesh@@@0@ABV10@@Z ; std::forward<std::allocator<Mesh *> const &>
PUBLIC	??$_Addressof@$$CBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@YAPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@0@ABU10@U?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const >
PUBLIC	??$construct@II@?$allocator_traits@V?$allocator@I@std@@@std@@SAXAAV?$allocator@I@1@PAI$$QAI@Z ; std::allocator_traits<std::allocator<unsigned int> >::construct<unsigned int,unsigned int>
PUBLIC	??$_Addressof@I@std@@YAPAIAAIU?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<unsigned int>
PUBLIC	??$construct@IABI@?$allocator_traits@V?$allocator@I@std@@@std@@SAXAAV?$allocator@I@1@PAIABI@Z ; std::allocator_traits<std::allocator<unsigned int> >::construct<unsigned int,unsigned int const &>
PUBLIC	??$forward@ABI@std@@YAABIABI@Z			; std::forward<unsigned int const &>
PUBLIC	??$construct@IAAI@?$allocator_traits@V?$allocator@I@std@@@std@@SAXAAV?$allocator@I@1@PAIAAI@Z ; std::allocator_traits<std::allocator<unsigned int> >::construct<unsigned int,unsigned int &>
PUBLIC	??$forward@AAI@std@@YAAAIAAI@Z			; std::forward<unsigned int &>
PUBLIC	??$_Addressof@$$CBI@std@@YAPBIABIU?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<unsigned int const >
PUBLIC	??$construct@VVector3f@@AAV1@@?$allocator_traits@V?$allocator@VVector3f@@@std@@@std@@SAXAAV?$allocator@VVector3f@@@1@PAVVector3f@@AAV3@@Z ; std::allocator_traits<std::allocator<Vector3f> >::construct<Vector3f,Vector3f &>
PUBLIC	??$forward@AAVVector3f@@@std@@YAAAVVector3f@@AAV1@@Z ; std::forward<Vector3f &>
PUBLIC	??$_Addressof@$$CBVVector3f@@@std@@YAPBVVector3f@@ABV1@U?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<Vector3f const >
PUBLIC	??$construct@V?$Vector2@M@@V1@@?$allocator_traits@V?$allocator@V?$Vector2@M@@@std@@@std@@SAXAAV?$allocator@V?$Vector2@M@@@1@PAV?$Vector2@M@@$$QAV3@@Z ; std::allocator_traits<std::allocator<Vector2<float> > >::construct<Vector2<float>,Vector2<float> >
PUBLIC	??$construct@V?$Vector2@M@@AAV1@@?$allocator_traits@V?$allocator@V?$Vector2@M@@@std@@@std@@SAXAAV?$allocator@V?$Vector2@M@@@1@PAV?$Vector2@M@@AAV3@@Z ; std::allocator_traits<std::allocator<Vector2<float> > >::construct<Vector2<float>,Vector2<float> &>
PUBLIC	??$forward@AAV?$Vector2@M@@@std@@YAAAV?$Vector2@M@@AAV1@@Z ; std::forward<Vector2<float> &>
PUBLIC	??$_Addressof@$$CBV?$Vector2@M@@@std@@YAPBV?$Vector2@M@@ABV1@U?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<Vector2<float> const >
PUBLIC	??$construct@PAVMeshData@@PAV1@@?$allocator_traits@V?$allocator@PAVMeshData@@@std@@@std@@SAXAAV?$allocator@PAVMeshData@@@1@PAPAVMeshData@@$$QAPAV3@@Z ; std::allocator_traits<std::allocator<MeshData *> >::construct<MeshData *,MeshData *>
PUBLIC	??$_Addressof@PAVMeshData@@@std@@YAPAPAVMeshData@@AAPAV1@U?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<MeshData *>
PUBLIC	??$construct@PAVMaterial@@ABQAV1@@?$allocator_traits@V?$allocator@PAVMaterial@@@std@@@std@@SAXAAV?$allocator@PAVMaterial@@@1@PAPAVMaterial@@ABQAV3@@Z ; std::allocator_traits<std::allocator<Material *> >::construct<Material *,Material * const &>
PUBLIC	??$forward@ABQAVMaterial@@@std@@YAABQAVMaterial@@ABQAV1@@Z ; std::forward<Material * const &>
PUBLIC	??$construct@PAVMaterial@@AAPAV1@@?$allocator_traits@V?$allocator@PAVMaterial@@@std@@@std@@SAXAAV?$allocator@PAVMaterial@@@1@PAPAVMaterial@@AAPAV3@@Z ; std::allocator_traits<std::allocator<Material *> >::construct<Material *,Material * &>
PUBLIC	??$forward@AAPAVMaterial@@@std@@YAAAPAVMaterial@@AAPAV1@@Z ; std::forward<Material * &>
PUBLIC	??$_Addressof@QAVMaterial@@@std@@YAPBQAVMaterial@@ABQAV1@U?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<Material * const>
PUBLIC	??$construct@PAVMesh@@PAV1@@?$allocator_traits@V?$allocator@PAVMesh@@@std@@@std@@SAXAAV?$allocator@PAVMesh@@@1@PAPAVMesh@@$$QAPAV3@@Z ; std::allocator_traits<std::allocator<Mesh *> >::construct<Mesh *,Mesh *>
PUBLIC	??$_Addressof@PAVMesh@@@std@@YAPAPAVMesh@@AAPAV1@U?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<Mesh *>
PUBLIC	??$_Distance2@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,unsigned int>
PUBLIC	??$_Iter_cat@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@@Z ; std::_Iter_cat<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >
PUBLIC	??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> >
PUBLIC	??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >
PUBLIC	??$?0PAVMeshData@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><MeshData *>
PUBLIC	??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Eqrange<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::_Get_first
PUBLIC	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	??0?$allocator@PAVMeshData@@@std@@QAE@ABV01@@Z	; std::allocator<MeshData *>::allocator<MeshData *>
PUBLIC	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getcomp
PUBLIC	??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
PUBLIC	?_Compare@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Compare
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z ; std::_Wrap_alloc<std::allocator<MeshData *> >::_Wrap_alloc<std::allocator<MeshData *> >
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<MeshData *> >::_Vector_val<std::_Simple_types<MeshData *> >
PUBLIC	??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >::~pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >
PUBLIC	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
PUBLIC	??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::construct<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> * &>
PUBLIC	??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >
PUBLIC	??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@0@AAU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >
PUBLIC	??$_Umove@PAI@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAI00@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Umove<unsigned int *>
PUBLIC	??$_Umove@PAV?$Vector2@M@@@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEPAV?$Vector2@M@@PAV2@00@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Umove<Vector2<float> *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YAXPAPAVMeshData@@0AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<MeshData *> > >
PUBLIC	??$_Umove@PAPAVMeshData@@@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEPAPAVMeshData@@PAPAV2@00@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::_Umove<MeshData * *>
PUBLIC	??$_Umove@PAPAVMaterial@@@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEPAPAVMaterial@@PAPAV2@00@Z ; std::vector<Material *,std::allocator<Material *> >::_Umove<Material * *>
PUBLIC	??$_Umove@PAPAVMesh@@@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEPAPAVMesh@@PAPAV2@00@Z ; std::vector<Mesh *,std::allocator<Mesh *> >::_Umove<Mesh * *>
PUBLIC	??$?0ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAU21@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_One_then_variadic_args_t,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > const &>
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > > >
PUBLIC	??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@@Z ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>
PUBLIC	??$?0ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAU21@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_One_then_variadic_args_t,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > const &>
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > > >
PUBLIC	??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::destroy<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>
PUBLIC	??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<MeshData *> > >
PUBLIC	??$?0ABV?$allocator@I@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@I@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned int> >,std::_Vector_val<std::_Simple_types<unsigned int> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned int> >,std::_Vector_val<std::_Simple_types<unsigned int> >,1><std::allocator<unsigned int> const &>
PUBLIC	??$?0ABV?$allocator@V?$Vector2@M@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$Vector2@M@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@V?$Vector2@M@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Vector2<float> > >,std::_Vector_val<std::_Simple_types<Vector2<float> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<Vector2<float> > >,std::_Vector_val<std::_Simple_types<Vector2<float> > >,1><std::allocator<Vector2<float> > const &>
PUBLIC	??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Eqrange<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Lbound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Lbound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$?0ABV?$allocator@PAVMeshData@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@PAVMeshData@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1><std::allocator<MeshData *> const &>
PUBLIC	??$?0V?$allocator@PAVMeshData@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@PAVMeshData@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1><std::allocator<MeshData *> >
PUBLIC	??$move@AAV?$allocator@PAVMeshData@@@std@@@std@@YA$$QAV?$allocator@PAVMeshData@@@0@AAV10@@Z ; std::move<std::allocator<MeshData *> &>
PUBLIC	??$?0ABV?$allocator@PAVMesh@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMesh@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@PAVMesh@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Mesh *> >,std::_Vector_val<std::_Simple_types<Mesh *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<Mesh *> >,std::_Vector_val<std::_Simple_types<Mesh *> >,1><std::allocator<Mesh *> const &>
PUBLIC	??$addressof@$$CBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@YAPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@0@ABU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const >
PUBLIC	??$construct@II@?$_Wrap_alloc@V?$allocator@I@std@@@std@@QAEXPAI$$QAI@Z ; std::_Wrap_alloc<std::allocator<unsigned int> >::construct<unsigned int,unsigned int>
PUBLIC	??$forward@I@std@@YA$$QAIAAI@Z			; std::forward<unsigned int>
PUBLIC	??$addressof@I@std@@YAPAIAAI@Z			; std::addressof<unsigned int>
PUBLIC	??$construct@IABI@?$_Wrap_alloc@V?$allocator@I@std@@@std@@QAEXPAIABI@Z ; std::_Wrap_alloc<std::allocator<unsigned int> >::construct<unsigned int,unsigned int const &>
PUBLIC	??$construct@IAAI@?$_Wrap_alloc@V?$allocator@I@std@@@std@@QAEXPAIAAI@Z ; std::_Wrap_alloc<std::allocator<unsigned int> >::construct<unsigned int,unsigned int &>
PUBLIC	??$addressof@$$CBI@std@@YAPBIABI@Z		; std::addressof<unsigned int const >
PUBLIC	??$construct@VVector3f@@AAV1@@?$_Wrap_alloc@V?$allocator@VVector3f@@@std@@@std@@QAEXPAVVector3f@@AAV2@@Z ; std::_Wrap_alloc<std::allocator<Vector3f> >::construct<Vector3f,Vector3f &>
PUBLIC	??$addressof@$$CBVVector3f@@@std@@YAPBVVector3f@@ABV1@@Z ; std::addressof<Vector3f const >
PUBLIC	??$construct@V?$Vector2@M@@V1@@?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEXPAV?$Vector2@M@@$$QAV2@@Z ; std::_Wrap_alloc<std::allocator<Vector2<float> > >::construct<Vector2<float>,Vector2<float> >
PUBLIC	??$forward@V?$Vector2@M@@@std@@YA$$QAV?$Vector2@M@@AAV1@@Z ; std::forward<Vector2<float> >
PUBLIC	??$construct@V?$Vector2@M@@AAV1@@?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEXPAV?$Vector2@M@@AAV2@@Z ; std::_Wrap_alloc<std::allocator<Vector2<float> > >::construct<Vector2<float>,Vector2<float> &>
PUBLIC	??$addressof@$$CBV?$Vector2@M@@@std@@YAPBV?$Vector2@M@@ABV1@@Z ; std::addressof<Vector2<float> const >
PUBLIC	??$forward@V?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YA$$QAV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@0@AAV10@@Z ; std::forward<std::vector<MeshData *,std::allocator<MeshData *> > >
PUBLIC	??$move@AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@AAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<MeshData *> > &>
PUBLIC	??$construct@PAVMeshData@@PAV1@@?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAEXPAPAVMeshData@@$$QAPAV2@@Z ; std::_Wrap_alloc<std::allocator<MeshData *> >::construct<MeshData *,MeshData *>
PUBLIC	??$addressof@PAVMeshData@@@std@@YAPAPAVMeshData@@AAPAV1@@Z ; std::addressof<MeshData *>
PUBLIC	??$construct@PAVMaterial@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@QAEXPAPAVMaterial@@ABQAV2@@Z ; std::_Wrap_alloc<std::allocator<Material *> >::construct<Material *,Material * const &>
PUBLIC	??$construct@PAVMaterial@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@QAEXPAPAVMaterial@@AAPAV2@@Z ; std::_Wrap_alloc<std::allocator<Material *> >::construct<Material *,Material * &>
PUBLIC	??$addressof@QAVMaterial@@@std@@YAPBQAVMaterial@@ABQAV1@@Z ; std::addressof<Material * const>
PUBLIC	??$construct@PAVMesh@@PAV1@@?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@QAEXPAPAVMesh@@$$QAPAV2@@Z ; std::_Wrap_alloc<std::allocator<Mesh *> >::construct<Mesh *,Mesh *>
PUBLIC	??$forward@PAVMesh@@@std@@YA$$QAPAVMesh@@AAPAV1@@Z ; std::forward<Mesh *>
PUBLIC	??$addressof@PAVMesh@@@std@@YAPAPAVMesh@@AAPAV1@@Z ; std::addressof<Mesh *>
PUBLIC	??$_Distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,unsigned int>
PUBLIC	??$to_string@I@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; Util::to_string<unsigned int>
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAPAVMeshData@@X@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAPAVMeshData@@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,MeshData * &,void>
PUBLIC	?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::allocate
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::_Get_second
PUBLIC	?max_size@?$allocator@PAVMeshData@@@std@@QBEIXZ	; std::allocator<MeshData *>::max_size
PUBLIC	?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getpfirst
PUBLIC	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Get_data
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::allocate
PUBLIC	?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Color
PUBLIC	?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Isnil
PUBLIC	?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Max
PUBLIC	?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Min
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::operator++
PUBLIC	?allocate@?$allocator@PAVMeshData@@@std@@QAEPAPAVMeshData@@I@Z ; std::allocator<MeshData *>::allocate
PUBLIC	?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Alloc_proxy
PUBLIC	?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Getpfirst
PUBLIC	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Buyheadnode
PUBLIC	?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::_Min
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Erase
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Lrotate
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Rmost
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Root
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Rrotate
PUBLIC	?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Orphan_ptr
PUBLIC	?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
PUBLIC	?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Isnil
PUBLIC	?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Max
PUBLIC	?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Min
PUBLIC	?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Alloc_proxy
PUBLIC	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Buyheadnode
PUBLIC	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myhead
PUBLIC	?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Mysize
PUBLIC	?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::deallocate
PUBLIC	?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Left
PUBLIC	?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Parent
PUBLIC	?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Right
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator++
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>::_Get_first
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,std::_Iterator_base12>::operator++
PUBLIC	?max_size@?$allocator_traits@V?$allocator@PAVMeshData@@@std@@@std@@SAIABV?$allocator@PAVMeshData@@@2@@Z ; std::allocator_traits<std::allocator<MeshData *> >::max_size
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Get_first
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>
PUBLIC	?capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::capacity
PUBLIC	?capacity@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEIXZ ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::capacity
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QBEABQAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myend
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QBEABQAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myend
PUBLIC	?deallocate@?$allocator@PAVMeshData@@@std@@QAEXPAPAVMeshData@@I@Z ; std::allocator<MeshData *>::deallocate
PUBLIC	?capacity@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ ; std::vector<MeshData *,std::allocator<MeshData *> >::capacity
PUBLIC	?capacity@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QBEIXZ ; std::vector<Material *,std::allocator<Material *> >::capacity
PUBLIC	?capacity@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QBEIXZ ; std::vector<Mesh *,std::allocator<Mesh *> >::capacity
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Erase
PUBLIC	?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Orphan_ptr
PUBLIC	?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Max
PUBLIC	?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Min
PUBLIC	?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Construct
PUBLIC	?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Myproxy
PUBLIC	?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Orphan_all
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::operator++
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::erase
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::clear
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Lmost
PUBLIC	?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
PUBLIC	?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
PUBLIC	?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
PUBLIC	?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Construct
PUBLIC	?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myproxy
PUBLIC	?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Orphan_all
PUBLIC	?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getal
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::deallocate
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator++
PUBLIC	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myproxy
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Getal
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABQAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myend
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAEPAPAVMeshData@@I@Z ; std::_Wrap_alloc<std::allocator<MeshData *> >::allocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<MeshData *> >::max_size
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Get_second
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QBEABQAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Myend
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QBEABQAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Myend
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>
PUBLIC	?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
PUBLIC	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
PUBLIC	?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
PUBLIC	?_Unused_capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Unused_capacity
PUBLIC	?_Grow_to@?$vector@IV?$allocator@I@std@@@std@@IBEII@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Grow_to
PUBLIC	?_Reallocate@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Reallocate
PUBLIC	?_Unused_capacity@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEIXZ ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Unused_capacity
PUBLIC	?_Grow_to@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBEII@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Grow_to
PUBLIC	?_Reallocate@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Reallocate
PUBLIC	?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Getpfirst
PUBLIC	?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Getpfirst
PUBLIC	?_Unused_capacity@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ ; std::vector<MeshData *,std::allocator<MeshData *> >::_Unused_capacity
PUBLIC	?max_size@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ ; std::vector<MeshData *,std::allocator<MeshData *> >::max_size
PUBLIC	?_Destroy@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXPAPAVMeshData@@0@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::_Destroy
PUBLIC	?_Grow_to@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEII@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::_Grow_to
PUBLIC	?_Reallocate@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::_Reallocate
PUBLIC	?_Xlen@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXXZ ; std::vector<MeshData *,std::allocator<MeshData *> >::_Xlen
PUBLIC	?_Unused_capacity@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QBEIXZ ; std::vector<Material *,std::allocator<Material *> >::_Unused_capacity
PUBLIC	?_Grow_to@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBEII@Z ; std::vector<Material *,std::allocator<Material *> >::_Grow_to
PUBLIC	?_Reallocate@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z ; std::vector<Material *,std::allocator<Material *> >::_Reallocate
PUBLIC	?_Unused_capacity@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QBEIXZ ; std::vector<Mesh *,std::allocator<Mesh *> >::_Unused_capacity
PUBLIC	?_Grow_to@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBEII@Z ; std::vector<Mesh *,std::allocator<Mesh *> >::_Grow_to
PUBLIC	?_Reallocate@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z ; std::vector<Mesh *,std::allocator<Mesh *> >::_Reallocate
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::erase
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::clear
PUBLIC	??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >
PUBLIC	?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Free_proxy
PUBLIC	?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Freeheadnode
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::operator++
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::begin
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::erase
PUBLIC	?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Kfn
PUBLIC	?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myval
PUBLIC	??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >
PUBLIC	?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Free_proxy
PUBLIC	?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Freeheadnode
PUBLIC	?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Myval
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>::_Get_second
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::_Get_second
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Free_proxy
PUBLIC	?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Getpfirst
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Orphan_all
PUBLIC	?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEXAAV12@@Z ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Swap_all
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Get_data
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Get_data
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAEXPAPAVMeshData@@I@Z ; std::_Wrap_alloc<std::allocator<MeshData *> >::deallocate
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Get_first
PUBLIC	?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Getpfirst
PUBLIC	?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Getpfirst
PUBLIC	??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::~_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >
PUBLIC	??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::~_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>
PUBLIC	??1?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<MeshData *> >::~_Vector_val<std::_Simple_types<MeshData *> >
PUBLIC	??1?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>,1>::~_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>,1>
PUBLIC	??1?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::~_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>
PUBLIC	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z		; std::fpos<_Mbstatet>::fpos<_Mbstatet>
PUBLIC	??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ		; std::fpos<_Mbstatet>::operator __int64
PUBLIC	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?capacity@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::capacity
PUBLIC	??0?$allocator@I@std@@QAE@XZ			; std::allocator<unsigned int>::allocator<unsigned int>
PUBLIC	?_Inside@?$vector@IV?$allocator@I@std@@@std@@IBE_NPBI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Inside
PUBLIC	?_Reserve@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Reserve
PUBLIC	?_Orphan_range@?$vector@IV?$allocator@I@std@@@std@@IBEXPAI0@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Orphan_range
PUBLIC	??0?$allocator@V?$Vector2@M@@@std@@QAE@XZ	; std::allocator<Vector2<float> >::allocator<Vector2<float> >
PUBLIC	?_Inside@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBE_NPBV?$Vector2@M@@@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Inside
PUBLIC	?_Reserve@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Reserve
PUBLIC	?_Orphan_range@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBEXPAV?$Vector2@M@@0@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Orphan_range
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAE@ABV?$allocator@I@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$Vector2@M@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >
PUBLIC	??0?$allocator@PAVMeshData@@@std@@QAE@XZ	; std::allocator<MeshData *>::allocator<MeshData *>
PUBLIC	?_Assign_rv@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::_Assign_rv
PUBLIC	?_Inside@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBE_NPBQAVMeshData@@@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::_Inside
PUBLIC	?_Reserve@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::_Reserve
PUBLIC	?_Tidy@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXXZ ; std::vector<MeshData *,std::allocator<MeshData *> >::_Tidy
PUBLIC	?_Xran@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXXZ ; std::vector<MeshData *,std::allocator<MeshData *> >::_Xran
PUBLIC	?_Orphan_range@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXPAPAVMeshData@@0@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::_Orphan_range
PUBLIC	?_Inside@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBE_NPBQAVMaterial@@@Z ; std::vector<Material *,std::allocator<Material *> >::_Inside
PUBLIC	?_Reserve@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z ; std::vector<Material *,std::allocator<Material *> >::_Reserve
PUBLIC	?_Orphan_range@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBEXPAPAVMaterial@@0@Z ; std::vector<Material *,std::allocator<Material *> >::_Orphan_range
PUBLIC	??0?$allocator@PAVMesh@@@std@@QAE@XZ		; std::allocator<Mesh *>::allocator<Mesh *>
PUBLIC	?_Inside@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBE_NPBQAVMesh@@@Z ; std::vector<Mesh *,std::allocator<Mesh *> >::_Inside
PUBLIC	?_Reserve@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z ; std::vector<Mesh *,std::allocator<Mesh *> >::_Reserve
PUBLIC	?_Orphan_range@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBEXPAPAVMesh@@0@Z ; std::vector<Mesh *,std::allocator<Mesh *> >::_Orphan_range
PUBLIC	??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >
PUBLIC	??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >
PUBLIC	??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::erase
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::equal_range
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Tidy
PUBLIC	??1?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >
PUBLIC	??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::lower_bound
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Tidy
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Key
PUBLIC	??1?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >
PUBLIC	?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getcomp
PUBLIC	?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Get_data
PUBLIC	?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myhead
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator*
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator==
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@$$QAV?$allocator@PAVMeshData@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >
PUBLIC	??1?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::~_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Getal
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABQAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABQAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myend
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMesh@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::_Mynode
PUBLIC	?pointer_to@?$pointer_traits@PBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@SAPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@ABU32@@Z ; std::pointer_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *>::pointer_to
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >
PUBLIC	??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >
PUBLIC	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
PUBLIC	?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
PUBLIC	?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
PUBLIC	?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
PUBLIC	?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$vector@IV?$allocator@I@std@@@std@@QAE@XZ	; std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> >
PUBLIC	?push_back@?$vector@IV?$allocator@I@std@@@std@@QAEX$$QAI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::push_back
PUBLIC	??A?$vector@IV?$allocator@I@std@@@std@@QBEABII@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::operator[]
PUBLIC	??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::operator[]
PUBLIC	?push_back@?$vector@IV?$allocator@I@std@@@std@@QAEXABI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::push_back
PUBLIC	?reserve@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEXI@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::reserve
PUBLIC	??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEABVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
PUBLIC	??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
PUBLIC	?push_back@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEXABVVector3f@@@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::push_back
PUBLIC	?clear@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEXXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::clear
PUBLIC	??0?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAE@XZ ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::vector<Vector2<float>,std::allocator<Vector2<float> > >
PUBLIC	?push_back@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEX$$QAV?$Vector2@M@@@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::push_back
PUBLIC	??A?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEABV?$Vector2@M@@I@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::operator[]
PUBLIC	??A?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEAAV?$Vector2@M@@I@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::operator[]
PUBLIC	?push_back@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEXABV?$Vector2@M@@@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::push_back
PUBLIC	??0?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@XZ ; std::vector<MeshData *,std::allocator<MeshData *> >::vector<MeshData *,std::allocator<MeshData *> >
PUBLIC	??0?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@$$QAV01@@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::vector<MeshData *,std::allocator<MeshData *> >
PUBLIC	?push_back@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAEX$$QAPAVMeshData@@@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::push_back
PUBLIC	??1?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@XZ ; std::vector<MeshData *,std::allocator<MeshData *> >::~vector<MeshData *,std::allocator<MeshData *> >
PUBLIC	?size@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ ; std::vector<MeshData *,std::allocator<MeshData *> >::size
PUBLIC	?at@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAEAAPAVMeshData@@I@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::at
PUBLIC	??0?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QAE@$$QAV01@@Z ; std::vector<Material *,std::allocator<Material *> >::vector<Material *,std::allocator<Material *> >
PUBLIC	?push_back@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QAEXABQAVMaterial@@@Z ; std::vector<Material *,std::allocator<Material *> >::push_back
PUBLIC	??0?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QAE@XZ ; std::vector<Mesh *,std::allocator<Mesh *> >::vector<Mesh *,std::allocator<Mesh *> >
PUBLIC	?push_back@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QAEX$$QAPAVMesh@@@Z ; std::vector<Mesh *,std::allocator<Mesh *> >::push_back
PUBLIC	??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@QAE@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >
PUBLIC	??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@QAE@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >
PUBLIC	??0?$aiVector3t@M@@QAE@MMM@Z			; aiVector3t<float>::aiVector3t<float>
PUBLIC	??0?$aiVector3t@M@@QAE@ABV0@@Z			; aiVector3t<float>::aiVector3t<float>
PUBLIC	??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::erase
PUBLIC	??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::end
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::find
PUBLIC	??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBEPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator->
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator!=
PUBLIC	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>
PUBLIC	??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>
PUBLIC	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >
PUBLIC	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::~_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >
PUBLIC	?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Mesh::ImportColData
PUBLIC	?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z ; Mesh::ImportMeshData
PUBLIC	??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Mesh::Mesh
PUBLIC	??_GMesh@@UAEPAXI@Z				; Mesh::`scalar deleting destructor'
PUBLIC	??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVIndexedModel@@@Z ; Mesh::Mesh
PUBLIC	?Draw@MeshData@@QBEXXZ				; MeshData::Draw
PUBLIC	??1MeshData@@UAE@XZ				; MeshData::~MeshData
PUBLIC	?CalcTangents@IndexedModel@@QAEXXZ		; IndexedModel::CalcTangents
PUBLIC	?CalcNormals@IndexedModel@@QAEXXZ		; IndexedModel::CalcNormals
PUBLIC	?AddFace@IndexedModel@@QAEXIII@Z		; IndexedModel::AddFace
PUBLIC	??0IndexedModel@@QAE@ABV0@@Z			; IndexedModel::IndexedModel
PUBLIC	?Finalize@IndexedModel@@QAE?AV1@XZ		; IndexedModel::Finalize
PUBLIC	?AddTangent@IndexedModel@@QAEXABVVector3f@@@Z	; IndexedModel::AddTangent
PUBLIC	?AddNormal@IndexedModel@@QAEXABVVector3f@@@Z	; IndexedModel::AddNormal
PUBLIC	?AddTexCoord@IndexedModel@@QAEXABV?$Vector2@M@@@Z ; IndexedModel::AddTexCoord
PUBLIC	?AddVertex@IndexedModel@@QAEXABVVector3f@@@Z	; IndexedModel::AddVertex
PUBLIC	?IsValid@IndexedModel@@QBE_NXZ			; IndexedModel::IsValid
PUBLIC	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@QAE@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >
PUBLIC	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@QAE@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >
PUBLIC	??$Get@UaiString@@@aiMaterial@@QBE?AW4aiReturn@@PBDIIAAUaiString@@@Z ; aiMaterial::Get<aiString>
PUBLIC	??$Get@M@aiMaterial@@QBE?AW4aiReturn@@PBDIIAAM@Z ; aiMaterial::Get<float>
PUBLIC	?GetTexture@aiMaterial@@QBE?AW4aiReturn@@W4aiTextureType@@IPAUaiString@@PAW4aiTextureMapping@@PAIPAMPAW4aiTextureOp@@PAW4aiTextureMapMode@@@Z ; aiMaterial::GetTexture
PUBLIC	_aiGetMaterialFloat
PUBLIC	?HasTextureCoords@aiMesh@@QBE_NI@Z		; aiMesh::HasTextureCoords
PUBLIC	?ReadFile@Importer@Assimp@@QAEPBUaiScene@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; Assimp::Importer::ReadFile
PUBLIC	?C_Str@aiString@@QBEPBDXZ			; aiString::C_Str
PUBLIC	??0aiString@@QAE@XZ				; aiString::aiString
PUBLIC	??_GMeshData@@UAEPAXI@Z				; MeshData::`scalar deleting destructor'
PUBLIC	?not_eof@?$char_traits@D@std@@SAHABH@Z		; std::char_traits<char>::not_eof
PUBLIC	?to_int_type@?$char_traits@D@std@@SAHABD@Z	; std::char_traits<char>::to_int_type
PUBLIC	?to_char_type@?$char_traits@D@std@@SADABH@Z	; std::char_traits<char>::to_char_type
PUBLIC	?eq@?$char_traits@D@std@@SA_NABD0@Z		; std::char_traits<char>::eq
PUBLIC	?SetZ@Vector3f@@QAEXM@Z				; Vector3f::SetZ
PUBLIC	?SetY@Vector3f@@QAEXM@Z				; Vector3f::SetY
PUBLIC	?SetX@Vector3f@@QAEXM@Z				; Vector3f::SetX
PUBLIC	??YVector3f@@QAEAAV0@ABV0@@Z			; Vector3f::operator+=
PUBLIC	??GVector3f@@QBE?AV0@ABV0@@Z			; Vector3f::operator-
PUBLIC	?Cross@Vector3f@@QBE?AV1@ABV1@@Z		; Vector3f::Cross
PUBLIC	??3btTriangleIndexVertexArray@@SAXPAX@Z		; btTriangleIndexVertexArray::operator delete
PUBLIC	??2btTriangleIndexVertexArray@@SAPAXI@Z		; btTriangleIndexVertexArray::operator new
PUBLIC	??0MeshData@@QAE@ABVIndexedModel@@H@Z		; MeshData::MeshData
PUBLIC	?Draw@Mesh@@QBEXXZ				; Mesh::Draw
PUBLIC	??1Mesh@@UAE@XZ					; Mesh::~Mesh
PUBLIC	?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; Mesh::ImportMesh
PUBLIC	?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; Mesh::ImportMeshMaterial
PUBLIC	??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@Z ; Mesh::Mesh
PUBLIC	??0Mesh@@QAE@ABV0@@Z				; Mesh::Mesh
PUBLIC	?ImportCollision@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Mesh::ImportCollision
PUBLIC	?s_resourceColMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@A ; Mesh::s_resourceColMap
PUBLIC	?s_resourceMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@A ; Mesh::s_resourceMap
EXTRN	??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??_EMeshData@@UAEPAXI@Z:PROC			; MeshData::`vector deleting destructor'
EXTRN	??_EMesh@@UAEPAXI@Z:PROC			; Mesh::`vector deleting destructor'
?s_resourceColMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@A DB 0cH DUP (?) ; Mesh::s_resourceColMap
?s_resourceMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@A DB 0cH DUP (?) ; Mesh::s_resourceMap
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??3btTriangleIndexVertexArray@@SAXPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0IndexedModel@@QAE@ABV0@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0IndexedModel@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0IndexedModel@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0IndexedModel@@QAE@ABV0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0IndexedModel@@QAE@ABV0@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0IndexedModel@@QAE@ABV0@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0IndexedModel@@QAE@ABV0@@Z$3
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$3
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$3
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?clear@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$vector@IV?$allocator@I@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMesh@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMesh@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMesh@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMesh@@@1@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@$$QAV?$allocator@PAVMeshData@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@$$QAV?$allocator@PAVMeshData@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@$$QAV?$allocator@PAVMeshData@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@$$QAV?$allocator@PAVMeshData@@@1@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXXZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXXZ$2
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXXZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXXZ$2
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@0@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@0@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@0@Z$3
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Orphan_range@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBEXPAPAVMesh@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBEXPAPAVMesh@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Orphan_range@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBEXPAPAVMesh@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBEXPAPAVMesh@@0@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Orphan_range@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBEXPAPAVMaterial@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBEXPAPAVMaterial@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Orphan_range@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBEXPAPAVMaterial@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBEXPAPAVMaterial@@0@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Orphan_range@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXPAPAVMeshData@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXPAPAVMeshData@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Orphan_range@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXPAPAVMeshData@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXPAPAVMeshData@@0@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$Vector2@M@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$Vector2@M@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$Vector2@M@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$Vector2@M@@@1@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAE@ABV?$allocator@I@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAE@ABV?$allocator@I@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAE@ABV?$allocator@I@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAE@ABV?$allocator@I@1@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Orphan_range@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBEXPAV?$Vector2@M@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBEXPAV?$Vector2@M@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Orphan_range@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBEXPAV?$Vector2@M@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBEXPAV?$Vector2@M@@0@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Orphan_range@?$vector@IV?$allocator@I@std@@@std@@IBEXPAI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@IV?$allocator@I@std@@@std@@IBEXPAI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Orphan_range@?$vector@IV?$allocator@I@std@@@std@@IBEXPAI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@IV?$allocator@I@std@@@std@@IBEXPAI0@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@0@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@0@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@0@Z$3
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Reallocate@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Reallocate@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z$2
__catchsym$?_Reallocate@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Reallocate@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Reallocate@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z$2
__catchsym$?_Reallocate@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Reallocate@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Reallocate@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z$2
__catchsym$?_Reallocate@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Reallocate@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Reallocate@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z$2
__catchsym$?_Reallocate@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Reallocate@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Reallocate@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z$2
__catchsym$?_Reallocate@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ$2
__catchsym$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ$2
__catchsym$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ$2
__catchsym$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ$2
__catchsym$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$to_string@I@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$to_string@I@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$to_string@I@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$to_string@I@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAI@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$_Distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAI@Z$2
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$2
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$1
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$1
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Distance2@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Distance2@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$_Distance2@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Distance2@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Distance2@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z$1
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Uninit_move@PAV?$Vector2@M@@PAV1@V?$allocator@V?$Vector2@M@@@std@@V1@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAV?$Vector2@M@@PAV1@V?$allocator@V?$Vector2@M@@@std@@V1@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAV?$Vector2@M@@PAV1@V?$allocator@V?$Vector2@M@@@std@@V1@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$_Uninit_move@PAV?$Vector2@M@@PAV1@V?$allocator@V?$Vector2@M@@@std@@V1@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAV?$Vector2@M@@PAV1@V?$allocator@V?$Vector2@M@@@std@@V1@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAV?$Vector2@M@@PAV1@V?$allocator@V?$Vector2@M@@@std@@V1@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__catchsym$??$_Uninit_move@PAV?$Vector2@M@@PAV1@V?$allocator@V?$Vector2@M@@@std@@V1@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAV?$Vector2@M@@PAV1@V?$allocator@V?$Vector2@M@@@std@@V1@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__ehfuncinfo$?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$6
__ehfuncinfo$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z DD 019930522H
	DD	013H
	DD	FLAT:__unwindtable$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$10
	DD	0aH
	DD	FLAT:__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$11
	DD	0bH
	DD	FLAT:__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$12
	DD	0cH
	DD	FLAT:__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$14
	DD	0bH
	DD	FLAT:__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$14
	DD	0bH
	DD	FLAT:__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$15
	DD	0fH
	DD	FLAT:__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$16
	DD	010H
	DD	FLAT:__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$17
	DD	011H
	DD	FLAT:__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$18
__ehfuncinfo$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4
__ehfuncinfo$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVIndexedModel@@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVIndexedModel@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVIndexedModel@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVIndexedModel@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVIndexedModel@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVIndexedModel@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVIndexedModel@@@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVIndexedModel@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVIndexedModel@@@Z$4
	DD	03H
	DD	FLAT:__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVIndexedModel@@@Z$5
__ehfuncinfo$??1MeshData@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
__ehfuncinfo$??0MeshData@@QAE@ABVIndexedModel@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0MeshData@@QAE@ABVIndexedModel@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0MeshData@@QAE@ABVIndexedModel@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0MeshData@@QAE@ABVIndexedModel@@H@Z$0
__ehfuncinfo$??1Mesh@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
__ehfuncinfo$?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$3
	DD	06H
	DD	FLAT:__unwindfunclet$?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$4
	DD	07H
	DD	FLAT:__unwindfunclet$?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$5
__ehfuncinfo$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z DD 019930522H
	DD	013H
	DD	FLAT:__unwindtable$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$10
	DD	0aH
	DD	FLAT:__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$11
	DD	0bH
	DD	FLAT:__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$12
	DD	0cH
	DD	FLAT:__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$13
	DD	0dH
	DD	FLAT:__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$14
	DD	09H
	DD	FLAT:__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$11
	DD	0fH
	DD	FLAT:__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$12
	DD	010H
	DD	FLAT:__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$13
	DD	011H
	DD	FLAT:__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$14
__unwindtable$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@Z$0
__ehfuncinfo$??0Mesh@@QAE@ABV0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Mesh@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0Mesh@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Mesh@@QAE@ABV0@@Z$0
__ehfuncinfo$?ImportCollision@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?ImportCollision@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?ImportCollision@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ImportCollision@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ImportCollision@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?ImportCollision@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?ImportCollision@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ImportCollision@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	DD	04H
	DD	FLAT:__unwindfunclet$?ImportCollision@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
??s_resourceMap$initializer$@Mesh@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?s_resourceMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@A@@YAXXZ ; ??s_resourceMap$initializer$@Mesh@@2P6AXXZA@@3P6AXXZA
??s_resourceColMap$initializer$@Mesh@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?s_resourceColMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@A@@YAXXZ ; ??s_resourceColMap$initializer$@Mesh@@2P6AXXZA@@3P6AXXZA
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
_TEXT	SEGMENT
tv151 = -124						; size = 4
tv67 = -120						; size = 4
tv148 = -116						; size = 4
tv154 = -112						; size = 4
tv146 = -108						; size = 4
tv153 = -104						; size = 4
$T2 = -100						; size = 4
$T3 = -96						; size = 12
$T4 = -81						; size = 1
$T5 = -80						; size = 12
_mesh$ = -68						; size = 4
$T6 = -64						; size = 28
_it$ = -32						; size = 12
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_fileName$ = 8						; size = 4
?ImportCollision@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Mesh::ImportCollision

; 534  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ImportCollision@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 70	 sub	 esp, 112		; 00000070H
  00014	57		 push	 edi
  00015	8d 7d 84	 lea	 edi, DWORD PTR [ebp-124]
  00018	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00029	33 c5		 xor	 eax, ebp
  0002b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00032	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 535  : 	return Mesh::ImportColData(fileName);

  00038	8b 45 08	 mov	 eax, DWORD PTR _fileName$[ebp]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Mesh::ImportColData
  00041	83 c4 04	 add	 esp, 4
  00044	e9 dd 00 00 00	 jmp	 $LN1@ImportColl

; 536  : 	std::map<std::string, btTriangleMesh*>::const_iterator it = s_resourceColMap.find(fileName+"_col");

  00049	68 00 00 00 00	 push	 OFFSET $SG4294911789
  0004e	8b 4d 08	 mov	 ecx, DWORD PTR _fileName$[ebp]
  00051	51		 push	 ecx
  00052	8d 55 c0	 lea	 edx, DWORD PTR $T6[ebp]
  00055	52		 push	 edx
  00056	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	89 45 98	 mov	 DWORD PTR tv153[ebp], eax
  00061	8b 45 98	 mov	 eax, DWORD PTR tv153[ebp]
  00064	89 45 94	 mov	 DWORD PTR tv146[ebp], eax
  00067	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006e	8b 4d 94	 mov	 ecx, DWORD PTR tv146[ebp]
  00071	51		 push	 ecx
  00072	8d 55 b0	 lea	 edx, DWORD PTR $T5[ebp]
  00075	52		 push	 edx
  00076	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_resourceColMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@A ; Mesh::s_resourceColMap
  0007b	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::find
  00080	89 45 90	 mov	 DWORD PTR tv154[ebp], eax
  00083	8b 45 90	 mov	 eax, DWORD PTR tv154[ebp]
  00086	89 45 8c	 mov	 DWORD PTR tv148[ebp], eax
  00089	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0008d	8b 4d 8c	 mov	 ecx, DWORD PTR tv148[ebp]
  00090	51		 push	 ecx
  00091	8d 4d e0	 lea	 ecx, DWORD PTR _it$[ebp]
  00094	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
  00099	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0009d	8d 4d b0	 lea	 ecx, DWORD PTR $T5[ebp]
  000a0	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
  000a5	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000a9	8d 4d c0	 lea	 ecx, DWORD PTR $T6[ebp]
  000ac	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 537  : 	btTriangleMesh* mesh;
; 538  : 	if (it != s_resourceColMap.end())

  000b1	8d 55 a0	 lea	 edx, DWORD PTR $T3[ebp]
  000b4	52		 push	 edx
  000b5	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_resourceColMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@A ; Mesh::s_resourceColMap
  000ba	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::end
  000bf	89 45 88	 mov	 DWORD PTR tv67[ebp], eax
  000c2	8b 45 88	 mov	 eax, DWORD PTR tv67[ebp]
  000c5	89 45 84	 mov	 DWORD PTR tv151[ebp], eax
  000c8	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  000cc	8b 4d 84	 mov	 ecx, DWORD PTR tv151[ebp]
  000cf	51		 push	 ecx
  000d0	8d 4d e0	 lea	 ecx, DWORD PTR _it$[ebp]
  000d3	e8 00 00 00 00	 call	 ??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator!=
  000d8	88 45 af	 mov	 BYTE PTR $T4[ebp], al
  000db	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000df	8d 4d a0	 lea	 ecx, DWORD PTR $T3[ebp]
  000e2	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
  000e7	0f b6 55 af	 movzx	 edx, BYTE PTR $T4[ebp]
  000eb	85 d2		 test	 edx, edx
  000ed	74 10		 je	 SHORT $LN2@ImportColl

; 539  : 	{
; 540  : 		mesh = it->second;

  000ef	8d 4d e0	 lea	 ecx, DWORD PTR _it$[ebp]
  000f2	e8 00 00 00 00	 call	 ??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBEPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator->
  000f7	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  000fa	89 45 bc	 mov	 DWORD PTR _mesh$[ebp], eax

; 541  : 	}
; 542  : 	else

  000fd	eb 0f		 jmp	 SHORT $LN3@ImportColl
$LN2@ImportColl:

; 543  : 	{
; 544  : 		mesh = Mesh::ImportColData(fileName);

  000ff	8b 4d 08	 mov	 ecx, DWORD PTR _fileName$[ebp]
  00102	51		 push	 ecx
  00103	e8 00 00 00 00	 call	 ?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Mesh::ImportColData
  00108	83 c4 04	 add	 esp, 4
  0010b	89 45 bc	 mov	 DWORD PTR _mesh$[ebp], eax
$LN3@ImportColl:

; 545  : 	}
; 546  : 	return mesh;

  0010e	8b 55 bc	 mov	 edx, DWORD PTR _mesh$[ebp]
  00111	89 55 9c	 mov	 DWORD PTR $T2[ebp], edx
  00114	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0011b	8d 4d e0	 lea	 ecx, DWORD PTR _it$[ebp]
  0011e	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
  00123	8b 45 9c	 mov	 eax, DWORD PTR $T2[ebp]
$LN1@ImportColl:

; 547  : }

  00126	52		 push	 edx
  00127	8b cd		 mov	 ecx, ebp
  00129	50		 push	 eax
  0012a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@ImportColl
  00130	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00135	58		 pop	 eax
  00136	5a		 pop	 edx
  00137	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0013a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00141	59		 pop	 ecx
  00142	5f		 pop	 edi
  00143	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00146	33 cd		 xor	 ecx, ebp
  00148	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0014d	83 c4 7c	 add	 esp, 124		; 0000007cH
  00150	3b ec		 cmp	 ebp, esp
  00152	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00157	8b e5		 mov	 esp, ebp
  00159	5d		 pop	 ebp
  0015a	c3		 ret	 0
  0015b	90		 npad	 1
$LN12@ImportColl:
  0015c	01 00 00 00	 DD	 1
  00160	00 00 00 00	 DD	 $LN11@ImportColl
$LN11@ImportColl:
  00164	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00168	0c 00 00 00	 DD	 12			; 0000000cH
  0016c	00 00 00 00	 DD	 $LN9@ImportColl
$LN9@ImportColl:
  00170	69		 DB	 105			; 00000069H
  00171	74		 DB	 116			; 00000074H
  00172	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ImportCollision@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
  00000	8d 4d c0	 lea	 ecx, DWORD PTR $T6[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ImportCollision@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
  00008	8d 4d b0	 lea	 ecx, DWORD PTR $T5[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?ImportCollision@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
  00010	8d 4d e0	 lea	 ecx, DWORD PTR _it$[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?ImportCollision@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
  00018	8d 4d a0	 lea	 ecx, DWORD PTR $T3[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?ImportCollision@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00020	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00024	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00027	8b 4a 88	 mov	 ecx, DWORD PTR [edx-120]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00034	33 c8		 xor	 ecx, eax
  00036	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ImportCollision@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00040	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ImportCollision@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Mesh::ImportCollision
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_mesh$ = 8						; size = 4
??0Mesh@@QAE@ABV0@@Z PROC				; Mesh::Mesh
; _this$ = ecx

; 292  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Mesh@@QAE@ABV0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00030	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Mesh@@6B@

; 290  : 	m_fileName(mesh.m_fileName),

  00036	8b 4d 08	 mov	 ecx, DWORD PTR _mesh$[ebp]
  00039	83 c1 04	 add	 ecx, 4
  0003c	51		 push	 ecx
  0003d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	83 c1 04	 add	 ecx, 4
  00043	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00048	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 291  : 	m_meshData(mesh.m_meshData)

  0004f	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00052	8b 45 08	 mov	 eax, DWORD PTR _mesh$[ebp]
  00055	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00058	89 4a 20	 mov	 DWORD PTR [edx+32], ecx

; 293  : 	m_meshData->AddReference();

  0005b	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0005e	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  00061	83 c1 04	 add	 ecx, 4
  00064	e8 00 00 00 00	 call	 ?AddReference@ReferenceCounter@@QAEXXZ ; ReferenceCounter::AddReference

; 294  : }

  00069	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00070	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00073	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00076	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007d	59		 pop	 ecx
  0007e	83 c4 10	 add	 esp, 16			; 00000010H
  00081	3b ec		 cmp	 ebp, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c2 04 00	 ret	 4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0Mesh@@QAE@ABV0@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0Mesh@@QAE@ABV0@@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Mesh@@QAE@ABV0@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Mesh@@QAE@ABV0@@Z ENDP				; Mesh::Mesh
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_fileName$ = 8						; size = 4
_data$ = 12						; size = 4
??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@Z PROC ; Mesh::Mesh
; _this$ = ecx

; 285  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00030	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Mesh@@6B@

; 283  :     m_fileName(fileName),

  00036	8b 4d 08	 mov	 ecx, DWORD PTR _fileName$[ebp]
  00039	51		 push	 ecx
  0003a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 c1 04	 add	 ecx, 4
  00040	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00045	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 284  :     m_meshData(data)

  0004c	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0004f	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  00052	89 42 20	 mov	 DWORD PTR [edx+32], eax

; 286  :     m_meshData->AddReference();

  00055	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  0005b	83 c1 04	 add	 ecx, 4
  0005e	e8 00 00 00 00	 call	 ?AddReference@ReferenceCounter@@QAEXXZ ; ReferenceCounter::AddReference

; 287  : }

  00063	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00077	59		 pop	 ecx
  00078	83 c4 10	 add	 esp, 16			; 00000010H
  0007b	3b ec		 cmp	 ebp, esp
  0007d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@Z ENDP ; Mesh::Mesh
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
_TEXT	SEGMENT
tv288 = -4668						; size = 4
tv304 = -4664						; size = 4
tv346 = -4660						; size = 4
tv302 = -4656						; size = 4
tv345 = -4652						; size = 4
tv300 = -4648						; size = 4
tv344 = -4644						; size = 4
tv298 = -4640						; size = 4
tv343 = -4636						; size = 4
tv296 = -4632						; size = 4
tv342 = -4628						; size = 4
$T2 = -4624						; size = 4
$T3 = -4620						; size = 4
$T4 = -4616						; size = 4
$T5 = -4612						; size = 28
$T6 = -4584						; size = 36
$T7 = -4548						; size = 36
$T8 = -4512						; size = 36
_mat$9 = -4472						; size = 4
_sDispName$10 = -4460					; size = 28
_sNormName$11 = -4424					; size = 28
_sTexName$12 = -4388					; size = 28
_shine$13 = -4352					; size = 4
_dispName$14 = -4340					; size = 1028
_normName$15 = -3304					; size = 1028
_texName$16 = -2268					; size = 1028
_matName$17 = -1232					; size = 1028
_i$18 = -200						; size = 4
_outData$ = -192					; size = 16
$T19 = -172						; size = 28
$T20 = -144						; size = 28
$T21 = -116						; size = 28
$T22 = -88						; size = 28
$T23 = -60						; size = 28
_scene$ = -32						; size = 4
_importer$ = -24					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_fileName$ = 12						; size = 4
?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z PROC ; Mesh::ImportMeshMaterial

; 445  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	b8 30 12 00 00	 mov	 eax, 4656		; 00001230H
  00016	e8 00 00 00 00	 call	 __chkstk
  0001b	56		 push	 esi
  0001c	57		 push	 edi
  0001d	8d bd c4 ed ff
	ff		 lea	 edi, DWORD PTR [ebp-4668]
  00023	b9 8c 04 00 00	 mov	 ecx, 1164		; 0000048cH
  00028	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002d	f3 ab		 rep stosd
  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00034	33 c5		 xor	 eax, ebp
  00036	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00039	50		 push	 eax
  0003a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00043	c7 85 f0 ed ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0

; 446  :     Assimp::Importer importer;

  0004d	8b f4		 mov	 esi, esp
  0004f	8d 4d e8	 lea	 ecx, DWORD PTR _importer$[ebp]
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0Importer@Assimp@@QAE@XZ
  00058	3b f4		 cmp	 esi, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 447  : 
; 448  :     const aiScene* scene = importer.ReadFile((Util::ResourcePath() + "models/" + fileName).c_str(),

  00066	8d 45 c4	 lea	 eax, DWORD PTR $T23[ebp]
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ?ResourcePath@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; Util::ResourcePath
  0006f	83 c4 04	 add	 esp, 4
  00072	89 85 ec ed ff
	ff		 mov	 DWORD PTR tv342[ebp], eax
  00078	8b 8d ec ed ff
	ff		 mov	 ecx, DWORD PTR tv342[ebp]
  0007e	89 8d e8 ed ff
	ff		 mov	 DWORD PTR tv296[ebp], ecx
  00084	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00088	68 00 00 00 00	 push	 OFFSET $SG4294911798
  0008d	8b 95 e8 ed ff
	ff		 mov	 edx, DWORD PTR tv296[ebp]
  00093	52		 push	 edx
  00094	8d 45 a8	 lea	 eax, DWORD PTR $T22[ebp]
  00097	50		 push	 eax
  00098	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  0009d	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a0	89 85 e4 ed ff
	ff		 mov	 DWORD PTR tv343[ebp], eax
  000a6	8b 8d e4 ed ff
	ff		 mov	 ecx, DWORD PTR tv343[ebp]
  000ac	89 8d e0 ed ff
	ff		 mov	 DWORD PTR tv298[ebp], ecx
  000b2	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000b6	8b 55 0c	 mov	 edx, DWORD PTR _fileName$[ebp]
  000b9	52		 push	 edx
  000ba	8b 85 e0 ed ff
	ff		 mov	 eax, DWORD PTR tv298[ebp]
  000c0	50		 push	 eax
  000c1	8d 4d 8c	 lea	 ecx, DWORD PTR $T21[ebp]
  000c4	51		 push	 ecx
  000c5	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  000ca	83 c4 0c	 add	 esp, 12			; 0000000cH
  000cd	89 85 dc ed ff
	ff		 mov	 DWORD PTR tv344[ebp], eax
  000d3	8b 95 dc ed ff
	ff		 mov	 edx, DWORD PTR tv344[ebp]
  000d9	89 95 d8 ed ff
	ff		 mov	 DWORD PTR tv300[ebp], edx
  000df	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000e3	8b f4		 mov	 esi, esp
  000e5	68 49 a0 82 00	 push	 8560713			; 0082a049H
  000ea	8b 8d d8 ed ff
	ff		 mov	 ecx, DWORD PTR tv300[ebp]
  000f0	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  000f5	50		 push	 eax
  000f6	8d 4d e8	 lea	 ecx, DWORD PTR _importer$[ebp]
  000f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadFile@Importer@Assimp@@QAEPBUaiScene@@PBDI@Z
  000ff	3b f4		 cmp	 esi, esp
  00101	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00106	89 45 e0	 mov	 DWORD PTR _scene$[ebp], eax
  00109	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0010d	8d 4d 8c	 lea	 ecx, DWORD PTR $T21[ebp]
  00110	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00115	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00119	8d 4d a8	 lea	 ecx, DWORD PTR $T22[ebp]
  0011c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00121	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00125	8d 4d c4	 lea	 ecx, DWORD PTR $T23[ebp]
  00128	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 449  :         aiProcess_Triangulate |
; 450  :         aiProcess_GenSmoothNormals |
; 451  :         aiProcess_FlipUVs |
; 452  :         // aiProcess_OptimizeGraph |
; 453  :         //aiProcess_PreTransformVertices |
; 454  :         //aiProcess_JoinIdenticalVertices |
; 455  :         aiProcess_SortByPType |
; 456  :         aiProcess_FixInfacingNormals |
; 457  :         aiProcess_FindInvalidData |
; 458  :         //aiProcess_ValidateDataStructure |
; 459  :         aiProcess_CalcTangentSpace);
; 460  : 
; 461  :     if (!scene)

  0012d	83 7d e0 00	 cmp	 DWORD PTR _scene$[ebp], 0
  00131	0f 85 c2 00 00
	00		 jne	 $LN5@ImportMesh

; 462  :     {
; 463  :         std::cout << "Mesh load failed!: " << fileName << std::endl;

  00137	8b f4		 mov	 esi, esp
  00139	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  0013e	8b 45 0c	 mov	 eax, DWORD PTR _fileName$[ebp]
  00141	50		 push	 eax
  00142	68 00 00 00 00	 push	 OFFSET $SG4294911797
  00147	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  0014d	51		 push	 ecx
  0014e	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00153	83 c4 08	 add	 esp, 8
  00156	50		 push	 eax
  00157	e8 00 00 00 00	 call	 ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
  0015c	83 c4 08	 add	 esp, 8
  0015f	8b c8		 mov	 ecx, eax
  00161	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  00167	3b f4		 cmp	 esi, esp
  00169	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 464  :         scene = importer.ReadFile(Util::ResourcePath() + "models/error.obj",

  0016e	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR $T20[ebp]
  00174	52		 push	 edx
  00175	e8 00 00 00 00	 call	 ?ResourcePath@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; Util::ResourcePath
  0017a	83 c4 04	 add	 esp, 4
  0017d	89 85 d4 ed ff
	ff		 mov	 DWORD PTR tv345[ebp], eax
  00183	8b 85 d4 ed ff
	ff		 mov	 eax, DWORD PTR tv345[ebp]
  00189	89 85 d0 ed ff
	ff		 mov	 DWORD PTR tv302[ebp], eax
  0018f	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00193	68 00 00 00 00	 push	 OFFSET $SG4294911796
  00198	8b 8d d0 ed ff
	ff		 mov	 ecx, DWORD PTR tv302[ebp]
  0019e	51		 push	 ecx
  0019f	8d 95 54 ff ff
	ff		 lea	 edx, DWORD PTR $T19[ebp]
  001a5	52		 push	 edx
  001a6	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  001ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  001ae	89 85 cc ed ff
	ff		 mov	 DWORD PTR tv346[ebp], eax
  001b4	8b 85 cc ed ff
	ff		 mov	 eax, DWORD PTR tv346[ebp]
  001ba	89 85 c8 ed ff
	ff		 mov	 DWORD PTR tv304[ebp], eax
  001c0	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  001c4	68 49 a0 82 00	 push	 8560713			; 0082a049H
  001c9	8b 8d c8 ed ff
	ff		 mov	 ecx, DWORD PTR tv304[ebp]
  001cf	51		 push	 ecx
  001d0	8d 4d e8	 lea	 ecx, DWORD PTR _importer$[ebp]
  001d3	e8 00 00 00 00	 call	 ?ReadFile@Importer@Assimp@@QAEPBUaiScene@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; Assimp::Importer::ReadFile
  001d8	89 45 e0	 mov	 DWORD PTR _scene$[ebp], eax
  001db	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  001df	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR $T19[ebp]
  001e5	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001ea	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001ee	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR $T20[ebp]
  001f4	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@ImportMesh:

; 465  : 			aiProcess_Triangulate |
; 466  : 			aiProcess_GenSmoothNormals |
; 467  : 			aiProcess_FlipUVs |
; 468  : 			// aiProcess_OptimizeGraph |
; 469  : 			//aiProcess_PreTransformVertices |
; 470  : 			//aiProcess_JoinIdenticalVertices |
; 471  : 			aiProcess_SortByPType |
; 472  : 			aiProcess_FixInfacingNormals |
; 473  : 			aiProcess_FindInvalidData |
; 474  : 			//aiProcess_ValidateDataStructure |
; 475  : 			aiProcess_CalcTangentSpace);
; 476  :     }
; 477  : 
; 478  :     std::vector<Material*> outData;

  001f9	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _outData$[ebp]
  001ff	e8 00 00 00 00	 call	 ??0?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QAE@XZ ; std::vector<Material *,std::allocator<Material *> >::vector<Material *,std::allocator<Material *> >
  00204	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6

; 479  : 
; 480  :     for (unsigned int i = 0; i < scene->mNumMaterials; i++)

  00208	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$18[ebp], 0
  00212	eb 0f		 jmp	 SHORT $LN4@ImportMesh
$LN2@ImportMesh:
  00214	8b 95 38 ff ff
	ff		 mov	 edx, DWORD PTR _i$18[ebp]
  0021a	83 c2 01	 add	 edx, 1
  0021d	89 95 38 ff ff
	ff		 mov	 DWORD PTR _i$18[ebp], edx
$LN4@ImportMesh:
  00223	8b 45 e0	 mov	 eax, DWORD PTR _scene$[ebp]
  00226	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR _i$18[ebp]
  0022c	3b 48 10	 cmp	 ecx, DWORD PTR [eax+16]
  0022f	0f 83 18 04 00
	00		 jae	 $LN3@ImportMesh

; 481  :     {
; 482  :         aiString matName;

  00235	8d 8d 30 fb ff
	ff		 lea	 ecx, DWORD PTR _matName$17[ebp]
  0023b	e8 00 00 00 00	 call	 ??0aiString@@QAE@XZ	; aiString::aiString

; 483  :         aiString texName, normName, dispName;

  00240	8d 8d 24 f7 ff
	ff		 lea	 ecx, DWORD PTR _texName$16[ebp]
  00246	e8 00 00 00 00	 call	 ??0aiString@@QAE@XZ	; aiString::aiString
  0024b	8d 8d 18 f3 ff
	ff		 lea	 ecx, DWORD PTR _normName$15[ebp]
  00251	e8 00 00 00 00	 call	 ??0aiString@@QAE@XZ	; aiString::aiString
  00256	8d 8d 0c ef ff
	ff		 lea	 ecx, DWORD PTR _dispName$14[ebp]
  0025c	e8 00 00 00 00	 call	 ??0aiString@@QAE@XZ	; aiString::aiString

; 484  :         float shine = 0.0;

  00261	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00269	f3 0f 11 85 00
	ef ff ff	 movss	 DWORD PTR _shine$13[ebp], xmm0

; 485  : 
; 486  :         scene->mMaterials[i]->Get(AI_MATKEY_NAME, matName);

  00271	8d 95 30 fb ff
	ff		 lea	 edx, DWORD PTR _matName$17[ebp]
  00277	52		 push	 edx
  00278	6a 00		 push	 0
  0027a	6a 00		 push	 0
  0027c	68 00 00 00 00	 push	 OFFSET $SG4294911795
  00281	8b 45 e0	 mov	 eax, DWORD PTR _scene$[ebp]
  00284	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00287	8b 95 38 ff ff
	ff		 mov	 edx, DWORD PTR _i$18[ebp]
  0028d	8b 0c 91	 mov	 ecx, DWORD PTR [ecx+edx*4]
  00290	e8 00 00 00 00	 call	 ??$Get@UaiString@@@aiMaterial@@QBE?AW4aiReturn@@PBDIIAAUaiString@@@Z ; aiMaterial::Get<aiString>

; 487  :         scene->mMaterials[i]->GetTexture(aiTextureType_DIFFUSE, 0, &texName);

  00295	6a 00		 push	 0
  00297	6a 00		 push	 0
  00299	6a 00		 push	 0
  0029b	6a 00		 push	 0
  0029d	6a 00		 push	 0
  0029f	8d 85 24 f7 ff
	ff		 lea	 eax, DWORD PTR _texName$16[ebp]
  002a5	50		 push	 eax
  002a6	6a 00		 push	 0
  002a8	6a 01		 push	 1
  002aa	8b 4d e0	 mov	 ecx, DWORD PTR _scene$[ebp]
  002ad	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  002b0	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _i$18[ebp]
  002b6	8b 0c 82	 mov	 ecx, DWORD PTR [edx+eax*4]
  002b9	e8 00 00 00 00	 call	 ?GetTexture@aiMaterial@@QBE?AW4aiReturn@@W4aiTextureType@@IPAUaiString@@PAW4aiTextureMapping@@PAIPAMPAW4aiTextureOp@@PAW4aiTextureMapMode@@@Z ; aiMaterial::GetTexture

; 488  :         scene->mMaterials[i]->GetTexture(aiTextureType_HEIGHT, 0, &normName);

  002be	6a 00		 push	 0
  002c0	6a 00		 push	 0
  002c2	6a 00		 push	 0
  002c4	6a 00		 push	 0
  002c6	6a 00		 push	 0
  002c8	8d 8d 18 f3 ff
	ff		 lea	 ecx, DWORD PTR _normName$15[ebp]
  002ce	51		 push	 ecx
  002cf	6a 00		 push	 0
  002d1	6a 05		 push	 5
  002d3	8b 55 e0	 mov	 edx, DWORD PTR _scene$[ebp]
  002d6	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  002d9	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR _i$18[ebp]
  002df	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  002e2	e8 00 00 00 00	 call	 ?GetTexture@aiMaterial@@QBE?AW4aiReturn@@W4aiTextureType@@IPAUaiString@@PAW4aiTextureMapping@@PAIPAMPAW4aiTextureOp@@PAW4aiTextureMapMode@@@Z ; aiMaterial::GetTexture

; 489  :         scene->mMaterials[i]->GetTexture(aiTextureType_DISPLACEMENT, 0, &dispName);

  002e7	6a 00		 push	 0
  002e9	6a 00		 push	 0
  002eb	6a 00		 push	 0
  002ed	6a 00		 push	 0
  002ef	6a 00		 push	 0
  002f1	8d 95 0c ef ff
	ff		 lea	 edx, DWORD PTR _dispName$14[ebp]
  002f7	52		 push	 edx
  002f8	6a 00		 push	 0
  002fa	6a 09		 push	 9
  002fc	8b 45 e0	 mov	 eax, DWORD PTR _scene$[ebp]
  002ff	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00302	8b 95 38 ff ff
	ff		 mov	 edx, DWORD PTR _i$18[ebp]
  00308	8b 0c 91	 mov	 ecx, DWORD PTR [ecx+edx*4]
  0030b	e8 00 00 00 00	 call	 ?GetTexture@aiMaterial@@QBE?AW4aiReturn@@W4aiTextureType@@IPAUaiString@@PAW4aiTextureMapping@@PAIPAMPAW4aiTextureOp@@PAW4aiTextureMapMode@@@Z ; aiMaterial::GetTexture

; 490  :         scene->mMaterials[i]->Get(AI_MATKEY_SHININESS, shine);

  00310	8d 85 00 ef ff
	ff		 lea	 eax, DWORD PTR _shine$13[ebp]
  00316	50		 push	 eax
  00317	6a 00		 push	 0
  00319	6a 00		 push	 0
  0031b	68 00 00 00 00	 push	 OFFSET $SG4294911794
  00320	8b 4d e0	 mov	 ecx, DWORD PTR _scene$[ebp]
  00323	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00326	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _i$18[ebp]
  0032c	8b 0c 82	 mov	 ecx, DWORD PTR [edx+eax*4]
  0032f	e8 00 00 00 00	 call	 ??$Get@M@aiMaterial@@QBE?AW4aiReturn@@PBDIIAAM@Z ; aiMaterial::Get<float>

; 491  : 
; 492  :         //std::cout << matName.C_Str() << ":::" << texName.C_Str();
; 493  : 
; 494  :         std::string sTexName = "DefaultTexture.png";

  00334	68 00 00 00 00	 push	 OFFSET $SG4294911793
  00339	8d 8d dc ee ff
	ff		 lea	 ecx, DWORD PTR _sTexName$12[ebp]
  0033f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00344	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7

; 495  :         if (texName.length > 0)

  00348	83 bd 24 f7 ff
	ff 00		 cmp	 DWORD PTR _texName$16[ebp], 0
  0034f	76 17		 jbe	 SHORT $LN6@ImportMesh

; 496  :         {
; 497  :             sTexName = texName.C_Str();

  00351	8d 8d 24 f7 ff
	ff		 lea	 ecx, DWORD PTR _texName$16[ebp]
  00357	e8 00 00 00 00	 call	 ?C_Str@aiString@@QBEPBDXZ ; aiString::C_Str
  0035c	50		 push	 eax
  0035d	8d 8d dc ee ff
	ff		 lea	 ecx, DWORD PTR _sTexName$12[ebp]
  00363	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
$LN6@ImportMesh:

; 498  :         }
; 499  : 
; 500  :         std::string sNormName = "default_normal.jpg";

  00368	68 00 00 00 00	 push	 OFFSET $SG4294911792
  0036d	8d 8d b8 ee ff
	ff		 lea	 ecx, DWORD PTR _sNormName$11[ebp]
  00373	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00378	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8

; 501  :         if (normName.length > 0)

  0037c	83 bd 18 f3 ff
	ff 00		 cmp	 DWORD PTR _normName$15[ebp], 0
  00383	76 17		 jbe	 SHORT $LN7@ImportMesh

; 502  :         {
; 503  :             sNormName = normName.C_Str();

  00385	8d 8d 18 f3 ff
	ff		 lea	 ecx, DWORD PTR _normName$15[ebp]
  0038b	e8 00 00 00 00	 call	 ?C_Str@aiString@@QBEPBDXZ ; aiString::C_Str
  00390	50		 push	 eax
  00391	8d 8d b8 ee ff
	ff		 lea	 ecx, DWORD PTR _sNormName$11[ebp]
  00397	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
$LN7@ImportMesh:

; 504  :         }
; 505  : 
; 506  :         std::string sDispName = "default_disp.png";

  0039c	68 00 00 00 00	 push	 OFFSET $SG4294911791
  003a1	8d 8d 94 ee ff
	ff		 lea	 ecx, DWORD PTR _sDispName$10[ebp]
  003a7	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  003ac	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9

; 507  :         if (dispName.length > 0)

  003b0	83 bd 0c ef ff
	ff 00		 cmp	 DWORD PTR _dispName$14[ebp], 0
  003b7	76 17		 jbe	 SHORT $LN8@ImportMesh

; 508  :         {
; 509  :             sDispName = dispName.C_Str();

  003b9	8d 8d 0c ef ff
	ff		 lea	 ecx, DWORD PTR _dispName$14[ebp]
  003bf	e8 00 00 00 00	 call	 ?C_Str@aiString@@QBEPBDXZ ; aiString::C_Str
  003c4	50		 push	 eax
  003c5	8d 8d 94 ee ff
	ff		 lea	 ecx, DWORD PTR _sDispName$10[ebp]
  003cb	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
$LN8@ImportMesh:

; 510  :         }
; 511  : 
; 512  :         Material * mat = new Material(matName.C_Str(), sTexName, 0.4f, 0.8f, sNormName, sDispName);

  003d0	6a 28		 push	 40			; 00000028H
  003d2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  003d7	83 c4 04	 add	 esp, 4
  003da	89 85 f4 ed ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  003e0	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  003e4	6a 00		 push	 0
  003e6	6a 00		 push	 0
  003e8	68 08 19 00 00	 push	 6408			; 00001908H
  003ed	68 08 19 00 00	 push	 6408			; 00001908H
  003f2	51		 push	 ecx
  003f3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@461c0c00
  003fb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00400	68 e1 0d 00 00	 push	 3553			; 00000de1H
  00405	8d 8d 94 ee ff
	ff		 lea	 ecx, DWORD PTR _sDispName$10[ebp]
  0040b	51		 push	 ecx
  0040c	8d 8d 60 ee ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  00412	e8 00 00 00 00	 call	 ??0Texture@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IMII_NI@Z ; Texture::Texture
  00417	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  0041b	8b 95 f0 ed ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  00421	83 ca 01	 or	 edx, 1
  00424	89 95 f0 ed ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  0042a	6a 00		 push	 0
  0042c	6a 00		 push	 0
  0042e	68 08 19 00 00	 push	 6408			; 00001908H
  00433	68 08 19 00 00	 push	 6408			; 00001908H
  00438	51		 push	 ecx
  00439	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@461c0c00
  00441	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00446	68 e1 0d 00 00	 push	 3553			; 00000de1H
  0044b	8d 85 b8 ee ff
	ff		 lea	 eax, DWORD PTR _sNormName$11[ebp]
  00451	50		 push	 eax
  00452	8d 8d 3c ee ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  00458	e8 00 00 00 00	 call	 ??0Texture@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IMII_NI@Z ; Texture::Texture
  0045d	c7 45 fc 0c 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  00464	8b 8d f0 ed ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  0046a	83 c9 02	 or	 ecx, 2
  0046d	89 8d f0 ed ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  00473	6a 00		 push	 0
  00475	6a 00		 push	 0
  00477	68 08 19 00 00	 push	 6408			; 00001908H
  0047c	68 08 19 00 00	 push	 6408			; 00001908H
  00481	51		 push	 ecx
  00482	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@461c0c00
  0048a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0048f	68 e1 0d 00 00	 push	 3553			; 00000de1H
  00494	8d 95 dc ee ff
	ff		 lea	 edx, DWORD PTR _sTexName$12[ebp]
  0049a	52		 push	 edx
  0049b	8d 8d 18 ee ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  004a1	e8 00 00 00 00	 call	 ??0Texture@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IMII_NI@Z ; Texture::Texture
  004a6	c7 45 fc 0d 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  004ad	8b 85 f0 ed ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  004b3	83 c8 04	 or	 eax, 4
  004b6	89 85 f0 ed ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  004bc	8d 8d 30 fb ff
	ff		 lea	 ecx, DWORD PTR _matName$17[ebp]
  004c2	e8 00 00 00 00	 call	 ?C_Str@aiString@@QBEPBDXZ ; aiString::C_Str
  004c7	50		 push	 eax
  004c8	8d 8d fc ed ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  004ce	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  004d3	c7 45 fc 0e 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  004da	8b 8d f0 ed ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  004e0	83 c9 08	 or	 ecx, 8
  004e3	89 8d f0 ed ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  004e9	51		 push	 ecx
  004ea	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  004f2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004f7	51		 push	 ecx
  004f8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00500	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00505	8d 95 60 ee ff
	ff		 lea	 edx, DWORD PTR $T8[ebp]
  0050b	52		 push	 edx
  0050c	8d 85 3c ee ff
	ff		 lea	 eax, DWORD PTR $T7[ebp]
  00512	50		 push	 eax
  00513	51		 push	 ecx
  00514	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  0051c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00521	51		 push	 ecx
  00522	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ecccccd
  0052a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0052f	8d 8d 18 ee ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  00535	51		 push	 ecx
  00536	8d 95 fc ed ff
	ff		 lea	 edx, DWORD PTR $T5[ebp]
  0053c	52		 push	 edx
  0053d	8b 8d f4 ed ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  00543	e8 00 00 00 00	 call	 ??0Material@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVTexture@@MM11MM@Z ; Material::Material
  00548	89 85 c4 ed ff
	ff		 mov	 DWORD PTR tv288[ebp], eax
  0054e	eb 0a		 jmp	 SHORT $LN11@ImportMesh
  00550	c7 85 c4 ed ff
	ff 00 00 00 00	 mov	 DWORD PTR tv288[ebp], 0
$LN11@ImportMesh:
  0055a	8b 85 c4 ed ff
	ff		 mov	 eax, DWORD PTR tv288[ebp]
  00560	89 85 f8 ed ff
	ff		 mov	 DWORD PTR $T4[ebp], eax
  00566	c7 45 fc 12 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 18 ; 00000012H
  0056d	8b 8d f8 ed ff
	ff		 mov	 ecx, DWORD PTR $T4[ebp]
  00573	89 8d 88 ee ff
	ff		 mov	 DWORD PTR _mat$9[ebp], ecx
  00579	c7 45 fc 11 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 17 ; 00000011H
  00580	8b 95 f0 ed ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  00586	83 e2 08	 and	 edx, 8
  00589	74 12		 je	 SHORT $LN31@ImportMesh
  0058b	83 a5 f0 ed ff
	ff f7		 and	 DWORD PTR $T2[ebp], -9	; fffffff7H
  00592	8d 8d fc ed ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00598	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN31@ImportMesh:
  0059d	c7 45 fc 10 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 16 ; 00000010H
  005a4	8b 85 f0 ed ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  005aa	83 e0 04	 and	 eax, 4
  005ad	74 12		 je	 SHORT $LN32@ImportMesh
  005af	83 a5 f0 ed ff
	ff fb		 and	 DWORD PTR $T2[ebp], -5	; fffffffbH
  005b6	8d 8d 18 ee ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  005bc	e8 00 00 00 00	 call	 ??1Texture@@UAE@XZ	; Texture::~Texture
$LN32@ImportMesh:
  005c1	c7 45 fc 0f 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 15 ; 0000000fH
  005c8	8b 8d f0 ed ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  005ce	83 e1 02	 and	 ecx, 2
  005d1	74 12		 je	 SHORT $LN33@ImportMesh
  005d3	83 a5 f0 ed ff
	ff fd		 and	 DWORD PTR $T2[ebp], -3	; fffffffdH
  005da	8d 8d 3c ee ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  005e0	e8 00 00 00 00	 call	 ??1Texture@@UAE@XZ	; Texture::~Texture
$LN33@ImportMesh:
  005e5	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 9
  005ec	8b 95 f0 ed ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  005f2	83 e2 01	 and	 edx, 1
  005f5	74 12		 je	 SHORT $LN34@ImportMesh
  005f7	83 a5 f0 ed ff
	ff fe		 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  005fe	8d 8d 60 ee ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  00604	e8 00 00 00 00	 call	 ??1Texture@@UAE@XZ	; Texture::~Texture
$LN34@ImportMesh:

; 513  : 
; 514  :         outData.push_back(mat);

  00609	8d 85 88 ee ff
	ff		 lea	 eax, DWORD PTR _mat$9[ebp]
  0060f	50		 push	 eax
  00610	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _outData$[ebp]
  00616	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QAEXABQAVMaterial@@@Z ; std::vector<Material *,std::allocator<Material *> >::push_back

; 515  :     }

  0061b	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  0061f	8d 8d 94 ee ff
	ff		 lea	 ecx, DWORD PTR _sDispName$10[ebp]
  00625	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0062a	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  0062e	8d 8d b8 ee ff
	ff		 lea	 ecx, DWORD PTR _sNormName$11[ebp]
  00634	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00639	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  0063d	8d 8d dc ee ff
	ff		 lea	 ecx, DWORD PTR _sTexName$12[ebp]
  00643	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00648	e9 c7 fb ff ff	 jmp	 $LN2@ImportMesh
$LN3@ImportMesh:

; 516  : 
; 517  :     
; 518  :     
; 519  :     return outData;

  0064d	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _outData$[ebp]
  00653	51		 push	 ecx
  00654	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00657	e8 00 00 00 00	 call	 ??0?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QAE@$$QAV01@@Z ; std::vector<Material *,std::allocator<Material *> >::vector<Material *,std::allocator<Material *> >
  0065c	8b 95 f0 ed ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  00662	83 ca 10	 or	 edx, 16			; 00000010H
  00665	89 95 f0 ed ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  0066b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0066f	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _outData$[ebp]
  00675	e8 00 00 00 00	 call	 ??1?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QAE@XZ ; std::vector<Material *,std::allocator<Material *> >::~vector<Material *,std::allocator<Material *> >
  0067a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00681	8b f4		 mov	 esi, esp
  00683	8d 4d e8	 lea	 ecx, DWORD PTR _importer$[ebp]
  00686	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1Importer@Assimp@@QAE@XZ
  0068c	3b f4		 cmp	 esi, esp
  0068e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00693	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 520  : }

  00696	52		 push	 edx
  00697	8b cd		 mov	 ecx, ebp
  00699	50		 push	 eax
  0069a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN50@ImportMesh
  006a0	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  006a5	58		 pop	 eax
  006a6	5a		 pop	 edx
  006a7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  006aa	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  006b1	59		 pop	 ecx
  006b2	5f		 pop	 edi
  006b3	5e		 pop	 esi
  006b4	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  006b7	33 cd		 xor	 ecx, ebp
  006b9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  006be	81 c4 3c 12 00
	00		 add	 esp, 4668		; 0000123cH
  006c4	3b ec		 cmp	 ebp, esp
  006c6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006cb	8b e5		 mov	 esp, ebp
  006cd	5d		 pop	 ebp
  006ce	c3		 ret	 0
  006cf	90		 npad	 1
$LN50@ImportMesh:
  006d0	0b 00 00 00	 DD	 11			; 0000000bH
  006d4	00 00 00 00	 DD	 $LN49@ImportMesh
$LN49@ImportMesh:
  006d8	e8 ff ff ff	 DD	 -24			; ffffffe8H
  006dc	04 00 00 00	 DD	 4
  006e0	00 00 00 00	 DD	 $LN37@ImportMesh
  006e4	40 ff ff ff	 DD	 -192			; ffffff40H
  006e8	10 00 00 00	 DD	 16			; 00000010H
  006ec	00 00 00 00	 DD	 $LN38@ImportMesh
  006f0	30 fb ff ff	 DD	 -1232			; fffffb30H
  006f4	04 04 00 00	 DD	 1028			; 00000404H
  006f8	00 00 00 00	 DD	 $LN39@ImportMesh
  006fc	24 f7 ff ff	 DD	 -2268			; fffff724H
  00700	04 04 00 00	 DD	 1028			; 00000404H
  00704	00 00 00 00	 DD	 $LN40@ImportMesh
  00708	18 f3 ff ff	 DD	 -3304			; fffff318H
  0070c	04 04 00 00	 DD	 1028			; 00000404H
  00710	00 00 00 00	 DD	 $LN41@ImportMesh
  00714	0c ef ff ff	 DD	 -4340			; ffffef0cH
  00718	04 04 00 00	 DD	 1028			; 00000404H
  0071c	00 00 00 00	 DD	 $LN42@ImportMesh
  00720	00 ef ff ff	 DD	 -4352			; ffffef00H
  00724	04 00 00 00	 DD	 4
  00728	00 00 00 00	 DD	 $LN43@ImportMesh
  0072c	dc ee ff ff	 DD	 -4388			; ffffeedcH
  00730	1c 00 00 00	 DD	 28			; 0000001cH
  00734	00 00 00 00	 DD	 $LN44@ImportMesh
  00738	b8 ee ff ff	 DD	 -4424			; ffffeeb8H
  0073c	1c 00 00 00	 DD	 28			; 0000001cH
  00740	00 00 00 00	 DD	 $LN45@ImportMesh
  00744	94 ee ff ff	 DD	 -4460			; ffffee94H
  00748	1c 00 00 00	 DD	 28			; 0000001cH
  0074c	00 00 00 00	 DD	 $LN46@ImportMesh
  00750	88 ee ff ff	 DD	 -4472			; ffffee88H
  00754	04 00 00 00	 DD	 4
  00758	00 00 00 00	 DD	 $LN47@ImportMesh
$LN47@ImportMesh:
  0075c	6d		 DB	 109			; 0000006dH
  0075d	61		 DB	 97			; 00000061H
  0075e	74		 DB	 116			; 00000074H
  0075f	00		 DB	 0
$LN46@ImportMesh:
  00760	73		 DB	 115			; 00000073H
  00761	44		 DB	 68			; 00000044H
  00762	69		 DB	 105			; 00000069H
  00763	73		 DB	 115			; 00000073H
  00764	70		 DB	 112			; 00000070H
  00765	4e		 DB	 78			; 0000004eH
  00766	61		 DB	 97			; 00000061H
  00767	6d		 DB	 109			; 0000006dH
  00768	65		 DB	 101			; 00000065H
  00769	00		 DB	 0
$LN45@ImportMesh:
  0076a	73		 DB	 115			; 00000073H
  0076b	4e		 DB	 78			; 0000004eH
  0076c	6f		 DB	 111			; 0000006fH
  0076d	72		 DB	 114			; 00000072H
  0076e	6d		 DB	 109			; 0000006dH
  0076f	4e		 DB	 78			; 0000004eH
  00770	61		 DB	 97			; 00000061H
  00771	6d		 DB	 109			; 0000006dH
  00772	65		 DB	 101			; 00000065H
  00773	00		 DB	 0
$LN44@ImportMesh:
  00774	73		 DB	 115			; 00000073H
  00775	54		 DB	 84			; 00000054H
  00776	65		 DB	 101			; 00000065H
  00777	78		 DB	 120			; 00000078H
  00778	4e		 DB	 78			; 0000004eH
  00779	61		 DB	 97			; 00000061H
  0077a	6d		 DB	 109			; 0000006dH
  0077b	65		 DB	 101			; 00000065H
  0077c	00		 DB	 0
$LN43@ImportMesh:
  0077d	73		 DB	 115			; 00000073H
  0077e	68		 DB	 104			; 00000068H
  0077f	69		 DB	 105			; 00000069H
  00780	6e		 DB	 110			; 0000006eH
  00781	65		 DB	 101			; 00000065H
  00782	00		 DB	 0
$LN42@ImportMesh:
  00783	64		 DB	 100			; 00000064H
  00784	69		 DB	 105			; 00000069H
  00785	73		 DB	 115			; 00000073H
  00786	70		 DB	 112			; 00000070H
  00787	4e		 DB	 78			; 0000004eH
  00788	61		 DB	 97			; 00000061H
  00789	6d		 DB	 109			; 0000006dH
  0078a	65		 DB	 101			; 00000065H
  0078b	00		 DB	 0
$LN41@ImportMesh:
  0078c	6e		 DB	 110			; 0000006eH
  0078d	6f		 DB	 111			; 0000006fH
  0078e	72		 DB	 114			; 00000072H
  0078f	6d		 DB	 109			; 0000006dH
  00790	4e		 DB	 78			; 0000004eH
  00791	61		 DB	 97			; 00000061H
  00792	6d		 DB	 109			; 0000006dH
  00793	65		 DB	 101			; 00000065H
  00794	00		 DB	 0
$LN40@ImportMesh:
  00795	74		 DB	 116			; 00000074H
  00796	65		 DB	 101			; 00000065H
  00797	78		 DB	 120			; 00000078H
  00798	4e		 DB	 78			; 0000004eH
  00799	61		 DB	 97			; 00000061H
  0079a	6d		 DB	 109			; 0000006dH
  0079b	65		 DB	 101			; 00000065H
  0079c	00		 DB	 0
$LN39@ImportMesh:
  0079d	6d		 DB	 109			; 0000006dH
  0079e	61		 DB	 97			; 00000061H
  0079f	74		 DB	 116			; 00000074H
  007a0	4e		 DB	 78			; 0000004eH
  007a1	61		 DB	 97			; 00000061H
  007a2	6d		 DB	 109			; 0000006dH
  007a3	65		 DB	 101			; 00000065H
  007a4	00		 DB	 0
$LN38@ImportMesh:
  007a5	6f		 DB	 111			; 0000006fH
  007a6	75		 DB	 117			; 00000075H
  007a7	74		 DB	 116			; 00000074H
  007a8	44		 DB	 68			; 00000044H
  007a9	61		 DB	 97			; 00000061H
  007aa	74		 DB	 116			; 00000074H
  007ab	61		 DB	 97			; 00000061H
  007ac	00		 DB	 0
$LN37@ImportMesh:
  007ad	69		 DB	 105			; 00000069H
  007ae	6d		 DB	 109			; 0000006dH
  007af	70		 DB	 112			; 00000070H
  007b0	6f		 DB	 111			; 0000006fH
  007b1	72		 DB	 114			; 00000072H
  007b2	74		 DB	 116			; 00000074H
  007b3	65		 DB	 101			; 00000065H
  007b4	72		 DB	 114			; 00000072H
  007b5	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR _importer$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1Importer@Assimp@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$1:
  00012	8d 4d c4	 lea	 ecx, DWORD PTR $T23[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$2:
  0001a	8d 4d a8	 lea	 ecx, DWORD PTR $T22[ebp]
  0001d	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$3:
  00022	8d 4d 8c	 lea	 ecx, DWORD PTR $T21[ebp]
  00025	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$4:
  0002a	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR $T20[ebp]
  00030	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$5:
  00035	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR $T19[ebp]
  0003b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$6:
  00040	8d 8d 40 ff ff
	ff		 lea	 ecx, DWORD PTR _outData$[ebp]
  00046	e9 00 00 00 00	 jmp	 ??1?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QAE@XZ ; std::vector<Material *,std::allocator<Material *> >::~vector<Material *,std::allocator<Material *> >
__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$7:
  0004b	8d 8d dc ee ff
	ff		 lea	 ecx, DWORD PTR _sTexName$12[ebp]
  00051	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$8:
  00056	8d 8d b8 ee ff
	ff		 lea	 ecx, DWORD PTR _sNormName$11[ebp]
  0005c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$9:
  00061	8d 8d 94 ee ff
	ff		 lea	 ecx, DWORD PTR _sDispName$10[ebp]
  00067	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$10:
  0006c	6a 28		 push	 40			; 00000028H
  0006e	8b 85 f4 ed ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0007a	83 c4 08	 add	 esp, 8
  0007d	c3		 ret	 0
__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$11:
  0007e	8b 85 f0 ed ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00084	83 e0 01	 and	 eax, 1
  00087	0f 84 12 00 00
	00		 je	 $LN24@ImportMesh
  0008d	83 a5 f0 ed ff
	ff fe		 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00094	8d 8d 60 ee ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  0009a	e9 00 00 00 00	 jmp	 ??1Texture@@UAE@XZ	; Texture::~Texture
$LN24@ImportMesh:
  0009f	c3		 ret	 0
__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$12:
  000a0	8b 85 f0 ed ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  000a6	83 e0 02	 and	 eax, 2
  000a9	0f 84 12 00 00
	00		 je	 $LN26@ImportMesh
  000af	83 a5 f0 ed ff
	ff fd		 and	 DWORD PTR $T2[ebp], -3	; fffffffdH
  000b6	8d 8d 3c ee ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  000bc	e9 00 00 00 00	 jmp	 ??1Texture@@UAE@XZ	; Texture::~Texture
$LN26@ImportMesh:
  000c1	c3		 ret	 0
__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$13:
  000c2	8b 85 f0 ed ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  000c8	83 e0 04	 and	 eax, 4
  000cb	0f 84 12 00 00
	00		 je	 $LN28@ImportMesh
  000d1	83 a5 f0 ed ff
	ff fb		 and	 DWORD PTR $T2[ebp], -5	; fffffffbH
  000d8	8d 8d 18 ee ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  000de	e9 00 00 00 00	 jmp	 ??1Texture@@UAE@XZ	; Texture::~Texture
$LN28@ImportMesh:
  000e3	c3		 ret	 0
__unwindfunclet$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$14:
  000e4	8b 85 f0 ed ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  000ea	83 e0 08	 and	 eax, 8
  000ed	0f 84 12 00 00
	00		 je	 $LN30@ImportMesh
  000f3	83 a5 f0 ed ff
	ff f7		 and	 DWORD PTR $T2[ebp], -9	; fffffff7H
  000fa	8d 8d fc ed ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00100	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN30@ImportMesh:
  00105	c3		 ret	 0
__ehhandler$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z:
  00106	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0010a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0010d	8b 8a c4 ed ff
	ff		 mov	 ecx, DWORD PTR [edx-4668]
  00113	33 c8		 xor	 ecx, eax
  00115	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0011a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0011d	33 c8		 xor	 ecx, eax
  0011f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00124	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
  00129	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ImportMeshMaterial@Mesh@@SA?AV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ENDP ; Mesh::ImportMeshMaterial
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
_TEXT	SEGMENT
tv142 = -204						; size = 4
tv165 = -200						; size = 4
tv185 = -196						; size = 4
tv160 = -192						; size = 4
tv181 = -188						; size = 4
tv155 = -184						; size = 4
tv144 = -180						; size = 4
$T2 = -176						; size = 4
$T3 = -172						; size = 4
$T4 = -168						; size = 4
$T5 = -164						; size = 4
$T6 = -160						; size = 28
$T7 = -132						; size = 28
$T8 = -104						; size = 28
_i$9 = -72						; size = 4
_meshes$ = -60						; size = 16
_data$ = -36						; size = 16
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_fileName$ = 12						; size = 4
?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z PROC ; Mesh::ImportMesh

; 523  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00017	57		 push	 edi
  00018	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  0001e	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00023	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00028	f3 ab		 rep stosd
  0002a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002f	33 c5		 xor	 eax, ebp
  00031	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0

; 524  :     std::vector<MeshData*> data = Mesh::ImportMeshData(fileName);

  00048	6a ff		 push	 -1
  0004a	8b 45 0c	 mov	 eax, DWORD PTR _fileName$[ebp]
  0004d	50		 push	 eax
  0004e	8d 4d dc	 lea	 ecx, DWORD PTR _data$[ebp]
  00051	51		 push	 ecx
  00052	e8 00 00 00 00	 call	 ?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z ; Mesh::ImportMeshData
  00057	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 525  :     std::vector<Mesh*> meshes;

  00061	8d 4d c4	 lea	 ecx, DWORD PTR _meshes$[ebp]
  00064	e8 00 00 00 00	 call	 ??0?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QAE@XZ ; std::vector<Mesh *,std::allocator<Mesh *> >::vector<Mesh *,std::allocator<Mesh *> >
  00069	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 526  :     for (size_t i = 0; i < data.size(); i++)

  0006d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _i$9[ebp], 0
  00074	eb 09		 jmp	 SHORT $LN4@ImportMesh
$LN2@ImportMesh:
  00076	8b 55 b8	 mov	 edx, DWORD PTR _i$9[ebp]
  00079	83 c2 01	 add	 edx, 1
  0007c	89 55 b8	 mov	 DWORD PTR _i$9[ebp], edx
$LN4@ImportMesh:
  0007f	8d 4d dc	 lea	 ecx, DWORD PTR _data$[ebp]
  00082	e8 00 00 00 00	 call	 ?size@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ ; std::vector<MeshData *,std::allocator<MeshData *> >::size
  00087	39 45 b8	 cmp	 DWORD PTR _i$9[ebp], eax
  0008a	0f 83 9d 01 00
	00		 jae	 $LN3@ImportMesh

; 527  :     {
; 528  :         meshes.push_back(new Mesh(fileName + "_" + Util::to_string(i), data.at(i)));

  00090	6a 24		 push	 36			; 00000024H
  00092	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00097	83 c4 04	 add	 esp, 4
  0009a	89 85 54 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  000a0	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000a4	8d 45 b8	 lea	 eax, DWORD PTR _i$9[ebp]
  000a7	50		 push	 eax
  000a8	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  000ae	51		 push	 ecx
  000af	e8 00 00 00 00	 call	 ??$to_string@I@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; Util::to_string<unsigned int>
  000b4	83 c4 08	 add	 esp, 8
  000b7	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv144[ebp], eax
  000bd	8b 95 4c ff ff
	ff		 mov	 edx, DWORD PTR tv144[ebp]
  000c3	89 95 48 ff ff
	ff		 mov	 DWORD PTR tv155[ebp], edx
  000c9	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000cd	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  000d3	83 c8 01	 or	 eax, 1
  000d6	89 85 50 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  000dc	68 00 00 00 00	 push	 OFFSET $SG4294911790
  000e1	8b 4d 0c	 mov	 ecx, DWORD PTR _fileName$[ebp]
  000e4	51		 push	 ecx
  000e5	8d 55 98	 lea	 edx, DWORD PTR $T8[ebp]
  000e8	52		 push	 edx
  000e9	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  000ee	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f1	89 85 44 ff ff
	ff		 mov	 DWORD PTR tv181[ebp], eax
  000f7	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR tv181[ebp]
  000fd	89 85 40 ff ff
	ff		 mov	 DWORD PTR tv160[ebp], eax
  00103	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  0010a	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  00110	83 c9 02	 or	 ecx, 2
  00113	89 8d 50 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  00119	8b 95 48 ff ff
	ff		 mov	 edx, DWORD PTR tv155[ebp]
  0011f	52		 push	 edx
  00120	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv160[ebp]
  00126	50		 push	 eax
  00127	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  0012d	51		 push	 ecx
  0012e	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00133	83 c4 0c	 add	 esp, 12			; 0000000cH
  00136	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv185[ebp], eax
  0013c	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR tv185[ebp]
  00142	89 95 38 ff ff
	ff		 mov	 DWORD PTR tv165[ebp], edx
  00148	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
  0014f	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00155	83 c8 04	 or	 eax, 4
  00158	89 85 50 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  0015e	8b 4d b8	 mov	 ecx, DWORD PTR _i$9[ebp]
  00161	51		 push	 ecx
  00162	8d 4d dc	 lea	 ecx, DWORD PTR _data$[ebp]
  00165	e8 00 00 00 00	 call	 ?at@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAEAAPAVMeshData@@I@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::at
  0016a	8b 10		 mov	 edx, DWORD PTR [eax]
  0016c	52		 push	 edx
  0016d	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR tv165[ebp]
  00173	50		 push	 eax
  00174	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  0017a	e8 00 00 00 00	 call	 ??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@Z ; Mesh::Mesh
  0017f	89 85 34 ff ff
	ff		 mov	 DWORD PTR tv142[ebp], eax
  00185	eb 0a		 jmp	 SHORT $LN7@ImportMesh
  00187	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv142[ebp], 0
$LN7@ImportMesh:
  00191	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR tv142[ebp]
  00197	89 8d 58 ff ff
	ff		 mov	 DWORD PTR $T4[ebp], ecx
  0019d	c7 45 fc 08 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 8
  001a4	8b 95 58 ff ff
	ff		 mov	 edx, DWORD PTR $T4[ebp]
  001aa	89 95 5c ff ff
	ff		 mov	 DWORD PTR $T5[ebp], edx
  001b0	8d 85 5c ff ff
	ff		 lea	 eax, DWORD PTR $T5[ebp]
  001b6	50		 push	 eax
  001b7	8d 4d c4	 lea	 ecx, DWORD PTR _meshes$[ebp]
  001ba	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QAEX$$QAPAVMesh@@@Z ; std::vector<Mesh *,std::allocator<Mesh *> >::push_back
  001bf	c7 45 fc 07 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 7
  001c6	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  001cc	83 e1 04	 and	 ecx, 4
  001cf	74 12		 je	 SHORT $LN17@ImportMesh
  001d1	83 a5 50 ff ff
	ff fb		 and	 DWORD PTR $T2[ebp], -5	; fffffffbH
  001d8	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  001de	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN17@ImportMesh:
  001e3	c7 45 fc 06 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 6
  001ea	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  001f0	83 e2 02	 and	 edx, 2
  001f3	74 0f		 je	 SHORT $LN18@ImportMesh
  001f5	83 a5 50 ff ff
	ff fd		 and	 DWORD PTR $T2[ebp], -3	; fffffffdH
  001fc	8d 4d 98	 lea	 ecx, DWORD PTR $T8[ebp]
  001ff	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN18@ImportMesh:
  00204	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  0020b	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00211	83 e0 01	 and	 eax, 1
  00214	74 12		 je	 SHORT $LN19@ImportMesh
  00216	83 a5 50 ff ff
	ff fe		 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  0021d	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  00223	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN19@ImportMesh:

; 529  :     }

  00228	e9 49 fe ff ff	 jmp	 $LN2@ImportMesh
$LN3@ImportMesh:

; 530  :     return meshes;

  0022d	8d 4d c4	 lea	 ecx, DWORD PTR _meshes$[ebp]
  00230	51		 push	 ecx
  00231	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00234	e8 00 00 00 00	 call	 ??0?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QAE@$$QAV01@@Z ; std::vector<Mesh *,std::allocator<Mesh *> >::vector<Mesh *,std::allocator<Mesh *> >
  00239	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  0023f	83 ca 08	 or	 edx, 8
  00242	89 95 50 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  00248	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0024c	8d 4d c4	 lea	 ecx, DWORD PTR _meshes$[ebp]
  0024f	e8 00 00 00 00	 call	 ??1?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QAE@XZ ; std::vector<Mesh *,std::allocator<Mesh *> >::~vector<Mesh *,std::allocator<Mesh *> >
  00254	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0025b	8d 4d dc	 lea	 ecx, DWORD PTR _data$[ebp]
  0025e	e8 00 00 00 00	 call	 ??1?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@XZ ; std::vector<MeshData *,std::allocator<MeshData *> >::~vector<MeshData *,std::allocator<MeshData *> >
  00263	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 531  : }

  00266	52		 push	 edx
  00267	8b cd		 mov	 ecx, ebp
  00269	50		 push	 eax
  0026a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN27@ImportMesh
  00270	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00275	58		 pop	 eax
  00276	5a		 pop	 edx
  00277	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0027a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00281	59		 pop	 ecx
  00282	5f		 pop	 edi
  00283	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00286	33 cd		 xor	 ecx, ebp
  00288	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0028d	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00293	3b ec		 cmp	 ebp, esp
  00295	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0029a	8b e5		 mov	 esp, ebp
  0029c	5d		 pop	 ebp
  0029d	c3		 ret	 0
  0029e	66 90		 npad	 2
$LN27@ImportMesh:
  002a0	03 00 00 00	 DD	 3
  002a4	00 00 00 00	 DD	 $LN26@ImportMesh
$LN26@ImportMesh:
  002a8	dc ff ff ff	 DD	 -36			; ffffffdcH
  002ac	10 00 00 00	 DD	 16			; 00000010H
  002b0	00 00 00 00	 DD	 $LN22@ImportMesh
  002b4	c4 ff ff ff	 DD	 -60			; ffffffc4H
  002b8	10 00 00 00	 DD	 16			; 00000010H
  002bc	00 00 00 00	 DD	 $LN23@ImportMesh
  002c0	b8 ff ff ff	 DD	 -72			; ffffffb8H
  002c4	04 00 00 00	 DD	 4
  002c8	00 00 00 00	 DD	 $LN24@ImportMesh
$LN24@ImportMesh:
  002cc	69		 DB	 105			; 00000069H
  002cd	00		 DB	 0
$LN23@ImportMesh:
  002ce	6d		 DB	 109			; 0000006dH
  002cf	65		 DB	 101			; 00000065H
  002d0	73		 DB	 115			; 00000073H
  002d1	68		 DB	 104			; 00000068H
  002d2	65		 DB	 101			; 00000065H
  002d3	73		 DB	 115			; 00000073H
  002d4	00		 DB	 0
$LN22@ImportMesh:
  002d5	64		 DB	 100			; 00000064H
  002d6	61		 DB	 97			; 00000061H
  002d7	74		 DB	 116			; 00000074H
  002d8	61		 DB	 97			; 00000061H
  002d9	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _data$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@XZ ; std::vector<MeshData *,std::allocator<MeshData *> >::~vector<MeshData *,std::allocator<MeshData *> >
__unwindfunclet$?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$1:
  00008	8d 4d c4	 lea	 ecx, DWORD PTR _meshes$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QAE@XZ ; std::vector<Mesh *,std::allocator<Mesh *> >::~vector<Mesh *,std::allocator<Mesh *> >
__unwindfunclet$?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$2:
  00010	6a 24		 push	 36			; 00000024H
  00012	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001e	83 c4 08	 add	 esp, 8
  00021	c3		 ret	 0
__unwindfunclet$?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$3:
  00022	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00028	83 e0 01	 and	 eax, 1
  0002b	0f 84 12 00 00
	00		 je	 $LN12@ImportMesh
  00031	83 a5 50 ff ff
	ff fe		 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00038	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  0003e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN12@ImportMesh:
  00043	c3		 ret	 0
__unwindfunclet$?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$4:
  00044	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  0004a	83 e0 02	 and	 eax, 2
  0004d	0f 84 0f 00 00
	00		 je	 $LN14@ImportMesh
  00053	83 a5 50 ff ff
	ff fd		 and	 DWORD PTR $T2[ebp], -3	; fffffffdH
  0005a	8d 4d 98	 lea	 ecx, DWORD PTR $T8[ebp]
  0005d	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN14@ImportMesh:
  00062	c3		 ret	 0
__unwindfunclet$?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$5:
  00063	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00069	83 e0 04	 and	 eax, 4
  0006c	0f 84 12 00 00
	00		 je	 $LN16@ImportMesh
  00072	83 a5 50 ff ff
	ff fb		 and	 DWORD PTR $T2[ebp], -5	; fffffffbH
  00079	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  0007f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN16@ImportMesh:
  00084	c3		 ret	 0
__ehhandler$?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z:
  00085	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00089	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0008c	8b 8a 38 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-200]
  00092	33 c8		 xor	 ecx, eax
  00094	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00099	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0009c	33 c8		 xor	 ecx, eax
  0009e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a3	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
  000a8	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ImportMesh@Mesh@@SA?AV?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ENDP ; Mesh::ImportMesh
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
_TEXT	SEGMENT
tv128 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1Mesh@@UAE@XZ PROC					; Mesh::~Mesh
; _this$ = ecx

; 550  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1Mesh@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001d	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00020	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00023	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Mesh@@6B@

; 551  : 	if(m_meshData && m_meshData->RemoveReference())

  00043	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	83 79 20 00	 cmp	 DWORD PTR [ecx+32], 0
  0004a	74 6d		 je	 SHORT $LN1@Mesh
  0004c	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0004f	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  00052	83 c1 04	 add	 ecx, 4
  00055	e8 00 00 00 00	 call	 ?RemoveReference@ReferenceCounter@@QAE_NXZ ; ReferenceCounter::RemoveReference
  0005a	0f b6 c0	 movzx	 eax, al
  0005d	85 c0		 test	 eax, eax
  0005f	74 58		 je	 SHORT $LN1@Mesh

; 552  : 	{
; 553  : 		if(m_fileName.length() > 0)

  00061	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	83 c1 04	 add	 ecx, 4
  00067	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  0006c	85 c0		 test	 eax, eax
  0006e	76 11		 jbe	 SHORT $LN3@Mesh

; 554  : 		{
; 555  : 			s_resourceMap.erase(m_fileName);

  00070	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	83 c1 04	 add	 ecx, 4
  00076	51		 push	 ecx
  00077	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_resourceMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@A ; Mesh::s_resourceMap
  0007c	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::erase
$LN3@Mesh:

; 556  : 		}
; 557  : 			
; 558  : 		delete m_meshData;

  00081	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00084	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00087	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
  0008a	8b 4d e8	 mov	 ecx, DWORD PTR $T2[ebp]
  0008d	89 4d ec	 mov	 DWORD PTR $T3[ebp], ecx
  00090	83 7d ec 00	 cmp	 DWORD PTR $T3[ebp], 0
  00094	74 1c		 je	 SHORT $LN5@Mesh
  00096	8b f4		 mov	 esi, esp
  00098	6a 01		 push	 1
  0009a	8b 55 ec	 mov	 edx, DWORD PTR $T3[ebp]
  0009d	8b 02		 mov	 eax, DWORD PTR [edx]
  0009f	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp]
  000a2	8b 10		 mov	 edx, DWORD PTR [eax]
  000a4	ff d2		 call	 edx
  000a6	3b f4		 cmp	 esi, esp
  000a8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ad	89 45 e4	 mov	 DWORD PTR tv128[ebp], eax
  000b0	eb 07		 jmp	 SHORT $LN1@Mesh
$LN5@Mesh:
  000b2	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN1@Mesh:

; 559  : 	}
; 560  : }

  000b9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000bc	83 c1 04	 add	 ecx, 4
  000bf	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ce	59		 pop	 ecx
  000cf	5e		 pop	 esi
  000d0	83 c4 1c	 add	 esp, 28			; 0000001cH
  000d3	3b ec		 cmp	 ebp, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$??1Mesh@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1Mesh@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1Mesh@@UAE@XZ ENDP					; Mesh::~Mesh
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Draw@Mesh@@QBEXXZ PROC					; Mesh::Draw
; _this$ = ecx

; 563  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 564  : 	m_meshData->Draw();

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00014	e8 00 00 00 00	 call	 ?Draw@MeshData@@QBEXXZ	; MeshData::Draw

; 565  : }

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?Draw@Mesh@@QBEXXZ ENDP					; Mesh::Draw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_model$ = 8						; size = 4
_materialIndex$ = 12					; size = 4
??0MeshData@@QAE@ABVIndexedModel@@H@Z PROC		; MeshData::MeshData
; _this$ = ecx

; 194  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0MeshData@@QAE@ABVIndexedModel@@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 190  :     ReferenceCounter(),

  0002e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	83 c1 04	 add	 ecx, 4
  00034	e8 00 00 00 00	 call	 ??0ReferenceCounter@@QAE@XZ ; ReferenceCounter::ReferenceCounter

; 194  : {

  00039	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7MeshData@@6B@

; 191  :     m_drawCount(model.GetIndices().size()),

  00042	8b 4d 08	 mov	 ecx, DWORD PTR _model$[ebp]
  00045	e8 00 00 00 00	 call	 ?GetIndices@IndexedModel@@QBEABV?$vector@IV?$allocator@I@std@@@std@@XZ ; IndexedModel::GetIndices
  0004a	8b c8		 mov	 ecx, eax
  0004c	e8 00 00 00 00	 call	 ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::size
  00051	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 192  :     m_materialIndex(materialIndex),

  00057	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0005a	8b 45 0c	 mov	 eax, DWORD PTR _materialIndex$[ebp]
  0005d	89 42 24	 mov	 DWORD PTR [edx+36], eax

; 193  : 	m_model(model)

  00060	8b 4d 08	 mov	 ecx, DWORD PTR _model$[ebp]
  00063	51		 push	 ecx
  00064	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	83 c1 28	 add	 ecx, 40			; 00000028H
  0006a	e8 00 00 00 00	 call	 ??0IndexedModel@@QAE@ABV0@@Z
  0006f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 195  : 	if(!model.IsValid())

  00076	8b 4d 08	 mov	 ecx, DWORD PTR _model$[ebp]
  00079	e8 00 00 00 00	 call	 ?IsValid@IndexedModel@@QBE_NXZ ; IndexedModel::IsValid
  0007e	0f b6 d0	 movzx	 edx, al
  00081	85 d2		 test	 edx, edx
  00083	75 5c		 jne	 SHORT $LN2@MeshData

; 196  : 	{
; 197  : 		std::cout << "Error: Invalid mesh! Must have same number of positions, texCoords, normals, and tangents! "
; 198  : 			<< "(Maybe you forgot to Finalize() your IndexedModel?)" << std::endl;

  00085	8b f4		 mov	 esi, esp
  00087	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  0008c	68 00 00 00 00	 push	 OFFSET $SG4294911818
  00091	68 00 00 00 00	 push	 OFFSET $SG4294911817
  00096	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  0009b	50		 push	 eax
  0009c	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  000a1	83 c4 08	 add	 esp, 8
  000a4	50		 push	 eax
  000a5	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  000aa	83 c4 08	 add	 esp, 8
  000ad	8b c8		 mov	 ecx, eax
  000af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  000b5	3b f4		 cmp	 esi, esp
  000b7	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 199  : 		assert(0 != 0);

  000bc	33 c9		 xor	 ecx, ecx
  000be	75 21		 jne	 SHORT $LN2@MeshData
  000c0	8b f4		 mov	 esi, esp
  000c2	68 c7 00 00 00	 push	 199			; 000000c7H
  000c7	68 00 00 00 00	 push	 OFFSET $SG4294911816
  000cc	68 00 00 00 00	 push	 OFFSET $SG4294911815
  000d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  000d7	83 c4 0c	 add	 esp, 12			; 0000000cH
  000da	3b f4		 cmp	 esi, esp
  000dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@MeshData:

; 200  : 	}
; 201  : 
; 202  : 	glGenVertexArrays(1, &m_vertexArrayObject);

  000e1	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000e4	83 c0 08	 add	 eax, 8
  000e7	8b f4		 mov	 esi, esp
  000e9	50		 push	 eax
  000ea	6a 01		 push	 1
  000ec	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp____glewGenVertexArrays
  000f2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f4	ff d2		 call	 edx
  000f6	3b f4		 cmp	 esi, esp
  000f8	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 203  : 	glBindVertexArray(m_vertexArrayObject);

  000fd	8b f4		 mov	 esi, esp
  000ff	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00102	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00105	51		 push	 ecx
  00106	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp____glewBindVertexArray
  0010c	8b 02		 mov	 eax, DWORD PTR [edx]
  0010e	ff d0		 call	 eax
  00110	3b f4		 cmp	 esi, esp
  00112	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 204  : 
; 205  : 	glGenBuffers(NUM_BUFFERS, m_vertexArrayBuffers);

  00117	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0011a	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0011d	8b f4		 mov	 esi, esp
  0011f	51		 push	 ecx
  00120	6a 05		 push	 5
  00122	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp____glewGenBuffers
  00128	8b 02		 mov	 eax, DWORD PTR [edx]
  0012a	ff d0		 call	 eax
  0012c	3b f4		 cmp	 esi, esp
  0012e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 206  : 	glBindBuffer(GL_ARRAY_BUFFER, m_vertexArrayBuffers[POSITION_VB]);

  00133	b9 04 00 00 00	 mov	 ecx, 4
  00138	6b d1 00	 imul	 edx, ecx, 0
  0013b	8b f4		 mov	 esi, esp
  0013d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00140	8b 4c 10 0c	 mov	 ecx, DWORD PTR [eax+edx+12]
  00144	51		 push	 ecx
  00145	68 92 88 00 00	 push	 34962			; 00008892H
  0014a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp____glewBindBuffer
  00150	8b 02		 mov	 eax, DWORD PTR [edx]
  00152	ff d0		 call	 eax
  00154	3b f4		 cmp	 esi, esp
  00156	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 207  : 	glBufferData(GL_ARRAY_BUFFER, model.GetPositions().size() * sizeof(model.GetPositions()[0]), &model.GetPositions()[0], GL_STATIC_DRAW);

  0015b	8b f4		 mov	 esi, esp
  0015d	68 e4 88 00 00	 push	 35044			; 000088e4H
  00162	6a 00		 push	 0
  00164	8b 4d 08	 mov	 ecx, DWORD PTR _model$[ebp]
  00167	e8 00 00 00 00	 call	 ?GetPositions@IndexedModel@@QBEABV?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@XZ ; IndexedModel::GetPositions
  0016c	8b c8		 mov	 ecx, eax
  0016e	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEABVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  00173	50		 push	 eax
  00174	8b 4d 08	 mov	 ecx, DWORD PTR _model$[ebp]
  00177	e8 00 00 00 00	 call	 ?GetPositions@IndexedModel@@QBEABV?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@XZ ; IndexedModel::GetPositions
  0017c	8b c8		 mov	 ecx, eax
  0017e	e8 00 00 00 00	 call	 ?size@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEIXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::size
  00183	6b c8 0c	 imul	 ecx, eax, 12
  00186	51		 push	 ecx
  00187	68 92 88 00 00	 push	 34962			; 00008892H
  0018c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp____glewBufferData
  00192	8b 02		 mov	 eax, DWORD PTR [edx]
  00194	ff d0		 call	 eax
  00196	3b f4		 cmp	 esi, esp
  00198	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 208  : 	
; 209  : 	glEnableVertexAttribArray(0);

  0019d	8b f4		 mov	 esi, esp
  0019f	6a 00		 push	 0
  001a1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp____glewEnableVertexAttribArray
  001a7	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a9	ff d2		 call	 edx
  001ab	3b f4		 cmp	 esi, esp
  001ad	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 210  : 	glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 0, 0);

  001b2	8b f4		 mov	 esi, esp
  001b4	6a 00		 push	 0
  001b6	6a 00		 push	 0
  001b8	6a 00		 push	 0
  001ba	68 06 14 00 00	 push	 5126			; 00001406H
  001bf	6a 03		 push	 3
  001c1	6a 00		 push	 0
  001c3	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp____glewVertexAttribPointer
  001c8	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ca	ff d1		 call	 ecx
  001cc	3b f4		 cmp	 esi, esp
  001ce	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 211  : 	
; 212  : 	glBindBuffer(GL_ARRAY_BUFFER, m_vertexArrayBuffers[TEXCOORD_VB]);

  001d3	ba 04 00 00 00	 mov	 edx, 4
  001d8	c1 e2 00	 shl	 edx, 0
  001db	8b f4		 mov	 esi, esp
  001dd	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001e0	8b 4c 10 0c	 mov	 ecx, DWORD PTR [eax+edx+12]
  001e4	51		 push	 ecx
  001e5	68 92 88 00 00	 push	 34962			; 00008892H
  001ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp____glewBindBuffer
  001f0	8b 02		 mov	 eax, DWORD PTR [edx]
  001f2	ff d0		 call	 eax
  001f4	3b f4		 cmp	 esi, esp
  001f6	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 213  : 	glBufferData(GL_ARRAY_BUFFER, model.GetTexCoords().size() * sizeof(model.GetTexCoords()[0]), &model.GetTexCoords()[0], GL_STATIC_DRAW);

  001fb	8b f4		 mov	 esi, esp
  001fd	68 e4 88 00 00	 push	 35044			; 000088e4H
  00202	6a 00		 push	 0
  00204	8b 4d 08	 mov	 ecx, DWORD PTR _model$[ebp]
  00207	e8 00 00 00 00	 call	 ?GetTexCoords@IndexedModel@@QBEABV?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@XZ ; IndexedModel::GetTexCoords
  0020c	8b c8		 mov	 ecx, eax
  0020e	e8 00 00 00 00	 call	 ??A?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEABV?$Vector2@M@@I@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::operator[]
  00213	50		 push	 eax
  00214	8b 4d 08	 mov	 ecx, DWORD PTR _model$[ebp]
  00217	e8 00 00 00 00	 call	 ?GetTexCoords@IndexedModel@@QBEABV?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@XZ ; IndexedModel::GetTexCoords
  0021c	8b c8		 mov	 ecx, eax
  0021e	e8 00 00 00 00	 call	 ?size@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEIXZ ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::size
  00223	c1 e0 03	 shl	 eax, 3
  00226	50		 push	 eax
  00227	68 92 88 00 00	 push	 34962			; 00008892H
  0022c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp____glewBufferData
  00232	8b 11		 mov	 edx, DWORD PTR [ecx]
  00234	ff d2		 call	 edx
  00236	3b f4		 cmp	 esi, esp
  00238	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 214  : 	
; 215  : 	glEnableVertexAttribArray(1);

  0023d	8b f4		 mov	 esi, esp
  0023f	6a 01		 push	 1
  00241	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp____glewEnableVertexAttribArray
  00246	8b 08		 mov	 ecx, DWORD PTR [eax]
  00248	ff d1		 call	 ecx
  0024a	3b f4		 cmp	 esi, esp
  0024c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 216  : 	glVertexAttribPointer(1, 2, GL_FLOAT, GL_FALSE, 0, 0);

  00251	8b f4		 mov	 esi, esp
  00253	6a 00		 push	 0
  00255	6a 00		 push	 0
  00257	6a 00		 push	 0
  00259	68 06 14 00 00	 push	 5126			; 00001406H
  0025e	6a 02		 push	 2
  00260	6a 01		 push	 1
  00262	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp____glewVertexAttribPointer
  00268	8b 02		 mov	 eax, DWORD PTR [edx]
  0026a	ff d0		 call	 eax
  0026c	3b f4		 cmp	 esi, esp
  0026e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 217  : 	
; 218  : 	glBindBuffer(GL_ARRAY_BUFFER, m_vertexArrayBuffers[NORMAL_VB]);

  00273	b9 04 00 00 00	 mov	 ecx, 4
  00278	d1 e1		 shl	 ecx, 1
  0027a	8b f4		 mov	 esi, esp
  0027c	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0027f	8b 44 0a 0c	 mov	 eax, DWORD PTR [edx+ecx+12]
  00283	50		 push	 eax
  00284	68 92 88 00 00	 push	 34962			; 00008892H
  00289	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp____glewBindBuffer
  0028f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00291	ff d2		 call	 edx
  00293	3b f4		 cmp	 esi, esp
  00295	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 219  : 	glBufferData(GL_ARRAY_BUFFER, model.GetNormals().size() * sizeof(model.GetNormals()[0]), &model.GetNormals()[0], GL_STATIC_DRAW);

  0029a	8b f4		 mov	 esi, esp
  0029c	68 e4 88 00 00	 push	 35044			; 000088e4H
  002a1	6a 00		 push	 0
  002a3	8b 4d 08	 mov	 ecx, DWORD PTR _model$[ebp]
  002a6	e8 00 00 00 00	 call	 ?GetNormals@IndexedModel@@QBEABV?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@XZ ; IndexedModel::GetNormals
  002ab	8b c8		 mov	 ecx, eax
  002ad	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEABVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  002b2	50		 push	 eax
  002b3	8b 4d 08	 mov	 ecx, DWORD PTR _model$[ebp]
  002b6	e8 00 00 00 00	 call	 ?GetNormals@IndexedModel@@QBEABV?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@XZ ; IndexedModel::GetNormals
  002bb	8b c8		 mov	 ecx, eax
  002bd	e8 00 00 00 00	 call	 ?size@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEIXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::size
  002c2	6b c0 0c	 imul	 eax, eax, 12
  002c5	50		 push	 eax
  002c6	68 92 88 00 00	 push	 34962			; 00008892H
  002cb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp____glewBufferData
  002d1	8b 11		 mov	 edx, DWORD PTR [ecx]
  002d3	ff d2		 call	 edx
  002d5	3b f4		 cmp	 esi, esp
  002d7	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 220  : 	
; 221  : 	glEnableVertexAttribArray(2);

  002dc	8b f4		 mov	 esi, esp
  002de	6a 02		 push	 2
  002e0	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp____glewEnableVertexAttribArray
  002e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  002e7	ff d1		 call	 ecx
  002e9	3b f4		 cmp	 esi, esp
  002eb	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 222  : 	glVertexAttribPointer(2, 3, GL_FLOAT, GL_FALSE, 0, 0);

  002f0	8b f4		 mov	 esi, esp
  002f2	6a 00		 push	 0
  002f4	6a 00		 push	 0
  002f6	6a 00		 push	 0
  002f8	68 06 14 00 00	 push	 5126			; 00001406H
  002fd	6a 03		 push	 3
  002ff	6a 02		 push	 2
  00301	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp____glewVertexAttribPointer
  00307	8b 02		 mov	 eax, DWORD PTR [edx]
  00309	ff d0		 call	 eax
  0030b	3b f4		 cmp	 esi, esp
  0030d	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 223  : 	
; 224  : 	glBindBuffer(GL_ARRAY_BUFFER, m_vertexArrayBuffers[TANGENT_VB]);

  00312	b9 04 00 00 00	 mov	 ecx, 4
  00317	6b d1 03	 imul	 edx, ecx, 3
  0031a	8b f4		 mov	 esi, esp
  0031c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0031f	8b 4c 10 0c	 mov	 ecx, DWORD PTR [eax+edx+12]
  00323	51		 push	 ecx
  00324	68 92 88 00 00	 push	 34962			; 00008892H
  00329	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp____glewBindBuffer
  0032f	8b 02		 mov	 eax, DWORD PTR [edx]
  00331	ff d0		 call	 eax
  00333	3b f4		 cmp	 esi, esp
  00335	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 225  : 	glBufferData(GL_ARRAY_BUFFER, model.GetTangents().size() * sizeof(model.GetTangents()[0]), &model.GetTangents()[0], GL_STATIC_DRAW);

  0033a	8b f4		 mov	 esi, esp
  0033c	68 e4 88 00 00	 push	 35044			; 000088e4H
  00341	6a 00		 push	 0
  00343	8b 4d 08	 mov	 ecx, DWORD PTR _model$[ebp]
  00346	e8 00 00 00 00	 call	 ?GetTangents@IndexedModel@@QBEABV?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@XZ ; IndexedModel::GetTangents
  0034b	8b c8		 mov	 ecx, eax
  0034d	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEABVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  00352	50		 push	 eax
  00353	8b 4d 08	 mov	 ecx, DWORD PTR _model$[ebp]
  00356	e8 00 00 00 00	 call	 ?GetTangents@IndexedModel@@QBEABV?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@XZ ; IndexedModel::GetTangents
  0035b	8b c8		 mov	 ecx, eax
  0035d	e8 00 00 00 00	 call	 ?size@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEIXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::size
  00362	6b c8 0c	 imul	 ecx, eax, 12
  00365	51		 push	 ecx
  00366	68 92 88 00 00	 push	 34962			; 00008892H
  0036b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp____glewBufferData
  00371	8b 02		 mov	 eax, DWORD PTR [edx]
  00373	ff d0		 call	 eax
  00375	3b f4		 cmp	 esi, esp
  00377	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 226  : 	
; 227  : 	glEnableVertexAttribArray(3);

  0037c	8b f4		 mov	 esi, esp
  0037e	6a 03		 push	 3
  00380	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp____glewEnableVertexAttribArray
  00386	8b 11		 mov	 edx, DWORD PTR [ecx]
  00388	ff d2		 call	 edx
  0038a	3b f4		 cmp	 esi, esp
  0038c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 228  : 	glVertexAttribPointer(3, 3, GL_FLOAT, GL_FALSE, 0, 0);

  00391	8b f4		 mov	 esi, esp
  00393	6a 00		 push	 0
  00395	6a 00		 push	 0
  00397	6a 00		 push	 0
  00399	68 06 14 00 00	 push	 5126			; 00001406H
  0039e	6a 03		 push	 3
  003a0	6a 03		 push	 3
  003a2	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp____glewVertexAttribPointer
  003a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  003a9	ff d1		 call	 ecx
  003ab	3b f4		 cmp	 esi, esp
  003ad	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 229  : 	
; 230  : 	glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, m_vertexArrayBuffers[INDEX_VB]);

  003b2	ba 04 00 00 00	 mov	 edx, 4
  003b7	c1 e2 02	 shl	 edx, 2
  003ba	8b f4		 mov	 esi, esp
  003bc	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  003bf	8b 4c 10 0c	 mov	 ecx, DWORD PTR [eax+edx+12]
  003c3	51		 push	 ecx
  003c4	68 93 88 00 00	 push	 34963			; 00008893H
  003c9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp____glewBindBuffer
  003cf	8b 02		 mov	 eax, DWORD PTR [edx]
  003d1	ff d0		 call	 eax
  003d3	3b f4		 cmp	 esi, esp
  003d5	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 231  : 	glBufferData(GL_ELEMENT_ARRAY_BUFFER, model.GetIndices().size() * sizeof(model.GetIndices()[0]), &model.GetIndices()[0], GL_STATIC_DRAW);

  003da	8b f4		 mov	 esi, esp
  003dc	68 e4 88 00 00	 push	 35044			; 000088e4H
  003e1	6a 00		 push	 0
  003e3	8b 4d 08	 mov	 ecx, DWORD PTR _model$[ebp]
  003e6	e8 00 00 00 00	 call	 ?GetIndices@IndexedModel@@QBEABV?$vector@IV?$allocator@I@std@@@std@@XZ ; IndexedModel::GetIndices
  003eb	8b c8		 mov	 ecx, eax
  003ed	e8 00 00 00 00	 call	 ??A?$vector@IV?$allocator@I@std@@@std@@QBEABII@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::operator[]
  003f2	50		 push	 eax
  003f3	8b 4d 08	 mov	 ecx, DWORD PTR _model$[ebp]
  003f6	e8 00 00 00 00	 call	 ?GetIndices@IndexedModel@@QBEABV?$vector@IV?$allocator@I@std@@@std@@XZ ; IndexedModel::GetIndices
  003fb	8b c8		 mov	 ecx, eax
  003fd	e8 00 00 00 00	 call	 ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::size
  00402	c1 e0 02	 shl	 eax, 2
  00405	50		 push	 eax
  00406	68 93 88 00 00	 push	 34963			; 00008893H
  0040b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp____glewBufferData
  00411	8b 11		 mov	 edx, DWORD PTR [ecx]
  00413	ff d2		 call	 edx
  00415	3b f4		 cmp	 esi, esp
  00417	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 232  : }

  0041c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00423	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00426	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00429	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00430	59		 pop	 ecx
  00431	5e		 pop	 esi
  00432	83 c4 10	 add	 esp, 16			; 00000010H
  00435	3b ec		 cmp	 ebp, esp
  00437	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0043c	8b e5		 mov	 esp, ebp
  0043e	5d		 pop	 ebp
  0043f	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0MeshData@@QAE@ABVIndexedModel@@H@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 28	 add	 ecx, 40			; 00000028H
  00006	e9 00 00 00 00	 jmp	 ??1IndexedModel@@QAE@XZ
__ehhandler$??0MeshData@@QAE@ABVIndexedModel@@H@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0MeshData@@QAE@ABVIndexedModel@@H@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0MeshData@@QAE@ABVIndexedModel@@H@Z ENDP		; MeshData::MeshData
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\lib\bullet3\include\bulletcollision\collisionshapes\bttriangleindexvertexarray.h
;	COMDAT ??2btTriangleIndexVertexArray@@SAPAXI@Z
_TEXT	SEGMENT
_sizeInBytes$ = 8					; size = 4
??2btTriangleIndexVertexArray@@SAPAXI@Z PROC		; btTriangleIndexVertexArray::operator new, COMDAT

; 79   : 	BT_DECLARE_ALIGNED_ALLOCATOR();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a 10		 push	 16			; 00000010H
  00005	8b 45 08	 mov	 eax, DWORD PTR _sizeInBytes$[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ?btAlignedAllocInternal@@YAPAXIH@Z ; btAlignedAllocInternal
  0000e	83 c4 08	 add	 esp, 8
  00011	3b ec		 cmp	 ebp, esp
  00013	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
??2btTriangleIndexVertexArray@@SAPAXI@Z ENDP		; btTriangleIndexVertexArray::operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\lib\bullet3\include\bulletcollision\collisionshapes\bttriangleindexvertexarray.h
;	COMDAT ??3btTriangleIndexVertexArray@@SAXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_ptr$ = 8						; size = 4
??3btTriangleIndexVertexArray@@SAXPAX@Z PROC		; btTriangleIndexVertexArray::operator delete, COMDAT

; 79   : 	BT_DECLARE_ALIGNED_ALLOCATOR();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??3btTriangleIndexVertexArray@@SAXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00022	8b 45 08	 mov	 eax, DWORD PTR _ptr$[ebp]
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ?btAlignedFreeInternal@@YAXPAX@Z ; btAlignedFreeInternal
  0002b	83 c4 04	 add	 esp, 4
  0002e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00031	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00038	59		 pop	 ecx
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??3btTriangleIndexVertexArray@@SAXPAX@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??3btTriangleIndexVertexArray@@SAXPAX@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??3btTriangleIndexVertexArray@@SAXPAX@Z ENDP		; btTriangleIndexVertexArray::operator delete
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\core\math3d.h
;	COMDAT ?Cross@Vector3f@@QBE?AV1@ABV1@@Z
_TEXT	SEGMENT
tv191 = -100						; size = 4
tv217 = -96						; size = 4
tv187 = -92						; size = 4
tv215 = -88						; size = 4
tv183 = -84						; size = 4
tv213 = -80						; size = 4
tv179 = -76						; size = 4
tv175 = -72						; size = 4
tv211 = -68						; size = 4
tv171 = -64						; size = 4
tv209 = -60						; size = 4
tv167 = -56						; size = 4
tv207 = -52						; size = 4
tv163 = -48						; size = 4
tv159 = -44						; size = 4
tv205 = -40						; size = 4
tv155 = -36						; size = 4
tv203 = -32						; size = 4
tv151 = -28						; size = 4
tv201 = -24						; size = 4
tv147 = -20						; size = 4
__z$ = -16						; size = 4
__y$ = -12						; size = 4
__x$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
?Cross@Vector3f@@QBE?AV1@ABV1@@Z PROC			; Vector3f::Cross, COMDAT
; _this$ = ecx

; 718  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	57		 push	 edi
  00007	51		 push	 ecx
  00008	8d 7d 9c	 lea	 edi, DWORD PTR [ebp-100]
  0000b	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	59		 pop	 ecx
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 719  : 		const float _x = GetY() * v.GetZ() - GetZ() * v.GetY();

  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?GetY@Vector3f@@QBEMXZ	; Vector3f::GetY
  00023	d9 5d ec	 fstp	 DWORD PTR tv147[ebp]
  00026	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR tv147[ebp]
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  0002e	f3 0f 11 45 e8	 movss	 DWORD PTR tv201[ebp], xmm0
  00033	e8 00 00 00 00	 call	 ?GetZ@Vector3f@@QBEMXZ	; Vector3f::GetZ
  00038	d9 5d e4	 fstp	 DWORD PTR tv151[ebp]
  0003b	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR tv201[ebp]
  00040	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR tv151[ebp]
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	f3 0f 11 45 e0	 movss	 DWORD PTR tv203[ebp], xmm0
  0004d	e8 00 00 00 00	 call	 ?GetZ@Vector3f@@QBEMXZ	; Vector3f::GetZ
  00052	d9 5d dc	 fstp	 DWORD PTR tv155[ebp]
  00055	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR tv155[ebp]
  0005a	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  0005d	f3 0f 11 45 d8	 movss	 DWORD PTR tv205[ebp], xmm0
  00062	e8 00 00 00 00	 call	 ?GetY@Vector3f@@QBEMXZ	; Vector3f::GetY
  00067	d9 5d d4	 fstp	 DWORD PTR tv159[ebp]
  0006a	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR tv205[ebp]
  0006f	f3 0f 59 45 d4	 mulss	 xmm0, DWORD PTR tv159[ebp]
  00074	f3 0f 10 4d e0	 movss	 xmm1, DWORD PTR tv203[ebp]
  00079	f3 0f 5c c8	 subss	 xmm1, xmm0
  0007d	f3 0f 11 4d f8	 movss	 DWORD PTR __x$[ebp], xmm1

; 720  : 		const float _y = GetZ() * v.GetX() - GetX() * v.GetZ();

  00082	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	e8 00 00 00 00	 call	 ?GetZ@Vector3f@@QBEMXZ	; Vector3f::GetZ
  0008a	d9 5d d0	 fstp	 DWORD PTR tv163[ebp]
  0008d	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR tv163[ebp]
  00092	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00095	f3 0f 11 45 cc	 movss	 DWORD PTR tv207[ebp], xmm0
  0009a	e8 00 00 00 00	 call	 ?GetX@Vector3f@@QBEMXZ	; Vector3f::GetX
  0009f	d9 5d c8	 fstp	 DWORD PTR tv167[ebp]
  000a2	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR tv207[ebp]
  000a7	f3 0f 59 45 c8	 mulss	 xmm0, DWORD PTR tv167[ebp]
  000ac	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000af	f3 0f 11 45 c4	 movss	 DWORD PTR tv209[ebp], xmm0
  000b4	e8 00 00 00 00	 call	 ?GetX@Vector3f@@QBEMXZ	; Vector3f::GetX
  000b9	d9 5d c0	 fstp	 DWORD PTR tv171[ebp]
  000bc	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR tv171[ebp]
  000c1	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  000c4	f3 0f 11 45 bc	 movss	 DWORD PTR tv211[ebp], xmm0
  000c9	e8 00 00 00 00	 call	 ?GetZ@Vector3f@@QBEMXZ	; Vector3f::GetZ
  000ce	d9 5d b8	 fstp	 DWORD PTR tv175[ebp]
  000d1	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR tv211[ebp]
  000d6	f3 0f 59 45 b8	 mulss	 xmm0, DWORD PTR tv175[ebp]
  000db	f3 0f 10 4d c4	 movss	 xmm1, DWORD PTR tv209[ebp]
  000e0	f3 0f 5c c8	 subss	 xmm1, xmm0
  000e4	f3 0f 11 4d f4	 movss	 DWORD PTR __y$[ebp], xmm1

; 721  : 		const float _z = GetX() * v.GetY() - GetY() * v.GetX();

  000e9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ec	e8 00 00 00 00	 call	 ?GetX@Vector3f@@QBEMXZ	; Vector3f::GetX
  000f1	d9 5d b4	 fstp	 DWORD PTR tv179[ebp]
  000f4	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR tv179[ebp]
  000f9	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  000fc	f3 0f 11 45 b0	 movss	 DWORD PTR tv213[ebp], xmm0
  00101	e8 00 00 00 00	 call	 ?GetY@Vector3f@@QBEMXZ	; Vector3f::GetY
  00106	d9 5d ac	 fstp	 DWORD PTR tv183[ebp]
  00109	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv213[ebp]
  0010e	f3 0f 59 45 ac	 mulss	 xmm0, DWORD PTR tv183[ebp]
  00113	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00116	f3 0f 11 45 a8	 movss	 DWORD PTR tv215[ebp], xmm0
  0011b	e8 00 00 00 00	 call	 ?GetY@Vector3f@@QBEMXZ	; Vector3f::GetY
  00120	d9 5d a4	 fstp	 DWORD PTR tv187[ebp]
  00123	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR tv187[ebp]
  00128	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  0012b	f3 0f 11 45 a0	 movss	 DWORD PTR tv217[ebp], xmm0
  00130	e8 00 00 00 00	 call	 ?GetX@Vector3f@@QBEMXZ	; Vector3f::GetX
  00135	d9 5d 9c	 fstp	 DWORD PTR tv191[ebp]
  00138	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR tv217[ebp]
  0013d	f3 0f 59 45 9c	 mulss	 xmm0, DWORD PTR tv191[ebp]
  00142	f3 0f 10 4d a8	 movss	 xmm1, DWORD PTR tv215[ebp]
  00147	f3 0f 5c c8	 subss	 xmm1, xmm0
  0014b	f3 0f 11 4d f0	 movss	 DWORD PTR __z$[ebp], xmm1

; 722  : 
; 723  : 		return Vector3f(_x, _y, _z);

  00150	51		 push	 ecx
  00151	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR __z$[ebp]
  00156	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0015b	51		 push	 ecx
  0015c	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR __y$[ebp]
  00161	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00166	51		 push	 ecx
  00167	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR __x$[ebp]
  0016c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00171	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00174	e8 00 00 00 00	 call	 ??0Vector3f@@QAE@MMM@Z	; Vector3f::Vector3f
  00179	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 724  : 	}

  0017c	5f		 pop	 edi
  0017d	83 c4 64	 add	 esp, 100		; 00000064H
  00180	3b ec		 cmp	 ebp, esp
  00182	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00187	8b e5		 mov	 esp, ebp
  00189	5d		 pop	 ebp
  0018a	c2 08 00	 ret	 8
?Cross@Vector3f@@QBE?AV1@ABV1@@Z ENDP			; Vector3f::Cross
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\core\math3d.h
;	COMDAT ??GVector3f@@QBE?AV0@ABV0@@Z
_TEXT	SEGMENT
tv143 = -40						; size = 4
tv154 = -36						; size = 4
tv139 = -32						; size = 4
tv135 = -28						; size = 4
tv152 = -24						; size = 4
tv131 = -20						; size = 4
tv95 = -16						; size = 4
tv150 = -12						; size = 4
tv91 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_r$ = 12						; size = 4
??GVector3f@@QBE?AV0@ABV0@@Z PROC			; Vector3f::operator-, COMDAT
; _this$ = ecx

; 764  : 	inline Vector3f operator-(const Vector3f& r) const { return Vector3f(GetX() - r.GetX(), GetY() - r.GetY(), GetZ() - r.GetZ()); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	57		 push	 edi
  00007	51		 push	 ecx
  00008	8d 7d d8	 lea	 edi, DWORD PTR [ebp-40]
  0000b	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	59		 pop	 ecx
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?GetZ@Vector3f@@QBEMXZ	; Vector3f::GetZ
  00023	d9 5d f8	 fstp	 DWORD PTR tv91[ebp]
  00026	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR tv91[ebp]
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  0002e	f3 0f 11 45 f4	 movss	 DWORD PTR tv150[ebp], xmm0
  00033	e8 00 00 00 00	 call	 ?GetZ@Vector3f@@QBEMXZ	; Vector3f::GetZ
  00038	d9 5d f0	 fstp	 DWORD PTR tv95[ebp]
  0003b	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR tv150[ebp]
  00040	f3 0f 5c 45 f0	 subss	 xmm0, DWORD PTR tv95[ebp]
  00045	51		 push	 ecx
  00046	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?GetY@Vector3f@@QBEMXZ	; Vector3f::GetY
  00053	d9 5d ec	 fstp	 DWORD PTR tv131[ebp]
  00056	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR tv131[ebp]
  0005b	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  0005e	f3 0f 11 45 e8	 movss	 DWORD PTR tv152[ebp], xmm0
  00063	e8 00 00 00 00	 call	 ?GetY@Vector3f@@QBEMXZ	; Vector3f::GetY
  00068	d9 5d e4	 fstp	 DWORD PTR tv135[ebp]
  0006b	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR tv152[ebp]
  00070	f3 0f 5c 45 e4	 subss	 xmm0, DWORD PTR tv135[ebp]
  00075	51		 push	 ecx
  00076	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	e8 00 00 00 00	 call	 ?GetX@Vector3f@@QBEMXZ	; Vector3f::GetX
  00083	d9 5d e0	 fstp	 DWORD PTR tv139[ebp]
  00086	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR tv139[ebp]
  0008b	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  0008e	f3 0f 11 45 dc	 movss	 DWORD PTR tv154[ebp], xmm0
  00093	e8 00 00 00 00	 call	 ?GetX@Vector3f@@QBEMXZ	; Vector3f::GetX
  00098	d9 5d d8	 fstp	 DWORD PTR tv143[ebp]
  0009b	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR tv154[ebp]
  000a0	f3 0f 5c 45 d8	 subss	 xmm0, DWORD PTR tv143[ebp]
  000a5	51		 push	 ecx
  000a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ab	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000ae	e8 00 00 00 00	 call	 ??0Vector3f@@QAE@MMM@Z	; Vector3f::Vector3f
  000b3	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000b6	5f		 pop	 edi
  000b7	83 c4 28	 add	 esp, 40			; 00000028H
  000ba	3b ec		 cmp	 ebp, esp
  000bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c2 08 00	 ret	 8
??GVector3f@@QBE?AV0@ABV0@@Z ENDP			; Vector3f::operator-
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\core\math3d.h
;	COMDAT ??YVector3f@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
tv151 = -28						; size = 4
tv95 = -24						; size = 4
tv143 = -20						; size = 4
tv84 = -16						; size = 4
tv135 = -12						; size = 4
tv73 = -8						; size = 4
_this$ = -4						; size = 4
_r$ = 8							; size = 4
??YVector3f@@QAEAAV0@ABV0@@Z PROC			; Vector3f::operator+=, COMDAT
; _this$ = ecx

; 772  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000e	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00011	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00014	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00017	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001a	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001d	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00020	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 773  : 		(*this)[0] += r.GetX();

  00023	6a 00		 push	 0
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ??A?$Vector@M$02@@QAEAAMI@Z ; Vector<float,3>::operator[]
  0002d	89 45 f8	 mov	 DWORD PTR tv73[ebp], eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR _r$[ebp]
  00033	e8 00 00 00 00	 call	 ?GetX@Vector3f@@QBEMXZ	; Vector3f::GetX
  00038	d9 5d f4	 fstp	 DWORD PTR tv135[ebp]
  0003b	8b 45 f8	 mov	 eax, DWORD PTR tv73[ebp]
  0003e	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR tv135[ebp]
  00043	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  00047	8b 4d f8	 mov	 ecx, DWORD PTR tv73[ebp]
  0004a	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 774  : 		(*this)[1] += r.GetY();

  0004e	6a 01		 push	 1
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	e8 00 00 00 00	 call	 ??A?$Vector@M$02@@QAEAAMI@Z ; Vector<float,3>::operator[]
  00058	89 45 f0	 mov	 DWORD PTR tv84[ebp], eax
  0005b	8b 4d 08	 mov	 ecx, DWORD PTR _r$[ebp]
  0005e	e8 00 00 00 00	 call	 ?GetY@Vector3f@@QBEMXZ	; Vector3f::GetY
  00063	d9 5d ec	 fstp	 DWORD PTR tv143[ebp]
  00066	8b 55 f0	 mov	 edx, DWORD PTR tv84[ebp]
  00069	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR tv143[ebp]
  0006e	f3 0f 58 02	 addss	 xmm0, DWORD PTR [edx]
  00072	8b 45 f0	 mov	 eax, DWORD PTR tv84[ebp]
  00075	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 775  : 		(*this)[2] += r.GetZ();

  00079	6a 02		 push	 2
  0007b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	e8 00 00 00 00	 call	 ??A?$Vector@M$02@@QAEAAMI@Z ; Vector<float,3>::operator[]
  00083	89 45 e8	 mov	 DWORD PTR tv95[ebp], eax
  00086	8b 4d 08	 mov	 ecx, DWORD PTR _r$[ebp]
  00089	e8 00 00 00 00	 call	 ?GetZ@Vector3f@@QBEMXZ	; Vector3f::GetZ
  0008e	d9 5d e4	 fstp	 DWORD PTR tv151[ebp]
  00091	8b 4d e8	 mov	 ecx, DWORD PTR tv95[ebp]
  00094	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR tv151[ebp]
  00099	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  0009d	8b 55 e8	 mov	 edx, DWORD PTR tv95[ebp]
  000a0	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 776  : 
; 777  : 		return *this;

  000a4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 778  : 	}

  000a7	83 c4 1c	 add	 esp, 28			; 0000001cH
  000aa	3b ec		 cmp	 ebp, esp
  000ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c2 04 00	 ret	 4
??YVector3f@@QAEAAV0@ABV0@@Z ENDP			; Vector3f::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\core\math3d.h
;	COMDAT ?SetX@Vector3f@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
?SetX@Vector3f@@QAEXM@Z PROC				; Vector3f::SetX, COMDAT
; _this$ = ecx

; 811  : 	inline void SetX(float x) { (*this)[0] = x; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	6a 00		 push	 0
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??A?$Vector@M$02@@QAEAAMI@Z ; Vector<float,3>::operator[]
  00018	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x$[ebp]
  0001d	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?SetX@Vector3f@@QAEXM@Z ENDP				; Vector3f::SetX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\core\math3d.h
;	COMDAT ?SetY@Vector3f@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_y$ = 8							; size = 4
?SetY@Vector3f@@QAEXM@Z PROC				; Vector3f::SetY, COMDAT
; _this$ = ecx

; 812  : 	inline void SetY(float y) { (*this)[1] = y; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	6a 01		 push	 1
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??A?$Vector@M$02@@QAEAAMI@Z ; Vector<float,3>::operator[]
  00018	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _y$[ebp]
  0001d	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?SetY@Vector3f@@QAEXM@Z ENDP				; Vector3f::SetY
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\core\math3d.h
;	COMDAT ?SetZ@Vector3f@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_z$ = 8							; size = 4
?SetZ@Vector3f@@QAEXM@Z PROC				; Vector3f::SetZ, COMDAT
; _this$ = ecx

; 813  : 	inline void SetZ(float z) { (*this)[2] = z; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	6a 02		 push	 2
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??A?$Vector@M$02@@QAEAAMI@Z ; Vector<float,3>::operator[]
  00018	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _z$[ebp]
  0001d	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?SetZ@Vector3f@@QAEXM@Z ENDP				; Vector3f::SetZ
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?eq@?$char_traits@D@std@@SA_NABD0@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq@?$char_traits@D@std@@SA_NABD0@Z PROC		; std::char_traits<char>::eq, COMDAT

; 570  : 		{	// test for element equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 571  : 		return (_Left == _Right);

  0000b	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000e	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Right$[ebp]
  00014	0f be 02	 movsx	 eax, BYTE PTR [edx]
  00017	3b c8		 cmp	 ecx, eax
  00019	75 09		 jne	 SHORT $LN3@eq
  0001b	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR tv67[ebp], 1
  00022	eb 07		 jmp	 SHORT $LN4@eq
$LN3@eq:
  00024	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
$LN4@eq:
  0002b	8a 45 fc	 mov	 al, BYTE PTR tv67[ebp]

; 572  : 		}

  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?eq@?$char_traits@D@std@@SA_NABD0@Z ENDP		; std::char_traits<char>::eq
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?to_char_type@?$char_traits@D@std@@SADABH@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?to_char_type@?$char_traits@D@std@@SADABH@Z PROC	; std::char_traits<char>::to_char_type, COMDAT

; 582  : 		{	// convert metacharacter to character

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 583  : 		return ((_Elem)_Meta);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Meta$[ebp]
  00006	8a 00		 mov	 al, BYTE PTR [eax]

; 584  : 		}

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?to_char_type@?$char_traits@D@std@@SADABH@Z ENDP	; std::char_traits<char>::to_char_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?to_int_type@?$char_traits@D@std@@SAHABD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 4
?to_int_type@?$char_traits@D@std@@SAHABD@Z PROC		; std::char_traits<char>::to_int_type, COMDAT

; 588  : 		{	// convert character to metacharacter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 589  : 		return ((unsigned char)_Ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ch$[ebp]
  00006	0f b6 00	 movzx	 eax, BYTE PTR [eax]

; 590  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?to_int_type@?$char_traits@D@std@@SAHABD@Z ENDP		; std::char_traits<char>::to_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?not_eof@?$char_traits@D@std@@SAHABH@Z
_TEXT	SEGMENT
tv68 = -8						; size = 4
tv69 = -4						; size = 4
__Meta$ = 8						; size = 4
?not_eof@?$char_traits@D@std@@SAHABH@Z PROC		; std::char_traits<char>::not_eof, COMDAT

; 600  : 		{	// return anything but EOF

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 601  : 		return (_Meta != eof() ? _Meta : !eof());

  00014	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Meta$[ebp]
  0001c	39 01		 cmp	 DWORD PTR [ecx], eax
  0001e	74 0a		 je	 SHORT $LN5@not_eof
  00020	8b 55 08	 mov	 edx, DWORD PTR __Meta$[ebp]
  00023	8b 02		 mov	 eax, DWORD PTR [edx]
  00025	89 45 fc	 mov	 DWORD PTR tv69[ebp], eax
  00028	eb 1f		 jmp	 SHORT $LN6@not_eof
$LN5@not_eof:
  0002a	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  0002f	85 c0		 test	 eax, eax
  00031	75 09		 jne	 SHORT $LN3@not_eof
  00033	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv68[ebp], 1
  0003a	eb 07		 jmp	 SHORT $LN4@not_eof
$LN3@not_eof:
  0003c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@not_eof:
  00043	8b 4d f8	 mov	 ecx, DWORD PTR tv68[ebp]
  00046	89 4d fc	 mov	 DWORD PTR tv69[ebp], ecx
$LN6@not_eof:
  00049	8b 45 fc	 mov	 eax, DWORD PTR tv69[ebp]

; 602  : 		}

  0004c	83 c4 08	 add	 esp, 8
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
?not_eof@?$char_traits@D@std@@SAHABH@Z ENDP		; std::char_traits<char>::not_eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GMeshData@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GMeshData@@UAEPAXI@Z PROC				; MeshData::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1MeshData@@UAE@XZ	; MeshData::~MeshData
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 78		 push	 120			; 00000078H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_GMeshData@@UAEPAXI@Z ENDP				; MeshData::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\lib\assimp\include\assimp\types.h
;	COMDAT ??0aiString@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0aiString@@QAE@XZ PROC				; aiString::aiString, COMDAT
; _this$ = ecx

; 243  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 242  : 		length(0) 

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 244  : 		data[0] = '\0';

  00018	b9 01 00 00 00	 mov	 ecx, 1
  0001d	6b d1 00	 imul	 edx, ecx, 0
  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	c6 44 10 04 00	 mov	 BYTE PTR [eax+edx+4], 0

; 245  : 
; 246  : #ifdef _DEBUG
; 247  : 		// Debug build: overwrite the string on its full length with ESC (27)
; 248  : 		memset(data+1,27,MAXLEN-1);

  00028	8b f4		 mov	 esi, esp
  0002a	68 ff 03 00 00	 push	 1023			; 000003ffH
  0002f	6a 1b		 push	 27			; 0000001bH
  00031	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	83 c1 05	 add	 ecx, 5
  00037	51		 push	 ecx
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memset
  0003e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00041	3b f4		 cmp	 esi, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 249  : #endif
; 250  : 	}

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	5e		 pop	 esi
  0004c	83 c4 04	 add	 esp, 4
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
??0aiString@@QAE@XZ ENDP				; aiString::aiString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\lib\assimp\include\assimp\types.h
;	COMDAT ?C_Str@aiString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?C_Str@aiString@@QBEPBDXZ PROC				; aiString::C_Str, COMDAT
; _this$ = ecx

; 340  : 	const char* C_Str() const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 341  : 		return data;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 c0 04	 add	 eax, 4

; 342  : 	}

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?C_Str@aiString@@QBEPBDXZ ENDP				; aiString::C_Str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\lib\assimp\include\assimp\importer.hpp
;	COMDAT ?ReadFile@Importer@Assimp@@QAEPBUaiScene@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pFile$ = 8						; size = 4
_pFlags$ = 12						; size = 4
?ReadFile@Importer@Assimp@@QAEPBUaiScene@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z PROC ; Assimp::Importer::ReadFile, COMDAT
; _this$ = ecx

; 626  : AI_FORCE_INLINE const aiScene* Importer::ReadFile( const std::string& pFile,unsigned int pFlags){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 627  : 	return ReadFile(pFile.c_str(),pFlags);

  0000f	8b f4		 mov	 esi, esp
  00011	8b 45 0c	 mov	 eax, DWORD PTR _pFlags$[ebp]
  00014	50		 push	 eax
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _pFile$[ebp]
  00018	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadFile@Importer@Assimp@@QAEPBUaiScene@@PBDI@Z
  00027	3b f4		 cmp	 esi, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 628  : }

  0002e	5e		 pop	 esi
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 08 00	 ret	 8
?ReadFile@Importer@Assimp@@QAEPBUaiScene@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ENDP ; Assimp::Importer::ReadFile
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\lib\assimp\include\assimp\mesh.h
;	COMDAT ?HasTextureCoords@aiMesh@@QBE_NI@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
_this$ = -4						; size = 4
_pIndex$ = 8						; size = 4
?HasTextureCoords@aiMesh@@QBE_NI@Z PROC			; aiMesh::HasTextureCoords, COMDAT
; _this$ = ecx

; 698  : 	{ 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 699  : 		if( pIndex >= AI_MAX_NUMBER_OF_TEXTURECOORDS) 

  00017	83 7d 08 08	 cmp	 DWORD PTR _pIndex$[ebp], 8
  0001b	72 06		 jb	 SHORT $LN2@HasTexture

; 700  : 			return false; 

  0001d	32 c0		 xor	 al, al
  0001f	eb 2b		 jmp	 SHORT $LN1@HasTexture

; 701  : 		else 

  00021	eb 29		 jmp	 SHORT $LN1@HasTexture
$LN2@HasTexture:

; 702  : 			return mTextureCoords[pIndex] != NULL && mNumVertices > 0; 

  00023	8b 45 08	 mov	 eax, DWORD PTR _pIndex$[ebp]
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	83 7c 81 3c 00	 cmp	 DWORD PTR [ecx+eax*4+60], 0
  0002e	74 12		 je	 SHORT $LN5@HasTexture
  00030	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00033	83 7a 04 00	 cmp	 DWORD PTR [edx+4], 0
  00037	76 09		 jbe	 SHORT $LN5@HasTexture
  00039	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv71[ebp], 1
  00040	eb 07		 jmp	 SHORT $LN6@HasTexture
$LN5@HasTexture:
  00042	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN6@HasTexture:
  00049	8a 45 f8	 mov	 al, BYTE PTR tv71[ebp]
$LN1@HasTexture:

; 703  : 	}

  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?HasTextureCoords@aiMesh@@QBE_NI@Z ENDP			; aiMesh::HasTextureCoords
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\lib\assimp\include\assimp\material.h
;	COMDAT _aiGetMaterialFloat
_TEXT	SEGMENT
_pMat$ = 8						; size = 4
_pKey$ = 12						; size = 4
_type$ = 16						; size = 4
_index$ = 20						; size = 4
_pOut$ = 24						; size = 4
_aiGetMaterialFloat PROC				; COMDAT

; 1342 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1343 : 	return aiGetMaterialFloatArray(pMat,pKey,type,index,pOut,(unsigned int*)0x0);

  00004	8b f4		 mov	 esi, esp
  00006	6a 00		 push	 0
  00008	8b 45 18	 mov	 eax, DWORD PTR _pOut$[ebp]
  0000b	50		 push	 eax
  0000c	8b 4d 14	 mov	 ecx, DWORD PTR _index$[ebp]
  0000f	51		 push	 ecx
  00010	8b 55 10	 mov	 edx, DWORD PTR _type$[ebp]
  00013	52		 push	 edx
  00014	8b 45 0c	 mov	 eax, DWORD PTR _pKey$[ebp]
  00017	50		 push	 eax
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _pMat$[ebp]
  0001b	51		 push	 ecx
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__aiGetMaterialFloatArray
  00022	83 c4 18	 add	 esp, 24			; 00000018H
  00025	3b f4		 cmp	 esi, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1344 : }

  0002c	5e		 pop	 esi
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
_aiGetMaterialFloat ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\lib\assimp\include\assimp\material.inl
;	COMDAT ?GetTexture@aiMaterial@@QBE?AW4aiReturn@@W4aiTextureType@@IPAUaiString@@PAW4aiTextureMapping@@PAIPAMPAW4aiTextureOp@@PAW4aiTextureMapMode@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_type$ = 8						; size = 4
_index$ = 12						; size = 4
_path$ = 16						; size = 4
_mapping$ = 20						; size = 4
_uvindex$ = 24						; size = 4
_blend$ = 28						; size = 4
_op$ = 32						; size = 4
_mapmode$ = 36						; size = 4
?GetTexture@aiMaterial@@QBE?AW4aiReturn@@W4aiTextureType@@IPAUaiString@@PAW4aiTextureMapping@@PAIPAMPAW4aiTextureOp@@PAW4aiTextureMapMode@@@Z PROC ; aiMaterial::GetTexture, COMDAT
; _this$ = ecx

; 59   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 60   : 	return ::aiGetMaterialTexture(this,type,index,path,mapping,uvindex,blend,op,mapmode);

  0000f	8b f4		 mov	 esi, esp
  00011	6a 00		 push	 0
  00013	8b 45 24	 mov	 eax, DWORD PTR _mapmode$[ebp]
  00016	50		 push	 eax
  00017	8b 4d 20	 mov	 ecx, DWORD PTR _op$[ebp]
  0001a	51		 push	 ecx
  0001b	8b 55 1c	 mov	 edx, DWORD PTR _blend$[ebp]
  0001e	52		 push	 edx
  0001f	8b 45 18	 mov	 eax, DWORD PTR _uvindex$[ebp]
  00022	50		 push	 eax
  00023	8b 4d 14	 mov	 ecx, DWORD PTR _mapping$[ebp]
  00026	51		 push	 ecx
  00027	8b 55 10	 mov	 edx, DWORD PTR _path$[ebp]
  0002a	52		 push	 edx
  0002b	8b 45 0c	 mov	 eax, DWORD PTR _index$[ebp]
  0002e	50		 push	 eax
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR _type$[ebp]
  00032	51		 push	 ecx
  00033	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00036	52		 push	 edx
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__aiGetMaterialTexture
  0003d	83 c4 28	 add	 esp, 40			; 00000028H
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 61   : }

  00047	5e		 pop	 esi
  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 20 00	 ret	 32			; 00000020H
?GetTexture@aiMaterial@@QBE?AW4aiReturn@@W4aiTextureType@@IPAUaiString@@PAW4aiTextureMapping@@PAIPAMPAW4aiTextureOp@@PAW4aiTextureMapMode@@@Z ENDP ; aiMaterial::GetTexture
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\lib\assimp\include\assimp\material.inl
;	COMDAT ??$Get@M@aiMaterial@@QBE?AW4aiReturn@@PBDIIAAM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pKey$ = 8						; size = 4
_type$ = 12						; size = 4
_idx$ = 16						; size = 4
_pOut$ = 20						; size = 4
??$Get@M@aiMaterial@@QBE?AW4aiReturn@@PBDIIAAM@Z PROC	; aiMaterial::Get<float>, COMDAT
; _this$ = ecx

; 142  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 143  : 	return aiGetMaterialFloat(this,pKey,type,idx,&pOut);

  0000e	8b 45 14	 mov	 eax, DWORD PTR _pOut$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 10	 mov	 ecx, DWORD PTR _idx$[ebp]
  00015	51		 push	 ecx
  00016	8b 55 0c	 mov	 edx, DWORD PTR _type$[ebp]
  00019	52		 push	 edx
  0001a	8b 45 08	 mov	 eax, DWORD PTR _pKey$[ebp]
  0001d	50		 push	 eax
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 _aiGetMaterialFloat
  00027	83 c4 14	 add	 esp, 20			; 00000014H

; 144  : }

  0002a	83 c4 04	 add	 esp, 4
  0002d	3b ec		 cmp	 ebp, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 10 00	 ret	 16			; 00000010H
??$Get@M@aiMaterial@@QBE?AW4aiReturn@@PBDIIAAM@Z ENDP	; aiMaterial::Get<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\lib\assimp\include\assimp\material.inl
;	COMDAT ??$Get@UaiString@@@aiMaterial@@QBE?AW4aiReturn@@PBDIIAAUaiString@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pKey$ = 8						; size = 4
_type$ = 12						; size = 4
_idx$ = 16						; size = 4
_pOut$ = 20						; size = 4
??$Get@UaiString@@@aiMaterial@@QBE?AW4aiReturn@@PBDIIAAUaiString@@@Z PROC ; aiMaterial::Get<aiString>, COMDAT
; _this$ = ecx

; 173  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 174  : 	return aiGetMaterialString(this,pKey,type,idx,&pOut);

  0000f	8b f4		 mov	 esi, esp
  00011	8b 45 14	 mov	 eax, DWORD PTR _pOut$[ebp]
  00014	50		 push	 eax
  00015	8b 4d 10	 mov	 ecx, DWORD PTR _idx$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 0c	 mov	 edx, DWORD PTR _type$[ebp]
  0001c	52		 push	 edx
  0001d	8b 45 08	 mov	 eax, DWORD PTR _pKey$[ebp]
  00020	50		 push	 eax
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	51		 push	 ecx
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__aiGetMaterialString
  0002b	83 c4 14	 add	 esp, 20			; 00000014H
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 175  : }

  00035	5e		 pop	 esi
  00036	83 c4 04	 add	 esp, 4
  00039	3b ec		 cmp	 ebp, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 10 00	 ret	 16			; 00000010H
??$Get@UaiString@@@aiMaterial@@QBE?AW4aiReturn@@PBDIIAAUaiString@@@Z ENDP ; aiMaterial::Get<aiString>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
;	COMDAT ??__E?s_resourceMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@A@@YAXXZ
text$di	SEGMENT
??__E?s_resourceMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@A@@YAXXZ PROC ; `dynamic initializer for 'Mesh::s_resourceMap'', COMDAT

; 48   : std::map<std::string, MeshData*> Mesh::s_resourceMap;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_resourceMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@A ; Mesh::s_resourceMap
  00008	e8 00 00 00 00	 call	 ??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@QAE@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >
  0000d	68 00 00 00 00	 push	 OFFSET ??__F?s_resourceMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@A@@YAXXZ ; `dynamic atexit destructor for 'Mesh::s_resourceMap''
  00012	e8 00 00 00 00	 call	 _atexit
  00017	83 c4 04	 add	 esp, 4
  0001a	3b ec		 cmp	 ebp, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??__E?s_resourceMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@A@@YAXXZ ENDP ; `dynamic initializer for 'Mesh::s_resourceMap''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F?s_resourceMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@A@@YAXXZ
text$yd	SEGMENT
??__F?s_resourceMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'Mesh::s_resourceMap'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_resourceMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@A ; Mesh::s_resourceMap
  00008	e8 00 00 00 00	 call	 ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@QAE@XZ
  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??__F?s_resourceMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'Mesh::s_resourceMap''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@QAE@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@QAE@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
;	COMDAT ??__E?s_resourceColMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@A@@YAXXZ
text$di	SEGMENT
??__E?s_resourceColMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@A@@YAXXZ PROC ; `dynamic initializer for 'Mesh::s_resourceColMap'', COMDAT

; 49   : std::map<std::string, btTriangleMesh*> Mesh::s_resourceColMap;

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_resourceColMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@A ; Mesh::s_resourceColMap
  00008	e8 00 00 00 00	 call	 ??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@QAE@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >
  0000d	68 00 00 00 00	 push	 OFFSET ??__F?s_resourceColMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@A@@YAXXZ ; `dynamic atexit destructor for 'Mesh::s_resourceColMap''
  00012	e8 00 00 00 00	 call	 _atexit
  00017	83 c4 04	 add	 esp, 4
  0001a	3b ec		 cmp	 ebp, esp
  0001c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??__E?s_resourceColMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@A@@YAXXZ ENDP ; `dynamic initializer for 'Mesh::s_resourceColMap''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F?s_resourceColMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@A@@YAXXZ
text$yd	SEGMENT
??__F?s_resourceColMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'Mesh::s_resourceColMap'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_resourceColMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@A ; Mesh::s_resourceColMap
  00008	e8 00 00 00 00	 call	 ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@QAE@XZ
  0000d	3b ec		 cmp	 ebp, esp
  0000f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??__F?s_resourceColMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'Mesh::s_resourceColMap''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@QAE@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@QAE@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
_TEXT	SEGMENT
tv85 = -8						; size = 4
_this$ = -4						; size = 4
?IsValid@IndexedModel@@QBE_NXZ PROC			; IndexedModel::IsValid
; _this$ = ecx

; 52   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 53   : 	return m_positions.size() == m_texCoords.size()

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	83 c1 10	 add	 ecx, 16			; 00000010H
  0001e	e8 00 00 00 00	 call	 ?size@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEIXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::size
  00023	8b f0		 mov	 esi, eax
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	83 c1 20	 add	 ecx, 32			; 00000020H
  0002b	e8 00 00 00 00	 call	 ?size@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEIXZ ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::size
  00030	3b f0		 cmp	 esi, eax
  00032	75 41		 jne	 SHORT $LN3@IsValid
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 c1 20	 add	 ecx, 32			; 00000020H
  0003a	e8 00 00 00 00	 call	 ?size@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEIXZ ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::size
  0003f	8b f0		 mov	 esi, eax
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	83 c1 30	 add	 ecx, 48			; 00000030H
  00047	e8 00 00 00 00	 call	 ?size@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEIXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::size
  0004c	3b f0		 cmp	 esi, eax
  0004e	75 25		 jne	 SHORT $LN3@IsValid
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	83 c1 30	 add	 ecx, 48			; 00000030H
  00056	e8 00 00 00 00	 call	 ?size@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEIXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::size
  0005b	8b f0		 mov	 esi, eax
  0005d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	83 c1 40	 add	 ecx, 64			; 00000040H
  00063	e8 00 00 00 00	 call	 ?size@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEIXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::size
  00068	3b f0		 cmp	 esi, eax
  0006a	75 09		 jne	 SHORT $LN3@IsValid
  0006c	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv85[ebp], 1
  00073	eb 07		 jmp	 SHORT $LN4@IsValid
$LN3@IsValid:
  00075	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN4@IsValid:
  0007c	8a 45 f8	 mov	 al, BYTE PTR tv85[ebp]

; 54   : 		&& m_texCoords.size() == m_normals.size()
; 55   : 		&& m_normals.size() == m_tangents.size();
; 56   : }

  0007f	5e		 pop	 esi
  00080	83 c4 08	 add	 esp, 8
  00083	3b ec		 cmp	 ebp, esp
  00085	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c3		 ret	 0
?IsValid@IndexedModel@@QBE_NXZ ENDP			; IndexedModel::IsValid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_vert$ = 8						; size = 4
?AddVertex@IndexedModel@@QAEXABVVector3f@@@Z PROC	; IndexedModel::AddVertex
; _this$ = ecx

; 59   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 60   : 	m_positions.push_back(vert);

  0000e	8b 45 08	 mov	 eax, DWORD PTR _vert$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	83 c1 10	 add	 ecx, 16			; 00000010H
  00018	e8 00 00 00 00	 call	 ?push_back@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEXABVVector3f@@@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::push_back

; 61   : }

  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?AddVertex@IndexedModel@@QAEXABVVector3f@@@Z ENDP	; IndexedModel::AddVertex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_texCoord$ = 8						; size = 4
?AddTexCoord@IndexedModel@@QAEXABV?$Vector2@M@@@Z PROC	; IndexedModel::AddTexCoord
; _this$ = ecx

; 64   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 65   : 	m_texCoords.push_back(texCoord);

  0000e	8b 45 08	 mov	 eax, DWORD PTR _texCoord$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	83 c1 20	 add	 ecx, 32			; 00000020H
  00018	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEXABV?$Vector2@M@@@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::push_back

; 66   : }

  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?AddTexCoord@IndexedModel@@QAEXABV?$Vector2@M@@@Z ENDP	; IndexedModel::AddTexCoord
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_normal$ = 8						; size = 4
?AddNormal@IndexedModel@@QAEXABVVector3f@@@Z PROC	; IndexedModel::AddNormal
; _this$ = ecx

; 69   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 70   : 	m_normals.push_back(normal);

  0000e	8b 45 08	 mov	 eax, DWORD PTR _normal$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	83 c1 30	 add	 ecx, 48			; 00000030H
  00018	e8 00 00 00 00	 call	 ?push_back@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEXABVVector3f@@@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::push_back

; 71   : }

  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?AddNormal@IndexedModel@@QAEXABVVector3f@@@Z ENDP	; IndexedModel::AddNormal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_tangent$ = 8						; size = 4
?AddTangent@IndexedModel@@QAEXABVVector3f@@@Z PROC	; IndexedModel::AddTangent
; _this$ = ecx

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 75   : 	m_tangents.push_back(tangent);

  0000e	8b 45 08	 mov	 eax, DWORD PTR _tangent$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	83 c1 40	 add	 ecx, 64			; 00000040H
  00018	e8 00 00 00 00	 call	 ?push_back@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEXABVVector3f@@@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::push_back

; 76   : }

  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?AddTangent@IndexedModel@@QAEXABVVector3f@@@Z ENDP	; IndexedModel::AddTangent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
_TEXT	SEGMENT
$T1 = -24						; size = 4
$T2 = -20						; size = 8
_i$3 = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
?Finalize@IndexedModel@@QAE?AV1@XZ PROC			; IndexedModel::Finalize
; _this$ = ecx

; 79   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00027	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  0002a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0

; 80   : 	if(IsValid())

  00031	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?IsValid@IndexedModel@@QBE_NXZ ; IndexedModel::IsValid
  00039	0f b6 c0	 movzx	 eax, al
  0003c	85 c0		 test	 eax, eax
  0003e	74 1d		 je	 SHORT $LN5@Finalize

; 81   : 	{
; 82   : 		return *this;

  00040	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	51		 push	 ecx
  00044	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00047	e8 00 00 00 00	 call	 ??0IndexedModel@@QAE@ABV0@@Z
  0004c	8b 55 e8	 mov	 edx, DWORD PTR $T1[ebp]
  0004f	83 ca 01	 or	 edx, 1
  00052	89 55 e8	 mov	 DWORD PTR $T1[ebp], edx
  00055	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00058	e9 b0 00 00 00	 jmp	 $LN1@Finalize
$LN5@Finalize:

; 83   : 	}
; 84   : 	
; 85   : 	if(m_texCoords.size() == 0)

  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	83 c1 20	 add	 ecx, 32			; 00000020H
  00063	e8 00 00 00 00	 call	 ?size@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEIXZ ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::size
  00068	85 c0		 test	 eax, eax
  0006a	75 5b		 jne	 SHORT $LN3@Finalize

; 86   : 	{
; 87   : 		for(unsigned int i = m_texCoords.size(); i < m_positions.size(); i++)

  0006c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	83 c1 20	 add	 ecx, 32			; 00000020H
  00072	e8 00 00 00 00	 call	 ?size@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEIXZ ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::size
  00077	89 45 f4	 mov	 DWORD PTR _i$3[ebp], eax
  0007a	eb 09		 jmp	 SHORT $LN4@Finalize
$LN2@Finalize:
  0007c	8b 45 f4	 mov	 eax, DWORD PTR _i$3[ebp]
  0007f	83 c0 01	 add	 eax, 1
  00082	89 45 f4	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@Finalize:
  00085	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	83 c1 10	 add	 ecx, 16			; 00000010H
  0008b	e8 00 00 00 00	 call	 ?size@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEIXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::size
  00090	39 45 f4	 cmp	 DWORD PTR _i$3[ebp], eax
  00093	73 32		 jae	 SHORT $LN3@Finalize

; 88   : 		{
; 89   : 			m_texCoords.push_back(Vector2f(0.0f, 0.0f));

  00095	51		 push	 ecx
  00096	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  0009e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a3	51		 push	 ecx
  000a4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  000ac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b1	8d 4d ec	 lea	 ecx, DWORD PTR $T2[ebp]
  000b4	e8 00 00 00 00	 call	 ??0?$Vector2@M@@QAE@MM@Z ; Vector2<float>::Vector2<float>
  000b9	50		 push	 eax
  000ba	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	83 c1 20	 add	 ecx, 32			; 00000020H
  000c0	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEX$$QAV?$Vector2@M@@@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::push_back

; 90   : 		}

  000c5	eb b5		 jmp	 SHORT $LN2@Finalize
$LN3@Finalize:

; 91   : 	}
; 92   : 	
; 93   : 	if(m_normals.size() == 0)

  000c7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ca	83 c1 30	 add	 ecx, 48			; 00000030H
  000cd	e8 00 00 00 00	 call	 ?size@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEIXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::size
  000d2	85 c0		 test	 eax, eax
  000d4	75 08		 jne	 SHORT $LN7@Finalize

; 94   : 	{
; 95   : 		CalcNormals();

  000d6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d9	e8 00 00 00 00	 call	 ?CalcNormals@IndexedModel@@QAEXXZ ; IndexedModel::CalcNormals
$LN7@Finalize:

; 96   : 	}
; 97   : 	
; 98   : 	if(m_tangents.size() == 0)

  000de	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	83 c1 40	 add	 ecx, 64			; 00000040H
  000e4	e8 00 00 00 00	 call	 ?size@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEIXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::size
  000e9	85 c0		 test	 eax, eax
  000eb	75 08		 jne	 SHORT $LN8@Finalize

; 99   : 	{
; 100  : 		CalcTangents();

  000ed	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f0	e8 00 00 00 00	 call	 ?CalcTangents@IndexedModel@@QAEXXZ ; IndexedModel::CalcTangents
$LN8@Finalize:

; 101  : 	}
; 102  : 	
; 103  : 	return *this;

  000f5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f8	51		 push	 ecx
  000f9	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000fc	e8 00 00 00 00	 call	 ??0IndexedModel@@QAE@ABV0@@Z
  00101	8b 55 e8	 mov	 edx, DWORD PTR $T1[ebp]
  00104	83 ca 01	 or	 edx, 1
  00107	89 55 e8	 mov	 DWORD PTR $T1[ebp], edx
  0010a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@Finalize:

; 104  : }

  0010d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00110	33 cd		 xor	 ecx, ebp
  00112	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00117	83 c4 18	 add	 esp, 24			; 00000018H
  0011a	3b ec		 cmp	 ebp, esp
  0011c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00121	8b e5		 mov	 esp, ebp
  00123	5d		 pop	 ebp
  00124	c2 04 00	 ret	 4
?Finalize@IndexedModel@@QAE?AV1@XZ ENDP			; IndexedModel::Finalize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IndexedModel@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0IndexedModel@@QAE@ABV0@@Z PROC			; IndexedModel::IndexedModel, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0IndexedModel@@QAE@ABV0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00030	50		 push	 eax
  00031	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV01@@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> >
  00039	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00040	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00043	83 c1 10	 add	 ecx, 16			; 00000010H
  00046	51		 push	 ecx
  00047	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	83 c1 10	 add	 ecx, 16			; 00000010H
  0004d	e8 00 00 00 00	 call	 ??0?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAE@ABV01@@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::vector<Vector3f,std::allocator<Vector3f> >
  00052	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00056	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00059	83 c2 20	 add	 edx, 32			; 00000020H
  0005c	52		 push	 edx
  0005d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	83 c1 20	 add	 ecx, 32			; 00000020H
  00063	e8 00 00 00 00	 call	 ??0?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAE@ABV01@@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::vector<Vector2<float>,std::allocator<Vector2<float> > >
  00068	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0006c	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0006f	83 c0 30	 add	 eax, 48			; 00000030H
  00072	50		 push	 eax
  00073	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	83 c1 30	 add	 ecx, 48			; 00000030H
  00079	e8 00 00 00 00	 call	 ??0?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAE@ABV01@@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::vector<Vector3f,std::allocator<Vector3f> >
  0007e	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00082	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00085	83 c1 40	 add	 ecx, 64			; 00000040H
  00088	51		 push	 ecx
  00089	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	83 c1 40	 add	 ecx, 64			; 00000040H
  0008f	e8 00 00 00 00	 call	 ??0?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAE@ABV01@@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::vector<Vector3f,std::allocator<Vector3f> >
  00094	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	83 c4 10	 add	 esp, 16			; 00000010H
  000ac	3b ec		 cmp	 ebp, esp
  000ae	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b3	8b e5		 mov	 esp, ebp
  000b5	5d		 pop	 ebp
  000b6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0IndexedModel@@QAE@ABV0@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >
__unwindfunclet$??0IndexedModel@@QAE@ABV0@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 10	 add	 ecx, 16			; 00000010H
  0000e	e9 00 00 00 00	 jmp	 ??1?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAE@XZ ; std::vector<Vector3f,std::allocator<Vector3f> >::~vector<Vector3f,std::allocator<Vector3f> >
__unwindfunclet$??0IndexedModel@@QAE@ABV0@@Z$2:
  00013	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 20	 add	 ecx, 32			; 00000020H
  00019	e9 00 00 00 00	 jmp	 ??1?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAE@XZ ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::~vector<Vector2<float>,std::allocator<Vector2<float> > >
__unwindfunclet$??0IndexedModel@@QAE@ABV0@@Z$3:
  0001e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	83 c1 30	 add	 ecx, 48			; 00000030H
  00024	e9 00 00 00 00	 jmp	 ??1?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAE@XZ ; std::vector<Vector3f,std::allocator<Vector3f> >::~vector<Vector3f,std::allocator<Vector3f> >
__ehhandler$??0IndexedModel@@QAE@ABV0@@Z:
  00029	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00030	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00033	33 c8		 xor	 ecx, eax
  00035	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0IndexedModel@@QAE@ABV0@@Z
  0003f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0IndexedModel@@QAE@ABV0@@Z ENDP			; IndexedModel::IndexedModel
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_vertIndex0$ = 8					; size = 4
_vertIndex1$ = 12					; size = 4
_vertIndex2$ = 16					; size = 4
?AddFace@IndexedModel@@QAEXIII@Z PROC			; IndexedModel::AddFace
; _this$ = ecx

; 107  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 108  : 	m_indices.push_back(vertIndex0);

  0000e	8d 45 08	 lea	 eax, DWORD PTR _vertIndex0$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?push_back@?$vector@IV?$allocator@I@std@@@std@@QAEXABI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::push_back

; 109  : 	m_indices.push_back(vertIndex1);

  0001a	8d 4d 0c	 lea	 ecx, DWORD PTR _vertIndex1$[ebp]
  0001d	51		 push	 ecx
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?push_back@?$vector@IV?$allocator@I@std@@@std@@QAEXABI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::push_back

; 110  : 	m_indices.push_back(vertIndex2);

  00026	8d 55 10	 lea	 edx, DWORD PTR _vertIndex2$[ebp]
  00029	52		 push	 edx
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?push_back@?$vector@IV?$allocator@I@std@@@std@@QAEXABI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::push_back

; 111  : }

  00032	83 c4 04	 add	 esp, 4
  00035	3b ec		 cmp	 ebp, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 0c 00	 ret	 12			; 0000000cH
?AddFace@IndexedModel@@QAEXIII@Z ENDP			; IndexedModel::AddFace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
_TEXT	SEGMENT
$T1 = -164						; size = 12
_i$2 = -152						; size = 4
$T3 = -148						; size = 12
$T4 = -136						; size = 12
$T5 = -124						; size = 12
$T6 = -112						; size = 12
_normal$7 = -96						; size = 12
_v2$8 = -76						; size = 12
_v1$9 = -56						; size = 12
_i2$10 = -40						; size = 4
_i1$11 = -36						; size = 4
_i0$12 = -32						; size = 4
_i$13 = -28						; size = 4
$T14 = -24						; size = 12
_i$15 = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?CalcNormals@IndexedModel@@QAEXXZ PROC			; IndexedModel::CalcNormals
; _this$ = ecx

; 114  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	51		 push	 ecx
  0000c	8d bd 5c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-164]
  00012	b9 29 00 00 00	 mov	 ecx, 41			; 00000029H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	59		 pop	 ecx
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c5		 xor	 eax, ebp
  00026	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00029	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 	m_normals.clear();

  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 c1 30	 add	 ecx, 48			; 00000030H
  00032	e8 00 00 00 00	 call	 ?clear@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEXXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::clear

; 116  : 	m_normals.reserve(m_positions.size());

  00037	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	83 c1 10	 add	 ecx, 16			; 00000010H
  0003d	e8 00 00 00 00	 call	 ?size@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEIXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::size
  00042	50		 push	 eax
  00043	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	83 c1 30	 add	 ecx, 48			; 00000030H
  00049	e8 00 00 00 00	 call	 ?reserve@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEXI@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::reserve

; 117  : 	
; 118  : 	for(unsigned int i = 0; i < m_positions.size(); i++)

  0004e	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$15[ebp], 0
  00055	eb 09		 jmp	 SHORT $LN4@CalcNormal
$LN2@CalcNormal:
  00057	8b 45 f4	 mov	 eax, DWORD PTR _i$15[ebp]
  0005a	83 c0 01	 add	 eax, 1
  0005d	89 45 f4	 mov	 DWORD PTR _i$15[ebp], eax
$LN4@CalcNormal:
  00060	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 10	 add	 ecx, 16			; 00000010H
  00066	e8 00 00 00 00	 call	 ?size@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEIXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::size
  0006b	39 45 f4	 cmp	 DWORD PTR _i$15[ebp], eax
  0006e	73 40		 jae	 SHORT $LN3@CalcNormal

; 119  : 		m_normals.push_back(Vector3f(0,0,0));

  00070	51		 push	 ecx
  00071	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00079	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007e	51		 push	 ecx
  0007f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00087	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008c	51		 push	 ecx
  0008d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00095	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0009a	8d 4d e8	 lea	 ecx, DWORD PTR $T14[ebp]
  0009d	e8 00 00 00 00	 call	 ??0Vector3f@@QAE@MMM@Z	; Vector3f::Vector3f
  000a2	50		 push	 eax
  000a3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	83 c1 30	 add	 ecx, 48			; 00000030H
  000a9	e8 00 00 00 00	 call	 ?push_back@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEX$$QAVVector3f@@@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::push_back
  000ae	eb a7		 jmp	 SHORT $LN2@CalcNormal
$LN3@CalcNormal:

; 120  : 
; 121  : 	for(unsigned int i = 0; i < m_indices.size(); i += 3)

  000b0	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _i$13[ebp], 0
  000b7	eb 09		 jmp	 SHORT $LN7@CalcNormal
$LN5@CalcNormal:
  000b9	8b 4d e4	 mov	 ecx, DWORD PTR _i$13[ebp]
  000bc	83 c1 03	 add	 ecx, 3
  000bf	89 4d e4	 mov	 DWORD PTR _i$13[ebp], ecx
$LN7@CalcNormal:
  000c2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	e8 00 00 00 00	 call	 ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::size
  000ca	39 45 e4	 cmp	 DWORD PTR _i$13[ebp], eax
  000cd	0f 83 70 01 00
	00		 jae	 $LN6@CalcNormal

; 122  : 	{
; 123  : 		int i0 = m_indices[i];

  000d3	8b 55 e4	 mov	 edx, DWORD PTR _i$13[ebp]
  000d6	52		 push	 edx
  000d7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	e8 00 00 00 00	 call	 ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::operator[]
  000df	8b 00		 mov	 eax, DWORD PTR [eax]
  000e1	89 45 e0	 mov	 DWORD PTR _i0$12[ebp], eax

; 124  : 		int i1 = m_indices[i + 1];

  000e4	8b 4d e4	 mov	 ecx, DWORD PTR _i$13[ebp]
  000e7	83 c1 01	 add	 ecx, 1
  000ea	51		 push	 ecx
  000eb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ee	e8 00 00 00 00	 call	 ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::operator[]
  000f3	8b 10		 mov	 edx, DWORD PTR [eax]
  000f5	89 55 dc	 mov	 DWORD PTR _i1$11[ebp], edx

; 125  : 		int i2 = m_indices[i + 2];

  000f8	8b 45 e4	 mov	 eax, DWORD PTR _i$13[ebp]
  000fb	83 c0 02	 add	 eax, 2
  000fe	50		 push	 eax
  000ff	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00102	e8 00 00 00 00	 call	 ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::operator[]
  00107	8b 08		 mov	 ecx, DWORD PTR [eax]
  00109	89 4d d8	 mov	 DWORD PTR _i2$10[ebp], ecx

; 126  : 			
; 127  : 		Vector3f v1 = m_positions[i1] - m_positions[i0];

  0010c	8b 55 e0	 mov	 edx, DWORD PTR _i0$12[ebp]
  0010f	52		 push	 edx
  00110	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00113	83 c1 10	 add	 ecx, 16			; 00000010H
  00116	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  0011b	50		 push	 eax
  0011c	8d 45 c8	 lea	 eax, DWORD PTR _v1$9[ebp]
  0011f	50		 push	 eax
  00120	8b 4d dc	 mov	 ecx, DWORD PTR _i1$11[ebp]
  00123	51		 push	 ecx
  00124	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00127	83 c1 10	 add	 ecx, 16			; 00000010H
  0012a	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  0012f	8b c8		 mov	 ecx, eax
  00131	e8 00 00 00 00	 call	 ??GVector3f@@QBE?AV0@ABV0@@Z ; Vector3f::operator-

; 128  : 		Vector3f v2 = m_positions[i2] - m_positions[i0];

  00136	8b 55 e0	 mov	 edx, DWORD PTR _i0$12[ebp]
  00139	52		 push	 edx
  0013a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0013d	83 c1 10	 add	 ecx, 16			; 00000010H
  00140	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  00145	50		 push	 eax
  00146	8d 45 b4	 lea	 eax, DWORD PTR _v2$8[ebp]
  00149	50		 push	 eax
  0014a	8b 4d d8	 mov	 ecx, DWORD PTR _i2$10[ebp]
  0014d	51		 push	 ecx
  0014e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00151	83 c1 10	 add	 ecx, 16			; 00000010H
  00154	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  00159	8b c8		 mov	 ecx, eax
  0015b	e8 00 00 00 00	 call	 ??GVector3f@@QBE?AV0@ABV0@@Z ; Vector3f::operator-

; 129  : 		
; 130  : 		Vector3f normal = v1.Cross(v2).Normalized();

  00160	8d 55 a0	 lea	 edx, DWORD PTR _normal$7[ebp]
  00163	52		 push	 edx
  00164	8d 45 b4	 lea	 eax, DWORD PTR _v2$8[ebp]
  00167	50		 push	 eax
  00168	8d 4d 90	 lea	 ecx, DWORD PTR $T6[ebp]
  0016b	51		 push	 ecx
  0016c	8d 4d c8	 lea	 ecx, DWORD PTR _v1$9[ebp]
  0016f	e8 00 00 00 00	 call	 ?Cross@Vector3f@@QBE?AV1@ABV1@@Z ; Vector3f::Cross
  00174	8b c8		 mov	 ecx, eax
  00176	e8 00 00 00 00	 call	 ?Normalized@Vector3f@@QBE?AV1@XZ ; Vector3f::Normalized

; 131  : 		
; 132  : 		m_normals[i0] = m_normals[i0] + normal;

  0017b	8d 55 a0	 lea	 edx, DWORD PTR _normal$7[ebp]
  0017e	52		 push	 edx
  0017f	8d 45 84	 lea	 eax, DWORD PTR $T5[ebp]
  00182	50		 push	 eax
  00183	8b 4d e0	 mov	 ecx, DWORD PTR _i0$12[ebp]
  00186	51		 push	 ecx
  00187	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0018a	83 c1 30	 add	 ecx, 48			; 00000030H
  0018d	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  00192	8b c8		 mov	 ecx, eax
  00194	e8 00 00 00 00	 call	 ??HVector3f@@QBE?AV0@ABV0@@Z ; Vector3f::operator+
  00199	8b f0		 mov	 esi, eax
  0019b	8b 55 e0	 mov	 edx, DWORD PTR _i0$12[ebp]
  0019e	52		 push	 edx
  0019f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001a2	83 c1 30	 add	 ecx, 48			; 00000030H
  001a5	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  001aa	8b 0e		 mov	 ecx, DWORD PTR [esi]
  001ac	89 08		 mov	 DWORD PTR [eax], ecx
  001ae	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  001b1	89 50 04	 mov	 DWORD PTR [eax+4], edx
  001b4	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  001b7	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 133  : 		m_normals[i1] = m_normals[i1] + normal;

  001ba	8d 55 a0	 lea	 edx, DWORD PTR _normal$7[ebp]
  001bd	52		 push	 edx
  001be	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR $T4[ebp]
  001c4	50		 push	 eax
  001c5	8b 4d dc	 mov	 ecx, DWORD PTR _i1$11[ebp]
  001c8	51		 push	 ecx
  001c9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001cc	83 c1 30	 add	 ecx, 48			; 00000030H
  001cf	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  001d4	8b c8		 mov	 ecx, eax
  001d6	e8 00 00 00 00	 call	 ??HVector3f@@QBE?AV0@ABV0@@Z ; Vector3f::operator+
  001db	8b f0		 mov	 esi, eax
  001dd	8b 55 dc	 mov	 edx, DWORD PTR _i1$11[ebp]
  001e0	52		 push	 edx
  001e1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001e4	83 c1 30	 add	 ecx, 48			; 00000030H
  001e7	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  001ec	8b 0e		 mov	 ecx, DWORD PTR [esi]
  001ee	89 08		 mov	 DWORD PTR [eax], ecx
  001f0	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  001f3	89 50 04	 mov	 DWORD PTR [eax+4], edx
  001f6	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  001f9	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 134  : 		m_normals[i2] = m_normals[i2] + normal;

  001fc	8d 55 a0	 lea	 edx, DWORD PTR _normal$7[ebp]
  001ff	52		 push	 edx
  00200	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  00206	50		 push	 eax
  00207	8b 4d d8	 mov	 ecx, DWORD PTR _i2$10[ebp]
  0020a	51		 push	 ecx
  0020b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0020e	83 c1 30	 add	 ecx, 48			; 00000030H
  00211	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  00216	8b c8		 mov	 ecx, eax
  00218	e8 00 00 00 00	 call	 ??HVector3f@@QBE?AV0@ABV0@@Z ; Vector3f::operator+
  0021d	8b f0		 mov	 esi, eax
  0021f	8b 55 d8	 mov	 edx, DWORD PTR _i2$10[ebp]
  00222	52		 push	 edx
  00223	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00226	83 c1 30	 add	 ecx, 48			; 00000030H
  00229	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  0022e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00230	89 08		 mov	 DWORD PTR [eax], ecx
  00232	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00235	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00238	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0023b	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 135  : 	}

  0023e	e9 76 fe ff ff	 jmp	 $LN5@CalcNormal
$LN6@CalcNormal:

; 136  : 	
; 137  : 	for(unsigned int i = 0; i < m_normals.size(); i++)

  00243	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$2[ebp], 0
  0024d	eb 0f		 jmp	 SHORT $LN10@CalcNormal
$LN8@CalcNormal:
  0024f	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR _i$2[ebp]
  00255	83 c2 01	 add	 edx, 1
  00258	89 95 68 ff ff
	ff		 mov	 DWORD PTR _i$2[ebp], edx
$LN10@CalcNormal:
  0025e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00261	83 c1 30	 add	 ecx, 48			; 00000030H
  00264	e8 00 00 00 00	 call	 ?size@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEIXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::size
  00269	39 85 68 ff ff
	ff		 cmp	 DWORD PTR _i$2[ebp], eax
  0026f	73 46		 jae	 SHORT $LN9@CalcNormal

; 138  : 		m_normals[i] = m_normals[i].Normalized();

  00271	8d 85 5c ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00277	50		 push	 eax
  00278	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _i$2[ebp]
  0027e	51		 push	 ecx
  0027f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00282	83 c1 30	 add	 ecx, 48			; 00000030H
  00285	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  0028a	8b c8		 mov	 ecx, eax
  0028c	e8 00 00 00 00	 call	 ?Normalized@Vector3f@@QBE?AV1@XZ ; Vector3f::Normalized
  00291	8b f0		 mov	 esi, eax
  00293	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR _i$2[ebp]
  00299	52		 push	 edx
  0029a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0029d	83 c1 30	 add	 ecx, 48			; 00000030H
  002a0	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  002a5	8b 0e		 mov	 ecx, DWORD PTR [esi]
  002a7	89 08		 mov	 DWORD PTR [eax], ecx
  002a9	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  002ac	89 50 04	 mov	 DWORD PTR [eax+4], edx
  002af	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  002b2	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  002b5	eb 98		 jmp	 SHORT $LN8@CalcNormal
$LN9@CalcNormal:

; 139  : }

  002b7	52		 push	 edx
  002b8	8b cd		 mov	 ecx, ebp
  002ba	50		 push	 eax
  002bb	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN16@CalcNormal
  002c1	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  002c6	58		 pop	 eax
  002c7	5a		 pop	 edx
  002c8	5f		 pop	 edi
  002c9	5e		 pop	 esi
  002ca	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002cd	33 cd		 xor	 ecx, ebp
  002cf	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002d4	81 c4 a4 00 00
	00		 add	 esp, 164		; 000000a4H
  002da	3b ec		 cmp	 ebp, esp
  002dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002e1	8b e5		 mov	 esp, ebp
  002e3	5d		 pop	 ebp
  002e4	c3		 ret	 0
  002e5	0f 1f 00	 npad	 3
$LN16@CalcNormal:
  002e8	03 00 00 00	 DD	 3
  002ec	00 00 00 00	 DD	 $LN15@CalcNormal
$LN15@CalcNormal:
  002f0	c8 ff ff ff	 DD	 -56			; ffffffc8H
  002f4	0c 00 00 00	 DD	 12			; 0000000cH
  002f8	00 00 00 00	 DD	 $LN12@CalcNormal
  002fc	b4 ff ff ff	 DD	 -76			; ffffffb4H
  00300	0c 00 00 00	 DD	 12			; 0000000cH
  00304	00 00 00 00	 DD	 $LN13@CalcNormal
  00308	a0 ff ff ff	 DD	 -96			; ffffffa0H
  0030c	0c 00 00 00	 DD	 12			; 0000000cH
  00310	00 00 00 00	 DD	 $LN14@CalcNormal
$LN14@CalcNormal:
  00314	6e		 DB	 110			; 0000006eH
  00315	6f		 DB	 111			; 0000006fH
  00316	72		 DB	 114			; 00000072H
  00317	6d		 DB	 109			; 0000006dH
  00318	61		 DB	 97			; 00000061H
  00319	6c		 DB	 108			; 0000006cH
  0031a	00		 DB	 0
$LN13@CalcNormal:
  0031b	76		 DB	 118			; 00000076H
  0031c	32		 DB	 50			; 00000032H
  0031d	00		 DB	 0
$LN12@CalcNormal:
  0031e	76		 DB	 118			; 00000076H
  0031f	31		 DB	 49			; 00000031H
  00320	00		 DB	 0
?CalcNormals@IndexedModel@@QAEXXZ ENDP			; IndexedModel::CalcNormals
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
_TEXT	SEGMENT
tv441 = -228						; size = 4
tv492 = -224						; size = 4
tv436 = -220						; size = 4
tv429 = -216						; size = 4
tv490 = -212						; size = 4
tv424 = -208						; size = 4
tv417 = -204						; size = 4
tv488 = -200						; size = 4
tv412 = -196						; size = 4
tv215 = -192						; size = 4
tv394 = -188						; size = 4
tv486 = -184						; size = 4
tv387 = -180						; size = 4
tv380 = -176						; size = 4
tv484 = -172						; size = 4
tv373 = -168						; size = 4
tv366 = -164						; size = 4
tv482 = -160						; size = 4
tv359 = -156						; size = 4
tv352 = -152						; size = 4
tv480 = -148						; size = 4
tv345 = -144						; size = 4
$T1 = -140						; size = 12
_i$2 = -128						; size = 4
_tangent$3 = -120					; size = 12
_f$4 = -104						; size = 4
_dividend$5 = -100					; size = 4
_deltaV2$6 = -96					; size = 4
_deltaV1$7 = -92					; size = 4
_deltaU2$8 = -88					; size = 4
_deltaU1$9 = -84					; size = 4
_edge2$10 = -76						; size = 12
_edge1$11 = -56						; size = 12
_i2$12 = -40						; size = 4
_i1$13 = -36						; size = 4
_i0$14 = -32						; size = 4
_i$15 = -28						; size = 4
$T16 = -24						; size = 12
_i$17 = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?CalcTangents@IndexedModel@@QAEXXZ PROC			; IndexedModel::CalcTangents
; _this$ = ecx

; 142  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	51		 push	 ecx
  0000c	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00012	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	59		 pop	 ecx
  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00024	33 c5		 xor	 eax, ebp
  00026	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00029	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 143  : 	m_tangents.clear();

  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 c1 40	 add	 ecx, 64			; 00000040H
  00032	e8 00 00 00 00	 call	 ?clear@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEXXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::clear

; 144  : 	m_tangents.reserve(m_positions.size());

  00037	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	83 c1 10	 add	 ecx, 16			; 00000010H
  0003d	e8 00 00 00 00	 call	 ?size@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEIXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::size
  00042	50		 push	 eax
  00043	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	83 c1 40	 add	 ecx, 64			; 00000040H
  00049	e8 00 00 00 00	 call	 ?reserve@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEXI@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::reserve

; 145  : 	
; 146  : 	for(unsigned int i = 0; i < m_positions.size(); i++)

  0004e	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$17[ebp], 0
  00055	eb 09		 jmp	 SHORT $LN4@CalcTangen
$LN2@CalcTangen:
  00057	8b 45 f4	 mov	 eax, DWORD PTR _i$17[ebp]
  0005a	83 c0 01	 add	 eax, 1
  0005d	89 45 f4	 mov	 DWORD PTR _i$17[ebp], eax
$LN4@CalcTangen:
  00060	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 10	 add	 ecx, 16			; 00000010H
  00066	e8 00 00 00 00	 call	 ?size@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEIXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::size
  0006b	39 45 f4	 cmp	 DWORD PTR _i$17[ebp], eax
  0006e	73 40		 jae	 SHORT $LN3@CalcTangen

; 147  : 		m_tangents.push_back(Vector3f(0,0,0));

  00070	51		 push	 ecx
  00071	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00079	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007e	51		 push	 ecx
  0007f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00087	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008c	51		 push	 ecx
  0008d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00095	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0009a	8d 4d e8	 lea	 ecx, DWORD PTR $T16[ebp]
  0009d	e8 00 00 00 00	 call	 ??0Vector3f@@QAE@MMM@Z	; Vector3f::Vector3f
  000a2	50		 push	 eax
  000a3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	83 c1 40	 add	 ecx, 64			; 00000040H
  000a9	e8 00 00 00 00	 call	 ?push_back@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEX$$QAVVector3f@@@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::push_back
  000ae	eb a7		 jmp	 SHORT $LN2@CalcTangen
$LN3@CalcTangen:

; 148  : 		
; 149  : 	for(unsigned int i = 0; i < m_indices.size(); i += 3)

  000b0	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _i$15[ebp], 0
  000b7	eb 09		 jmp	 SHORT $LN7@CalcTangen
$LN5@CalcTangen:
  000b9	8b 4d e4	 mov	 ecx, DWORD PTR _i$15[ebp]
  000bc	83 c1 03	 add	 ecx, 3
  000bf	89 4d e4	 mov	 DWORD PTR _i$15[ebp], ecx
$LN7@CalcTangen:
  000c2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	e8 00 00 00 00	 call	 ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::size
  000ca	39 45 e4	 cmp	 DWORD PTR _i$15[ebp], eax
  000cd	0f 83 00 04 00
	00		 jae	 $LN6@CalcTangen

; 150  :     {
; 151  : 		int i0 = m_indices[i];

  000d3	8b 55 e4	 mov	 edx, DWORD PTR _i$15[ebp]
  000d6	52		 push	 edx
  000d7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	e8 00 00 00 00	 call	 ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::operator[]
  000df	8b 00		 mov	 eax, DWORD PTR [eax]
  000e1	89 45 e0	 mov	 DWORD PTR _i0$14[ebp], eax

; 152  : 		int i1 = m_indices[i + 1];

  000e4	8b 4d e4	 mov	 ecx, DWORD PTR _i$15[ebp]
  000e7	83 c1 01	 add	 ecx, 1
  000ea	51		 push	 ecx
  000eb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ee	e8 00 00 00 00	 call	 ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::operator[]
  000f3	8b 10		 mov	 edx, DWORD PTR [eax]
  000f5	89 55 dc	 mov	 DWORD PTR _i1$13[ebp], edx

; 153  : 		int i2 = m_indices[i + 2];

  000f8	8b 45 e4	 mov	 eax, DWORD PTR _i$15[ebp]
  000fb	83 c0 02	 add	 eax, 2
  000fe	50		 push	 eax
  000ff	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00102	e8 00 00 00 00	 call	 ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::operator[]
  00107	8b 08		 mov	 ecx, DWORD PTR [eax]
  00109	89 4d d8	 mov	 DWORD PTR _i2$12[ebp], ecx

; 154  :     
; 155  :         Vector3f edge1 = m_positions[i1] - m_positions[i0];

  0010c	8b 55 e0	 mov	 edx, DWORD PTR _i0$14[ebp]
  0010f	52		 push	 edx
  00110	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00113	83 c1 10	 add	 ecx, 16			; 00000010H
  00116	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  0011b	50		 push	 eax
  0011c	8d 45 c8	 lea	 eax, DWORD PTR _edge1$11[ebp]
  0011f	50		 push	 eax
  00120	8b 4d dc	 mov	 ecx, DWORD PTR _i1$13[ebp]
  00123	51		 push	 ecx
  00124	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00127	83 c1 10	 add	 ecx, 16			; 00000010H
  0012a	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  0012f	8b c8		 mov	 ecx, eax
  00131	e8 00 00 00 00	 call	 ??GVector3f@@QBE?AV0@ABV0@@Z ; Vector3f::operator-

; 156  :         Vector3f edge2 = m_positions[i2] - m_positions[i0];

  00136	8b 55 e0	 mov	 edx, DWORD PTR _i0$14[ebp]
  00139	52		 push	 edx
  0013a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0013d	83 c1 10	 add	 ecx, 16			; 00000010H
  00140	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  00145	50		 push	 eax
  00146	8d 45 b4	 lea	 eax, DWORD PTR _edge2$10[ebp]
  00149	50		 push	 eax
  0014a	8b 4d d8	 mov	 ecx, DWORD PTR _i2$12[ebp]
  0014d	51		 push	 ecx
  0014e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00151	83 c1 10	 add	 ecx, 16			; 00000010H
  00154	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  00159	8b c8		 mov	 ecx, eax
  0015b	e8 00 00 00 00	 call	 ??GVector3f@@QBE?AV0@ABV0@@Z ; Vector3f::operator-

; 157  :         
; 158  :         float deltaU1 = m_texCoords[i1].GetX() - m_texCoords[i0].GetX();

  00160	8b 55 dc	 mov	 edx, DWORD PTR _i1$13[ebp]
  00163	52		 push	 edx
  00164	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00167	83 c1 20	 add	 ecx, 32			; 00000020H
  0016a	e8 00 00 00 00	 call	 ??A?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEAAV?$Vector2@M@@I@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::operator[]
  0016f	8b c8		 mov	 ecx, eax
  00171	e8 00 00 00 00	 call	 ?GetX@?$Vector2@M@@QBEMXZ ; Vector2<float>::GetX
  00176	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv345[ebp]
  0017c	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv345[ebp]
  00184	8b 45 e0	 mov	 eax, DWORD PTR _i0$14[ebp]
  00187	50		 push	 eax
  00188	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0018b	83 c1 20	 add	 ecx, 32			; 00000020H
  0018e	f3 0f 11 85 6c
	ff ff ff	 movss	 DWORD PTR tv480[ebp], xmm0
  00196	e8 00 00 00 00	 call	 ??A?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEAAV?$Vector2@M@@I@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::operator[]
  0019b	8b c8		 mov	 ecx, eax
  0019d	e8 00 00 00 00	 call	 ?GetX@?$Vector2@M@@QBEMXZ ; Vector2<float>::GetX
  001a2	d9 9d 68 ff ff
	ff		 fstp	 DWORD PTR tv352[ebp]
  001a8	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR tv480[ebp]
  001b0	f3 0f 5c 85 68
	ff ff ff	 subss	 xmm0, DWORD PTR tv352[ebp]
  001b8	f3 0f 11 45 ac	 movss	 DWORD PTR _deltaU1$9[ebp], xmm0

; 159  :         float deltaU2 = m_texCoords[i2].GetX() - m_texCoords[i0].GetX();

  001bd	8b 4d d8	 mov	 ecx, DWORD PTR _i2$12[ebp]
  001c0	51		 push	 ecx
  001c1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001c4	83 c1 20	 add	 ecx, 32			; 00000020H
  001c7	e8 00 00 00 00	 call	 ??A?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEAAV?$Vector2@M@@I@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::operator[]
  001cc	8b c8		 mov	 ecx, eax
  001ce	e8 00 00 00 00	 call	 ?GetX@?$Vector2@M@@QBEMXZ ; Vector2<float>::GetX
  001d3	d9 9d 64 ff ff
	ff		 fstp	 DWORD PTR tv359[ebp]
  001d9	f3 0f 10 85 64
	ff ff ff	 movss	 xmm0, DWORD PTR tv359[ebp]
  001e1	8b 55 e0	 mov	 edx, DWORD PTR _i0$14[ebp]
  001e4	52		 push	 edx
  001e5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001e8	83 c1 20	 add	 ecx, 32			; 00000020H
  001eb	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR tv482[ebp], xmm0
  001f3	e8 00 00 00 00	 call	 ??A?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEAAV?$Vector2@M@@I@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::operator[]
  001f8	8b c8		 mov	 ecx, eax
  001fa	e8 00 00 00 00	 call	 ?GetX@?$Vector2@M@@QBEMXZ ; Vector2<float>::GetX
  001ff	d9 9d 5c ff ff
	ff		 fstp	 DWORD PTR tv366[ebp]
  00205	f3 0f 10 85 60
	ff ff ff	 movss	 xmm0, DWORD PTR tv482[ebp]
  0020d	f3 0f 5c 85 5c
	ff ff ff	 subss	 xmm0, DWORD PTR tv366[ebp]
  00215	f3 0f 11 45 a8	 movss	 DWORD PTR _deltaU2$8[ebp], xmm0

; 160  :         float deltaV1 = m_texCoords[i1].GetY() - m_texCoords[i0].GetY();

  0021a	8b 45 dc	 mov	 eax, DWORD PTR _i1$13[ebp]
  0021d	50		 push	 eax
  0021e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00221	83 c1 20	 add	 ecx, 32			; 00000020H
  00224	e8 00 00 00 00	 call	 ??A?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEAAV?$Vector2@M@@I@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::operator[]
  00229	8b c8		 mov	 ecx, eax
  0022b	e8 00 00 00 00	 call	 ?GetY@?$Vector2@M@@QBEMXZ ; Vector2<float>::GetY
  00230	d9 9d 58 ff ff
	ff		 fstp	 DWORD PTR tv373[ebp]
  00236	f3 0f 10 85 58
	ff ff ff	 movss	 xmm0, DWORD PTR tv373[ebp]
  0023e	8b 4d e0	 mov	 ecx, DWORD PTR _i0$14[ebp]
  00241	51		 push	 ecx
  00242	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00245	83 c1 20	 add	 ecx, 32			; 00000020H
  00248	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR tv484[ebp], xmm0
  00250	e8 00 00 00 00	 call	 ??A?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEAAV?$Vector2@M@@I@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::operator[]
  00255	8b c8		 mov	 ecx, eax
  00257	e8 00 00 00 00	 call	 ?GetY@?$Vector2@M@@QBEMXZ ; Vector2<float>::GetY
  0025c	d9 9d 50 ff ff
	ff		 fstp	 DWORD PTR tv380[ebp]
  00262	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR tv484[ebp]
  0026a	f3 0f 5c 85 50
	ff ff ff	 subss	 xmm0, DWORD PTR tv380[ebp]
  00272	f3 0f 11 45 a4	 movss	 DWORD PTR _deltaV1$7[ebp], xmm0

; 161  :         float deltaV2 = m_texCoords[i2].GetY() - m_texCoords[i0].GetY();

  00277	8b 55 d8	 mov	 edx, DWORD PTR _i2$12[ebp]
  0027a	52		 push	 edx
  0027b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0027e	83 c1 20	 add	 ecx, 32			; 00000020H
  00281	e8 00 00 00 00	 call	 ??A?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEAAV?$Vector2@M@@I@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::operator[]
  00286	8b c8		 mov	 ecx, eax
  00288	e8 00 00 00 00	 call	 ?GetY@?$Vector2@M@@QBEMXZ ; Vector2<float>::GetY
  0028d	d9 9d 4c ff ff
	ff		 fstp	 DWORD PTR tv387[ebp]
  00293	f3 0f 10 85 4c
	ff ff ff	 movss	 xmm0, DWORD PTR tv387[ebp]
  0029b	8b 45 e0	 mov	 eax, DWORD PTR _i0$14[ebp]
  0029e	50		 push	 eax
  0029f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002a2	83 c1 20	 add	 ecx, 32			; 00000020H
  002a5	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR tv486[ebp], xmm0
  002ad	e8 00 00 00 00	 call	 ??A?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEAAV?$Vector2@M@@I@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::operator[]
  002b2	8b c8		 mov	 ecx, eax
  002b4	e8 00 00 00 00	 call	 ?GetY@?$Vector2@M@@QBEMXZ ; Vector2<float>::GetY
  002b9	d9 9d 44 ff ff
	ff		 fstp	 DWORD PTR tv394[ebp]
  002bf	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR tv486[ebp]
  002c7	f3 0f 5c 85 44
	ff ff ff	 subss	 xmm0, DWORD PTR tv394[ebp]
  002cf	f3 0f 11 45 a0	 movss	 DWORD PTR _deltaV2$6[ebp], xmm0

; 162  :         
; 163  :         float dividend = (deltaU1 * deltaV2 - deltaU2 * deltaV1);

  002d4	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _deltaU1$9[ebp]
  002d9	f3 0f 59 45 a0	 mulss	 xmm0, DWORD PTR _deltaV2$6[ebp]
  002de	f3 0f 10 4d a8	 movss	 xmm1, DWORD PTR _deltaU2$8[ebp]
  002e3	f3 0f 59 4d a4	 mulss	 xmm1, DWORD PTR _deltaV1$7[ebp]
  002e8	f3 0f 5c c1	 subss	 xmm0, xmm1
  002ec	f3 0f 11 45 9c	 movss	 DWORD PTR _dividend$5[ebp], xmm0

; 164  :         float f = dividend == 0.0f ? 0.0f : 1.0f/dividend;

  002f1	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _dividend$5[ebp]
  002f6	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  002fd	9f		 lahf
  002fe	f6 c4 44	 test	 ah, 68			; 00000044H
  00301	7a 12		 jp	 SHORT $LN12@CalcTangen
  00303	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  0030b	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR tv215[ebp], xmm0
  00313	eb 15		 jmp	 SHORT $LN13@CalcTangen
$LN12@CalcTangen:
  00315	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0031d	f3 0f 5e 45 9c	 divss	 xmm0, DWORD PTR _dividend$5[ebp]
  00322	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR tv215[ebp], xmm0
$LN13@CalcTangen:
  0032a	f3 0f 10 85 40
	ff ff ff	 movss	 xmm0, DWORD PTR tv215[ebp]
  00332	f3 0f 11 45 98	 movss	 DWORD PTR _f$4[ebp], xmm0

; 165  :         
; 166  :         Vector3f tangent = Vector3f(0,0,0);

  00337	51		 push	 ecx
  00338	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00340	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00345	51		 push	 ecx
  00346	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  0034e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00353	51		 push	 ecx
  00354	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  0035c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00361	8d 4d 88	 lea	 ecx, DWORD PTR _tangent$3[ebp]
  00364	e8 00 00 00 00	 call	 ??0Vector3f@@QAE@MMM@Z	; Vector3f::Vector3f

; 167  :         
; 168  :         tangent.SetX(f * (deltaV2 * edge1.GetX() - deltaV1 * edge2.GetX()));

  00369	8d 4d c8	 lea	 ecx, DWORD PTR _edge1$11[ebp]
  0036c	e8 00 00 00 00	 call	 ?GetX@Vector3f@@QBEMXZ	; Vector3f::GetX
  00371	d9 9d 3c ff ff
	ff		 fstp	 DWORD PTR tv412[ebp]
  00377	f3 0f 10 85 3c
	ff ff ff	 movss	 xmm0, DWORD PTR tv412[ebp]
  0037f	f3 0f 59 45 a0	 mulss	 xmm0, DWORD PTR _deltaV2$6[ebp]
  00384	8d 4d b4	 lea	 ecx, DWORD PTR _edge2$10[ebp]
  00387	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR tv488[ebp], xmm0
  0038f	e8 00 00 00 00	 call	 ?GetX@Vector3f@@QBEMXZ	; Vector3f::GetX
  00394	d9 9d 34 ff ff
	ff		 fstp	 DWORD PTR tv417[ebp]
  0039a	f3 0f 10 85 34
	ff ff ff	 movss	 xmm0, DWORD PTR tv417[ebp]
  003a2	f3 0f 59 45 a4	 mulss	 xmm0, DWORD PTR _deltaV1$7[ebp]
  003a7	f3 0f 10 8d 38
	ff ff ff	 movss	 xmm1, DWORD PTR tv488[ebp]
  003af	f3 0f 5c c8	 subss	 xmm1, xmm0
  003b3	f3 0f 59 4d 98	 mulss	 xmm1, DWORD PTR _f$4[ebp]
  003b8	51		 push	 ecx
  003b9	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  003be	8d 4d 88	 lea	 ecx, DWORD PTR _tangent$3[ebp]
  003c1	e8 00 00 00 00	 call	 ?SetX@Vector3f@@QAEXM@Z	; Vector3f::SetX

; 169  :         tangent.SetY(f * (deltaV2 * edge1.GetY() - deltaV1 * edge2.GetY()));

  003c6	8d 4d c8	 lea	 ecx, DWORD PTR _edge1$11[ebp]
  003c9	e8 00 00 00 00	 call	 ?GetY@Vector3f@@QBEMXZ	; Vector3f::GetY
  003ce	d9 9d 30 ff ff
	ff		 fstp	 DWORD PTR tv424[ebp]
  003d4	f3 0f 10 85 30
	ff ff ff	 movss	 xmm0, DWORD PTR tv424[ebp]
  003dc	f3 0f 59 45 a0	 mulss	 xmm0, DWORD PTR _deltaV2$6[ebp]
  003e1	8d 4d b4	 lea	 ecx, DWORD PTR _edge2$10[ebp]
  003e4	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR tv490[ebp], xmm0
  003ec	e8 00 00 00 00	 call	 ?GetY@Vector3f@@QBEMXZ	; Vector3f::GetY
  003f1	d9 9d 28 ff ff
	ff		 fstp	 DWORD PTR tv429[ebp]
  003f7	f3 0f 10 85 28
	ff ff ff	 movss	 xmm0, DWORD PTR tv429[ebp]
  003ff	f3 0f 59 45 a4	 mulss	 xmm0, DWORD PTR _deltaV1$7[ebp]
  00404	f3 0f 10 8d 2c
	ff ff ff	 movss	 xmm1, DWORD PTR tv490[ebp]
  0040c	f3 0f 5c c8	 subss	 xmm1, xmm0
  00410	f3 0f 59 4d 98	 mulss	 xmm1, DWORD PTR _f$4[ebp]
  00415	51		 push	 ecx
  00416	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  0041b	8d 4d 88	 lea	 ecx, DWORD PTR _tangent$3[ebp]
  0041e	e8 00 00 00 00	 call	 ?SetY@Vector3f@@QAEXM@Z	; Vector3f::SetY

; 170  :         tangent.SetZ(f * (deltaV2 * edge1.GetZ() - deltaV1 * edge2.GetZ()));

  00423	8d 4d c8	 lea	 ecx, DWORD PTR _edge1$11[ebp]
  00426	e8 00 00 00 00	 call	 ?GetZ@Vector3f@@QBEMXZ	; Vector3f::GetZ
  0042b	d9 9d 24 ff ff
	ff		 fstp	 DWORD PTR tv436[ebp]
  00431	f3 0f 10 85 24
	ff ff ff	 movss	 xmm0, DWORD PTR tv436[ebp]
  00439	f3 0f 59 45 a0	 mulss	 xmm0, DWORD PTR _deltaV2$6[ebp]
  0043e	8d 4d b4	 lea	 ecx, DWORD PTR _edge2$10[ebp]
  00441	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR tv492[ebp], xmm0
  00449	e8 00 00 00 00	 call	 ?GetZ@Vector3f@@QBEMXZ	; Vector3f::GetZ
  0044e	d9 9d 1c ff ff
	ff		 fstp	 DWORD PTR tv441[ebp]
  00454	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR tv441[ebp]
  0045c	f3 0f 59 45 a4	 mulss	 xmm0, DWORD PTR _deltaV1$7[ebp]
  00461	f3 0f 10 8d 20
	ff ff ff	 movss	 xmm1, DWORD PTR tv492[ebp]
  00469	f3 0f 5c c8	 subss	 xmm1, xmm0
  0046d	f3 0f 59 4d 98	 mulss	 xmm1, DWORD PTR _f$4[ebp]
  00472	51		 push	 ecx
  00473	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00478	8d 4d 88	 lea	 ecx, DWORD PTR _tangent$3[ebp]
  0047b	e8 00 00 00 00	 call	 ?SetZ@Vector3f@@QAEXM@Z	; Vector3f::SetZ

; 171  : 
; 172  : //Bitangent example, in Java
; 173  : //		Vector3f bitangent = new Vector3f(0,0,0);
; 174  : //		
; 175  : //		bitangent.setX(f * (-deltaU2 * edge1.getX() - deltaU1 * edge2.getX()));
; 176  : //		bitangent.setX(f * (-deltaU2 * edge1.getY() - deltaU1 * edge2.getY()));
; 177  : //		bitangent.setX(f * (-deltaU2 * edge1.getZ() - deltaU1 * edge2.getZ()));
; 178  : 
; 179  : 		m_tangents[i0] += tangent;

  00480	8d 4d 88	 lea	 ecx, DWORD PTR _tangent$3[ebp]
  00483	51		 push	 ecx
  00484	8b 55 e0	 mov	 edx, DWORD PTR _i0$14[ebp]
  00487	52		 push	 edx
  00488	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0048b	83 c1 40	 add	 ecx, 64			; 00000040H
  0048e	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  00493	8b c8		 mov	 ecx, eax
  00495	e8 00 00 00 00	 call	 ??YVector3f@@QAEAAV0@ABV0@@Z ; Vector3f::operator+=

; 180  : 		m_tangents[i1] += tangent;

  0049a	8d 45 88	 lea	 eax, DWORD PTR _tangent$3[ebp]
  0049d	50		 push	 eax
  0049e	8b 4d dc	 mov	 ecx, DWORD PTR _i1$13[ebp]
  004a1	51		 push	 ecx
  004a2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004a5	83 c1 40	 add	 ecx, 64			; 00000040H
  004a8	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  004ad	8b c8		 mov	 ecx, eax
  004af	e8 00 00 00 00	 call	 ??YVector3f@@QAEAAV0@ABV0@@Z ; Vector3f::operator+=

; 181  : 		m_tangents[i2] += tangent;	

  004b4	8d 55 88	 lea	 edx, DWORD PTR _tangent$3[ebp]
  004b7	52		 push	 edx
  004b8	8b 45 d8	 mov	 eax, DWORD PTR _i2$12[ebp]
  004bb	50		 push	 eax
  004bc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004bf	83 c1 40	 add	 ecx, 64			; 00000040H
  004c2	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  004c7	8b c8		 mov	 ecx, eax
  004c9	e8 00 00 00 00	 call	 ??YVector3f@@QAEAAV0@ABV0@@Z ; Vector3f::operator+=

; 182  :     }

  004ce	e9 e6 fb ff ff	 jmp	 $LN5@CalcTangen
$LN6@CalcTangen:

; 183  : 
; 184  :     for(unsigned int i = 0; i < m_tangents.size(); i++)

  004d3	c7 45 80 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  004da	eb 09		 jmp	 SHORT $LN10@CalcTangen
$LN8@CalcTangen:
  004dc	8b 4d 80	 mov	 ecx, DWORD PTR _i$2[ebp]
  004df	83 c1 01	 add	 ecx, 1
  004e2	89 4d 80	 mov	 DWORD PTR _i$2[ebp], ecx
$LN10@CalcTangen:
  004e5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  004e8	83 c1 40	 add	 ecx, 64			; 00000040H
  004eb	e8 00 00 00 00	 call	 ?size@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEIXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::size
  004f0	39 45 80	 cmp	 DWORD PTR _i$2[ebp], eax
  004f3	73 40		 jae	 SHORT $LN9@CalcTangen

; 185  : 		m_tangents[i] = m_tangents[i].Normalized();

  004f5	8d 95 74 ff ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  004fb	52		 push	 edx
  004fc	8b 45 80	 mov	 eax, DWORD PTR _i$2[ebp]
  004ff	50		 push	 eax
  00500	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00503	83 c1 40	 add	 ecx, 64			; 00000040H
  00506	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  0050b	8b c8		 mov	 ecx, eax
  0050d	e8 00 00 00 00	 call	 ?Normalized@Vector3f@@QBE?AV1@XZ ; Vector3f::Normalized
  00512	8b f0		 mov	 esi, eax
  00514	8b 4d 80	 mov	 ecx, DWORD PTR _i$2[ebp]
  00517	51		 push	 ecx
  00518	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0051b	83 c1 40	 add	 ecx, 64			; 00000040H
  0051e	e8 00 00 00 00	 call	 ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
  00523	8b 16		 mov	 edx, DWORD PTR [esi]
  00525	89 10		 mov	 DWORD PTR [eax], edx
  00527	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0052a	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0052d	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  00530	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00533	eb a7		 jmp	 SHORT $LN8@CalcTangen
$LN9@CalcTangen:

; 186  : }

  00535	52		 push	 edx
  00536	8b cd		 mov	 ecx, ebp
  00538	50		 push	 eax
  00539	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN18@CalcTangen
  0053f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00544	58		 pop	 eax
  00545	5a		 pop	 edx
  00546	5f		 pop	 edi
  00547	5e		 pop	 esi
  00548	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0054b	33 cd		 xor	 ecx, ebp
  0054d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00552	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  00558	3b ec		 cmp	 ebp, esp
  0055a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0055f	8b e5		 mov	 esp, ebp
  00561	5d		 pop	 ebp
  00562	c3		 ret	 0
  00563	90		 npad	 1
$LN18@CalcTangen:
  00564	03 00 00 00	 DD	 3
  00568	00 00 00 00	 DD	 $LN17@CalcTangen
$LN17@CalcTangen:
  0056c	c8 ff ff ff	 DD	 -56			; ffffffc8H
  00570	0c 00 00 00	 DD	 12			; 0000000cH
  00574	00 00 00 00	 DD	 $LN14@CalcTangen
  00578	b4 ff ff ff	 DD	 -76			; ffffffb4H
  0057c	0c 00 00 00	 DD	 12			; 0000000cH
  00580	00 00 00 00	 DD	 $LN15@CalcTangen
  00584	88 ff ff ff	 DD	 -120			; ffffff88H
  00588	0c 00 00 00	 DD	 12			; 0000000cH
  0058c	00 00 00 00	 DD	 $LN16@CalcTangen
$LN16@CalcTangen:
  00590	74		 DB	 116			; 00000074H
  00591	61		 DB	 97			; 00000061H
  00592	6e		 DB	 110			; 0000006eH
  00593	67		 DB	 103			; 00000067H
  00594	65		 DB	 101			; 00000065H
  00595	6e		 DB	 110			; 0000006eH
  00596	74		 DB	 116			; 00000074H
  00597	00		 DB	 0
$LN15@CalcTangen:
  00598	65		 DB	 101			; 00000065H
  00599	64		 DB	 100			; 00000064H
  0059a	67		 DB	 103			; 00000067H
  0059b	65		 DB	 101			; 00000065H
  0059c	32		 DB	 50			; 00000032H
  0059d	00		 DB	 0
$LN14@CalcTangen:
  0059e	65		 DB	 101			; 00000065H
  0059f	64		 DB	 100			; 00000064H
  005a0	67		 DB	 103			; 00000067H
  005a1	65		 DB	 101			; 00000065H
  005a2	31		 DB	 49			; 00000031H
  005a3	00		 DB	 0
?CalcTangents@IndexedModel@@QAEXXZ ENDP			; IndexedModel::CalcTangents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1MeshData@@UAE@XZ PROC				; MeshData::~MeshData
; _this$ = ecx

; 235  : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1MeshData@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00031	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7MeshData@@6B@

; 236  : 	glDeleteBuffers(NUM_BUFFERS, m_vertexArrayBuffers);

  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0003d	8b f4		 mov	 esi, esp
  0003f	51		 push	 ecx
  00040	6a 05		 push	 5
  00042	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp____glewDeleteBuffers
  00048	8b 02		 mov	 eax, DWORD PTR [edx]
  0004a	ff d0		 call	 eax
  0004c	3b f4		 cmp	 esi, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 237  : 	glDeleteVertexArrays(1, &m_vertexArrayObject);

  00053	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	83 c1 08	 add	 ecx, 8
  00059	8b f4		 mov	 esi, esp
  0005b	51		 push	 ecx
  0005c	6a 01		 push	 1
  0005e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp____glewDeleteVertexArrays
  00064	8b 02		 mov	 eax, DWORD PTR [edx]
  00066	ff d0		 call	 eax
  00068	3b f4		 cmp	 esi, esp
  0006a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 238  : }

  0006f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	83 c1 28	 add	 ecx, 40			; 00000028H
  00075	e8 00 00 00 00	 call	 ??1IndexedModel@@QAE@XZ
  0007a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00084	59		 pop	 ecx
  00085	5e		 pop	 esi
  00086	83 c4 10	 add	 esp, 16			; 00000010H
  00089	3b ec		 cmp	 ebp, esp
  0008b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$??1MeshData@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1MeshData@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1MeshData@@UAE@XZ ENDP				; MeshData::~MeshData
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Draw@MeshData@@QBEXXZ PROC				; MeshData::Draw
; _this$ = ecx

; 241  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 242  : 	glBindVertexArray(m_vertexArrayObject);

  0000f	8b f4		 mov	 esi, esp
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00017	51		 push	 ecx
  00018	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp____glewBindVertexArray
  0001e	8b 02		 mov	 eax, DWORD PTR [edx]
  00020	ff d0		 call	 eax
  00022	3b f4		 cmp	 esi, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 243  : 	
; 244  : 	#if PROFILING_DISABLE_MESH_DRAWING == 0
; 245  : 		glDrawElements(GL_TRIANGLES, m_drawCount, GL_UNSIGNED_INT, 0);

  00029	8b f4		 mov	 esi, esp
  0002b	6a 00		 push	 0
  0002d	68 05 14 00 00	 push	 5125			; 00001405H
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00038	52		 push	 edx
  00039	6a 04		 push	 4
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__glDrawElements@16
  00041	3b f4		 cmp	 esi, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 246  : 	#endif
; 247  : }

  00048	5e		 pop	 esi
  00049	83 c4 04	 add	 esp, 4
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
?Draw@MeshData@@QBEXXZ ENDP				; MeshData::Draw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
_TEXT	SEGMENT
tv195 = -152						; size = 4
tv201 = -148						; size = 4
tv169 = -144						; size = 4
tv191 = -140						; size = 4
tv72 = -136						; size = 4
tv188 = -132						; size = 4
tv198 = -128						; size = 4
$T2 = -124						; size = 16
$T3 = -108						; size = 4
$T4 = -104						; size = 4
$T5 = -100						; size = 12
$T6 = -85						; size = 1
$T7 = -84						; size = 12
$T8 = -72						; size = 32
_it$ = -36						; size = 12
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_meshName$ = 8						; size = 4
_model$ = 12						; size = 4
??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVIndexedModel@@@Z PROC ; Mesh::Mesh
; _this$ = ecx

; 252  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVIndexedModel@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	51		 push	 ecx
  0001a	8d bd 68 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-152]
  00020	b9 23 00 00 00	 mov	 ecx, 35			; 00000023H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	59		 pop	 ecx
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00037	50		 push	 eax
  00038	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003b	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00041	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00044	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00047	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Mesh@@6B@

; 251  : 	m_fileName(meshName)

  0004d	8b 4d 08	 mov	 ecx, DWORD PTR _meshName$[ebp]
  00050	51		 push	 ecx
  00051	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	83 c1 04	 add	 ecx, 4
  00057	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0005c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 253  : 	std::map<std::string, MeshData*>::const_iterator it = s_resourceMap.find(meshName);

  00063	8b 55 08	 mov	 edx, DWORD PTR _meshName$[ebp]
  00066	52		 push	 edx
  00067	8d 45 ac	 lea	 eax, DWORD PTR $T7[ebp]
  0006a	50		 push	 eax
  0006b	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_resourceMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@A ; Mesh::s_resourceMap
  00070	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::find
  00075	89 45 80	 mov	 DWORD PTR tv198[ebp], eax
  00078	8b 4d 80	 mov	 ecx, DWORD PTR tv198[ebp]
  0007b	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv188[ebp], ecx
  00081	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00085	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR tv188[ebp]
  0008b	52		 push	 edx
  0008c	8d 4d dc	 lea	 ecx, DWORD PTR _it$[ebp]
  0008f	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
  00094	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00098	8d 4d ac	 lea	 ecx, DWORD PTR $T7[ebp]
  0009b	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ

; 254  : 	if(it != s_resourceMap.end())

  000a0	8d 45 9c	 lea	 eax, DWORD PTR $T5[ebp]
  000a3	50		 push	 eax
  000a4	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_resourceMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@A ; Mesh::s_resourceMap
  000a9	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::end
  000ae	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv72[ebp], eax
  000b4	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv72[ebp]
  000ba	89 8d 74 ff ff
	ff		 mov	 DWORD PTR tv191[ebp], ecx
  000c0	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000c4	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR tv191[ebp]
  000ca	52		 push	 edx
  000cb	8d 4d dc	 lea	 ecx, DWORD PTR _it$[ebp]
  000ce	e8 00 00 00 00	 call	 ??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::operator!=
  000d3	88 45 ab	 mov	 BYTE PTR $T6[ebp], al
  000d6	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000da	8d 4d 9c	 lea	 ecx, DWORD PTR $T5[ebp]
  000dd	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  000e2	0f b6 45 ab	 movzx	 eax, BYTE PTR $T6[ebp]
  000e6	85 c0		 test	 eax, eax
  000e8	74 6f		 je	 SHORT $LN2@Mesh

; 255  : 	{
; 256  : 		std::cout << "Error adding mesh " << meshName << ": Mesh already exists by the same name!" << std::endl;

  000ea	8b f4		 mov	 esi, esp
  000ec	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  000f1	68 00 00 00 00	 push	 OFFSET $SG4294911814
  000f6	8b 4d 08	 mov	 ecx, DWORD PTR _meshName$[ebp]
  000f9	51		 push	 ecx
  000fa	68 00 00 00 00	 push	 OFFSET $SG4294911813
  000ff	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00105	52		 push	 edx
  00106	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  0010b	83 c4 08	 add	 esp, 8
  0010e	50		 push	 eax
  0010f	e8 00 00 00 00	 call	 ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
  00114	83 c4 08	 add	 esp, 8
  00117	50		 push	 eax
  00118	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  0011d	83 c4 08	 add	 esp, 8
  00120	8b c8		 mov	 ecx, eax
  00122	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  00128	3b f4		 cmp	 esi, esp
  0012a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 257  : 		assert(0 != 0);

  0012f	33 c0		 xor	 eax, eax
  00131	75 21		 jne	 SHORT $LN5@Mesh
  00133	8b f4		 mov	 esi, esp
  00135	68 01 01 00 00	 push	 257			; 00000101H
  0013a	68 00 00 00 00	 push	 OFFSET $SG4294911812
  0013f	68 00 00 00 00	 push	 OFFSET $SG4294911811
  00144	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  0014a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0014d	3b f4		 cmp	 esi, esp
  0014f	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@Mesh:

; 258  : 	}
; 259  : 	else

  00154	e9 99 00 00 00	 jmp	 $LN3@Mesh
$LN2@Mesh:

; 260  : 	{
; 261  : 		m_meshData = new MeshData(model, 0);

  00159	6a 78		 push	 120			; 00000078H
  0015b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00160	83 c4 04	 add	 esp, 4
  00163	89 45 94	 mov	 DWORD PTR $T3[ebp], eax
  00166	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  0016a	6a 00		 push	 0
  0016c	8b 55 0c	 mov	 edx, DWORD PTR _model$[ebp]
  0016f	52		 push	 edx
  00170	8b 4d 94	 mov	 ecx, DWORD PTR $T3[ebp]
  00173	e8 00 00 00 00	 call	 ??0MeshData@@QAE@ABVIndexedModel@@H@Z ; MeshData::MeshData
  00178	89 85 70 ff ff
	ff		 mov	 DWORD PTR tv169[ebp], eax
  0017e	eb 0a		 jmp	 SHORT $LN7@Mesh
  00180	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv169[ebp], 0
$LN7@Mesh:
  0018a	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR tv169[ebp]
  00190	89 45 98	 mov	 DWORD PTR $T4[ebp], eax
  00193	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00197	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0019a	8b 55 98	 mov	 edx, DWORD PTR $T4[ebp]
  0019d	89 51 20	 mov	 DWORD PTR [ecx+32], edx

; 262  : 		s_resourceMap.insert(std::pair<std::string, MeshData*>(meshName, m_meshData));

  001a0	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001a3	83 c0 20	 add	 eax, 32			; 00000020H
  001a6	50		 push	 eax
  001a7	8b 4d 08	 mov	 ecx, DWORD PTR _meshName$[ebp]
  001aa	51		 push	 ecx
  001ab	8d 4d b8	 lea	 ecx, DWORD PTR $T8[ebp]
  001ae	e8 00 00 00 00	 call	 ??$?0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAPAVMeshData@@X@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAPAVMeshData@@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,MeshData * &,void>
  001b3	89 85 6c ff ff
	ff		 mov	 DWORD PTR tv201[ebp], eax
  001b9	8b 95 6c ff ff
	ff		 mov	 edx, DWORD PTR tv201[ebp]
  001bf	89 95 68 ff ff
	ff		 mov	 DWORD PTR tv195[ebp], edx
  001c5	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  001c9	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv195[ebp]
  001cf	50		 push	 eax
  001d0	8d 4d 84	 lea	 ecx, DWORD PTR $T2[ebp]
  001d3	51		 push	 ecx
  001d4	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_resourceMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@A ; Mesh::s_resourceMap
  001d9	e8 00 00 00 00	 call	 ??$insert@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::insert<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *> >
  001de	8d 4d 84	 lea	 ecx, DWORD PTR $T2[ebp]
  001e1	e8 00 00 00 00	 call	 ??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
  001e6	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  001ea	8d 4d b8	 lea	 ecx, DWORD PTR $T8[ebp]
  001ed	e8 00 00 00 00	 call	 ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@QAE@XZ
$LN3@Mesh:

; 263  : 	}
; 264  : }

  001f2	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001f6	8d 4d dc	 lea	 ecx, DWORD PTR _it$[ebp]
  001f9	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  001fe	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00205	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00208	52		 push	 edx
  00209	8b cd		 mov	 ecx, ebp
  0020b	50		 push	 eax
  0020c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN18@Mesh
  00212	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00217	58		 pop	 eax
  00218	5a		 pop	 edx
  00219	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0021c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00223	59		 pop	 ecx
  00224	5f		 pop	 edi
  00225	5e		 pop	 esi
  00226	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00229	33 cd		 xor	 ecx, ebp
  0022b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00230	81 c4 98 00 00
	00		 add	 esp, 152		; 00000098H
  00236	3b ec		 cmp	 ebp, esp
  00238	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0023d	8b e5		 mov	 esp, ebp
  0023f	5d		 pop	 ebp
  00240	c2 08 00	 ret	 8
  00243	90		 npad	 1
$LN18@Mesh:
  00244	01 00 00 00	 DD	 1
  00248	00 00 00 00	 DD	 $LN17@Mesh
$LN17@Mesh:
  0024c	dc ff ff ff	 DD	 -36			; ffffffdcH
  00250	0c 00 00 00	 DD	 12			; 0000000cH
  00254	00 00 00 00	 DD	 $LN15@Mesh
$LN15@Mesh:
  00258	69		 DB	 105			; 00000069H
  00259	74		 DB	 116			; 00000074H
  0025a	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVIndexedModel@@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVIndexedModel@@@Z$1:
  0000b	8d 4d ac	 lea	 ecx, DWORD PTR $T7[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVIndexedModel@@@Z$2:
  00013	8d 4d dc	 lea	 ecx, DWORD PTR _it$[ebp]
  00016	e9 00 00 00 00	 jmp	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVIndexedModel@@@Z$3:
  0001b	8d 4d 9c	 lea	 ecx, DWORD PTR $T5[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVIndexedModel@@@Z$4:
  00023	6a 78		 push	 120			; 00000078H
  00025	8b 45 94	 mov	 eax, DWORD PTR $T3[ebp]
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002e	83 c4 08	 add	 esp, 8
  00031	c3		 ret	 0
__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVIndexedModel@@@Z$5:
  00032	8d 4d b8	 lea	 ecx, DWORD PTR $T8[ebp]
  00035	e9 00 00 00 00	 jmp	 ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@QAE@XZ
__ehhandler$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVIndexedModel@@@Z:
  0003a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00041	8b 8a 68 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-152]
  00047	33 c8		 xor	 ecx, eax
  00049	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004e	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00051	33 c8		 xor	 ecx, eax
  00053	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00058	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVIndexedModel@@@Z
  0005d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVIndexedModel@@@Z ENDP ; Mesh::Mesh
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GMesh@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GMesh@@UAEPAXI@Z PROC				; Mesh::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1Mesh@@UAE@XZ		; Mesh::~Mesh
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 24		 push	 36			; 00000024H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_GMesh@@UAEPAXI@Z ENDP				; Mesh::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
_TEXT	SEGMENT
tv168 = -104						; size = 4
tv172 = -100						; size = 4
tv166 = -96						; size = 4
tv73 = -92						; size = 4
tv163 = -88						; size = 4
tv171 = -84						; size = 4
$T2 = -80						; size = 16
$T3 = -64						; size = 12
$T4 = -49						; size = 1
$T5 = -48						; size = 12
_it$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_fileName$ = 8						; size = 4
??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Mesh::Mesh
; _this$ = ecx

; 269  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d 98	 lea	 edi, DWORD PTR [ebp-104]
  00019	b9 17 00 00 00	 mov	 ecx, 23			; 00000017H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Mesh@@6B@

; 267  : 	m_fileName(fileName),

  00043	8b 4d 08	 mov	 ecx, DWORD PTR _fileName$[ebp]
  00046	51		 push	 ecx
  00047	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	83 c1 04	 add	 ecx, 4
  0004d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00052	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 268  : 	m_meshData(0)

  00059	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0005c	c7 42 20 00 00
	00 00		 mov	 DWORD PTR [edx+32], 0

; 270  : 	std::map<std::string, MeshData*>::const_iterator it = s_resourceMap.find(fileName);

  00063	8b 45 08	 mov	 eax, DWORD PTR _fileName$[ebp]
  00066	50		 push	 eax
  00067	8d 4d d0	 lea	 ecx, DWORD PTR $T5[ebp]
  0006a	51		 push	 ecx
  0006b	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_resourceMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@A ; Mesh::s_resourceMap
  00070	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::find
  00075	89 45 ac	 mov	 DWORD PTR tv171[ebp], eax
  00078	8b 55 ac	 mov	 edx, DWORD PTR tv171[ebp]
  0007b	89 55 a8	 mov	 DWORD PTR tv163[ebp], edx
  0007e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00082	8b 45 a8	 mov	 eax, DWORD PTR tv163[ebp]
  00085	50		 push	 eax
  00086	8d 4d e0	 lea	 ecx, DWORD PTR _it$[ebp]
  00089	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
  0008e	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00092	8d 4d d0	 lea	 ecx, DWORD PTR $T5[ebp]
  00095	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ

; 271  : 	if(it != s_resourceMap.end())

  0009a	8d 4d c0	 lea	 ecx, DWORD PTR $T3[ebp]
  0009d	51		 push	 ecx
  0009e	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_resourceMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@A ; Mesh::s_resourceMap
  000a3	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::end
  000a8	89 45 a4	 mov	 DWORD PTR tv73[ebp], eax
  000ab	8b 55 a4	 mov	 edx, DWORD PTR tv73[ebp]
  000ae	89 55 a0	 mov	 DWORD PTR tv166[ebp], edx
  000b1	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000b5	8b 45 a0	 mov	 eax, DWORD PTR tv166[ebp]
  000b8	50		 push	 eax
  000b9	8d 4d e0	 lea	 ecx, DWORD PTR _it$[ebp]
  000bc	e8 00 00 00 00	 call	 ??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::operator!=
  000c1	88 45 cf	 mov	 BYTE PTR $T4[ebp], al
  000c4	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000c8	8d 4d c0	 lea	 ecx, DWORD PTR $T3[ebp]
  000cb	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  000d0	0f b6 4d cf	 movzx	 ecx, BYTE PTR $T4[ebp]
  000d4	85 c9		 test	 ecx, ecx
  000d6	74 21		 je	 SHORT $LN2@Mesh

; 272  : 	{
; 273  : 		m_meshData = it->second;

  000d8	8d 4d e0	 lea	 ecx, DWORD PTR _it$[ebp]
  000db	e8 00 00 00 00	 call	 ??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QBEPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::operator->
  000e0	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000e3	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  000e6	89 42 20	 mov	 DWORD PTR [edx+32], eax

; 274  : 		m_meshData->AddReference();

  000e9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ec	8b 49 20	 mov	 ecx, DWORD PTR [ecx+32]
  000ef	83 c1 04	 add	 ecx, 4
  000f2	e8 00 00 00 00	 call	 ?AddReference@ReferenceCounter@@QAEXXZ ; ReferenceCounter::AddReference

; 275  : 	}
; 276  : 	else

  000f7	eb 3d		 jmp	 SHORT $LN3@Mesh
$LN2@Mesh:

; 277  : 	{
; 278  :         m_meshData = Mesh::ImportMeshData(fileName, 0).at(0);

  000f9	6a 00		 push	 0
  000fb	8b 55 08	 mov	 edx, DWORD PTR _fileName$[ebp]
  000fe	52		 push	 edx
  000ff	8d 45 b0	 lea	 eax, DWORD PTR $T2[ebp]
  00102	50		 push	 eax
  00103	e8 00 00 00 00	 call	 ?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z ; Mesh::ImportMeshData
  00108	83 c4 0c	 add	 esp, 12			; 0000000cH
  0010b	89 45 9c	 mov	 DWORD PTR tv172[ebp], eax
  0010e	8b 4d 9c	 mov	 ecx, DWORD PTR tv172[ebp]
  00111	89 4d 98	 mov	 DWORD PTR tv168[ebp], ecx
  00114	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00118	6a 00		 push	 0
  0011a	8b 4d 98	 mov	 ecx, DWORD PTR tv168[ebp]
  0011d	e8 00 00 00 00	 call	 ?at@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAEAAPAVMeshData@@I@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::at
  00122	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00125	8b 00		 mov	 eax, DWORD PTR [eax]
  00127	89 42 20	 mov	 DWORD PTR [edx+32], eax
  0012a	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0012e	8d 4d b0	 lea	 ecx, DWORD PTR $T2[ebp]
  00131	e8 00 00 00 00	 call	 ??1?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@XZ ; std::vector<MeshData *,std::allocator<MeshData *> >::~vector<MeshData *,std::allocator<MeshData *> >
$LN3@Mesh:

; 279  : 	}
; 280  : }

  00136	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0013a	8d 4d e0	 lea	 ecx, DWORD PTR _it$[ebp]
  0013d	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  00142	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00149	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0014c	52		 push	 edx
  0014d	8b cd		 mov	 ecx, ebp
  0014f	50		 push	 eax
  00150	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Mesh
  00156	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0015b	58		 pop	 eax
  0015c	5a		 pop	 edx
  0015d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00160	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00167	59		 pop	 ecx
  00168	5f		 pop	 edi
  00169	83 c4 68	 add	 esp, 104		; 00000068H
  0016c	3b ec		 cmp	 ebp, esp
  0016e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00173	8b e5		 mov	 esp, ebp
  00175	5d		 pop	 ebp
  00176	c2 04 00	 ret	 4
  00179	0f 1f 00	 npad	 3
$LN13@Mesh:
  0017c	01 00 00 00	 DD	 1
  00180	00 00 00 00	 DD	 $LN12@Mesh
$LN12@Mesh:
  00184	e0 ff ff ff	 DD	 -32			; ffffffe0H
  00188	0c 00 00 00	 DD	 12			; 0000000cH
  0018c	00 00 00 00	 DD	 $LN10@Mesh
$LN10@Mesh:
  00190	69		 DB	 105			; 00000069H
  00191	74		 DB	 116			; 00000074H
  00192	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
  0000b	8d 4d d0	 lea	 ecx, DWORD PTR $T5[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
  00013	8d 4d e0	 lea	 ecx, DWORD PTR _it$[ebp]
  00016	e9 00 00 00 00	 jmp	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
  0001b	8d 4d c0	 lea	 ecx, DWORD PTR $T3[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4:
  00023	8d 4d b0	 lea	 ecx, DWORD PTR $T2[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@XZ ; std::vector<MeshData *,std::allocator<MeshData *> >::~vector<MeshData *,std::allocator<MeshData *> >
__ehhandler$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  0002b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00032	8b 4a 9c	 mov	 ecx, DWORD PTR [edx-100]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Mesh@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Mesh::Mesh
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
_TEXT	SEGMENT
tv449 = -844						; size = 4
tv464 = -840						; size = 4
tv447 = -836						; size = 4
tv463 = -832						; size = 4
tv445 = -828						; size = 4
tv462 = -824						; size = 4
tv443 = -820						; size = 4
tv149 = -816						; size = 4
tv334 = -812						; size = 4
tv308 = -808						; size = 4
tv439 = -804						; size = 4
tv312 = -800						; size = 4
tv434 = -796						; size = 4
tv202 = -792						; size = 4
tv419 = -788						; size = 4
tv461 = -784						; size = 4
tv417 = -780						; size = 4
tv460 = -776						; size = 4
tv383 = -772						; size = 4
tv459 = -768						; size = 4
tv381 = -764						; size = 4
tv458 = -760						; size = 4
tv379 = -756						; size = 4
tv457 = -752						; size = 4
$T2 = -748						; size = 4
$T3 = -744						; size = 16
$T4 = -728						; size = 4
$T5 = -724						; size = 80
$T6 = -644						; size = 4
$T7 = -640						; size = 4
$T8 = -636						; size = 4
$T9 = -632						; size = 4
$T10 = -628						; size = 4
$T11 = -624						; size = 4
$T12 = -620						; size = 4
$T13 = -616						; size = 32
$T14 = -584						; size = 28
$T15 = -556						; size = 28
$T16 = -528						; size = 28
_face$17 = -500						; size = 4
_j$18 = -496						; size = 4
$T19 = -492						; size = 12
$T20 = -480						; size = 12
$T21 = -468						; size = 8
$T22 = -460						; size = 12
_tangent$23 = -444					; size = 12
_texCoord$24 = -424					; size = 12
_normal$25 = -404					; size = 12
_pos$26 = -384						; size = 12
_j$27 = -368						; size = 4
_aiZeroVector$28 = -360					; size = 12
_model$29 = -344					; size = 4
_indices$30 = -336					; size = 16
_tangents$31 = -312					; size = 16
_normals$32 = -288					; size = 16
_texCoords$33 = -264					; size = 16
_positions$34 = -240					; size = 16
_i$35 = -216						; size = 4
_lastIndexOffset$ = -208				; size = 4
_outData$ = -200					; size = 16
_end$ = -180						; size = 4
_start$ = -176						; size = 4
$T36 = -172						; size = 28
$T37 = -144						; size = 28
$T38 = -116						; size = 28
$T39 = -88						; size = 28
$T40 = -60						; size = 28
_scene$ = -32						; size = 4
_importer$ = -24					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_fileName$ = 12						; size = 4
_mode$ = 16						; size = 4
?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z PROC ; Mesh::ImportMeshData

; 297  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 40 03 00
	00		 sub	 esp, 832		; 00000340H
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8d bd b4 fc ff
	ff		 lea	 edi, DWORD PTR [ebp-844]
  0001f	b9 d0 00 00 00	 mov	 ecx, 208		; 000000d0H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	c7 85 14 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0

; 298  :     Assimp::Importer importer;

  00049	8b f4		 mov	 esi, esp
  0004b	8d 4d e8	 lea	 ecx, DWORD PTR _importer$[ebp]
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0Importer@Assimp@@QAE@XZ
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 299  : 
; 300  :     const aiScene* scene = importer.ReadFile((Util::ResourcePath() + "models/" + fileName).c_str(),

  00062	8d 45 c4	 lea	 eax, DWORD PTR $T40[ebp]
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ?ResourcePath@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; Util::ResourcePath
  0006b	83 c4 04	 add	 esp, 4
  0006e	89 85 10 fd ff
	ff		 mov	 DWORD PTR tv457[ebp], eax
  00074	8b 8d 10 fd ff
	ff		 mov	 ecx, DWORD PTR tv457[ebp]
  0007a	89 8d 0c fd ff
	ff		 mov	 DWORD PTR tv379[ebp], ecx
  00080	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00084	68 00 00 00 00	 push	 OFFSET $SG4294911810
  00089	8b 95 0c fd ff
	ff		 mov	 edx, DWORD PTR tv379[ebp]
  0008f	52		 push	 edx
  00090	8d 45 a8	 lea	 eax, DWORD PTR $T39[ebp]
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00099	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009c	89 85 08 fd ff
	ff		 mov	 DWORD PTR tv458[ebp], eax
  000a2	8b 8d 08 fd ff
	ff		 mov	 ecx, DWORD PTR tv458[ebp]
  000a8	89 8d 04 fd ff
	ff		 mov	 DWORD PTR tv381[ebp], ecx
  000ae	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000b2	8b 55 0c	 mov	 edx, DWORD PTR _fileName$[ebp]
  000b5	52		 push	 edx
  000b6	8b 85 04 fd ff
	ff		 mov	 eax, DWORD PTR tv381[ebp]
  000bc	50		 push	 eax
  000bd	8d 4d 8c	 lea	 ecx, DWORD PTR $T38[ebp]
  000c0	51		 push	 ecx
  000c1	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  000c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c9	89 85 00 fd ff
	ff		 mov	 DWORD PTR tv459[ebp], eax
  000cf	8b 95 00 fd ff
	ff		 mov	 edx, DWORD PTR tv459[ebp]
  000d5	89 95 fc fc ff
	ff		 mov	 DWORD PTR tv383[ebp], edx
  000db	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000df	8b f4		 mov	 esi, esp
  000e1	68 49 a0 82 00	 push	 8560713			; 0082a049H
  000e6	8b 8d fc fc ff
	ff		 mov	 ecx, DWORD PTR tv383[ebp]
  000ec	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  000f1	50		 push	 eax
  000f2	8d 4d e8	 lea	 ecx, DWORD PTR _importer$[ebp]
  000f5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadFile@Importer@Assimp@@QAEPBUaiScene@@PBDI@Z
  000fb	3b f4		 cmp	 esi, esp
  000fd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00102	89 45 e0	 mov	 DWORD PTR _scene$[ebp], eax
  00105	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00109	8d 4d 8c	 lea	 ecx, DWORD PTR $T38[ebp]
  0010c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00111	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00115	8d 4d a8	 lea	 ecx, DWORD PTR $T39[ebp]
  00118	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0011d	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00121	8d 4d c4	 lea	 ecx, DWORD PTR $T40[ebp]
  00124	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 301  :         aiProcess_Triangulate |
; 302  :         aiProcess_GenSmoothNormals |
; 303  :         aiProcess_FlipUVs |
; 304  :         // aiProcess_OptimizeGraph |
; 305  :         //aiProcess_PreTransformVertices |
; 306  :         //aiProcess_JoinIdenticalVertices |
; 307  :         aiProcess_SortByPType |
; 308  :         aiProcess_FixInfacingNormals |
; 309  :         aiProcess_FindInvalidData |
; 310  :         //aiProcess_ValidateDataStructure |
; 311  :         aiProcess_CalcTangentSpace);
; 312  : 
; 313  :     if (!scene)

  00129	83 7d e0 00	 cmp	 DWORD PTR _scene$[ebp], 0
  0012d	0f 85 d0 00 00
	00		 jne	 $LN11@ImportMesh

; 314  :     {
; 315  :         std::cout << "Mesh load failed!: " << fileName << "|" << std::endl;

  00133	8b f4		 mov	 esi, esp
  00135	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  0013a	68 00 00 00 00	 push	 OFFSET $SG4294911809
  0013f	8b 45 0c	 mov	 eax, DWORD PTR _fileName$[ebp]
  00142	50		 push	 eax
  00143	68 00 00 00 00	 push	 OFFSET $SG4294911808
  00148	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  0014e	51		 push	 ecx
  0014f	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00154	83 c4 08	 add	 esp, 8
  00157	50		 push	 eax
  00158	e8 00 00 00 00	 call	 ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
  0015d	83 c4 08	 add	 esp, 8
  00160	50		 push	 eax
  00161	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00166	83 c4 08	 add	 esp, 8
  00169	8b c8		 mov	 ecx, eax
  0016b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  00171	3b f4		 cmp	 esi, esp
  00173	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 316  : 		scene = importer.ReadFile(Util::ResourcePath() + "models/error.obj",

  00178	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR $T37[ebp]
  0017e	52		 push	 edx
  0017f	e8 00 00 00 00	 call	 ?ResourcePath@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; Util::ResourcePath
  00184	83 c4 04	 add	 esp, 4
  00187	89 85 f8 fc ff
	ff		 mov	 DWORD PTR tv460[ebp], eax
  0018d	8b 85 f8 fc ff
	ff		 mov	 eax, DWORD PTR tv460[ebp]
  00193	89 85 f4 fc ff
	ff		 mov	 DWORD PTR tv417[ebp], eax
  00199	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  0019d	68 00 00 00 00	 push	 OFFSET $SG4294911807
  001a2	8b 8d f4 fc ff
	ff		 mov	 ecx, DWORD PTR tv417[ebp]
  001a8	51		 push	 ecx
  001a9	8d 95 54 ff ff
	ff		 lea	 edx, DWORD PTR $T36[ebp]
  001af	52		 push	 edx
  001b0	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  001b5	83 c4 0c	 add	 esp, 12			; 0000000cH
  001b8	89 85 f0 fc ff
	ff		 mov	 DWORD PTR tv461[ebp], eax
  001be	8b 85 f0 fc ff
	ff		 mov	 eax, DWORD PTR tv461[ebp]
  001c4	89 85 ec fc ff
	ff		 mov	 DWORD PTR tv419[ebp], eax
  001ca	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  001ce	68 49 a0 82 00	 push	 8560713			; 0082a049H
  001d3	8b 8d ec fc ff
	ff		 mov	 ecx, DWORD PTR tv419[ebp]
  001d9	51		 push	 ecx
  001da	8d 4d e8	 lea	 ecx, DWORD PTR _importer$[ebp]
  001dd	e8 00 00 00 00	 call	 ?ReadFile@Importer@Assimp@@QAEPBUaiScene@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; Assimp::Importer::ReadFile
  001e2	89 45 e0	 mov	 DWORD PTR _scene$[ebp], eax
  001e5	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  001e9	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR $T36[ebp]
  001ef	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001f4	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001f8	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR $T37[ebp]
  001fe	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN11@ImportMesh:

; 317  : 			aiProcess_Triangulate |
; 318  : 			aiProcess_GenSmoothNormals |
; 319  : 			aiProcess_FlipUVs |
; 320  : 			// aiProcess_OptimizeGraph |
; 321  : 			//aiProcess_PreTransformVertices |
; 322  : 			//aiProcess_JoinIdenticalVertices |
; 323  : 			aiProcess_SortByPType |
; 324  : 			aiProcess_FixInfacingNormals |
; 325  : 			aiProcess_FindInvalidData |
; 326  : 			//aiProcess_ValidateDataStructure |
; 327  : 			aiProcess_CalcTangentSpace);
; 328  :     }
; 329  :     unsigned int start = mode;

  00203	8b 55 10	 mov	 edx, DWORD PTR _mode$[ebp]
  00206	89 95 50 ff ff
	ff		 mov	 DWORD PTR _start$[ebp], edx

; 330  :     unsigned int end = start+1;

  0020c	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _start$[ebp]
  00212	83 c0 01	 add	 eax, 1
  00215	89 85 4c ff ff
	ff		 mov	 DWORD PTR _end$[ebp], eax

; 331  : 
; 332  :     std::vector<MeshData*> outData;

  0021b	8d 8d 38 ff ff
	ff		 lea	 ecx, DWORD PTR _outData$[ebp]
  00221	e8 00 00 00 00	 call	 ??0?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@XZ ; std::vector<MeshData *,std::allocator<MeshData *> >::vector<MeshData *,std::allocator<MeshData *> >
  00226	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6

; 333  : 
; 334  :     if (mode == -1)

  0022a	83 7d 10 ff	 cmp	 DWORD PTR _mode$[ebp], -1
  0022e	75 16		 jne	 SHORT $LN12@ImportMesh

; 335  :     {
; 336  :         end = scene->mNumMeshes;

  00230	8b 4d e0	 mov	 ecx, DWORD PTR _scene$[ebp]
  00233	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00236	89 95 4c ff ff
	ff		 mov	 DWORD PTR _end$[ebp], edx

; 337  :         start = 0;

  0023c	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _start$[ebp], 0
$LN12@ImportMesh:

; 338  :     }
; 339  :     int lastIndexOffset = 0;

  00246	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _lastIndexOffset$[ebp], 0

; 340  :     for (unsigned int i = start; i < end; i++)

  00250	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _start$[ebp]
  00256	89 85 28 ff ff
	ff		 mov	 DWORD PTR _i$35[ebp], eax
  0025c	eb 0f		 jmp	 SHORT $LN4@ImportMesh
$LN2@ImportMesh:
  0025e	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR _i$35[ebp]
  00264	83 c1 01	 add	 ecx, 1
  00267	89 8d 28 ff ff
	ff		 mov	 DWORD PTR _i$35[ebp], ecx
$LN4@ImportMesh:
  0026d	8b 95 28 ff ff
	ff		 mov	 edx, DWORD PTR _i$35[ebp]
  00273	3b 95 4c ff ff
	ff		 cmp	 edx, DWORD PTR _end$[ebp]
  00279	0f 83 0f 06 00
	00		 jae	 $LN3@ImportMesh

; 341  :     {
; 342  :         std::vector<Vector3f> positions;

  0027f	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR _positions$34[ebp]
  00285	e8 00 00 00 00	 call	 ??0?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAE@XZ ; std::vector<Vector3f,std::allocator<Vector3f> >::vector<Vector3f,std::allocator<Vector3f> >
  0028a	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7

; 343  :         std::vector<Vector2f> texCoords;

  0028e	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _texCoords$33[ebp]
  00294	e8 00 00 00 00	 call	 ??0?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAE@XZ ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::vector<Vector2<float>,std::allocator<Vector2<float> > >
  00299	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8

; 344  :         std::vector<Vector3f> normals;

  0029d	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _normals$32[ebp]
  002a3	e8 00 00 00 00	 call	 ??0?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAE@XZ ; std::vector<Vector3f,std::allocator<Vector3f> >::vector<Vector3f,std::allocator<Vector3f> >
  002a8	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9

; 345  :         std::vector<Vector3f> tangents;

  002ac	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _tangents$31[ebp]
  002b2	e8 00 00 00 00	 call	 ??0?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAE@XZ ; std::vector<Vector3f,std::allocator<Vector3f> >::vector<Vector3f,std::allocator<Vector3f> >
  002b7	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH

; 346  :         std::vector<unsigned int> indices;

  002bb	8d 8d b0 fe ff
	ff		 lea	 ecx, DWORD PTR _indices$30[ebp]
  002c1	e8 00 00 00 00	 call	 ??0?$vector@IV?$allocator@I@std@@@std@@QAE@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> >
  002c6	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH

; 347  : 
; 348  :         const aiMesh* model = scene->mMeshes[i];

  002ca	8b 45 e0	 mov	 eax, DWORD PTR _scene$[ebp]
  002cd	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  002d0	8b 95 28 ff ff
	ff		 mov	 edx, DWORD PTR _i$35[ebp]
  002d6	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  002d9	89 85 a8 fe ff
	ff		 mov	 DWORD PTR _model$29[ebp], eax

; 349  : 
; 350  :         const aiVector3D aiZeroVector(0.0f, 0.0f, 0.0f);

  002df	51		 push	 ecx
  002e0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  002e8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ed	51		 push	 ecx
  002ee	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  002f6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002fb	51		 push	 ecx
  002fc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00304	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00309	8d 8d 98 fe ff
	ff		 lea	 ecx, DWORD PTR _aiZeroVector$28[ebp]
  0030f	e8 00 00 00 00	 call	 ??0?$aiVector3t@M@@QAE@MMM@Z ; aiVector3t<float>::aiVector3t<float>

; 351  :         for (unsigned int j = 0; j < model->mNumVertices; j++)

  00314	c7 85 90 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _j$27[ebp], 0
  0031e	eb 0f		 jmp	 SHORT $LN7@ImportMesh
$LN5@ImportMesh:
  00320	8b 8d 90 fe ff
	ff		 mov	 ecx, DWORD PTR _j$27[ebp]
  00326	83 c1 01	 add	 ecx, 1
  00329	89 8d 90 fe ff
	ff		 mov	 DWORD PTR _j$27[ebp], ecx
$LN7@ImportMesh:
  0032f	8b 95 a8 fe ff
	ff		 mov	 edx, DWORD PTR _model$29[ebp]
  00335	8b 85 90 fe ff
	ff		 mov	 eax, DWORD PTR _j$27[ebp]
  0033b	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  0033e	0f 83 ae 01 00
	00		 jae	 $LN6@ImportMesh

; 352  :         {
; 353  :             const aiVector3D pos = model->mVertices[j];

  00344	6b 8d 90 fe ff
	ff 0c		 imul	 ecx, DWORD PTR _j$27[ebp], 12
  0034b	8b 95 a8 fe ff
	ff		 mov	 edx, DWORD PTR _model$29[ebp]
  00351	03 4a 0c	 add	 ecx, DWORD PTR [edx+12]
  00354	51		 push	 ecx
  00355	8d 8d 80 fe ff
	ff		 lea	 ecx, DWORD PTR _pos$26[ebp]
  0035b	e8 00 00 00 00	 call	 ??0?$aiVector3t@M@@QAE@ABV0@@Z ; aiVector3t<float>::aiVector3t<float>

; 354  :             const aiVector3D normal = model->mNormals[j];

  00360	6b 85 90 fe ff
	ff 0c		 imul	 eax, DWORD PTR _j$27[ebp], 12
  00367	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _model$29[ebp]
  0036d	03 41 10	 add	 eax, DWORD PTR [ecx+16]
  00370	50		 push	 eax
  00371	8d 8d 6c fe ff
	ff		 lea	 ecx, DWORD PTR _normal$25[ebp]
  00377	e8 00 00 00 00	 call	 ??0?$aiVector3t@M@@QAE@ABV0@@Z ; aiVector3t<float>::aiVector3t<float>

; 355  :             const aiVector3D texCoord = model->HasTextureCoords(0) ? model->mTextureCoords[0][j] : aiZeroVector;

  0037c	6a 00		 push	 0
  0037e	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _model$29[ebp]
  00384	e8 00 00 00 00	 call	 ?HasTextureCoords@aiMesh@@QBE_NI@Z ; aiMesh::HasTextureCoords
  00389	0f b6 d0	 movzx	 edx, al
  0038c	85 d2		 test	 edx, edx
  0038e	74 21		 je	 SHORT $LN14@ImportMesh
  00390	b8 04 00 00 00	 mov	 eax, 4
  00395	6b c8 00	 imul	 ecx, eax, 0
  00398	6b 95 90 fe ff
	ff 0c		 imul	 edx, DWORD PTR _j$27[ebp], 12
  0039f	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR _model$29[ebp]
  003a5	03 54 08 3c	 add	 edx, DWORD PTR [eax+ecx+60]
  003a9	89 95 e8 fc ff
	ff		 mov	 DWORD PTR tv202[ebp], edx
  003af	eb 0c		 jmp	 SHORT $LN15@ImportMesh
$LN14@ImportMesh:
  003b1	8d 8d 98 fe ff
	ff		 lea	 ecx, DWORD PTR _aiZeroVector$28[ebp]
  003b7	89 8d e8 fc ff
	ff		 mov	 DWORD PTR tv202[ebp], ecx
$LN15@ImportMesh:
  003bd	8b 95 e8 fc ff
	ff		 mov	 edx, DWORD PTR tv202[ebp]
  003c3	89 95 94 fd ff
	ff		 mov	 DWORD PTR $T12[ebp], edx
  003c9	8b 85 94 fd ff
	ff		 mov	 eax, DWORD PTR $T12[ebp]
  003cf	50		 push	 eax
  003d0	8d 8d 58 fe ff
	ff		 lea	 ecx, DWORD PTR _texCoord$24[ebp]
  003d6	e8 00 00 00 00	 call	 ??0?$aiVector3t@M@@QAE@ABV0@@Z ; aiVector3t<float>::aiVector3t<float>

; 356  :             const aiVector3D tangent = model->mTangents[j];

  003db	6b 8d 90 fe ff
	ff 0c		 imul	 ecx, DWORD PTR _j$27[ebp], 12
  003e2	8b 95 a8 fe ff
	ff		 mov	 edx, DWORD PTR _model$29[ebp]
  003e8	03 4a 14	 add	 ecx, DWORD PTR [edx+20]
  003eb	51		 push	 ecx
  003ec	8d 8d 44 fe ff
	ff		 lea	 ecx, DWORD PTR _tangent$23[ebp]
  003f2	e8 00 00 00 00	 call	 ??0?$aiVector3t@M@@QAE@ABV0@@Z ; aiVector3t<float>::aiVector3t<float>

; 357  : 
; 358  :             positions.push_back(Vector3f(pos.x, pos.y, pos.z));

  003f7	51		 push	 ecx
  003f8	f3 0f 10 85 88
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$26[ebp+8]
  00400	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00405	51		 push	 ecx
  00406	f3 0f 10 85 84
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$26[ebp+4]
  0040e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00413	51		 push	 ecx
  00414	f3 0f 10 85 80
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$26[ebp]
  0041c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00421	8d 8d 34 fe ff
	ff		 lea	 ecx, DWORD PTR $T22[ebp]
  00427	e8 00 00 00 00	 call	 ??0Vector3f@@QAE@MMM@Z	; Vector3f::Vector3f
  0042c	50		 push	 eax
  0042d	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR _positions$34[ebp]
  00433	e8 00 00 00 00	 call	 ?push_back@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEX$$QAVVector3f@@@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::push_back

; 359  :             texCoords.push_back(Vector2f(texCoord.x, texCoord.y));

  00438	51		 push	 ecx
  00439	f3 0f 10 85 5c
	fe ff ff	 movss	 xmm0, DWORD PTR _texCoord$24[ebp+4]
  00441	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00446	51		 push	 ecx
  00447	f3 0f 10 85 58
	fe ff ff	 movss	 xmm0, DWORD PTR _texCoord$24[ebp]
  0044f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00454	8d 8d 2c fe ff
	ff		 lea	 ecx, DWORD PTR $T21[ebp]
  0045a	e8 00 00 00 00	 call	 ??0?$Vector2@M@@QAE@MM@Z ; Vector2<float>::Vector2<float>
  0045f	50		 push	 eax
  00460	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _texCoords$33[ebp]
  00466	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEX$$QAV?$Vector2@M@@@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::push_back

; 360  :             normals.push_back(Vector3f(normal.x, normal.y, normal.z));

  0046b	51		 push	 ecx
  0046c	f3 0f 10 85 74
	fe ff ff	 movss	 xmm0, DWORD PTR _normal$25[ebp+8]
  00474	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00479	51		 push	 ecx
  0047a	f3 0f 10 85 70
	fe ff ff	 movss	 xmm0, DWORD PTR _normal$25[ebp+4]
  00482	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00487	51		 push	 ecx
  00488	f3 0f 10 85 6c
	fe ff ff	 movss	 xmm0, DWORD PTR _normal$25[ebp]
  00490	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00495	8d 8d 20 fe ff
	ff		 lea	 ecx, DWORD PTR $T20[ebp]
  0049b	e8 00 00 00 00	 call	 ??0Vector3f@@QAE@MMM@Z	; Vector3f::Vector3f
  004a0	50		 push	 eax
  004a1	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _normals$32[ebp]
  004a7	e8 00 00 00 00	 call	 ?push_back@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEX$$QAVVector3f@@@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::push_back

; 361  :             tangents.push_back(Vector3f(tangent.x, tangent.y, tangent.z));

  004ac	51		 push	 ecx
  004ad	f3 0f 10 85 4c
	fe ff ff	 movss	 xmm0, DWORD PTR _tangent$23[ebp+8]
  004b5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ba	51		 push	 ecx
  004bb	f3 0f 10 85 48
	fe ff ff	 movss	 xmm0, DWORD PTR _tangent$23[ebp+4]
  004c3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004c8	51		 push	 ecx
  004c9	f3 0f 10 85 44
	fe ff ff	 movss	 xmm0, DWORD PTR _tangent$23[ebp]
  004d1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004d6	8d 8d 14 fe ff
	ff		 lea	 ecx, DWORD PTR $T19[ebp]
  004dc	e8 00 00 00 00	 call	 ??0Vector3f@@QAE@MMM@Z	; Vector3f::Vector3f
  004e1	50		 push	 eax
  004e2	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _tangents$31[ebp]
  004e8	e8 00 00 00 00	 call	 ?push_back@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEX$$QAVVector3f@@@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::push_back

; 362  :         }

  004ed	e9 2e fe ff ff	 jmp	 $LN5@ImportMesh
$LN6@ImportMesh:

; 363  : 
; 364  :         for (unsigned int j = 0; j < model->mNumFaces; j++)

  004f2	c7 85 10 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _j$18[ebp], 0
  004fc	eb 0f		 jmp	 SHORT $LN10@ImportMesh
$LN8@ImportMesh:
  004fe	8b 85 10 fe ff
	ff		 mov	 eax, DWORD PTR _j$18[ebp]
  00504	83 c0 01	 add	 eax, 1
  00507	89 85 10 fe ff
	ff		 mov	 DWORD PTR _j$18[ebp], eax
$LN10@ImportMesh:
  0050d	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _model$29[ebp]
  00513	8b 95 10 fe ff
	ff		 mov	 edx, DWORD PTR _j$18[ebp]
  00519	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0051c	0f 83 de 00 00
	00		 jae	 $LN9@ImportMesh

; 365  :         {
; 366  :             const aiFace& face = model->mFaces[j];

  00522	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR _model$29[ebp]
  00528	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  0052b	8b 95 10 fe ff
	ff		 mov	 edx, DWORD PTR _j$18[ebp]
  00531	8d 04 d1	 lea	 eax, DWORD PTR [ecx+edx*8]
  00534	89 85 0c fe ff
	ff		 mov	 DWORD PTR _face$17[ebp], eax

; 367  :             assert(face.mNumIndices == 3);

  0053a	8b 8d 0c fe ff
	ff		 mov	 ecx, DWORD PTR _face$17[ebp]
  00540	83 39 03	 cmp	 DWORD PTR [ecx], 3
  00543	74 21		 je	 SHORT $LN16@ImportMesh
  00545	8b f4		 mov	 esi, esp
  00547	68 6f 01 00 00	 push	 367			; 0000016fH
  0054c	68 00 00 00 00	 push	 OFFSET $SG4294911806
  00551	68 00 00 00 00	 push	 OFFSET $SG4294911805
  00556	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  0055c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0055f	3b f4		 cmp	 esi, esp
  00561	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN16@ImportMesh:

; 368  :             indices.push_back(face.mIndices[0] - lastIndexOffset);

  00566	b8 04 00 00 00	 mov	 eax, 4
  0056b	6b c8 00	 imul	 ecx, eax, 0
  0056e	8b 95 0c fe ff
	ff		 mov	 edx, DWORD PTR _face$17[ebp]
  00574	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00577	8b 0c 08	 mov	 ecx, DWORD PTR [eax+ecx]
  0057a	2b 8d 30 ff ff
	ff		 sub	 ecx, DWORD PTR _lastIndexOffset$[ebp]
  00580	89 8d 90 fd ff
	ff		 mov	 DWORD PTR $T11[ebp], ecx
  00586	8d 95 90 fd ff
	ff		 lea	 edx, DWORD PTR $T11[ebp]
  0058c	52		 push	 edx
  0058d	8d 8d b0 fe ff
	ff		 lea	 ecx, DWORD PTR _indices$30[ebp]
  00593	e8 00 00 00 00	 call	 ?push_back@?$vector@IV?$allocator@I@std@@@std@@QAEX$$QAI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::push_back

; 369  :             indices.push_back(face.mIndices[1] - lastIndexOffset);

  00598	b8 04 00 00 00	 mov	 eax, 4
  0059d	c1 e0 00	 shl	 eax, 0
  005a0	8b 8d 0c fe ff
	ff		 mov	 ecx, DWORD PTR _face$17[ebp]
  005a6	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  005a9	8b 04 02	 mov	 eax, DWORD PTR [edx+eax]
  005ac	2b 85 30 ff ff
	ff		 sub	 eax, DWORD PTR _lastIndexOffset$[ebp]
  005b2	89 85 8c fd ff
	ff		 mov	 DWORD PTR $T10[ebp], eax
  005b8	8d 8d 8c fd ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
  005be	51		 push	 ecx
  005bf	8d 8d b0 fe ff
	ff		 lea	 ecx, DWORD PTR _indices$30[ebp]
  005c5	e8 00 00 00 00	 call	 ?push_back@?$vector@IV?$allocator@I@std@@@std@@QAEX$$QAI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::push_back

; 370  :             indices.push_back(face.mIndices[2] - lastIndexOffset);

  005ca	ba 04 00 00 00	 mov	 edx, 4
  005cf	d1 e2		 shl	 edx, 1
  005d1	8b 85 0c fe ff
	ff		 mov	 eax, DWORD PTR _face$17[ebp]
  005d7	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  005da	8b 14 11	 mov	 edx, DWORD PTR [ecx+edx]
  005dd	2b 95 30 ff ff
	ff		 sub	 edx, DWORD PTR _lastIndexOffset$[ebp]
  005e3	89 95 88 fd ff
	ff		 mov	 DWORD PTR $T9[ebp], edx
  005e9	8d 85 88 fd ff
	ff		 lea	 eax, DWORD PTR $T9[ebp]
  005ef	50		 push	 eax
  005f0	8d 8d b0 fe ff
	ff		 lea	 ecx, DWORD PTR _indices$30[ebp]
  005f6	e8 00 00 00 00	 call	 ?push_back@?$vector@IV?$allocator@I@std@@@std@@QAEX$$QAI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::push_back

; 371  :         }

  005fb	e9 fe fe ff ff	 jmp	 $LN8@ImportMesh
$LN9@ImportMesh:

; 372  :         //lastIndexOffset += (positions.size() / 3);
; 373  :         outData.push_back(new MeshData(IndexedModel(indices, positions, texCoords, normals, tangents), model->mMaterialIndex));

  00600	6a 78		 push	 120			; 00000078H
  00602	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00607	83 c4 04	 add	 esp, 4
  0060a	89 85 7c fd ff
	ff		 mov	 DWORD PTR $T6[ebp], eax
  00610	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  00614	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR _model$29[ebp]
  0061a	8b 91 88 00 00
	00		 mov	 edx, DWORD PTR [ecx+136]
  00620	52		 push	 edx
  00621	8d 85 c8 fe ff
	ff		 lea	 eax, DWORD PTR _tangents$31[ebp]
  00627	50		 push	 eax
  00628	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _normals$32[ebp]
  0062e	51		 push	 ecx
  0062f	8d 95 f8 fe ff
	ff		 lea	 edx, DWORD PTR _texCoords$33[ebp]
  00635	52		 push	 edx
  00636	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _positions$34[ebp]
  0063c	50		 push	 eax
  0063d	83 ec 10	 sub	 esp, 16			; 00000010H
  00640	8b cc		 mov	 ecx, esp
  00642	89 a5 28 fd ff
	ff		 mov	 DWORD PTR $T4[ebp], esp
  00648	8d 95 b0 fe ff
	ff		 lea	 edx, DWORD PTR _indices$30[ebp]
  0064e	52		 push	 edx
  0064f	e8 00 00 00 00	 call	 ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV01@@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> >
  00654	89 85 e4 fc ff
	ff		 mov	 DWORD PTR tv434[ebp], eax
  0065a	8d 8d 2c fd ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00660	e8 00 00 00 00	 call	 ??0IndexedModel@@QAE@V?$vector@IV?$allocator@I@std@@@std@@ABV?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@2@ABV?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@2@11@Z ; IndexedModel::IndexedModel
  00665	89 85 e0 fc ff
	ff		 mov	 DWORD PTR tv312[ebp], eax
  0066b	8b 85 e0 fc ff
	ff		 mov	 eax, DWORD PTR tv312[ebp]
  00671	89 85 dc fc ff
	ff		 mov	 DWORD PTR tv439[ebp], eax
  00677	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  0067b	8b 8d 14 fd ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  00681	83 c9 01	 or	 ecx, 1
  00684	89 8d 14 fd ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  0068a	8b 95 dc fc ff
	ff		 mov	 edx, DWORD PTR tv439[ebp]
  00690	52		 push	 edx
  00691	8b 8d 7c fd ff
	ff		 mov	 ecx, DWORD PTR $T6[ebp]
  00697	e8 00 00 00 00	 call	 ??0MeshData@@QAE@ABVIndexedModel@@H@Z ; MeshData::MeshData
  0069c	89 85 d8 fc ff
	ff		 mov	 DWORD PTR tv308[ebp], eax
  006a2	8b 85 d8 fc ff
	ff		 mov	 eax, DWORD PTR tv308[ebp]
  006a8	89 85 d4 fc ff
	ff		 mov	 DWORD PTR tv334[ebp], eax
  006ae	eb 0a		 jmp	 SHORT $LN18@ImportMesh
  006b0	c7 85 d4 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv334[ebp], 0
$LN18@ImportMesh:
  006ba	8b 8d d4 fc ff
	ff		 mov	 ecx, DWORD PTR tv334[ebp]
  006c0	89 8d 80 fd ff
	ff		 mov	 DWORD PTR $T7[ebp], ecx
  006c6	c7 45 fc 0e 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  006cd	8b 95 80 fd ff
	ff		 mov	 edx, DWORD PTR $T7[ebp]
  006d3	89 95 84 fd ff
	ff		 mov	 DWORD PTR $T8[ebp], edx
  006d9	8d 85 84 fd ff
	ff		 lea	 eax, DWORD PTR $T8[ebp]
  006df	50		 push	 eax
  006e0	8d 8d 38 ff ff
	ff		 lea	 ecx, DWORD PTR _outData$[ebp]
  006e6	e8 00 00 00 00	 call	 ?push_back@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAEX$$QAPAVMeshData@@@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::push_back
  006eb	c7 45 fc 0b 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  006f2	8b 8d 14 fd ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  006f8	83 e1 01	 and	 ecx, 1
  006fb	74 12		 je	 SHORT $LN35@ImportMesh
  006fd	83 a5 14 fd ff
	ff fe		 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00704	8d 8d 2c fd ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  0070a	e8 00 00 00 00	 call	 ??1IndexedModel@@QAE@XZ
$LN35@ImportMesh:

; 374  :         s_resourceMap.insert(std::pair<std::string, MeshData*>(fileName + "_" + Util::to_string(i), outData.at(outData.size()-1)));

  0070f	8d 95 28 ff ff
	ff		 lea	 edx, DWORD PTR _i$35[ebp]
  00715	52		 push	 edx
  00716	8d 85 d4 fd ff
	ff		 lea	 eax, DWORD PTR $T15[ebp]
  0071c	50		 push	 eax
  0071d	e8 00 00 00 00	 call	 ??$to_string@I@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; Util::to_string<unsigned int>
  00722	83 c4 08	 add	 esp, 8
  00725	89 85 d0 fc ff
	ff		 mov	 DWORD PTR tv149[ebp], eax
  0072b	8b 8d d0 fc ff
	ff		 mov	 ecx, DWORD PTR tv149[ebp]
  00731	89 8d cc fc ff
	ff		 mov	 DWORD PTR tv443[ebp], ecx
  00737	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH
  0073b	68 00 00 00 00	 push	 OFFSET $SG4294911804
  00740	8b 55 0c	 mov	 edx, DWORD PTR _fileName$[ebp]
  00743	52		 push	 edx
  00744	8d 85 f0 fd ff
	ff		 lea	 eax, DWORD PTR $T16[ebp]
  0074a	50		 push	 eax
  0074b	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00750	83 c4 0c	 add	 esp, 12			; 0000000cH
  00753	89 85 c8 fc ff
	ff		 mov	 DWORD PTR tv462[ebp], eax
  00759	8b 8d c8 fc ff
	ff		 mov	 ecx, DWORD PTR tv462[ebp]
  0075f	89 8d c4 fc ff
	ff		 mov	 DWORD PTR tv445[ebp], ecx
  00765	c6 45 fc 10	 mov	 BYTE PTR __$EHRec$[ebp+8], 16 ; 00000010H
  00769	8b 95 cc fc ff
	ff		 mov	 edx, DWORD PTR tv443[ebp]
  0076f	52		 push	 edx
  00770	8b 85 c4 fc ff
	ff		 mov	 eax, DWORD PTR tv445[ebp]
  00776	50		 push	 eax
  00777	8d 8d b8 fd ff
	ff		 lea	 ecx, DWORD PTR $T14[ebp]
  0077d	51		 push	 ecx
  0077e	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00783	83 c4 0c	 add	 esp, 12			; 0000000cH
  00786	89 85 c0 fc ff
	ff		 mov	 DWORD PTR tv463[ebp], eax
  0078c	8b 95 c0 fc ff
	ff		 mov	 edx, DWORD PTR tv463[ebp]
  00792	89 95 bc fc ff
	ff		 mov	 DWORD PTR tv447[ebp], edx
  00798	c6 45 fc 11	 mov	 BYTE PTR __$EHRec$[ebp+8], 17 ; 00000011H
  0079c	8d 8d 38 ff ff
	ff		 lea	 ecx, DWORD PTR _outData$[ebp]
  007a2	e8 00 00 00 00	 call	 ?size@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ ; std::vector<MeshData *,std::allocator<MeshData *> >::size
  007a7	83 e8 01	 sub	 eax, 1
  007aa	50		 push	 eax
  007ab	8d 8d 38 ff ff
	ff		 lea	 ecx, DWORD PTR _outData$[ebp]
  007b1	e8 00 00 00 00	 call	 ?at@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAEAAPAVMeshData@@I@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::at
  007b6	50		 push	 eax
  007b7	8b 85 bc fc ff
	ff		 mov	 eax, DWORD PTR tv447[ebp]
  007bd	50		 push	 eax
  007be	8d 8d 98 fd ff
	ff		 lea	 ecx, DWORD PTR $T13[ebp]
  007c4	e8 00 00 00 00	 call	 ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAPAVMeshData@@X@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@QAE@$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAPAVMeshData@@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *><std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData * &,void>
  007c9	89 85 b8 fc ff
	ff		 mov	 DWORD PTR tv464[ebp], eax
  007cf	8b 8d b8 fc ff
	ff		 mov	 ecx, DWORD PTR tv464[ebp]
  007d5	89 8d b4 fc ff
	ff		 mov	 DWORD PTR tv449[ebp], ecx
  007db	c6 45 fc 12	 mov	 BYTE PTR __$EHRec$[ebp+8], 18 ; 00000012H
  007df	8b 95 b4 fc ff
	ff		 mov	 edx, DWORD PTR tv449[ebp]
  007e5	52		 push	 edx
  007e6	8d 85 18 fd ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  007ec	50		 push	 eax
  007ed	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_resourceMap@Mesh@@2V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@A ; Mesh::s_resourceMap
  007f2	e8 00 00 00 00	 call	 ??$insert@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::insert<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *> >
  007f7	8d 8d 18 fd ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  007fd	e8 00 00 00 00	 call	 ??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
  00802	c6 45 fc 11	 mov	 BYTE PTR __$EHRec$[ebp+8], 17 ; 00000011H
  00806	8d 8d 98 fd ff
	ff		 lea	 ecx, DWORD PTR $T13[ebp]
  0080c	e8 00 00 00 00	 call	 ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@QAE@XZ
  00811	c6 45 fc 10	 mov	 BYTE PTR __$EHRec$[ebp+8], 16 ; 00000010H
  00815	8d 8d b8 fd ff
	ff		 lea	 ecx, DWORD PTR $T14[ebp]
  0081b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00820	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH
  00824	8d 8d f0 fd ff
	ff		 lea	 ecx, DWORD PTR $T16[ebp]
  0082a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0082f	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  00833	8d 8d d4 fd ff
	ff		 lea	 ecx, DWORD PTR $T15[ebp]
  00839	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 375  :     }

  0083e	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  00842	8d 8d b0 fe ff
	ff		 lea	 ecx, DWORD PTR _indices$30[ebp]
  00848	e8 00 00 00 00	 call	 ??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >
  0084d	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  00851	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _tangents$31[ebp]
  00857	e8 00 00 00 00	 call	 ??1?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAE@XZ ; std::vector<Vector3f,std::allocator<Vector3f> >::~vector<Vector3f,std::allocator<Vector3f> >
  0085c	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  00860	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _normals$32[ebp]
  00866	e8 00 00 00 00	 call	 ??1?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAE@XZ ; std::vector<Vector3f,std::allocator<Vector3f> >::~vector<Vector3f,std::allocator<Vector3f> >
  0086b	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  0086f	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _texCoords$33[ebp]
  00875	e8 00 00 00 00	 call	 ??1?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAE@XZ ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::~vector<Vector2<float>,std::allocator<Vector2<float> > >
  0087a	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  0087e	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR _positions$34[ebp]
  00884	e8 00 00 00 00	 call	 ??1?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAE@XZ ; std::vector<Vector3f,std::allocator<Vector3f> >::~vector<Vector3f,std::allocator<Vector3f> >
  00889	e9 d0 f9 ff ff	 jmp	 $LN2@ImportMesh
$LN3@ImportMesh:

; 376  : 
; 377  : 
; 378  :     return outData;

  0088e	8d 8d 38 ff ff
	ff		 lea	 ecx, DWORD PTR _outData$[ebp]
  00894	51		 push	 ecx
  00895	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00898	e8 00 00 00 00	 call	 ??0?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@$$QAV01@@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::vector<MeshData *,std::allocator<MeshData *> >
  0089d	8b 95 14 fd ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  008a3	83 ca 02	 or	 edx, 2
  008a6	89 95 14 fd ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  008ac	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  008b0	8d 8d 38 ff ff
	ff		 lea	 ecx, DWORD PTR _outData$[ebp]
  008b6	e8 00 00 00 00	 call	 ??1?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@XZ ; std::vector<MeshData *,std::allocator<MeshData *> >::~vector<MeshData *,std::allocator<MeshData *> >
  008bb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  008c2	8b f4		 mov	 esi, esp
  008c4	8d 4d e8	 lea	 ecx, DWORD PTR _importer$[ebp]
  008c7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1Importer@Assimp@@QAE@XZ
  008cd	3b f4		 cmp	 esi, esp
  008cf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008d4	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 379  : }

  008d7	52		 push	 edx
  008d8	8b cd		 mov	 ecx, ebp
  008da	50		 push	 eax
  008db	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN58@ImportMesh
  008e1	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  008e6	58		 pop	 eax
  008e7	5a		 pop	 edx
  008e8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  008eb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  008f2	59		 pop	 ecx
  008f3	5f		 pop	 edi
  008f4	5e		 pop	 esi
  008f5	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  008f8	33 cd		 xor	 ecx, ebp
  008fa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  008ff	81 c4 4c 03 00
	00		 add	 esp, 844		; 0000034cH
  00905	3b ec		 cmp	 ebp, esp
  00907	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0090c	8b e5		 mov	 esp, ebp
  0090e	5d		 pop	 ebp
  0090f	c3		 ret	 0
$LN58@ImportMesh:
  00910	0d 00 00 00	 DD	 13			; 0000000dH
  00914	00 00 00 00	 DD	 $LN57@ImportMesh
$LN57@ImportMesh:
  00918	e8 ff ff ff	 DD	 -24			; ffffffe8H
  0091c	04 00 00 00	 DD	 4
  00920	00 00 00 00	 DD	 $LN43@ImportMesh
  00924	38 ff ff ff	 DD	 -200			; ffffff38H
  00928	10 00 00 00	 DD	 16			; 00000010H
  0092c	00 00 00 00	 DD	 $LN44@ImportMesh
  00930	28 ff ff ff	 DD	 -216			; ffffff28H
  00934	04 00 00 00	 DD	 4
  00938	00 00 00 00	 DD	 $LN45@ImportMesh
  0093c	10 ff ff ff	 DD	 -240			; ffffff10H
  00940	10 00 00 00	 DD	 16			; 00000010H
  00944	00 00 00 00	 DD	 $LN46@ImportMesh
  00948	f8 fe ff ff	 DD	 -264			; fffffef8H
  0094c	10 00 00 00	 DD	 16			; 00000010H
  00950	00 00 00 00	 DD	 $LN47@ImportMesh
  00954	e0 fe ff ff	 DD	 -288			; fffffee0H
  00958	10 00 00 00	 DD	 16			; 00000010H
  0095c	00 00 00 00	 DD	 $LN48@ImportMesh
  00960	c8 fe ff ff	 DD	 -312			; fffffec8H
  00964	10 00 00 00	 DD	 16			; 00000010H
  00968	00 00 00 00	 DD	 $LN49@ImportMesh
  0096c	b0 fe ff ff	 DD	 -336			; fffffeb0H
  00970	10 00 00 00	 DD	 16			; 00000010H
  00974	00 00 00 00	 DD	 $LN50@ImportMesh
  00978	98 fe ff ff	 DD	 -360			; fffffe98H
  0097c	0c 00 00 00	 DD	 12			; 0000000cH
  00980	00 00 00 00	 DD	 $LN51@ImportMesh
  00984	80 fe ff ff	 DD	 -384			; fffffe80H
  00988	0c 00 00 00	 DD	 12			; 0000000cH
  0098c	00 00 00 00	 DD	 $LN52@ImportMesh
  00990	6c fe ff ff	 DD	 -404			; fffffe6cH
  00994	0c 00 00 00	 DD	 12			; 0000000cH
  00998	00 00 00 00	 DD	 $LN53@ImportMesh
  0099c	58 fe ff ff	 DD	 -424			; fffffe58H
  009a0	0c 00 00 00	 DD	 12			; 0000000cH
  009a4	00 00 00 00	 DD	 $LN54@ImportMesh
  009a8	44 fe ff ff	 DD	 -444			; fffffe44H
  009ac	0c 00 00 00	 DD	 12			; 0000000cH
  009b0	00 00 00 00	 DD	 $LN55@ImportMesh
$LN55@ImportMesh:
  009b4	74		 DB	 116			; 00000074H
  009b5	61		 DB	 97			; 00000061H
  009b6	6e		 DB	 110			; 0000006eH
  009b7	67		 DB	 103			; 00000067H
  009b8	65		 DB	 101			; 00000065H
  009b9	6e		 DB	 110			; 0000006eH
  009ba	74		 DB	 116			; 00000074H
  009bb	00		 DB	 0
$LN54@ImportMesh:
  009bc	74		 DB	 116			; 00000074H
  009bd	65		 DB	 101			; 00000065H
  009be	78		 DB	 120			; 00000078H
  009bf	43		 DB	 67			; 00000043H
  009c0	6f		 DB	 111			; 0000006fH
  009c1	6f		 DB	 111			; 0000006fH
  009c2	72		 DB	 114			; 00000072H
  009c3	64		 DB	 100			; 00000064H
  009c4	00		 DB	 0
$LN53@ImportMesh:
  009c5	6e		 DB	 110			; 0000006eH
  009c6	6f		 DB	 111			; 0000006fH
  009c7	72		 DB	 114			; 00000072H
  009c8	6d		 DB	 109			; 0000006dH
  009c9	61		 DB	 97			; 00000061H
  009ca	6c		 DB	 108			; 0000006cH
  009cb	00		 DB	 0
$LN52@ImportMesh:
  009cc	70		 DB	 112			; 00000070H
  009cd	6f		 DB	 111			; 0000006fH
  009ce	73		 DB	 115			; 00000073H
  009cf	00		 DB	 0
$LN51@ImportMesh:
  009d0	61		 DB	 97			; 00000061H
  009d1	69		 DB	 105			; 00000069H
  009d2	5a		 DB	 90			; 0000005aH
  009d3	65		 DB	 101			; 00000065H
  009d4	72		 DB	 114			; 00000072H
  009d5	6f		 DB	 111			; 0000006fH
  009d6	56		 DB	 86			; 00000056H
  009d7	65		 DB	 101			; 00000065H
  009d8	63		 DB	 99			; 00000063H
  009d9	74		 DB	 116			; 00000074H
  009da	6f		 DB	 111			; 0000006fH
  009db	72		 DB	 114			; 00000072H
  009dc	00		 DB	 0
$LN50@ImportMesh:
  009dd	69		 DB	 105			; 00000069H
  009de	6e		 DB	 110			; 0000006eH
  009df	64		 DB	 100			; 00000064H
  009e0	69		 DB	 105			; 00000069H
  009e1	63		 DB	 99			; 00000063H
  009e2	65		 DB	 101			; 00000065H
  009e3	73		 DB	 115			; 00000073H
  009e4	00		 DB	 0
$LN49@ImportMesh:
  009e5	74		 DB	 116			; 00000074H
  009e6	61		 DB	 97			; 00000061H
  009e7	6e		 DB	 110			; 0000006eH
  009e8	67		 DB	 103			; 00000067H
  009e9	65		 DB	 101			; 00000065H
  009ea	6e		 DB	 110			; 0000006eH
  009eb	74		 DB	 116			; 00000074H
  009ec	73		 DB	 115			; 00000073H
  009ed	00		 DB	 0
$LN48@ImportMesh:
  009ee	6e		 DB	 110			; 0000006eH
  009ef	6f		 DB	 111			; 0000006fH
  009f0	72		 DB	 114			; 00000072H
  009f1	6d		 DB	 109			; 0000006dH
  009f2	61		 DB	 97			; 00000061H
  009f3	6c		 DB	 108			; 0000006cH
  009f4	73		 DB	 115			; 00000073H
  009f5	00		 DB	 0
$LN47@ImportMesh:
  009f6	74		 DB	 116			; 00000074H
  009f7	65		 DB	 101			; 00000065H
  009f8	78		 DB	 120			; 00000078H
  009f9	43		 DB	 67			; 00000043H
  009fa	6f		 DB	 111			; 0000006fH
  009fb	6f		 DB	 111			; 0000006fH
  009fc	72		 DB	 114			; 00000072H
  009fd	64		 DB	 100			; 00000064H
  009fe	73		 DB	 115			; 00000073H
  009ff	00		 DB	 0
$LN46@ImportMesh:
  00a00	70		 DB	 112			; 00000070H
  00a01	6f		 DB	 111			; 0000006fH
  00a02	73		 DB	 115			; 00000073H
  00a03	69		 DB	 105			; 00000069H
  00a04	74		 DB	 116			; 00000074H
  00a05	69		 DB	 105			; 00000069H
  00a06	6f		 DB	 111			; 0000006fH
  00a07	6e		 DB	 110			; 0000006eH
  00a08	73		 DB	 115			; 00000073H
  00a09	00		 DB	 0
$LN45@ImportMesh:
  00a0a	69		 DB	 105			; 00000069H
  00a0b	00		 DB	 0
$LN44@ImportMesh:
  00a0c	6f		 DB	 111			; 0000006fH
  00a0d	75		 DB	 117			; 00000075H
  00a0e	74		 DB	 116			; 00000074H
  00a0f	44		 DB	 68			; 00000044H
  00a10	61		 DB	 97			; 00000061H
  00a11	74		 DB	 116			; 00000074H
  00a12	61		 DB	 97			; 00000061H
  00a13	00		 DB	 0
$LN43@ImportMesh:
  00a14	69		 DB	 105			; 00000069H
  00a15	6d		 DB	 109			; 0000006dH
  00a16	70		 DB	 112			; 00000070H
  00a17	6f		 DB	 111			; 0000006fH
  00a18	72		 DB	 114			; 00000072H
  00a19	74		 DB	 116			; 00000074H
  00a1a	65		 DB	 101			; 00000065H
  00a1b	72		 DB	 114			; 00000072H
  00a1c	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR _importer$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1Importer@Assimp@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$1:
  00012	8d 4d c4	 lea	 ecx, DWORD PTR $T40[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$2:
  0001a	8d 4d a8	 lea	 ecx, DWORD PTR $T39[ebp]
  0001d	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$3:
  00022	8d 4d 8c	 lea	 ecx, DWORD PTR $T38[ebp]
  00025	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$4:
  0002a	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR $T37[ebp]
  00030	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$5:
  00035	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR $T36[ebp]
  0003b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$6:
  00040	8d 8d 38 ff ff
	ff		 lea	 ecx, DWORD PTR _outData$[ebp]
  00046	e9 00 00 00 00	 jmp	 ??1?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@XZ ; std::vector<MeshData *,std::allocator<MeshData *> >::~vector<MeshData *,std::allocator<MeshData *> >
__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$7:
  0004b	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR _positions$34[ebp]
  00051	e9 00 00 00 00	 jmp	 ??1?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAE@XZ ; std::vector<Vector3f,std::allocator<Vector3f> >::~vector<Vector3f,std::allocator<Vector3f> >
__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$8:
  00056	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _texCoords$33[ebp]
  0005c	e9 00 00 00 00	 jmp	 ??1?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAE@XZ ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::~vector<Vector2<float>,std::allocator<Vector2<float> > >
__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$9:
  00061	8d 8d e0 fe ff
	ff		 lea	 ecx, DWORD PTR _normals$32[ebp]
  00067	e9 00 00 00 00	 jmp	 ??1?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAE@XZ ; std::vector<Vector3f,std::allocator<Vector3f> >::~vector<Vector3f,std::allocator<Vector3f> >
__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$10:
  0006c	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _tangents$31[ebp]
  00072	e9 00 00 00 00	 jmp	 ??1?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAE@XZ ; std::vector<Vector3f,std::allocator<Vector3f> >::~vector<Vector3f,std::allocator<Vector3f> >
__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$11:
  00077	8d 8d b0 fe ff
	ff		 lea	 ecx, DWORD PTR _indices$30[ebp]
  0007d	e9 00 00 00 00	 jmp	 ??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ ; std::vector<unsigned int,std::allocator<unsigned int> >::~vector<unsigned int,std::allocator<unsigned int> >
__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$12:
  00082	6a 78		 push	 120			; 00000078H
  00084	8b 85 7c fd ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  0008a	50		 push	 eax
  0008b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00090	83 c4 08	 add	 esp, 8
  00093	c3		 ret	 0
__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$14:
  00094	8b 85 14 fd ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  0009a	83 e0 01	 and	 eax, 1
  0009d	0f 84 12 00 00
	00		 je	 $LN34@ImportMesh
  000a3	83 a5 14 fd ff
	ff fe		 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  000aa	8d 8d 2c fd ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  000b0	e9 00 00 00 00	 jmp	 ??1IndexedModel@@QAE@XZ
$LN34@ImportMesh:
  000b5	c3		 ret	 0
__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$15:
  000b6	8d 8d d4 fd ff
	ff		 lea	 ecx, DWORD PTR $T15[ebp]
  000bc	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$16:
  000c1	8d 8d f0 fd ff
	ff		 lea	 ecx, DWORD PTR $T16[ebp]
  000c7	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$17:
  000cc	8d 8d b8 fd ff
	ff		 lea	 ecx, DWORD PTR $T14[ebp]
  000d2	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z$18:
  000d7	8d 8d 98 fd ff
	ff		 lea	 ecx, DWORD PTR $T13[ebp]
  000dd	e9 00 00 00 00	 jmp	 ??1?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@QAE@XZ
__ehhandler$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z:
  000e2	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  000e6	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  000e9	8b 8a b4 fc ff
	ff		 mov	 ecx, DWORD PTR [edx-844]
  000ef	33 c8		 xor	 ecx, eax
  000f1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f6	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  000f9	33 c8		 xor	 ecx, eax
  000fb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00100	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z
  00105	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ImportMeshData@Mesh@@SA?AV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z ENDP ; Mesh::ImportMeshData
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\rendering\mesh.cpp
_TEXT	SEGMENT
tv156 = -304						; size = 4
tv213 = -300						; size = 4
tv222 = -296						; size = 4
tv211 = -292						; size = 4
tv221 = -288						; size = 4
tv209 = -284						; size = 4
tv220 = -280						; size = 4
tv207 = -276						; size = 4
tv219 = -272						; size = 4
tv205 = -268						; size = 4
tv218 = -264						; size = 4
$T2 = -260						; size = 4
$T3 = -256						; size = 4
$T4 = -252						; size = 4
_face$5 = -248						; size = 4
_j$6 = -244						; size = 4
$T7 = -240						; size = 16
_pos$8 = -208						; size = 12
_j$9 = -192						; size = 4
_model$10 = -188					; size = 4
_i$11 = -184						; size = 4
_mesh$ = -180						; size = 4
$T12 = -176						; size = 28
$T13 = -148						; size = 28
$T14 = -120						; size = 28
$T15 = -92						; size = 28
$T16 = -64						; size = 28
_scene$ = -36						; size = 4
_importer$ = -28					; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_fileName$ = 8						; size = 4
?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Mesh::ImportColData

; 382  : {

  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	6a ff		 push	 -1
  00018	68 00 00 00 00	 push	 __ehhandler$?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  0001d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00023	50		 push	 eax
  00024	53		 push	 ebx
  00025	81 ec 2c 01 00
	00		 sub	 esp, 300		; 0000012cH
  0002b	56		 push	 esi
  0002c	57		 push	 edi
  0002d	8d bd c4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-316]
  00033	b9 4b 00 00 00	 mov	 ecx, 75			; 0000004bH
  00038	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0003d	f3 ab		 rep stosd
  0003f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00044	33 c5		 xor	 eax, ebp
  00046	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00049	50		 push	 eax
  0004a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0004d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 383  : 	Assimp::Importer importer;

  00053	8b f4		 mov	 esi, esp
  00055	8d 4d e4	 lea	 ecx, DWORD PTR _importer$[ebp]
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0Importer@Assimp@@QAE@XZ
  0005e	3b f4		 cmp	 esi, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 384  : 
; 385  : 	const aiScene* scene = importer.ReadFile((Util::ResourcePath() + "models/" + fileName).c_str(),

  0006c	8d 45 c0	 lea	 eax, DWORD PTR $T16[ebp]
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ?ResourcePath@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; Util::ResourcePath
  00075	83 c4 04	 add	 esp, 4
  00078	89 85 f8 fe ff
	ff		 mov	 DWORD PTR tv218[ebp], eax
  0007e	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR tv218[ebp]
  00084	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv205[ebp], ecx
  0008a	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0008e	68 00 00 00 00	 push	 OFFSET $SG4294911803
  00093	8b 95 f4 fe ff
	ff		 mov	 edx, DWORD PTR tv205[ebp]
  00099	52		 push	 edx
  0009a	8d 45 a4	 lea	 eax, DWORD PTR $T15[ebp]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  000a3	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a6	89 85 f0 fe ff
	ff		 mov	 DWORD PTR tv219[ebp], eax
  000ac	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR tv219[ebp]
  000b2	89 8d ec fe ff
	ff		 mov	 DWORD PTR tv207[ebp], ecx
  000b8	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000bc	8b 53 08	 mov	 edx, DWORD PTR _fileName$[ebx]
  000bf	52		 push	 edx
  000c0	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR tv207[ebp]
  000c6	50		 push	 eax
  000c7	8d 4d 88	 lea	 ecx, DWORD PTR $T14[ebp]
  000ca	51		 push	 ecx
  000cb	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  000d0	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d3	89 85 e8 fe ff
	ff		 mov	 DWORD PTR tv220[ebp], eax
  000d9	8b 95 e8 fe ff
	ff		 mov	 edx, DWORD PTR tv220[ebp]
  000df	89 95 e4 fe ff
	ff		 mov	 DWORD PTR tv209[ebp], edx
  000e5	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000e9	8b f4		 mov	 esi, esp
  000eb	68 49 81 e2 00	 push	 14844233		; 00e28149H
  000f0	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR tv209[ebp]
  000f6	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  000fb	50		 push	 eax
  000fc	8d 4d e4	 lea	 ecx, DWORD PTR _importer$[ebp]
  000ff	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?ReadFile@Importer@Assimp@@QAEPBUaiScene@@PBDI@Z
  00105	3b f4		 cmp	 esi, esp
  00107	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010c	89 45 dc	 mov	 DWORD PTR _scene$[ebp], eax
  0010f	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00113	8d 4d 88	 lea	 ecx, DWORD PTR $T14[ebp]
  00116	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0011b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0011f	8d 4d a4	 lea	 ecx, DWORD PTR $T15[ebp]
  00122	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00127	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0012b	8d 4d c0	 lea	 ecx, DWORD PTR $T16[ebp]
  0012e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 386  : 		aiProcess_Triangulate |
; 387  : 		aiProcess_GenSmoothNormals |
; 388  : 		aiProcess_FlipUVs |
; 389  : 		aiProcess_OptimizeGraph |
; 390  : 		aiProcess_OptimizeMeshes |
; 391  : 		aiProcess_PreTransformVertices |
; 392  : 		//aiProcess_JoinIdenticalVertices |
; 393  : 		aiProcess_SortByPType |
; 394  : 		//aiProcess_FixInfacingNormals |
; 395  : 		aiProcess_FindInvalidData |
; 396  : 		//aiProcess_ValidateDataStructure |
; 397  : 		aiProcess_CalcTangentSpace);
; 398  : 
; 399  : 	if (!scene)

  00133	83 7d dc 00	 cmp	 DWORD PTR _scene$[ebp], 0
  00137	0f 85 c2 00 00
	00		 jne	 $LN11@ImportColD

; 400  : 	{
; 401  : 		std::cout << "Mesh load failed!: " << fileName << std::endl;

  0013d	8b f4		 mov	 esi, esp
  0013f	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  00144	8b 43 08	 mov	 eax, DWORD PTR _fileName$[ebx]
  00147	50		 push	 eax
  00148	68 00 00 00 00	 push	 OFFSET $SG4294911802
  0014d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00153	51		 push	 ecx
  00154	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00159	83 c4 08	 add	 esp, 8
  0015c	50		 push	 eax
  0015d	e8 00 00 00 00	 call	 ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
  00162	83 c4 08	 add	 esp, 8
  00165	8b c8		 mov	 ecx, eax
  00167	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  0016d	3b f4		 cmp	 esi, esp
  0016f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 402  : 		scene = importer.ReadFile(Util::ResourcePath() + "models/error.obj",

  00174	8d 95 6c ff ff
	ff		 lea	 edx, DWORD PTR $T13[ebp]
  0017a	52		 push	 edx
  0017b	e8 00 00 00 00	 call	 ?ResourcePath@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; Util::ResourcePath
  00180	83 c4 04	 add	 esp, 4
  00183	89 85 e0 fe ff
	ff		 mov	 DWORD PTR tv221[ebp], eax
  00189	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv221[ebp]
  0018f	89 85 dc fe ff
	ff		 mov	 DWORD PTR tv211[ebp], eax
  00195	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00199	68 00 00 00 00	 push	 OFFSET $SG4294911801
  0019e	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR tv211[ebp]
  001a4	51		 push	 ecx
  001a5	8d 95 50 ff ff
	ff		 lea	 edx, DWORD PTR $T12[ebp]
  001ab	52		 push	 edx
  001ac	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  001b1	83 c4 0c	 add	 esp, 12			; 0000000cH
  001b4	89 85 d8 fe ff
	ff		 mov	 DWORD PTR tv222[ebp], eax
  001ba	8b 85 d8 fe ff
	ff		 mov	 eax, DWORD PTR tv222[ebp]
  001c0	89 85 d4 fe ff
	ff		 mov	 DWORD PTR tv213[ebp], eax
  001c6	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  001ca	68 49 a0 82 00	 push	 8560713			; 0082a049H
  001cf	8b 8d d4 fe ff
	ff		 mov	 ecx, DWORD PTR tv213[ebp]
  001d5	51		 push	 ecx
  001d6	8d 4d e4	 lea	 ecx, DWORD PTR _importer$[ebp]
  001d9	e8 00 00 00 00	 call	 ?ReadFile@Importer@Assimp@@QAEPBUaiScene@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; Assimp::Importer::ReadFile
  001de	89 45 dc	 mov	 DWORD PTR _scene$[ebp], eax
  001e1	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  001e5	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR $T12[ebp]
  001eb	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001f0	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001f4	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR $T13[ebp]
  001fa	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN11@ImportColD:

; 403  : 			aiProcess_Triangulate |
; 404  : 			aiProcess_GenSmoothNormals |
; 405  : 			aiProcess_FlipUVs |
; 406  : 			// aiProcess_OptimizeGraph |
; 407  : 			//aiProcess_PreTransformVertices |
; 408  : 			//aiProcess_JoinIdenticalVertices |
; 409  : 			aiProcess_SortByPType |
; 410  : 			aiProcess_FixInfacingNormals |
; 411  : 			aiProcess_FindInvalidData |
; 412  : 			//aiProcess_ValidateDataStructure |
; 413  : 			aiProcess_CalcTangentSpace);
; 414  : 	}
; 415  : 
; 416  : 	btTriangleMesh* mesh = new btTriangleMesh();

  001ff	68 c0 00 00 00	 push	 192			; 000000c0H
  00204	e8 00 00 00 00	 call	 ??2btTriangleIndexVertexArray@@SAPAXI@Z ; btTriangleIndexVertexArray::operator new
  00209	83 c4 04	 add	 esp, 4
  0020c	89 85 00 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00212	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00216	83 bd 00 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  0021d	74 17		 je	 SHORT $LN13@ImportColD
  0021f	6a 01		 push	 1
  00221	6a 01		 push	 1
  00223	8b 8d 00 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  00229	e8 00 00 00 00	 call	 ??0btTriangleMesh@@QAE@_N0@Z ; btTriangleMesh::btTriangleMesh
  0022e	89 85 d0 fe ff
	ff		 mov	 DWORD PTR tv156[ebp], eax
  00234	eb 0a		 jmp	 SHORT $LN14@ImportColD
$LN13@ImportColD:
  00236	c7 85 d0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv156[ebp], 0
$LN14@ImportColD:
  00240	8b 95 d0 fe ff
	ff		 mov	 edx, DWORD PTR tv156[ebp]
  00246	89 95 04 ff ff
	ff		 mov	 DWORD PTR $T4[ebp], edx
  0024c	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00250	8b 85 04 ff ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  00256	89 85 4c ff ff
	ff		 mov	 DWORD PTR _mesh$[ebp], eax

; 417  : 
; 418  : 	for (unsigned int i = 0; i < scene->mNumMeshes; i++)

  0025c	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$11[ebp], 0
  00266	eb 0f		 jmp	 SHORT $LN4@ImportColD
$LN2@ImportColD:
  00268	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _i$11[ebp]
  0026e	83 c1 01	 add	 ecx, 1
  00271	89 8d 48 ff ff
	ff		 mov	 DWORD PTR _i$11[ebp], ecx
$LN4@ImportColD:
  00277	8b 55 dc	 mov	 edx, DWORD PTR _scene$[ebp]
  0027a	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR _i$11[ebp]
  00280	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00283	0f 83 54 01 00
	00		 jae	 $LN3@ImportColD

; 419  : 	{
; 420  : 		const aiMesh* model = scene->mMeshes[i];

  00289	8b 4d dc	 mov	 ecx, DWORD PTR _scene$[ebp]
  0028c	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0028f	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR _i$11[ebp]
  00295	8b 0c 82	 mov	 ecx, DWORD PTR [edx+eax*4]
  00298	89 8d 44 ff ff
	ff		 mov	 DWORD PTR _model$10[ebp], ecx

; 421  : 
; 422  : 		for (unsigned int j = 0; j < model->mNumVertices; j++)

  0029e	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _j$9[ebp], 0
  002a8	eb 0f		 jmp	 SHORT $LN7@ImportColD
$LN5@ImportColD:
  002aa	8b 95 40 ff ff
	ff		 mov	 edx, DWORD PTR _j$9[ebp]
  002b0	83 c2 01	 add	 edx, 1
  002b3	89 95 40 ff ff
	ff		 mov	 DWORD PTR _j$9[ebp], edx
$LN7@ImportColD:
  002b9	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _model$10[ebp]
  002bf	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR _j$9[ebp]
  002c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  002c8	73 4c		 jae	 SHORT $LN6@ImportColD

; 423  : 		{
; 424  : 			const aiVector3D pos = model->mVertices[j];

  002ca	6b 95 40 ff ff
	ff 0c		 imul	 edx, DWORD PTR _j$9[ebp], 12
  002d1	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _model$10[ebp]
  002d7	03 50 0c	 add	 edx, DWORD PTR [eax+12]
  002da	52		 push	 edx
  002db	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _pos$8[ebp]
  002e1	e8 00 00 00 00	 call	 ??0?$aiVector3t@M@@QAE@ABV0@@Z ; aiVector3t<float>::aiVector3t<float>

; 425  : 
; 426  : 			mesh->findOrAddVertex(btVector3(pos.x, pos.y, pos.z), false);

  002e6	6a 00		 push	 0
  002e8	8d 8d 38 ff ff
	ff		 lea	 ecx, DWORD PTR _pos$8[ebp+8]
  002ee	51		 push	 ecx
  002ef	8d 95 34 ff ff
	ff		 lea	 edx, DWORD PTR _pos$8[ebp+4]
  002f5	52		 push	 edx
  002f6	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR _pos$8[ebp]
  002fc	50		 push	 eax
  002fd	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  00303	e8 00 00 00 00	 call	 ??0btVector3@@QAE@ABM00@Z ; btVector3::btVector3
  00308	50		 push	 eax
  00309	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR _mesh$[ebp]
  0030f	e8 00 00 00 00	 call	 ?findOrAddVertex@btTriangleMesh@@QAEHABVbtVector3@@_N@Z ; btTriangleMesh::findOrAddVertex

; 427  : 		}

  00314	eb 94		 jmp	 SHORT $LN5@ImportColD
$LN6@ImportColD:

; 428  : 
; 429  : 		for (unsigned int j = 0; j < model->mNumFaces; j++)

  00316	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _j$6[ebp], 0
  00320	eb 0f		 jmp	 SHORT $LN10@ImportColD
$LN8@ImportColD:
  00322	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR _j$6[ebp]
  00328	83 c1 01	 add	 ecx, 1
  0032b	89 8d 0c ff ff
	ff		 mov	 DWORD PTR _j$6[ebp], ecx
$LN10@ImportColD:
  00331	8b 95 44 ff ff
	ff		 mov	 edx, DWORD PTR _model$10[ebp]
  00337	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _j$6[ebp]
  0033d	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00340	0f 83 92 00 00
	00		 jae	 $LN9@ImportColD

; 430  : 		{
; 431  : 			const aiFace& face = model->mFaces[j];

  00346	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _model$10[ebp]
  0034c	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  0034f	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR _j$6[ebp]
  00355	8d 0c c2	 lea	 ecx, DWORD PTR [edx+eax*8]
  00358	89 8d 08 ff ff
	ff		 mov	 DWORD PTR _face$5[ebp], ecx

; 432  : 			assert(face.mNumIndices == 3);

  0035e	8b 95 08 ff ff
	ff		 mov	 edx, DWORD PTR _face$5[ebp]
  00364	83 3a 03	 cmp	 DWORD PTR [edx], 3
  00367	74 21		 je	 SHORT $LN15@ImportColD
  00369	8b f4		 mov	 esi, esp
  0036b	68 b0 01 00 00	 push	 432			; 000001b0H
  00370	68 00 00 00 00	 push	 OFFSET $SG4294911800
  00375	68 00 00 00 00	 push	 OFFSET $SG4294911799
  0037a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00380	83 c4 0c	 add	 esp, 12			; 0000000cH
  00383	3b f4		 cmp	 esi, esp
  00385	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN15@ImportColD:

; 433  : 
; 434  : 			mesh->addTriangleIndices(face.mIndices[0], face.mIndices[1], face.mIndices[2]);

  0038a	b9 04 00 00 00	 mov	 ecx, 4
  0038f	d1 e1		 shl	 ecx, 1
  00391	8b 95 08 ff ff
	ff		 mov	 edx, DWORD PTR _face$5[ebp]
  00397	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0039a	8b 0c 08	 mov	 ecx, DWORD PTR [eax+ecx]
  0039d	51		 push	 ecx
  0039e	ba 04 00 00 00	 mov	 edx, 4
  003a3	c1 e2 00	 shl	 edx, 0
  003a6	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR _face$5[ebp]
  003ac	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  003af	8b 14 11	 mov	 edx, DWORD PTR [ecx+edx]
  003b2	52		 push	 edx
  003b3	b8 04 00 00 00	 mov	 eax, 4
  003b8	6b c8 00	 imul	 ecx, eax, 0
  003bb	8b 95 08 ff ff
	ff		 mov	 edx, DWORD PTR _face$5[ebp]
  003c1	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  003c4	8b 0c 08	 mov	 ecx, DWORD PTR [eax+ecx]
  003c7	51		 push	 ecx
  003c8	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR _mesh$[ebp]
  003ce	e8 00 00 00 00	 call	 ?addTriangleIndices@btTriangleMesh@@QAEXHHH@Z ; btTriangleMesh::addTriangleIndices

; 435  : 		}

  003d3	e9 4a ff ff ff	 jmp	 $LN8@ImportColD
$LN9@ImportColD:

; 436  : 		
; 437  : 	}

  003d8	e9 8b fe ff ff	 jmp	 $LN2@ImportColD
$LN3@ImportColD:

; 438  : 	
; 439  : 	//s_resourceColMap.insert(std::pair<std::string, btTriangleMesh*>(fileName + "_col", mesh));
; 440  : 
; 441  : 	return mesh;

  003dd	8b 95 4c ff ff
	ff		 mov	 edx, DWORD PTR _mesh$[ebp]
  003e3	89 95 fc fe ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  003e9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  003f0	8b f4		 mov	 esi, esp
  003f2	8d 4d e4	 lea	 ecx, DWORD PTR _importer$[ebp]
  003f5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1Importer@Assimp@@QAE@XZ
  003fb	3b f4		 cmp	 esi, esp
  003fd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00402	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]

; 442  : }

  00408	52		 push	 edx
  00409	8b cd		 mov	 ecx, ebp
  0040b	50		 push	 eax
  0040c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN27@ImportColD
  00412	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00417	58		 pop	 eax
  00418	5a		 pop	 edx
  00419	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0041c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00423	59		 pop	 ecx
  00424	5f		 pop	 edi
  00425	5e		 pop	 esi
  00426	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00429	33 cd		 xor	 ecx, ebp
  0042b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00430	8b e5		 mov	 esp, ebp
  00432	5d		 pop	 ebp
  00433	8b e3		 mov	 esp, ebx
  00435	5b		 pop	 ebx
  00436	c3		 ret	 0
  00437	90		 npad	 1
$LN27@ImportColD:
  00438	02 00 00 00	 DD	 2
  0043c	00 00 00 00	 DD	 $LN26@ImportColD
$LN26@ImportColD:
  00440	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00444	04 00 00 00	 DD	 4
  00448	00 00 00 00	 DD	 $LN23@ImportColD
  0044c	30 ff ff ff	 DD	 -208			; ffffff30H
  00450	0c 00 00 00	 DD	 12			; 0000000cH
  00454	00 00 00 00	 DD	 $LN24@ImportColD
$LN24@ImportColD:
  00458	70		 DB	 112			; 00000070H
  00459	6f		 DB	 111			; 0000006fH
  0045a	73		 DB	 115			; 00000073H
  0045b	00		 DB	 0
$LN23@ImportColD:
  0045c	69		 DB	 105			; 00000069H
  0045d	6d		 DB	 109			; 0000006dH
  0045e	70		 DB	 112			; 00000070H
  0045f	6f		 DB	 111			; 0000006fH
  00460	72		 DB	 114			; 00000072H
  00461	74		 DB	 116			; 00000074H
  00462	65		 DB	 101			; 00000065H
  00463	72		 DB	 114			; 00000072H
  00464	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e4	 lea	 ecx, DWORD PTR _importer$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1Importer@Assimp@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__unwindfunclet$?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
  00012	8d 4d c0	 lea	 ecx, DWORD PTR $T16[ebp]
  00015	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
  0001a	8d 4d a4	 lea	 ecx, DWORD PTR $T15[ebp]
  0001d	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
  00022	8d 4d 88	 lea	 ecx, DWORD PTR $T14[ebp]
  00025	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4:
  0002a	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR $T13[ebp]
  00030	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$5:
  00035	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR $T12[ebp]
  0003b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$6:
  00040	8b 85 00 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ??3btTriangleIndexVertexArray@@SAXPAX@Z ; btTriangleIndexVertexArray::operator delete
  0004c	59		 pop	 ecx
  0004d	c3		 ret	 0
__ehhandler$?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  0004e	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00052	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00055	8b 8a c4 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-316]
  0005b	33 c8		 xor	 ecx, eax
  0005d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00062	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00065	33 c8		 xor	 ecx, eax
  00067	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00071	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ImportColData@Mesh@@SAPAVbtTriangleMesh@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Mesh::ImportColData
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::~_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::~_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00020	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00023	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	83 c4 04	 add	 esp, 4
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@ABU01@@Z ; std::_Iterator_base12::_Iterator_base12
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@$$QAU01@@Z ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::~_Iterator_base12
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator!=, COMDAT
; _this$ = ecx

; 338  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 339  : 		return (!(*this == _Right));

  00017	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator==
  00023	0f b6 c8	 movzx	 ecx, al
  00026	85 c9		 test	 ecx, ecx
  00028	75 09		 jne	 SHORT $LN3@operator
  0002a	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv69[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00033	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN4@operator:
  0003a	8a 45 f8	 mov	 al, BYTE PTR tv69[ebp]

; 340  : 		}

  0003d	83 c4 08	 add	 esp, 8
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBEPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBEPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator->, COMDAT
; _this$ = ecx

; 251  : 		{	// return pointer to class object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 252  : 		return (_STD pointer_traits<pointer>::pointer_to(**this));

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator*
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?pointer_to@?$pointer_traits@PBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@SAPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@ABU32@@Z ; std::pointer_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *>::pointer_to
  0001c	83 c4 04	 add	 esp, 4

; 253  : 		}

  0001f	83 c4 04	 add	 esp, 4
  00022	3b ec		 cmp	 ebp, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBEPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
tv172 = -108						; size = 4
tv190 = -104						; size = 4
tv154 = -100						; size = 4
tv167 = -96						; size = 4
tv186 = -92						; size = 4
tv162 = -88						; size = 4
tv65 = -84						; size = 4
$T2 = -80						; size = 4
$T3 = -76						; size = 12
$T4 = -64						; size = 12
$T5 = -52						; size = 12
$T6 = -40						; size = 4
__Where$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::find, COMDAT
; _this$ = ecx

; 1485 : 		{	// find an element in mutable sequence that matches _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 60	 sub	 esp, 96			; 00000060H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d 94	 lea	 edi, DWORD PTR [ebp-108]
  00019	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003a	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 1486 : 		iterator _Where = lower_bound(_Keyval);

  00041	8b 45 0c	 mov	 eax, DWORD PTR __Keyval$[ebp]
  00044	50		 push	 eax
  00045	8d 4d e0	 lea	 ecx, DWORD PTR __Where$[ebp]
  00048	51		 push	 ecx
  00049	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::lower_bound
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1487 : 		return (_Where == end()

  00058	8d 55 cc	 lea	 edx, DWORD PTR $T5[ebp]
  0005b	52		 push	 edx
  0005c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::end
  00064	89 45 ac	 mov	 DWORD PTR tv65[ebp], eax
  00067	8b 45 ac	 mov	 eax, DWORD PTR tv65[ebp]
  0006a	89 45 a8	 mov	 DWORD PTR tv162[ebp], eax
  0006d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00071	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  00074	83 c9 01	 or	 ecx, 1
  00077	89 4d b0	 mov	 DWORD PTR $T2[ebp], ecx
  0007a	8b 55 a8	 mov	 edx, DWORD PTR tv162[ebp]
  0007d	52		 push	 edx
  0007e	8d 4d e0	 lea	 ecx, DWORD PTR __Where$[ebp]
  00081	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator==
  00086	0f b6 c0	 movzx	 eax, al
  00089	85 c0		 test	 eax, eax
  0008b	75 6a		 jne	 SHORT $LN3@find
  0008d	68 d1 05 00 00	 push	 1489			; 000005d1H
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@BEABFJGP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00097	8d 4d e0	 lea	 ecx, DWORD PTR __Where$[ebp]
  0009a	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::_Mynode
  0009f	50		 push	 eax
  000a0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Key
  000a8	50		 push	 eax
  000a9	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  000ac	51		 push	 ecx
  000ad	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	e8 00 00 00 00	 call	 ?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getcomp
  000b5	8a 10		 mov	 dl, BYTE PTR [eax]
  000b7	0f b6 c2	 movzx	 eax, dl
  000ba	50		 push	 eax
  000bb	e8 00 00 00 00	 call	 ??$_Debug_lt_pred@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YA_NU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@1PB_WI@Z ; std::_Debug_lt_pred<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
  000c0	83 c4 14	 add	 esp, 20			; 00000014H
  000c3	0f b6 c8	 movzx	 ecx, al
  000c6	85 c9		 test	 ecx, ecx
  000c8	75 2d		 jne	 SHORT $LN3@find
  000ca	8d 55 e0	 lea	 edx, DWORD PTR __Where$[ebp]
  000cd	52		 push	 edx
  000ce	8d 4d b4	 lea	 ecx, DWORD PTR $T3[ebp]
  000d1	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
  000d6	89 45 a4	 mov	 DWORD PTR tv186[ebp], eax
  000d9	8b 45 a4	 mov	 eax, DWORD PTR tv186[ebp]
  000dc	89 45 a0	 mov	 DWORD PTR tv167[ebp], eax
  000df	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  000e6	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  000e9	83 c9 02	 or	 ecx, 2
  000ec	89 4d b0	 mov	 DWORD PTR $T2[ebp], ecx
  000ef	8b 55 a0	 mov	 edx, DWORD PTR tv167[ebp]
  000f2	89 55 9c	 mov	 DWORD PTR tv154[ebp], edx
  000f5	eb 2b		 jmp	 SHORT $LN4@find
$LN3@find:
  000f7	8d 45 c0	 lea	 eax, DWORD PTR $T4[ebp]
  000fa	50		 push	 eax
  000fb	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000fe	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::end
  00103	89 45 98	 mov	 DWORD PTR tv190[ebp], eax
  00106	8b 4d 98	 mov	 ecx, DWORD PTR tv190[ebp]
  00109	89 4d 94	 mov	 DWORD PTR tv172[ebp], ecx
  0010c	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  00113	8b 55 b0	 mov	 edx, DWORD PTR $T2[ebp]
  00116	83 ca 04	 or	 edx, 4
  00119	89 55 b0	 mov	 DWORD PTR $T2[ebp], edx
  0011c	8b 45 94	 mov	 eax, DWORD PTR tv172[ebp]
  0011f	89 45 9c	 mov	 DWORD PTR tv154[ebp], eax
$LN4@find:
  00122	8b 4d 9c	 mov	 ecx, DWORD PTR tv154[ebp]
  00125	89 4d d8	 mov	 DWORD PTR $T6[ebp], ecx
  00128	8b 55 d8	 mov	 edx, DWORD PTR $T6[ebp]
  0012b	52		 push	 edx
  0012c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0012f	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
  00134	8b 45 b0	 mov	 eax, DWORD PTR $T2[ebp]
  00137	83 c8 08	 or	 eax, 8
  0013a	89 45 b0	 mov	 DWORD PTR $T2[ebp], eax
  0013d	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00144	8b 4d b0	 mov	 ecx, DWORD PTR $T2[ebp]
  00147	83 e1 04	 and	 ecx, 4
  0014a	74 0c		 je	 SHORT $LN14@find
  0014c	83 65 b0 fb	 and	 DWORD PTR $T2[ebp], -5	; fffffffbH
  00150	8d 4d c0	 lea	 ecx, DWORD PTR $T4[ebp]
  00153	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
$LN14@find:
  00158	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  0015f	8b 55 b0	 mov	 edx, DWORD PTR $T2[ebp]
  00162	83 e2 02	 and	 edx, 2
  00165	74 0c		 je	 SHORT $LN15@find
  00167	83 65 b0 fd	 and	 DWORD PTR $T2[ebp], -3	; fffffffdH
  0016b	8d 4d b4	 lea	 ecx, DWORD PTR $T3[ebp]
  0016e	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
$LN15@find:
  00173	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0017a	8b 45 b0	 mov	 eax, DWORD PTR $T2[ebp]
  0017d	83 e0 01	 and	 eax, 1
  00180	74 0c		 je	 SHORT $LN16@find
  00182	83 65 b0 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00186	8d 4d cc	 lea	 ecx, DWORD PTR $T5[ebp]
  00189	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
$LN16@find:
  0018e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00195	8d 4d e0	 lea	 ecx, DWORD PTR __Where$[ebp]
  00198	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
  0019d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1488 : 			|| _DEBUG_LT_PRED(this->_Getcomp(),
; 1489 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1490 : 					? end() : _Where);
; 1491 : 		}

  001a0	52		 push	 edx
  001a1	8b cd		 mov	 ecx, ebp
  001a3	50		 push	 eax
  001a4	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN20@find
  001aa	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001af	58		 pop	 eax
  001b0	5a		 pop	 edx
  001b1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001bb	59		 pop	 ecx
  001bc	5f		 pop	 edi
  001bd	83 c4 6c	 add	 esp, 108		; 0000006cH
  001c0	3b ec		 cmp	 ebp, esp
  001c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001c7	8b e5		 mov	 esp, ebp
  001c9	5d		 pop	 ebp
  001ca	c2 08 00	 ret	 8
  001cd	0f 1f 00	 npad	 3
$LN20@find:
  001d0	01 00 00 00	 DD	 1
  001d4	00 00 00 00	 DD	 $LN19@find
$LN19@find:
  001d8	e0 ff ff ff	 DD	 -32			; ffffffe0H
  001dc	0c 00 00 00	 DD	 12			; 0000000cH
  001e0	00 00 00 00	 DD	 $LN17@find
$LN17@find:
  001e4	5f		 DB	 95			; 0000005fH
  001e5	57		 DB	 87			; 00000057H
  001e6	68		 DB	 104			; 00000068H
  001e7	65		 DB	 101			; 00000065H
  001e8	72		 DB	 114			; 00000072H
  001e9	65		 DB	 101			; 00000065H
  001ea	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR __Where$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$1:
  00008	8b 45 b0	 mov	 eax, DWORD PTR $T2[ebp]
  0000b	83 e0 01	 and	 eax, 1
  0000e	0f 84 0c 00 00
	00		 je	 $LN7@find
  00014	83 65 b0 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00018	8d 4d cc	 lea	 ecx, DWORD PTR $T5[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
$LN7@find:
  00020	c3		 ret	 0
__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$2:
  00021	8b 45 b0	 mov	 eax, DWORD PTR $T2[ebp]
  00024	83 e0 02	 and	 eax, 2
  00027	0f 84 0c 00 00
	00		 je	 $LN9@find
  0002d	83 65 b0 fd	 and	 DWORD PTR $T2[ebp], -3	; fffffffdH
  00031	8d 4d b4	 lea	 ecx, DWORD PTR $T3[ebp]
  00034	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
$LN9@find:
  00039	c3		 ret	 0
__unwindfunclet$?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$3:
  0003a	8b 45 b0	 mov	 eax, DWORD PTR $T2[ebp]
  0003d	83 e0 04	 and	 eax, 4
  00040	0f 84 0c 00 00
	00		 je	 $LN11@find
  00046	83 65 b0 fb	 and	 DWORD PTR $T2[ebp], -5	; fffffffbH
  0004a	8d 4d c0	 lea	 ecx, DWORD PTR $T4[ebp]
  0004d	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
$LN11@find:
  00052	c3		 ret	 0
__ehhandler$?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z:
  00053	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00057	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0005a	8b 4a 98	 mov	 ecx, DWORD PTR [edx-104]
  0005d	33 c8		 xor	 ecx, eax
  0005f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00064	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
  00069	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::find
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::end, COMDAT
; _this$ = ecx

; 1156 : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1157 : 		return (iterator(this->_Myhead(), &this->_Get_data()));

  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Get_data
  00035	50		 push	 eax
  00036	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myhead
  0003e	8b 00		 mov	 eax, DWORD PTR [eax]
  00040	50		 push	 eax
  00041	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00044	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >
  00049	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1158 : 		}

  0004c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00056	59		 pop	 ecx
  00057	83 c4 10	 add	 esp, 16			; 00000010H
  0005a	3b ec		 cmp	 ebp, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::end
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >, COMDAT
; _this$ = ecx

; 1126 : 		{	// destroy tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1127 : 		_Tidy();

  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Tidy

; 1128 : 		}

  00035	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ??1?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >
  0003d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00040	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00047	59		 pop	 ecx
  00048	83 c4 10	 add	 esp, 16			; 00000010H
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
tv177 = -120						; size = 4
tv180 = -116						; size = 4
tv176 = -112						; size = 4
tv184 = -108						; size = 4
tv174 = -104						; size = 4
tv171 = -100						; size = 4
tv65 = -96						; size = 4
$T2 = -92						; size = 4
$T3 = -88						; size = 12
$T4 = -76						; size = 4
$T5 = -72						; size = 4
$T6 = -68						; size = 4
$T7 = -64						; size = 4
__Num$ = -56						; size = 4
__Where$ = -44						; size = 24
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Keyval$ = 8						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1463 : 		{	// erase and count all that match _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d 88	 lea	 edi, DWORD PTR [ebp-120]
  00019	b9 1b 00 00 00	 mov	 ecx, 27			; 0000001bH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1464 : 		_Pairii _Where = equal_range(_Keyval);

  0003a	8b 45 08	 mov	 eax, DWORD PTR __Keyval$[ebp]
  0003d	50		 push	 eax
  0003e	8d 4d d4	 lea	 ecx, DWORD PTR __Where$[ebp]
  00041	51		 push	 ecx
  00042	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?equal_range@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::equal_range
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1465 : 		size_type _Num = 0;

  00051	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR __Num$[ebp], 0

; 1466 : 		_Distance(_Where.first, _Where.second, _Num);

  00058	8d 55 c8	 lea	 edx, DWORD PTR __Num$[ebp]
  0005b	52		 push	 edx
  0005c	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0005f	8b cc		 mov	 ecx, esp
  00061	89 65 c0	 mov	 DWORD PTR $T7[ebp], esp
  00064	8d 45 e0	 lea	 eax, DWORD PTR __Where$[ebp+12]
  00067	50		 push	 eax
  00068	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
  0006d	89 45 a0	 mov	 DWORD PTR tv65[ebp], eax
  00070	8b 4d a0	 mov	 ecx, DWORD PTR tv65[ebp]
  00073	89 4d 9c	 mov	 DWORD PTR tv171[ebp], ecx
  00076	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0007a	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0007d	8b cc		 mov	 ecx, esp
  0007f	89 65 bc	 mov	 DWORD PTR $T6[ebp], esp
  00082	8d 55 d4	 lea	 edx, DWORD PTR __Where$[ebp]
  00085	52		 push	 edx
  00086	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
  0008b	89 45 98	 mov	 DWORD PTR tv174[ebp], eax
  0008e	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00092	e8 00 00 00 00	 call	 ??$_Distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,unsigned int>
  00097	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1467 : 		erase(_Where.first, _Where.second);

  0009a	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0009d	8b cc		 mov	 ecx, esp
  0009f	89 65 b8	 mov	 DWORD PTR $T5[ebp], esp
  000a2	8d 45 e0	 lea	 eax, DWORD PTR __Where$[ebp+12]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
  000ab	89 45 94	 mov	 DWORD PTR tv184[ebp], eax
  000ae	8b 4d 94	 mov	 ecx, DWORD PTR tv184[ebp]
  000b1	89 4d 90	 mov	 DWORD PTR tv176[ebp], ecx
  000b4	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000b8	83 ec 0c	 sub	 esp, 12			; 0000000cH
  000bb	8b cc		 mov	 ecx, esp
  000bd	89 65 b4	 mov	 DWORD PTR $T4[ebp], esp
  000c0	8d 55 d4	 lea	 edx, DWORD PTR __Where$[ebp]
  000c3	52		 push	 edx
  000c4	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
  000c9	89 45 8c	 mov	 DWORD PTR tv180[ebp], eax
  000cc	8d 45 a8	 lea	 eax, DWORD PTR $T3[ebp]
  000cf	50		 push	 eax
  000d0	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000d4	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d7	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::erase
  000dc	89 45 88	 mov	 DWORD PTR tv177[ebp], eax
  000df	8d 4d a8	 lea	 ecx, DWORD PTR $T3[ebp]
  000e2	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ

; 1468 : 		return (_Num);

  000e7	8b 4d c8	 mov	 ecx, DWORD PTR __Num$[ebp]
  000ea	89 4d a4	 mov	 DWORD PTR $T2[ebp], ecx
  000ed	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f4	8d 4d d4	 lea	 ecx, DWORD PTR __Where$[ebp]
  000f7	e8 00 00 00 00	 call	 ??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
  000fc	8b 45 a4	 mov	 eax, DWORD PTR $T2[ebp]

; 1469 : 		}

  000ff	52		 push	 edx
  00100	8b cd		 mov	 ecx, ebp
  00102	50		 push	 eax
  00103	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@erase
  00109	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0010e	58		 pop	 eax
  0010f	5a		 pop	 edx
  00110	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00113	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011a	59		 pop	 ecx
  0011b	5f		 pop	 edi
  0011c	83 c4 78	 add	 esp, 120		; 00000078H
  0011f	3b ec		 cmp	 ebp, esp
  00121	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 04 00	 ret	 4
$LN13@erase:
  0012c	02 00 00 00	 DD	 2
  00130	00 00 00 00	 DD	 $LN12@erase
$LN12@erase:
  00134	d4 ff ff ff	 DD	 -44			; ffffffd4H
  00138	18 00 00 00	 DD	 24			; 00000018H
  0013c	00 00 00 00	 DD	 $LN9@erase
  00140	c8 ff ff ff	 DD	 -56			; ffffffc8H
  00144	04 00 00 00	 DD	 4
  00148	00 00 00 00	 DD	 $LN10@erase
$LN10@erase:
  0014c	5f		 DB	 95			; 0000005fH
  0014d	4e		 DB	 78			; 0000004eH
  0014e	75		 DB	 117			; 00000075H
  0014f	6d		 DB	 109			; 0000006dH
  00150	00		 DB	 0
$LN9@erase:
  00151	5f		 DB	 95			; 0000005fH
  00152	57		 DB	 87			; 00000057H
  00153	68		 DB	 104			; 00000068H
  00154	65		 DB	 101			; 00000065H
  00155	72		 DB	 114			; 00000072H
  00156	65		 DB	 101			; 00000065H
  00157	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR __Where$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$1:
  00008	8b 4d c0	 mov	 ecx, DWORD PTR $T7[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$3:
  00010	8b 4d b8	 mov	 ecx, DWORD PTR $T5[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z:
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001f	8b 4a 8c	 mov	 ecx, DWORD PTR [edx-116]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::erase
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >, COMDAT
; _this$ = ecx

; 1126 : 		{	// destroy tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1127 : 		_Tidy();

  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Tidy

; 1128 : 		}

  00035	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ??1?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >
  0003d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00040	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00047	59		 pop	 ecx
  00048	83 c4 10	 add	 esp, 16			; 00000010H
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\lib\assimp\include\assimp\vector3.h
;	COMDAT ??0?$aiVector3t@M@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_o$ = 8							; size = 4
??0?$aiVector3t@M@@QAE@ABV0@@Z PROC			; aiVector3t<float>::aiVector3t<float>, COMDAT
; _this$ = ecx

; 66   : 	aiVector3t (const aiVector3t& o) : x(o.x), y(o.y), z(o.z) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _o$[ebp]
  00014	8b 11		 mov	 edx, DWORD PTR [ecx]
  00016	89 10		 mov	 DWORD PTR [eax], edx
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _o$[ebp]
  0001e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00021	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _o$[ebp]
  0002a	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0002d	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??0?$aiVector3t@M@@QAE@ABV0@@Z ENDP			; aiVector3t<float>::aiVector3t<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\lib\assimp\include\assimp\vector3.h
;	COMDAT ??0?$aiVector3t@M@@QAE@MMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??0?$aiVector3t@M@@QAE@MMM@Z PROC			; aiVector3t<float>::aiVector3t<float>, COMDAT
; _this$ = ecx

; 64   : 	aiVector3t (TReal _x, TReal _y, TReal _z) : x(_x), y(_y), z(_z) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __x$[ebp]
  00016	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __y$[ebp]
  00022	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0
  00027	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002a	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR __z$[ebp]
  0002f	f3 0f 11 42 08	 movss	 DWORD PTR [edx+8], xmm0
  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 0c 00	 ret	 12			; 0000000cH
??0?$aiVector3t@M@@QAE@MMM@Z ENDP			; aiVector3t<float>::aiVector3t<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\map
;	COMDAT ??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -6						; size = 1
$T2 = -5						; size = 1
_this$ = -4						; size = 4
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@QAE@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >, COMDAT
; _this$ = ecx

; 100  : 		{	// construct empty map from defaults

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 		: _Mybase(key_compare(), allocator_type())

  00017	8d 4d fb	 lea	 ecx, DWORD PTR $T2[ebp]
  0001a	e8 00 00 00 00	 call	 ??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >
  0001f	50		 push	 eax
  00020	8d 45 fa	 lea	 eax, DWORD PTR $T1[ebp]
  00023	50		 push	 eax
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >

; 101  : 		}

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 08	 add	 esp, 8
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@@std@@QAE@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\map
;	COMDAT ??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -6						; size = 1
$T2 = -5						; size = 1
_this$ = -4						; size = 4
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@QAE@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >, COMDAT
; _this$ = ecx

; 100  : 		{	// construct empty map from defaults

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 		: _Mybase(key_compare(), allocator_type())

  00017	8d 4d fb	 lea	 ecx, DWORD PTR $T2[ebp]
  0001a	e8 00 00 00 00	 call	 ??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >
  0001f	50		 push	 eax
  00020	8d 45 fa	 lea	 eax, DWORD PTR $T1[ebp]
  00023	50		 push	 eax
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >

; 101  : 		}

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 08	 add	 esp, 8
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@@std@@QAE@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?push_back@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QAEX$$QAPAVMesh@@@Z
_TEXT	SEGMENT
tv229 = -16						; size = 4
tv174 = -12						; size = 4
__Idx$1 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QAEX$$QAPAVMesh@@@Z PROC ; std::vector<Mesh *,std::allocator<Mesh *> >::push_back, COMDAT
; _this$ = ecx

; 895  : 		{	// insert by moving into element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 896  : 		if (_Inside(_STD addressof(_Val)))

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??$addressof@PAVMesh@@@std@@YAPAPAVMesh@@AAPAV1@@Z ; std::addressof<Mesh *>
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?_Inside@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBE_NPBQAVMesh@@@Z ; std::vector<Mesh *,std::allocator<Mesh *> >::_Inside
  00030	0f b6 c8	 movzx	 ecx, al
  00033	85 c9		 test	 ecx, ecx
  00035	0f 84 ac 00 00
	00		 je	 $LN2@push_back

; 897  : 			{	// push back an element
; 898  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst();

  0003b	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0003e	52		 push	 edx
  0003f	e8 00 00 00 00	 call	 ??$addressof@PAVMesh@@@std@@YAPAPAVMesh@@AAPAV1@@Z ; std::addressof<Mesh *>
  00044	83 c4 04	 add	 esp, 4
  00047	8b f0		 mov	 esi, eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Myfirst
  00051	2b 30		 sub	 esi, DWORD PTR [eax]
  00053	c1 fe 02	 sar	 esi, 2
  00056	89 75 f8	 mov	 DWORD PTR __Idx$1[ebp], esi

; 899  : 			if (this->_Mylast() == this->_Myend())

  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Mylast
  00061	8b f0		 mov	 esi, eax
  00063	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Myend
  0006b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0006d	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0006f	75 0a		 jne	 SHORT $LN4@push_back

; 900  : 				_Reserve(1);

  00071	6a 01		 push	 1
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z ; std::vector<Mesh *,std::allocator<Mesh *> >::_Reserve
$LN4@push_back:

; 901  : 			_Orphan_range(this->_Mylast(), this->_Mylast());

  0007b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Mylast
  00083	8b 10		 mov	 edx, DWORD PTR [eax]
  00085	52		 push	 edx
  00086	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Mylast
  0008e	8b 00		 mov	 eax, DWORD PTR [eax]
  00090	50		 push	 eax
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBEXPAPAVMesh@@0@Z ; std::vector<Mesh *,std::allocator<Mesh *> >::_Orphan_range

; 902  : 			this->_Getal().construct(this->_Mylast(),

  00099	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Myfirst
  000a1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a3	8b 55 f8	 mov	 edx, DWORD PTR __Idx$1[ebp]
  000a6	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 ??$forward@PAVMesh@@@std@@YA$$QAPAVMesh@@AAPAV1@@Z ; std::forward<Mesh *>
  000af	83 c4 04	 add	 esp, 4
  000b2	50		 push	 eax
  000b3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b6	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Mylast
  000bb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bd	51		 push	 ecx
  000be	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Getal
  000c6	8b c8		 mov	 ecx, eax
  000c8	e8 00 00 00 00	 call	 ??$construct@PAVMesh@@PAV1@@?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@QAEXPAPAVMesh@@$$QAPAV2@@Z ; std::_Wrap_alloc<std::allocator<Mesh *> >::construct<Mesh *,Mesh *>

; 903  : 				_STD forward<value_type>(this->_Myfirst()[_Idx]));
; 904  : 			++this->_Mylast();

  000cd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Mylast
  000d5	89 45 f4	 mov	 DWORD PTR tv174[ebp], eax
  000d8	8b 55 f4	 mov	 edx, DWORD PTR tv174[ebp]
  000db	8b 02		 mov	 eax, DWORD PTR [edx]
  000dd	83 c0 04	 add	 eax, 4
  000e0	8b 4d f4	 mov	 ecx, DWORD PTR tv174[ebp]
  000e3	89 01		 mov	 DWORD PTR [ecx], eax

; 905  : 			}
; 906  : 		else

  000e5	eb 7f		 jmp	 SHORT $LN1@push_back
$LN2@push_back:

; 907  : 			{	// push back a non-element
; 908  : 			if (this->_Mylast() == this->_Myend())

  000e7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Mylast
  000ef	8b f0		 mov	 esi, eax
  000f1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f4	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Myend
  000f9	8b 16		 mov	 edx, DWORD PTR [esi]
  000fb	3b 10		 cmp	 edx, DWORD PTR [eax]
  000fd	75 0a		 jne	 SHORT $LN5@push_back

; 909  : 				_Reserve(1);

  000ff	6a 01		 push	 1
  00101	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00104	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z ; std::vector<Mesh *,std::allocator<Mesh *> >::_Reserve
$LN5@push_back:

; 910  : 			_Orphan_range(this->_Mylast(), this->_Mylast());

  00109	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Mylast
  00111	8b 00		 mov	 eax, DWORD PTR [eax]
  00113	50		 push	 eax
  00114	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Mylast
  0011c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0011e	51		 push	 ecx
  0011f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00122	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBEXPAPAVMesh@@0@Z ; std::vector<Mesh *,std::allocator<Mesh *> >::_Orphan_range

; 911  : 			this->_Getal().construct(this->_Mylast(),

  00127	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0012a	52		 push	 edx
  0012b	e8 00 00 00 00	 call	 ??$forward@PAVMesh@@@std@@YA$$QAPAVMesh@@AAPAV1@@Z ; std::forward<Mesh *>
  00130	83 c4 04	 add	 esp, 4
  00133	50		 push	 eax
  00134	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00137	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Mylast
  0013c	8b 00		 mov	 eax, DWORD PTR [eax]
  0013e	50		 push	 eax
  0013f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00142	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Getal
  00147	8b c8		 mov	 ecx, eax
  00149	e8 00 00 00 00	 call	 ??$construct@PAVMesh@@PAV1@@?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@QAEXPAPAVMesh@@$$QAPAV2@@Z ; std::_Wrap_alloc<std::allocator<Mesh *> >::construct<Mesh *,Mesh *>

; 912  : 				_STD forward<value_type>(_Val));
; 913  : 			++this->_Mylast();

  0014e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00151	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Mylast
  00156	89 45 f0	 mov	 DWORD PTR tv229[ebp], eax
  00159	8b 4d f0	 mov	 ecx, DWORD PTR tv229[ebp]
  0015c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0015e	83 c2 04	 add	 edx, 4
  00161	8b 45 f0	 mov	 eax, DWORD PTR tv229[ebp]
  00164	89 10		 mov	 DWORD PTR [eax], edx
$LN1@push_back:

; 914  : 			}
; 915  : 		}

  00166	5e		 pop	 esi
  00167	83 c4 10	 add	 esp, 16			; 00000010H
  0016a	3b ec		 cmp	 ebp, esp
  0016c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00171	8b e5		 mov	 esp, ebp
  00173	5d		 pop	 ebp
  00174	c2 04 00	 ret	 4
?push_back@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QAEX$$QAPAVMesh@@@Z ENDP ; std::vector<Mesh *,std::allocator<Mesh *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QAE@XZ PROC ; std::vector<Mesh *,std::allocator<Mesh *> >::vector<Mesh *,std::allocator<Mesh *> >, COMDAT
; _this$ = ecx

; 706  : 		{	// construct empty vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 705  : 		: _Mybase()

  00036	8d 4d ef	 lea	 ecx, DWORD PTR $T2[ebp]
  00039	e8 00 00 00 00	 call	 ??0?$allocator@PAVMesh@@@std@@QAE@XZ ; std::allocator<Mesh *>::allocator<Mesh *>
  0003e	50		 push	 eax
  0003f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMesh@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >

; 707  : 		}

  00047	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00054	59		 pop	 ecx
  00055	83 c4 14	 add	 esp, 20			; 00000014H
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QAE@XZ ENDP ; std::vector<Mesh *,std::allocator<Mesh *> >::vector<Mesh *,std::allocator<Mesh *> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?push_back@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QAEXABQAVMaterial@@@Z
_TEXT	SEGMENT
tv225 = -16						; size = 4
tv172 = -12						; size = 4
__Idx$1 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QAEXABQAVMaterial@@@Z PROC ; std::vector<Material *,std::allocator<Material *> >::push_back, COMDAT
; _this$ = ecx

; 1274 : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1275 : 		if (_Inside(_STD addressof(_Val)))

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??$addressof@QAVMaterial@@@std@@YAPBQAVMaterial@@ABQAV1@@Z ; std::addressof<Material * const>
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?_Inside@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBE_NPBQAVMaterial@@@Z ; std::vector<Material *,std::allocator<Material *> >::_Inside
  00030	0f b6 c8	 movzx	 ecx, al
  00033	85 c9		 test	 ecx, ecx
  00035	0f 84 a3 00 00
	00		 je	 $LN2@push_back

; 1276 : 			{	// push back an element
; 1277 : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst();

  0003b	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0003e	52		 push	 edx
  0003f	e8 00 00 00 00	 call	 ??$addressof@QAVMaterial@@@std@@YAPBQAVMaterial@@ABQAV1@@Z ; std::addressof<Material * const>
  00044	83 c4 04	 add	 esp, 4
  00047	8b f0		 mov	 esi, eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Myfirst
  00051	2b 30		 sub	 esi, DWORD PTR [eax]
  00053	c1 fe 02	 sar	 esi, 2
  00056	89 75 f8	 mov	 DWORD PTR __Idx$1[ebp], esi

; 1278 : 			if (this->_Mylast() == this->_Myend())

  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Mylast
  00061	8b f0		 mov	 esi, eax
  00063	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Myend
  0006b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0006d	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0006f	75 0a		 jne	 SHORT $LN4@push_back

; 1279 : 				_Reserve(1);

  00071	6a 01		 push	 1
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z ; std::vector<Material *,std::allocator<Material *> >::_Reserve
$LN4@push_back:

; 1280 : 			_Orphan_range(this->_Mylast(), this->_Mylast());

  0007b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Mylast
  00083	8b 10		 mov	 edx, DWORD PTR [eax]
  00085	52		 push	 edx
  00086	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Mylast
  0008e	8b 00		 mov	 eax, DWORD PTR [eax]
  00090	50		 push	 eax
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBEXPAPAVMaterial@@0@Z ; std::vector<Material *,std::allocator<Material *> >::_Orphan_range

; 1281 : 			this->_Getal().construct(this->_Mylast(),

  00099	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Myfirst
  000a1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a3	8b 55 f8	 mov	 edx, DWORD PTR __Idx$1[ebp]
  000a6	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000a9	50		 push	 eax
  000aa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ad	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Mylast
  000b2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b4	51		 push	 ecx
  000b5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b8	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Getal
  000bd	8b c8		 mov	 ecx, eax
  000bf	e8 00 00 00 00	 call	 ??$construct@PAVMaterial@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@QAEXPAPAVMaterial@@AAPAV2@@Z ; std::_Wrap_alloc<std::allocator<Material *> >::construct<Material *,Material * &>

; 1282 : 				this->_Myfirst()[_Idx]);
; 1283 : 			++this->_Mylast();

  000c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c7	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Mylast
  000cc	89 45 f4	 mov	 DWORD PTR tv172[ebp], eax
  000cf	8b 55 f4	 mov	 edx, DWORD PTR tv172[ebp]
  000d2	8b 02		 mov	 eax, DWORD PTR [edx]
  000d4	83 c0 04	 add	 eax, 4
  000d7	8b 4d f4	 mov	 ecx, DWORD PTR tv172[ebp]
  000da	89 01		 mov	 DWORD PTR [ecx], eax

; 1284 : 			}
; 1285 : 		else

  000dc	eb 76		 jmp	 SHORT $LN1@push_back
$LN2@push_back:

; 1286 : 			{	// push back a non-element
; 1287 : 			if (this->_Mylast() == this->_Myend())

  000de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Mylast
  000e6	8b f0		 mov	 esi, eax
  000e8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000eb	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Myend
  000f0	8b 16		 mov	 edx, DWORD PTR [esi]
  000f2	3b 10		 cmp	 edx, DWORD PTR [eax]
  000f4	75 0a		 jne	 SHORT $LN5@push_back

; 1288 : 				_Reserve(1);

  000f6	6a 01		 push	 1
  000f8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000fb	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z ; std::vector<Material *,std::allocator<Material *> >::_Reserve
$LN5@push_back:

; 1289 : 			_Orphan_range(this->_Mylast(), this->_Mylast());

  00100	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00103	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Mylast
  00108	8b 00		 mov	 eax, DWORD PTR [eax]
  0010a	50		 push	 eax
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Mylast
  00113	8b 08		 mov	 ecx, DWORD PTR [eax]
  00115	51		 push	 ecx
  00116	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBEXPAPAVMaterial@@0@Z ; std::vector<Material *,std::allocator<Material *> >::_Orphan_range

; 1290 : 			this->_Getal().construct(this->_Mylast(),

  0011e	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  00121	52		 push	 edx
  00122	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00125	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Mylast
  0012a	8b 00		 mov	 eax, DWORD PTR [eax]
  0012c	50		 push	 eax
  0012d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00130	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Getal
  00135	8b c8		 mov	 ecx, eax
  00137	e8 00 00 00 00	 call	 ??$construct@PAVMaterial@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@QAEXPAPAVMaterial@@ABQAV2@@Z ; std::_Wrap_alloc<std::allocator<Material *> >::construct<Material *,Material * const &>

; 1291 : 				_Val);
; 1292 : 			++this->_Mylast();

  0013c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0013f	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Mylast
  00144	89 45 f0	 mov	 DWORD PTR tv225[ebp], eax
  00147	8b 4d f0	 mov	 ecx, DWORD PTR tv225[ebp]
  0014a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0014c	83 c2 04	 add	 edx, 4
  0014f	8b 45 f0	 mov	 eax, DWORD PTR tv225[ebp]
  00152	89 10		 mov	 DWORD PTR [eax], edx
$LN1@push_back:

; 1293 : 			}
; 1294 : 		}

  00154	5e		 pop	 esi
  00155	83 c4 10	 add	 esp, 16			; 00000010H
  00158	3b ec		 cmp	 ebp, esp
  0015a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015f	8b e5		 mov	 esp, ebp
  00161	5d		 pop	 ebp
  00162	c2 04 00	 ret	 4
?push_back@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QAEXABQAVMaterial@@@Z ENDP ; std::vector<Material *,std::allocator<Material *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::vector<Material *,std::allocator<Material *> >::vector<Material *,std::allocator<Material *> >, COMDAT
; _this$ = ecx

; 840  : 		{	// construct by moving _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QAE@$$QAV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 839  : 		: _Mybase(_STD move(_Right._Getal()))

  00036	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00039	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Getal
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ??$move@AAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@0@AAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<Material *> > &>
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAE@$$QAV?$allocator@PAVMaterial@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >

; 841  : 		_Assign_rv(_STD forward<_Myt>(_Right), true_type());

  00050	0f b6 45 ef	 movzx	 eax, BYTE PTR $T2[ebp]
  00054	50		 push	 eax
  00055	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00058	51		 push	 ecx
  00059	e8 00 00 00 00	 call	 ??$forward@V?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@YA$$QAV?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@0@AAV10@@Z ; std::forward<std::vector<Material *,std::allocator<Material *> > >
  0005e	83 c4 04	 add	 esp, 4
  00061	50		 push	 eax
  00062	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?_Assign_rv@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<Material *,std::allocator<Material *> >::_Assign_rv

; 842  : 		}

  0006a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00077	59		 pop	 ecx
  00078	83 c4 14	 add	 esp, 20			; 00000014H
  0007b	3b ec		 cmp	 ebp, esp
  0007d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QAE@$$QAV01@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QAE@$$QAV01@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::vector<Material *,std::allocator<Material *> >::vector<Material *,std::allocator<Material *> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?at@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAEAAPAVMeshData@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
?at@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAEAAPAVMeshData@@I@Z PROC ; std::vector<MeshData *,std::allocator<MeshData *> >::at, COMDAT
; _this$ = ecx

; 1205 : 		{	// subscript mutable sequence with checking

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1206 : 		if (size() <= _Pos)

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?size@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ ; std::vector<MeshData *,std::allocator<MeshData *> >::size
  00016	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  00019	77 08		 ja	 SHORT $LN2@at

; 1207 : 			_Xran();

  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Xran@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXXZ ; std::vector<MeshData *,std::allocator<MeshData *> >::_Xran
$LN2@at:

; 1208 : 		return (*(this->_Myfirst() + _Pos));

  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
  0002b	8b 00		 mov	 eax, DWORD PTR [eax]
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  00030	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
$LN3@at:

; 1209 : 		}

  00033	83 c4 04	 add	 esp, 4
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
?at@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAEAAPAVMeshData@@I@Z ENDP ; std::vector<MeshData *,std::allocator<MeshData *> >::at
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?size@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ PROC ; std::vector<MeshData *,std::allocator<MeshData *> >::size, COMDAT
; _this$ = ecx

; 1178 : 		{	// return length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1179 : 		return (this->_Mylast() - this->_Myfirst());

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABQAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
  00017	8b f0		 mov	 esi, eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABQAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
  00021	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00023	2b 08		 sub	 ecx, DWORD PTR [eax]
  00025	c1 f9 02	 sar	 ecx, 2
  00028	8b c1		 mov	 eax, ecx

; 1180 : 		}

  0002a	5e		 pop	 esi
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?size@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ ENDP ; std::vector<MeshData *,std::allocator<MeshData *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??1?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@XZ PROC ; std::vector<MeshData *,std::allocator<MeshData *> >::~vector<MeshData *,std::allocator<MeshData *> >, COMDAT
; _this$ = ecx

; 974  : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 975  : 		_Tidy();

  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXXZ ; std::vector<MeshData *,std::allocator<MeshData *> >::_Tidy

; 976  : 		}

  00035	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::~_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >
  0003d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00040	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00047	59		 pop	 ecx
  00048	83 c4 10	 add	 esp, 16			; 00000010H
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@XZ ENDP ; std::vector<MeshData *,std::allocator<MeshData *> >::~vector<MeshData *,std::allocator<MeshData *> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?push_back@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAEX$$QAPAVMeshData@@@Z
_TEXT	SEGMENT
tv229 = -16						; size = 4
tv174 = -12						; size = 4
__Idx$1 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAEX$$QAPAVMeshData@@@Z PROC ; std::vector<MeshData *,std::allocator<MeshData *> >::push_back, COMDAT
; _this$ = ecx

; 895  : 		{	// insert by moving into element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 896  : 		if (_Inside(_STD addressof(_Val)))

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??$addressof@PAVMeshData@@@std@@YAPAPAVMeshData@@AAPAV1@@Z ; std::addressof<MeshData *>
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?_Inside@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBE_NPBQAVMeshData@@@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::_Inside
  00030	0f b6 c8	 movzx	 ecx, al
  00033	85 c9		 test	 ecx, ecx
  00035	0f 84 ac 00 00
	00		 je	 $LN2@push_back

; 897  : 			{	// push back an element
; 898  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst();

  0003b	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0003e	52		 push	 edx
  0003f	e8 00 00 00 00	 call	 ??$addressof@PAVMeshData@@@std@@YAPAPAVMeshData@@AAPAV1@@Z ; std::addressof<MeshData *>
  00044	83 c4 04	 add	 esp, 4
  00047	8b f0		 mov	 esi, eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
  00051	2b 30		 sub	 esi, DWORD PTR [eax]
  00053	c1 fe 02	 sar	 esi, 2
  00056	89 75 f8	 mov	 DWORD PTR __Idx$1[ebp], esi

; 899  : 			if (this->_Mylast() == this->_Myend())

  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
  00061	8b f0		 mov	 esi, eax
  00063	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myend
  0006b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0006d	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0006f	75 0a		 jne	 SHORT $LN4@push_back

; 900  : 				_Reserve(1);

  00071	6a 01		 push	 1
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::_Reserve
$LN4@push_back:

; 901  : 			_Orphan_range(this->_Mylast(), this->_Mylast());

  0007b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
  00083	8b 10		 mov	 edx, DWORD PTR [eax]
  00085	52		 push	 edx
  00086	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
  0008e	8b 00		 mov	 eax, DWORD PTR [eax]
  00090	50		 push	 eax
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXPAPAVMeshData@@0@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::_Orphan_range

; 902  : 			this->_Getal().construct(this->_Mylast(),

  00099	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
  000a1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a3	8b 55 f8	 mov	 edx, DWORD PTR __Idx$1[ebp]
  000a6	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 ??$forward@PAVMeshData@@@std@@YA$$QAPAVMeshData@@AAPAV1@@Z ; std::forward<MeshData *>
  000af	83 c4 04	 add	 esp, 4
  000b2	50		 push	 eax
  000b3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b6	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
  000bb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bd	51		 push	 ecx
  000be	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Getal
  000c6	8b c8		 mov	 ecx, eax
  000c8	e8 00 00 00 00	 call	 ??$construct@PAVMeshData@@PAV1@@?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAEXPAPAVMeshData@@$$QAPAV2@@Z ; std::_Wrap_alloc<std::allocator<MeshData *> >::construct<MeshData *,MeshData *>

; 903  : 				_STD forward<value_type>(this->_Myfirst()[_Idx]));
; 904  : 			++this->_Mylast();

  000cd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
  000d5	89 45 f4	 mov	 DWORD PTR tv174[ebp], eax
  000d8	8b 55 f4	 mov	 edx, DWORD PTR tv174[ebp]
  000db	8b 02		 mov	 eax, DWORD PTR [edx]
  000dd	83 c0 04	 add	 eax, 4
  000e0	8b 4d f4	 mov	 ecx, DWORD PTR tv174[ebp]
  000e3	89 01		 mov	 DWORD PTR [ecx], eax

; 905  : 			}
; 906  : 		else

  000e5	eb 7f		 jmp	 SHORT $LN1@push_back
$LN2@push_back:

; 907  : 			{	// push back a non-element
; 908  : 			if (this->_Mylast() == this->_Myend())

  000e7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
  000ef	8b f0		 mov	 esi, eax
  000f1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f4	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myend
  000f9	8b 16		 mov	 edx, DWORD PTR [esi]
  000fb	3b 10		 cmp	 edx, DWORD PTR [eax]
  000fd	75 0a		 jne	 SHORT $LN5@push_back

; 909  : 				_Reserve(1);

  000ff	6a 01		 push	 1
  00101	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00104	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::_Reserve
$LN5@push_back:

; 910  : 			_Orphan_range(this->_Mylast(), this->_Mylast());

  00109	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
  00111	8b 00		 mov	 eax, DWORD PTR [eax]
  00113	50		 push	 eax
  00114	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
  0011c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0011e	51		 push	 ecx
  0011f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00122	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXPAPAVMeshData@@0@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::_Orphan_range

; 911  : 			this->_Getal().construct(this->_Mylast(),

  00127	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0012a	52		 push	 edx
  0012b	e8 00 00 00 00	 call	 ??$forward@PAVMeshData@@@std@@YA$$QAPAVMeshData@@AAPAV1@@Z ; std::forward<MeshData *>
  00130	83 c4 04	 add	 esp, 4
  00133	50		 push	 eax
  00134	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00137	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
  0013c	8b 00		 mov	 eax, DWORD PTR [eax]
  0013e	50		 push	 eax
  0013f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00142	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Getal
  00147	8b c8		 mov	 ecx, eax
  00149	e8 00 00 00 00	 call	 ??$construct@PAVMeshData@@PAV1@@?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAEXPAPAVMeshData@@$$QAPAV2@@Z ; std::_Wrap_alloc<std::allocator<MeshData *> >::construct<MeshData *,MeshData *>

; 912  : 				_STD forward<value_type>(_Val));
; 913  : 			++this->_Mylast();

  0014e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00151	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
  00156	89 45 f0	 mov	 DWORD PTR tv229[ebp], eax
  00159	8b 4d f0	 mov	 ecx, DWORD PTR tv229[ebp]
  0015c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0015e	83 c2 04	 add	 edx, 4
  00161	8b 45 f0	 mov	 eax, DWORD PTR tv229[ebp]
  00164	89 10		 mov	 DWORD PTR [eax], edx
$LN1@push_back:

; 914  : 			}
; 915  : 		}

  00166	5e		 pop	 esi
  00167	83 c4 10	 add	 esp, 16			; 00000010H
  0016a	3b ec		 cmp	 ebp, esp
  0016c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00171	8b e5		 mov	 esp, ebp
  00173	5d		 pop	 ebp
  00174	c2 04 00	 ret	 4
?push_back@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAEX$$QAPAVMeshData@@@Z ENDP ; std::vector<MeshData *,std::allocator<MeshData *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::vector<MeshData *,std::allocator<MeshData *> >::vector<MeshData *,std::allocator<MeshData *> >, COMDAT
; _this$ = ecx

; 840  : 		{	// construct by moving _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@$$QAV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 839  : 		: _Mybase(_STD move(_Right._Getal()))

  00036	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00039	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Getal
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ??$move@AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@AAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<MeshData *> > &>
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@$$QAV?$allocator@PAVMeshData@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >

; 841  : 		_Assign_rv(_STD forward<_Myt>(_Right), true_type());

  00050	0f b6 45 ef	 movzx	 eax, BYTE PTR $T2[ebp]
  00054	50		 push	 eax
  00055	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00058	51		 push	 ecx
  00059	e8 00 00 00 00	 call	 ??$forward@V?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YA$$QAV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@0@AAV10@@Z ; std::forward<std::vector<MeshData *,std::allocator<MeshData *> > >
  0005e	83 c4 04	 add	 esp, 4
  00061	50		 push	 eax
  00062	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?_Assign_rv@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::_Assign_rv

; 842  : 		}

  0006a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00077	59		 pop	 ecx
  00078	83 c4 14	 add	 esp, 20			; 00000014H
  0007b	3b ec		 cmp	 ebp, esp
  0007d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@$$QAV01@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@$$QAV01@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::vector<MeshData *,std::allocator<MeshData *> >::vector<MeshData *,std::allocator<MeshData *> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@XZ PROC ; std::vector<MeshData *,std::allocator<MeshData *> >::vector<MeshData *,std::allocator<MeshData *> >, COMDAT
; _this$ = ecx

; 706  : 		{	// construct empty vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 705  : 		: _Mybase()

  00036	8d 4d ef	 lea	 ecx, DWORD PTR $T2[ebp]
  00039	e8 00 00 00 00	 call	 ??0?$allocator@PAVMeshData@@@std@@QAE@XZ ; std::allocator<MeshData *>::allocator<MeshData *>
  0003e	50		 push	 eax
  0003f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >

; 707  : 		}

  00047	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00054	59		 pop	 ecx
  00055	83 c4 14	 add	 esp, 20			; 00000014H
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAE@XZ ENDP ; std::vector<MeshData *,std::allocator<MeshData *> >::vector<MeshData *,std::allocator<MeshData *> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?push_back@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEXABV?$Vector2@M@@@Z
_TEXT	SEGMENT
tv225 = -16						; size = 4
tv172 = -12						; size = 4
__Idx$1 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEXABV?$Vector2@M@@@Z PROC ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::push_back, COMDAT
; _this$ = ecx

; 1274 : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1275 : 		if (_Inside(_STD addressof(_Val)))

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$Vector2@M@@@std@@YAPBV?$Vector2@M@@ABV1@@Z ; std::addressof<Vector2<float> const >
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?_Inside@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBE_NPBV?$Vector2@M@@@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Inside
  00030	0f b6 c8	 movzx	 ecx, al
  00033	85 c9		 test	 ecx, ecx
  00035	0f 84 a3 00 00
	00		 je	 $LN2@push_back

; 1276 : 			{	// push back an element
; 1277 : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst();

  0003b	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0003e	52		 push	 edx
  0003f	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$Vector2@M@@@std@@YAPBV?$Vector2@M@@ABV1@@Z ; std::addressof<Vector2<float> const >
  00044	83 c4 04	 add	 esp, 4
  00047	8b f0		 mov	 esi, eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myfirst
  00051	2b 30		 sub	 esi, DWORD PTR [eax]
  00053	c1 fe 03	 sar	 esi, 3
  00056	89 75 f8	 mov	 DWORD PTR __Idx$1[ebp], esi

; 1278 : 			if (this->_Mylast() == this->_Myend())

  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  00061	8b f0		 mov	 esi, eax
  00063	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myend
  0006b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0006d	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0006f	75 0a		 jne	 SHORT $LN4@push_back

; 1279 : 				_Reserve(1);

  00071	6a 01		 push	 1
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	e8 00 00 00 00	 call	 ?_Reserve@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Reserve
$LN4@push_back:

; 1280 : 			_Orphan_range(this->_Mylast(), this->_Mylast());

  0007b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  00083	8b 10		 mov	 edx, DWORD PTR [eax]
  00085	52		 push	 edx
  00086	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  0008e	8b 00		 mov	 eax, DWORD PTR [eax]
  00090	50		 push	 eax
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBEXPAV?$Vector2@M@@0@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Orphan_range

; 1281 : 			this->_Getal().construct(this->_Mylast(),

  00099	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myfirst
  000a1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a3	8b 55 f8	 mov	 edx, DWORD PTR __Idx$1[ebp]
  000a6	8d 04 d1	 lea	 eax, DWORD PTR [ecx+edx*8]
  000a9	50		 push	 eax
  000aa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ad	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  000b2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b4	51		 push	 ecx
  000b5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b8	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Getal
  000bd	8b c8		 mov	 ecx, eax
  000bf	e8 00 00 00 00	 call	 ??$construct@V?$Vector2@M@@AAV1@@?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEXPAV?$Vector2@M@@AAV2@@Z ; std::_Wrap_alloc<std::allocator<Vector2<float> > >::construct<Vector2<float>,Vector2<float> &>

; 1282 : 				this->_Myfirst()[_Idx]);
; 1283 : 			++this->_Mylast();

  000c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c7	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  000cc	89 45 f4	 mov	 DWORD PTR tv172[ebp], eax
  000cf	8b 55 f4	 mov	 edx, DWORD PTR tv172[ebp]
  000d2	8b 02		 mov	 eax, DWORD PTR [edx]
  000d4	83 c0 08	 add	 eax, 8
  000d7	8b 4d f4	 mov	 ecx, DWORD PTR tv172[ebp]
  000da	89 01		 mov	 DWORD PTR [ecx], eax

; 1284 : 			}
; 1285 : 		else

  000dc	eb 76		 jmp	 SHORT $LN1@push_back
$LN2@push_back:

; 1286 : 			{	// push back a non-element
; 1287 : 			if (this->_Mylast() == this->_Myend())

  000de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  000e6	8b f0		 mov	 esi, eax
  000e8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000eb	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myend
  000f0	8b 16		 mov	 edx, DWORD PTR [esi]
  000f2	3b 10		 cmp	 edx, DWORD PTR [eax]
  000f4	75 0a		 jne	 SHORT $LN5@push_back

; 1288 : 				_Reserve(1);

  000f6	6a 01		 push	 1
  000f8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000fb	e8 00 00 00 00	 call	 ?_Reserve@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Reserve
$LN5@push_back:

; 1289 : 			_Orphan_range(this->_Mylast(), this->_Mylast());

  00100	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00103	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  00108	8b 00		 mov	 eax, DWORD PTR [eax]
  0010a	50		 push	 eax
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  00113	8b 08		 mov	 ecx, DWORD PTR [eax]
  00115	51		 push	 ecx
  00116	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBEXPAV?$Vector2@M@@0@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Orphan_range

; 1290 : 			this->_Getal().construct(this->_Mylast(),

  0011e	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  00121	52		 push	 edx
  00122	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00125	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  0012a	8b 00		 mov	 eax, DWORD PTR [eax]
  0012c	50		 push	 eax
  0012d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00130	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Getal
  00135	8b c8		 mov	 ecx, eax
  00137	e8 00 00 00 00	 call	 ??$construct@V?$Vector2@M@@ABV1@@?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEXPAV?$Vector2@M@@ABV2@@Z ; std::_Wrap_alloc<std::allocator<Vector2<float> > >::construct<Vector2<float>,Vector2<float> const &>

; 1291 : 				_Val);
; 1292 : 			++this->_Mylast();

  0013c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0013f	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  00144	89 45 f0	 mov	 DWORD PTR tv225[ebp], eax
  00147	8b 4d f0	 mov	 ecx, DWORD PTR tv225[ebp]
  0014a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0014c	83 c2 08	 add	 edx, 8
  0014f	8b 45 f0	 mov	 eax, DWORD PTR tv225[ebp]
  00152	89 10		 mov	 DWORD PTR [eax], edx
$LN1@push_back:

; 1293 : 			}
; 1294 : 		}

  00154	5e		 pop	 esi
  00155	83 c4 10	 add	 esp, 16			; 00000010H
  00158	3b ec		 cmp	 ebp, esp
  0015a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015f	8b e5		 mov	 esp, ebp
  00161	5d		 pop	 ebp
  00162	c2 04 00	 ret	 4
?push_back@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEXABV?$Vector2@M@@@Z ENDP ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??A?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEAAV?$Vector2@M@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEAAV?$Vector2@M@@I@Z PROC ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::operator[], COMDAT
; _this$ = ecx

; 1228 : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1229 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1230 : 		if (size() <= _Pos)

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEIXZ ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN2@operator

; 1231 : 			{	// report error
; 1232 : 			_DEBUG_ERROR("vector subscript out of range");

  00020	8b f4		 mov	 esi, esp
  00022	68 d0 04 00 00	 push	 1232			; 000004d0H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@LECEOODI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1233 : 			_SCL_SECURE_OUT_OF_RANGE;

  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 d1 04 00 00	 push	 1233			; 000004d1H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@LECEOODI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 d1 04 00 00	 push	 1233			; 000004d1H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@LECEOODI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1LI@OFOJDDDJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA2?$AA?$DM?$AAf?$AAl?$AAo?$AAa?$AAt?$AA?$DO@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:

; 1234 : 			}
; 1235 : 
; 1236 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1237 : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 1238 :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 1239 : 
; 1240 : 		return (*(this->_Myfirst() + _Pos));

  000a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myfirst
  000ae	8b 00		 mov	 eax, DWORD PTR [eax]
  000b0	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  000b3	8d 04 c8	 lea	 eax, DWORD PTR [eax+ecx*8]

; 1241 : 		}

  000b6	5e		 pop	 esi
  000b7	83 c4 04	 add	 esp, 4
  000ba	3b ec		 cmp	 ebp, esp
  000bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c2 04 00	 ret	 4
??A?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEAAV?$Vector2@M@@I@Z ENDP ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??A?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEABV?$Vector2@M@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEABV?$Vector2@M@@I@Z PROC ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::operator[], COMDAT
; _this$ = ecx

; 1212 : 		{	// subscript nonmutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1213 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1214 : 		if (size() <= _Pos)

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEIXZ ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN2@operator

; 1215 : 			{	// report error
; 1216 : 			_DEBUG_ERROR("vector subscript out of range");

  00020	8b f4		 mov	 esi, esp
  00022	68 c0 04 00 00	 push	 1216			; 000004c0H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@LECEOODI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1217 : 			_SCL_SECURE_OUT_OF_RANGE;

  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 c1 04 00 00	 push	 1217			; 000004c1H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@LECEOODI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 c1 04 00 00	 push	 1217			; 000004c1H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@LECEOODI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1LI@OFOJDDDJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA2?$AA?$DM?$AAf?$AAl?$AAo?$AAa?$AAt?$AA?$DO@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:

; 1218 : 			}
; 1219 : 
; 1220 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1221 : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 1222 :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 1223 : 
; 1224 : 		return (*(this->_Myfirst() + _Pos));

  000a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QBEABQAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myfirst
  000ae	8b 00		 mov	 eax, DWORD PTR [eax]
  000b0	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  000b3	8d 04 c8	 lea	 eax, DWORD PTR [eax+ecx*8]

; 1225 : 		}

  000b6	5e		 pop	 esi
  000b7	83 c4 04	 add	 esp, 4
  000ba	3b ec		 cmp	 ebp, esp
  000bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c2 04 00	 ret	 4
??A?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEABV?$Vector2@M@@I@Z ENDP ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?push_back@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEX$$QAV?$Vector2@M@@@Z
_TEXT	SEGMENT
tv229 = -16						; size = 4
tv174 = -12						; size = 4
__Idx$1 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEX$$QAV?$Vector2@M@@@Z PROC ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::push_back, COMDAT
; _this$ = ecx

; 895  : 		{	// insert by moving into element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 896  : 		if (_Inside(_STD addressof(_Val)))

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??$addressof@V?$Vector2@M@@@std@@YAPAV?$Vector2@M@@AAV1@@Z ; std::addressof<Vector2<float> >
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?_Inside@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBE_NPBV?$Vector2@M@@@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Inside
  00030	0f b6 c8	 movzx	 ecx, al
  00033	85 c9		 test	 ecx, ecx
  00035	0f 84 ac 00 00
	00		 je	 $LN2@push_back

; 897  : 			{	// push back an element
; 898  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst();

  0003b	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0003e	52		 push	 edx
  0003f	e8 00 00 00 00	 call	 ??$addressof@V?$Vector2@M@@@std@@YAPAV?$Vector2@M@@AAV1@@Z ; std::addressof<Vector2<float> >
  00044	83 c4 04	 add	 esp, 4
  00047	8b f0		 mov	 esi, eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myfirst
  00051	2b 30		 sub	 esi, DWORD PTR [eax]
  00053	c1 fe 03	 sar	 esi, 3
  00056	89 75 f8	 mov	 DWORD PTR __Idx$1[ebp], esi

; 899  : 			if (this->_Mylast() == this->_Myend())

  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  00061	8b f0		 mov	 esi, eax
  00063	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myend
  0006b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0006d	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0006f	75 0a		 jne	 SHORT $LN4@push_back

; 900  : 				_Reserve(1);

  00071	6a 01		 push	 1
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	e8 00 00 00 00	 call	 ?_Reserve@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Reserve
$LN4@push_back:

; 901  : 			_Orphan_range(this->_Mylast(), this->_Mylast());

  0007b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  00083	8b 10		 mov	 edx, DWORD PTR [eax]
  00085	52		 push	 edx
  00086	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  0008e	8b 00		 mov	 eax, DWORD PTR [eax]
  00090	50		 push	 eax
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBEXPAV?$Vector2@M@@0@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Orphan_range

; 902  : 			this->_Getal().construct(this->_Mylast(),

  00099	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myfirst
  000a1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a3	8b 55 f8	 mov	 edx, DWORD PTR __Idx$1[ebp]
  000a6	8d 04 d1	 lea	 eax, DWORD PTR [ecx+edx*8]
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 ??$forward@V?$Vector2@M@@@std@@YA$$QAV?$Vector2@M@@AAV1@@Z ; std::forward<Vector2<float> >
  000af	83 c4 04	 add	 esp, 4
  000b2	50		 push	 eax
  000b3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b6	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  000bb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bd	51		 push	 ecx
  000be	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Getal
  000c6	8b c8		 mov	 ecx, eax
  000c8	e8 00 00 00 00	 call	 ??$construct@V?$Vector2@M@@V1@@?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEXPAV?$Vector2@M@@$$QAV2@@Z ; std::_Wrap_alloc<std::allocator<Vector2<float> > >::construct<Vector2<float>,Vector2<float> >

; 903  : 				_STD forward<value_type>(this->_Myfirst()[_Idx]));
; 904  : 			++this->_Mylast();

  000cd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  000d5	89 45 f4	 mov	 DWORD PTR tv174[ebp], eax
  000d8	8b 55 f4	 mov	 edx, DWORD PTR tv174[ebp]
  000db	8b 02		 mov	 eax, DWORD PTR [edx]
  000dd	83 c0 08	 add	 eax, 8
  000e0	8b 4d f4	 mov	 ecx, DWORD PTR tv174[ebp]
  000e3	89 01		 mov	 DWORD PTR [ecx], eax

; 905  : 			}
; 906  : 		else

  000e5	eb 7f		 jmp	 SHORT $LN1@push_back
$LN2@push_back:

; 907  : 			{	// push back a non-element
; 908  : 			if (this->_Mylast() == this->_Myend())

  000e7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  000ef	8b f0		 mov	 esi, eax
  000f1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f4	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myend
  000f9	8b 16		 mov	 edx, DWORD PTR [esi]
  000fb	3b 10		 cmp	 edx, DWORD PTR [eax]
  000fd	75 0a		 jne	 SHORT $LN5@push_back

; 909  : 				_Reserve(1);

  000ff	6a 01		 push	 1
  00101	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00104	e8 00 00 00 00	 call	 ?_Reserve@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Reserve
$LN5@push_back:

; 910  : 			_Orphan_range(this->_Mylast(), this->_Mylast());

  00109	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  00111	8b 00		 mov	 eax, DWORD PTR [eax]
  00113	50		 push	 eax
  00114	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  0011c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0011e	51		 push	 ecx
  0011f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00122	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBEXPAV?$Vector2@M@@0@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Orphan_range

; 911  : 			this->_Getal().construct(this->_Mylast(),

  00127	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0012a	52		 push	 edx
  0012b	e8 00 00 00 00	 call	 ??$forward@V?$Vector2@M@@@std@@YA$$QAV?$Vector2@M@@AAV1@@Z ; std::forward<Vector2<float> >
  00130	83 c4 04	 add	 esp, 4
  00133	50		 push	 eax
  00134	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00137	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  0013c	8b 00		 mov	 eax, DWORD PTR [eax]
  0013e	50		 push	 eax
  0013f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00142	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Getal
  00147	8b c8		 mov	 ecx, eax
  00149	e8 00 00 00 00	 call	 ??$construct@V?$Vector2@M@@V1@@?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEXPAV?$Vector2@M@@$$QAV2@@Z ; std::_Wrap_alloc<std::allocator<Vector2<float> > >::construct<Vector2<float>,Vector2<float> >

; 912  : 				_STD forward<value_type>(_Val));
; 913  : 			++this->_Mylast();

  0014e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00151	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  00156	89 45 f0	 mov	 DWORD PTR tv229[ebp], eax
  00159	8b 4d f0	 mov	 ecx, DWORD PTR tv229[ebp]
  0015c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0015e	83 c2 08	 add	 edx, 8
  00161	8b 45 f0	 mov	 eax, DWORD PTR tv229[ebp]
  00164	89 10		 mov	 DWORD PTR [eax], edx
$LN1@push_back:

; 914  : 			}
; 915  : 		}

  00166	5e		 pop	 esi
  00167	83 c4 10	 add	 esp, 16			; 00000010H
  0016a	3b ec		 cmp	 ebp, esp
  0016c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00171	8b e5		 mov	 esp, ebp
  00173	5d		 pop	 ebp
  00174	c2 04 00	 ret	 4
?push_back@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEX$$QAV?$Vector2@M@@@Z ENDP ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAE@XZ PROC ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::vector<Vector2<float>,std::allocator<Vector2<float> > >, COMDAT
; _this$ = ecx

; 706  : 		{	// construct empty vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 705  : 		: _Mybase()

  00036	8d 4d ef	 lea	 ecx, DWORD PTR $T2[ebp]
  00039	e8 00 00 00 00	 call	 ??0?$allocator@V?$Vector2@M@@@std@@QAE@XZ ; std::allocator<Vector2<float> >::allocator<Vector2<float> >
  0003e	50		 push	 eax
  0003f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$Vector2@M@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >

; 707  : 		}

  00047	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00054	59		 pop	 ecx
  00055	83 c4 14	 add	 esp, 20			; 00000014H
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QAE@XZ ENDP ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::vector<Vector2<float>,std::allocator<Vector2<float> > >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?clear@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?clear@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEXXZ PROC ; std::vector<Vector3f,std::allocator<Vector3f> >::clear, COMDAT
; _this$ = ecx

; 1539 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?clear@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1540 : 		this->_Orphan_all();

  0002e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<Vector3f,std::allocator<Vector3f> > >::_Orphan_all

; 1541 : 		_Destroy(this->_Myfirst(), this->_Mylast());

  00036	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@@std@@QAEAAPAVVector3f@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector3f,std::allocator<Vector3f> > >::_Mylast
  0003e	8b 00		 mov	 eax, DWORD PTR [eax]
  00040	50		 push	 eax
  00041	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@@std@@QAEAAPAVVector3f@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector3f,std::allocator<Vector3f> > >::_Myfirst
  00049	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004b	51		 push	 ecx
  0004c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?_Destroy@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@IAEXPAVVector3f@@0@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::_Destroy

; 1542 : 		this->_Mylast() = this->_Myfirst();

  00054	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@@std@@QAEAAPAVVector3f@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector3f,std::allocator<Vector3f> > >::_Myfirst
  0005c	8b f0		 mov	 esi, eax
  0005e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@@std@@QAEAAPAVVector3f@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector3f,std::allocator<Vector3f> > >::_Mylast
  00066	8b 16		 mov	 edx, DWORD PTR [esi]
  00068	89 10		 mov	 DWORD PTR [eax], edx

; 1543 : 		}

  0006a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00074	59		 pop	 ecx
  00075	5e		 pop	 esi
  00076	83 c4 10	 add	 esp, 16			; 00000010H
  00079	3b ec		 cmp	 ebp, esp
  0007b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?clear@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEXXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?clear@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEXXZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?clear@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEXXZ ENDP ; std::vector<Vector3f,std::allocator<Vector3f> >::clear
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?push_back@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEXABVVector3f@@@Z
_TEXT	SEGMENT
tv225 = -16						; size = 4
tv172 = -12						; size = 4
__Idx$1 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEXABVVector3f@@@Z PROC ; std::vector<Vector3f,std::allocator<Vector3f> >::push_back, COMDAT
; _this$ = ecx

; 1274 : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1275 : 		if (_Inside(_STD addressof(_Val)))

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??$addressof@$$CBVVector3f@@@std@@YAPBVVector3f@@ABV1@@Z ; std::addressof<Vector3f const >
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?_Inside@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@IBE_NPBVVector3f@@@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::_Inside
  00030	0f b6 c8	 movzx	 ecx, al
  00033	85 c9		 test	 ecx, ecx
  00035	0f 84 a8 00 00
	00		 je	 $LN2@push_back

; 1276 : 			{	// push back an element
; 1277 : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst();

  0003b	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0003e	52		 push	 edx
  0003f	e8 00 00 00 00	 call	 ??$addressof@$$CBVVector3f@@@std@@YAPBVVector3f@@ABV1@@Z ; std::addressof<Vector3f const >
  00044	83 c4 04	 add	 esp, 4
  00047	8b f0		 mov	 esi, eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@@std@@QAEAAPAVVector3f@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector3f,std::allocator<Vector3f> > >::_Myfirst
  00051	2b 30		 sub	 esi, DWORD PTR [eax]
  00053	8b c6		 mov	 eax, esi
  00055	99		 cdq
  00056	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0005b	f7 f9		 idiv	 ecx
  0005d	89 45 f8	 mov	 DWORD PTR __Idx$1[ebp], eax

; 1278 : 			if (this->_Mylast() == this->_Myend())

  00060	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@@std@@QAEAAPAVVector3f@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector3f,std::allocator<Vector3f> > >::_Mylast
  00068	8b f0		 mov	 esi, eax
  0006a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006d	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@@std@@QAEAAPAVVector3f@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector3f,std::allocator<Vector3f> > >::_Myend
  00072	8b 16		 mov	 edx, DWORD PTR [esi]
  00074	3b 10		 cmp	 edx, DWORD PTR [eax]
  00076	75 0a		 jne	 SHORT $LN4@push_back

; 1279 : 				_Reserve(1);

  00078	6a 01		 push	 1
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ?_Reserve@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@IAEXI@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::_Reserve
$LN4@push_back:

; 1280 : 			_Orphan_range(this->_Mylast(), this->_Mylast());

  00082	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@@std@@QAEAAPAVVector3f@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector3f,std::allocator<Vector3f> > >::_Mylast
  0008a	8b 00		 mov	 eax, DWORD PTR [eax]
  0008c	50		 push	 eax
  0008d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@@std@@QAEAAPAVVector3f@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector3f,std::allocator<Vector3f> > >::_Mylast
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	51		 push	 ecx
  00098	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@IBEXPAVVector3f@@0@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::_Orphan_range

; 1281 : 			this->_Getal().construct(this->_Mylast(),

  000a0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@@std@@QAEAAPAVVector3f@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector3f,std::allocator<Vector3f> > >::_Myfirst
  000a8	6b 55 f8 0c	 imul	 edx, DWORD PTR __Idx$1[ebp], 12
  000ac	03 10		 add	 edx, DWORD PTR [eax]
  000ae	52		 push	 edx
  000af	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b2	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@@std@@QAEAAPAVVector3f@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector3f,std::allocator<Vector3f> > >::_Mylast
  000b7	8b 00		 mov	 eax, DWORD PTR [eax]
  000b9	50		 push	 eax
  000ba	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@VVector3f@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector3f,std::allocator<Vector3f> > >::_Getal
  000c2	8b c8		 mov	 ecx, eax
  000c4	e8 00 00 00 00	 call	 ??$construct@VVector3f@@AAV1@@?$_Wrap_alloc@V?$allocator@VVector3f@@@std@@@std@@QAEXPAVVector3f@@AAV2@@Z ; std::_Wrap_alloc<std::allocator<Vector3f> >::construct<Vector3f,Vector3f &>

; 1282 : 				this->_Myfirst()[_Idx]);
; 1283 : 			++this->_Mylast();

  000c9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cc	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@@std@@QAEAAPAVVector3f@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector3f,std::allocator<Vector3f> > >::_Mylast
  000d1	89 45 f4	 mov	 DWORD PTR tv172[ebp], eax
  000d4	8b 4d f4	 mov	 ecx, DWORD PTR tv172[ebp]
  000d7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d9	83 c2 0c	 add	 edx, 12			; 0000000cH
  000dc	8b 45 f4	 mov	 eax, DWORD PTR tv172[ebp]
  000df	89 10		 mov	 DWORD PTR [eax], edx

; 1284 : 			}
; 1285 : 		else

  000e1	eb 76		 jmp	 SHORT $LN1@push_back
$LN2@push_back:

; 1286 : 			{	// push back a non-element
; 1287 : 			if (this->_Mylast() == this->_Myend())

  000e3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e6	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@@std@@QAEAAPAVVector3f@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector3f,std::allocator<Vector3f> > >::_Mylast
  000eb	8b f0		 mov	 esi, eax
  000ed	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f0	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@@std@@QAEAAPAVVector3f@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector3f,std::allocator<Vector3f> > >::_Myend
  000f5	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000f7	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000f9	75 0a		 jne	 SHORT $LN5@push_back

; 1288 : 				_Reserve(1);

  000fb	6a 01		 push	 1
  000fd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00100	e8 00 00 00 00	 call	 ?_Reserve@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@IAEXI@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::_Reserve
$LN5@push_back:

; 1289 : 			_Orphan_range(this->_Mylast(), this->_Mylast());

  00105	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00108	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@@std@@QAEAAPAVVector3f@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector3f,std::allocator<Vector3f> > >::_Mylast
  0010d	8b 10		 mov	 edx, DWORD PTR [eax]
  0010f	52		 push	 edx
  00110	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00113	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@@std@@QAEAAPAVVector3f@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector3f,std::allocator<Vector3f> > >::_Mylast
  00118	8b 00		 mov	 eax, DWORD PTR [eax]
  0011a	50		 push	 eax
  0011b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@IBEXPAVVector3f@@0@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::_Orphan_range

; 1290 : 			this->_Getal().construct(this->_Mylast(),

  00123	8b 4d 08	 mov	 ecx, DWORD PTR __Val$[ebp]
  00126	51		 push	 ecx
  00127	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0012a	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@@std@@QAEAAPAVVector3f@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector3f,std::allocator<Vector3f> > >::_Mylast
  0012f	8b 10		 mov	 edx, DWORD PTR [eax]
  00131	52		 push	 edx
  00132	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00135	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@VVector3f@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector3f,std::allocator<Vector3f> > >::_Getal
  0013a	8b c8		 mov	 ecx, eax
  0013c	e8 00 00 00 00	 call	 ??$construct@VVector3f@@ABV1@@?$_Wrap_alloc@V?$allocator@VVector3f@@@std@@@std@@QAEXPAVVector3f@@ABV2@@Z ; std::_Wrap_alloc<std::allocator<Vector3f> >::construct<Vector3f,Vector3f const &>

; 1291 : 				_Val);
; 1292 : 			++this->_Mylast();

  00141	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00144	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@@std@@QAEAAPAVVector3f@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector3f,std::allocator<Vector3f> > >::_Mylast
  00149	89 45 f0	 mov	 DWORD PTR tv225[ebp], eax
  0014c	8b 45 f0	 mov	 eax, DWORD PTR tv225[ebp]
  0014f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00151	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00154	8b 55 f0	 mov	 edx, DWORD PTR tv225[ebp]
  00157	89 0a		 mov	 DWORD PTR [edx], ecx
$LN1@push_back:

; 1293 : 			}
; 1294 : 		}

  00159	5e		 pop	 esi
  0015a	83 c4 10	 add	 esp, 16			; 00000010H
  0015d	3b ec		 cmp	 ebp, esp
  0015f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00164	8b e5		 mov	 esp, ebp
  00166	5d		 pop	 ebp
  00167	c2 04 00	 ret	 4
?push_back@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEXABVVector3f@@@Z ENDP ; std::vector<Vector3f,std::allocator<Vector3f> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z PROC ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[], COMDAT
; _this$ = ecx

; 1228 : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1229 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1230 : 		if (size() <= _Pos)

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEIXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN2@operator

; 1231 : 			{	// report error
; 1232 : 			_DEBUG_ERROR("vector subscript out of range");

  00020	8b f4		 mov	 esi, esp
  00022	68 d0 04 00 00	 push	 1232			; 000004d0H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@LECEOODI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1233 : 			_SCL_SECURE_OUT_OF_RANGE;

  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 d1 04 00 00	 push	 1233			; 000004d1H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@LECEOODI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 d1 04 00 00	 push	 1233			; 000004d1H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@LECEOODI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1JO@DFOIHCFM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA3?$AAf?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:

; 1234 : 			}
; 1235 : 
; 1236 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1237 : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 1238 :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 1239 : 
; 1240 : 		return (*(this->_Myfirst() + _Pos));

  000a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@@std@@QAEAAPAVVector3f@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector3f,std::allocator<Vector3f> > >::_Myfirst
  000ae	6b 4d 08 0c	 imul	 ecx, DWORD PTR __Pos$[ebp], 12
  000b2	03 08		 add	 ecx, DWORD PTR [eax]
  000b4	8b c1		 mov	 eax, ecx

; 1241 : 		}

  000b6	5e		 pop	 esi
  000b7	83 c4 04	 add	 esp, 4
  000ba	3b ec		 cmp	 ebp, esp
  000bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c2 04 00	 ret	 4
??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEAAVVector3f@@I@Z ENDP ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEABVVector3f@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEABVVector3f@@I@Z PROC ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[], COMDAT
; _this$ = ecx

; 1212 : 		{	// subscript nonmutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1213 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1214 : 		if (size() <= _Pos)

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEIXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN2@operator

; 1215 : 			{	// report error
; 1216 : 			_DEBUG_ERROR("vector subscript out of range");

  00020	8b f4		 mov	 esi, esp
  00022	68 c0 04 00 00	 push	 1216			; 000004c0H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@LECEOODI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1217 : 			_SCL_SECURE_OUT_OF_RANGE;

  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 c1 04 00 00	 push	 1217			; 000004c1H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@LECEOODI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 c1 04 00 00	 push	 1217			; 000004c1H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@LECEOODI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1JO@DFOIHCFM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA3?$AAf?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:

; 1218 : 			}
; 1219 : 
; 1220 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1221 : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 1222 :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 1223 : 
; 1224 : 		return (*(this->_Myfirst() + _Pos));

  000a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@@std@@QBEABQAVVector3f@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector3f,std::allocator<Vector3f> > >::_Myfirst
  000ae	6b 4d 08 0c	 imul	 ecx, DWORD PTR __Pos$[ebp], 12
  000b2	03 08		 add	 ecx, DWORD PTR [eax]
  000b4	8b c1		 mov	 eax, ecx

; 1225 : 		}

  000b6	5e		 pop	 esi
  000b7	83 c4 04	 add	 esp, 4
  000ba	3b ec		 cmp	 ebp, esp
  000bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c2 04 00	 ret	 4
??A?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEABVVector3f@@I@Z ENDP ; std::vector<Vector3f,std::allocator<Vector3f> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?reserve@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?reserve@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEXI@Z PROC ; std::vector<Vector3f,std::allocator<Vector3f> >::reserve, COMDAT
; _this$ = ecx

; 1031 : 		{	// determine new minimum length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1032 : 		if (capacity() < _Count)

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?capacity@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEIXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::capacity
  00016	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00019	73 21		 jae	 SHORT $LN4@reserve

; 1033 : 			{	// something to do, check and reallocate
; 1034 : 			if (max_size() < _Count)

  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?max_size@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QBEIXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::max_size
  00023	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00026	73 08		 jae	 SHORT $LN3@reserve

; 1035 : 				_Xlen();

  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?_Xlen@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@IBEXXZ ; std::vector<Vector3f,std::allocator<Vector3f> >::_Xlen
$LN3@reserve:

; 1036 : 			_Reallocate(_Count);

  00030	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00033	50		 push	 eax
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@IAEXI@Z ; std::vector<Vector3f,std::allocator<Vector3f> >::_Reallocate
$LN4@reserve:

; 1037 : 			}
; 1038 : 		}

  0003c	83 c4 04	 add	 esp, 4
  0003f	3b ec		 cmp	 ebp, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
?reserve@?$vector@VVector3f@@V?$allocator@VVector3f@@@std@@@std@@QAEXI@Z ENDP ; std::vector<Vector3f,std::allocator<Vector3f> >::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?push_back@?$vector@IV?$allocator@I@std@@@std@@QAEXABI@Z
_TEXT	SEGMENT
tv225 = -16						; size = 4
tv172 = -12						; size = 4
__Idx$1 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@IV?$allocator@I@std@@@std@@QAEXABI@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::push_back, COMDAT
; _this$ = ecx

; 1274 : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1275 : 		if (_Inside(_STD addressof(_Val)))

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??$addressof@$$CBI@std@@YAPBIABI@Z ; std::addressof<unsigned int const >
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?_Inside@?$vector@IV?$allocator@I@std@@@std@@IBE_NPBI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Inside
  00030	0f b6 c8	 movzx	 ecx, al
  00033	85 c9		 test	 ecx, ecx
  00035	0f 84 a3 00 00
	00		 je	 $LN2@push_back

; 1276 : 			{	// push back an element
; 1277 : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst();

  0003b	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0003e	52		 push	 edx
  0003f	e8 00 00 00 00	 call	 ??$addressof@$$CBI@std@@YAPBIABI@Z ; std::addressof<unsigned int const >
  00044	83 c4 04	 add	 esp, 4
  00047	8b f0		 mov	 esi, eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myfirst
  00051	2b 30		 sub	 esi, DWORD PTR [eax]
  00053	c1 fe 02	 sar	 esi, 2
  00056	89 75 f8	 mov	 DWORD PTR __Idx$1[ebp], esi

; 1278 : 			if (this->_Mylast() == this->_Myend())

  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  00061	8b f0		 mov	 esi, eax
  00063	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myend
  0006b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0006d	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0006f	75 0a		 jne	 SHORT $LN4@push_back

; 1279 : 				_Reserve(1);

  00071	6a 01		 push	 1
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	e8 00 00 00 00	 call	 ?_Reserve@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Reserve
$LN4@push_back:

; 1280 : 			_Orphan_range(this->_Mylast(), this->_Mylast());

  0007b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  00083	8b 10		 mov	 edx, DWORD PTR [eax]
  00085	52		 push	 edx
  00086	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  0008e	8b 00		 mov	 eax, DWORD PTR [eax]
  00090	50		 push	 eax
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@IV?$allocator@I@std@@@std@@IBEXPAI0@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Orphan_range

; 1281 : 			this->_Getal().construct(this->_Mylast(),

  00099	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myfirst
  000a1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a3	8b 55 f8	 mov	 edx, DWORD PTR __Idx$1[ebp]
  000a6	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000a9	50		 push	 eax
  000aa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ad	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  000b2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b4	51		 push	 ecx
  000b5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b8	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@I@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Getal
  000bd	8b c8		 mov	 ecx, eax
  000bf	e8 00 00 00 00	 call	 ??$construct@IAAI@?$_Wrap_alloc@V?$allocator@I@std@@@std@@QAEXPAIAAI@Z ; std::_Wrap_alloc<std::allocator<unsigned int> >::construct<unsigned int,unsigned int &>

; 1282 : 				this->_Myfirst()[_Idx]);
; 1283 : 			++this->_Mylast();

  000c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c7	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  000cc	89 45 f4	 mov	 DWORD PTR tv172[ebp], eax
  000cf	8b 55 f4	 mov	 edx, DWORD PTR tv172[ebp]
  000d2	8b 02		 mov	 eax, DWORD PTR [edx]
  000d4	83 c0 04	 add	 eax, 4
  000d7	8b 4d f4	 mov	 ecx, DWORD PTR tv172[ebp]
  000da	89 01		 mov	 DWORD PTR [ecx], eax

; 1284 : 			}
; 1285 : 		else

  000dc	eb 76		 jmp	 SHORT $LN1@push_back
$LN2@push_back:

; 1286 : 			{	// push back a non-element
; 1287 : 			if (this->_Mylast() == this->_Myend())

  000de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  000e6	8b f0		 mov	 esi, eax
  000e8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000eb	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myend
  000f0	8b 16		 mov	 edx, DWORD PTR [esi]
  000f2	3b 10		 cmp	 edx, DWORD PTR [eax]
  000f4	75 0a		 jne	 SHORT $LN5@push_back

; 1288 : 				_Reserve(1);

  000f6	6a 01		 push	 1
  000f8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000fb	e8 00 00 00 00	 call	 ?_Reserve@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Reserve
$LN5@push_back:

; 1289 : 			_Orphan_range(this->_Mylast(), this->_Mylast());

  00100	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00103	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  00108	8b 00		 mov	 eax, DWORD PTR [eax]
  0010a	50		 push	 eax
  0010b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  00113	8b 08		 mov	 ecx, DWORD PTR [eax]
  00115	51		 push	 ecx
  00116	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@IV?$allocator@I@std@@@std@@IBEXPAI0@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Orphan_range

; 1290 : 			this->_Getal().construct(this->_Mylast(),

  0011e	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  00121	52		 push	 edx
  00122	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00125	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  0012a	8b 00		 mov	 eax, DWORD PTR [eax]
  0012c	50		 push	 eax
  0012d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00130	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@I@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Getal
  00135	8b c8		 mov	 ecx, eax
  00137	e8 00 00 00 00	 call	 ??$construct@IABI@?$_Wrap_alloc@V?$allocator@I@std@@@std@@QAEXPAIABI@Z ; std::_Wrap_alloc<std::allocator<unsigned int> >::construct<unsigned int,unsigned int const &>

; 1291 : 				_Val);
; 1292 : 			++this->_Mylast();

  0013c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0013f	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  00144	89 45 f0	 mov	 DWORD PTR tv225[ebp], eax
  00147	8b 4d f0	 mov	 ecx, DWORD PTR tv225[ebp]
  0014a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0014c	83 c2 04	 add	 edx, 4
  0014f	8b 45 f0	 mov	 eax, DWORD PTR tv225[ebp]
  00152	89 10		 mov	 DWORD PTR [eax], edx
$LN1@push_back:

; 1293 : 			}
; 1294 : 		}

  00154	5e		 pop	 esi
  00155	83 c4 10	 add	 esp, 16			; 00000010H
  00158	3b ec		 cmp	 ebp, esp
  0015a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015f	8b e5		 mov	 esp, ebp
  00161	5d		 pop	 ebp
  00162	c2 04 00	 ret	 4
?push_back@?$vector@IV?$allocator@I@std@@@std@@QAEXABI@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z PROC	; std::vector<unsigned int,std::allocator<unsigned int> >::operator[], COMDAT
; _this$ = ecx

; 1228 : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1229 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1230 : 		if (size() <= _Pos)

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN2@operator

; 1231 : 			{	// report error
; 1232 : 			_DEBUG_ERROR("vector subscript out of range");

  00020	8b f4		 mov	 esi, esp
  00022	68 d0 04 00 00	 push	 1232			; 000004d0H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@LECEOODI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1233 : 			_SCL_SECURE_OUT_OF_RANGE;

  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 d1 04 00 00	 push	 1233			; 000004d1H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@LECEOODI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 d1 04 00 00	 push	 1233			; 000004d1H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@LECEOODI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1JG@ILDNFCDK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAu?$AAn?$AAs?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:

; 1234 : 			}
; 1235 : 
; 1236 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1237 : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 1238 :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 1239 : 
; 1240 : 		return (*(this->_Myfirst() + _Pos));

  000a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myfirst
  000ae	8b 00		 mov	 eax, DWORD PTR [eax]
  000b0	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  000b3	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 1241 : 		}

  000b6	5e		 pop	 esi
  000b7	83 c4 04	 add	 esp, 4
  000ba	3b ec		 cmp	 ebp, esp
  000bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c2 04 00	 ret	 4
??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z ENDP	; std::vector<unsigned int,std::allocator<unsigned int> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??A?$vector@IV?$allocator@I@std@@@std@@QBEABII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@IV?$allocator@I@std@@@std@@QBEABII@Z PROC	; std::vector<unsigned int,std::allocator<unsigned int> >::operator[], COMDAT
; _this$ = ecx

; 1212 : 		{	// subscript nonmutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1213 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1214 : 		if (size() <= _Pos)

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::size
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0001a	0f 87 86 00 00
	00		 ja	 $LN2@operator

; 1215 : 			{	// report error
; 1216 : 			_DEBUG_ERROR("vector subscript out of range");

  00020	8b f4		 mov	 esi, esp
  00022	68 c0 04 00 00	 push	 1216			; 000004c0H
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@LECEOODI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	3b f4		 cmp	 esi, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1217 : 			_SCL_SECURE_OUT_OF_RANGE;

  00041	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00046	85 c0		 test	 eax, eax
  00048	74 04		 je	 SHORT $LN4@operator
  0004a	33 c9		 xor	 ecx, ecx
  0004c	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  0004e	8b f4		 mov	 esi, esp
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  0005a	6a 00		 push	 0
  0005c	68 c1 04 00 00	 push	 1217			; 000004c1H
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@LECEOODI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00066	6a 02		 push	 2
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0006e	83 c4 18	 add	 esp, 24			; 00000018H
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	83 f8 01	 cmp	 eax, 1
  0007b	75 01		 jne	 SHORT $LN5@operator
  0007d	cc		 int	 3
$LN5@operator:
  0007e	8b f4		 mov	 esi, esp
  00080	6a 00		 push	 0
  00082	68 c1 04 00 00	 push	 1217			; 000004c1H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@LECEOODI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1JG@ILDNFCDK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAu?$AAn?$AAs?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0009c	83 c4 14	 add	 esp, 20			; 00000014H
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:

; 1218 : 			}
; 1219 : 
; 1220 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1221 : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 1222 :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 1223 : 
; 1224 : 		return (*(this->_Myfirst() + _Pos));

  000a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QBEABQAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myfirst
  000ae	8b 00		 mov	 eax, DWORD PTR [eax]
  000b0	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  000b3	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 1225 : 		}

  000b6	5e		 pop	 esi
  000b7	83 c4 04	 add	 esp, 4
  000ba	3b ec		 cmp	 ebp, esp
  000bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c2 04 00	 ret	 4
??A?$vector@IV?$allocator@I@std@@@std@@QBEABII@Z ENDP	; std::vector<unsigned int,std::allocator<unsigned int> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?push_back@?$vector@IV?$allocator@I@std@@@std@@QAEX$$QAI@Z
_TEXT	SEGMENT
tv229 = -16						; size = 4
tv174 = -12						; size = 4
__Idx$1 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@IV?$allocator@I@std@@@std@@QAEX$$QAI@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::push_back, COMDAT
; _this$ = ecx

; 895  : 		{	// insert by moving into element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 896  : 		if (_Inside(_STD addressof(_Val)))

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??$addressof@I@std@@YAPAIAAI@Z ; std::addressof<unsigned int>
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?_Inside@?$vector@IV?$allocator@I@std@@@std@@IBE_NPBI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Inside
  00030	0f b6 c8	 movzx	 ecx, al
  00033	85 c9		 test	 ecx, ecx
  00035	0f 84 ac 00 00
	00		 je	 $LN2@push_back

; 897  : 			{	// push back an element
; 898  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst();

  0003b	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0003e	52		 push	 edx
  0003f	e8 00 00 00 00	 call	 ??$addressof@I@std@@YAPAIAAI@Z ; std::addressof<unsigned int>
  00044	83 c4 04	 add	 esp, 4
  00047	8b f0		 mov	 esi, eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myfirst
  00051	2b 30		 sub	 esi, DWORD PTR [eax]
  00053	c1 fe 02	 sar	 esi, 2
  00056	89 75 f8	 mov	 DWORD PTR __Idx$1[ebp], esi

; 899  : 			if (this->_Mylast() == this->_Myend())

  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  00061	8b f0		 mov	 esi, eax
  00063	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myend
  0006b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0006d	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0006f	75 0a		 jne	 SHORT $LN4@push_back

; 900  : 				_Reserve(1);

  00071	6a 01		 push	 1
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	e8 00 00 00 00	 call	 ?_Reserve@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Reserve
$LN4@push_back:

; 901  : 			_Orphan_range(this->_Mylast(), this->_Mylast());

  0007b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  00083	8b 10		 mov	 edx, DWORD PTR [eax]
  00085	52		 push	 edx
  00086	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  0008e	8b 00		 mov	 eax, DWORD PTR [eax]
  00090	50		 push	 eax
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@IV?$allocator@I@std@@@std@@IBEXPAI0@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Orphan_range

; 902  : 			this->_Getal().construct(this->_Mylast(),

  00099	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myfirst
  000a1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a3	8b 55 f8	 mov	 edx, DWORD PTR __Idx$1[ebp]
  000a6	8d 04 91	 lea	 eax, DWORD PTR [ecx+edx*4]
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 ??$forward@I@std@@YA$$QAIAAI@Z ; std::forward<unsigned int>
  000af	83 c4 04	 add	 esp, 4
  000b2	50		 push	 eax
  000b3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b6	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  000bb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bd	51		 push	 ecx
  000be	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@I@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Getal
  000c6	8b c8		 mov	 ecx, eax
  000c8	e8 00 00 00 00	 call	 ??$construct@II@?$_Wrap_alloc@V?$allocator@I@std@@@std@@QAEXPAI$$QAI@Z ; std::_Wrap_alloc<std::allocator<unsigned int> >::construct<unsigned int,unsigned int>

; 903  : 				_STD forward<value_type>(this->_Myfirst()[_Idx]));
; 904  : 			++this->_Mylast();

  000cd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  000d5	89 45 f4	 mov	 DWORD PTR tv174[ebp], eax
  000d8	8b 55 f4	 mov	 edx, DWORD PTR tv174[ebp]
  000db	8b 02		 mov	 eax, DWORD PTR [edx]
  000dd	83 c0 04	 add	 eax, 4
  000e0	8b 4d f4	 mov	 ecx, DWORD PTR tv174[ebp]
  000e3	89 01		 mov	 DWORD PTR [ecx], eax

; 905  : 			}
; 906  : 		else

  000e5	eb 7f		 jmp	 SHORT $LN1@push_back
$LN2@push_back:

; 907  : 			{	// push back a non-element
; 908  : 			if (this->_Mylast() == this->_Myend())

  000e7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  000ef	8b f0		 mov	 esi, eax
  000f1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f4	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myend
  000f9	8b 16		 mov	 edx, DWORD PTR [esi]
  000fb	3b 10		 cmp	 edx, DWORD PTR [eax]
  000fd	75 0a		 jne	 SHORT $LN5@push_back

; 909  : 				_Reserve(1);

  000ff	6a 01		 push	 1
  00101	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00104	e8 00 00 00 00	 call	 ?_Reserve@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Reserve
$LN5@push_back:

; 910  : 			_Orphan_range(this->_Mylast(), this->_Mylast());

  00109	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  00111	8b 00		 mov	 eax, DWORD PTR [eax]
  00113	50		 push	 eax
  00114	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  0011c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0011e	51		 push	 ecx
  0011f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00122	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@IV?$allocator@I@std@@@std@@IBEXPAI0@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Orphan_range

; 911  : 			this->_Getal().construct(this->_Mylast(),

  00127	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0012a	52		 push	 edx
  0012b	e8 00 00 00 00	 call	 ??$forward@I@std@@YA$$QAIAAI@Z ; std::forward<unsigned int>
  00130	83 c4 04	 add	 esp, 4
  00133	50		 push	 eax
  00134	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00137	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  0013c	8b 00		 mov	 eax, DWORD PTR [eax]
  0013e	50		 push	 eax
  0013f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00142	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@I@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Getal
  00147	8b c8		 mov	 ecx, eax
  00149	e8 00 00 00 00	 call	 ??$construct@II@?$_Wrap_alloc@V?$allocator@I@std@@@std@@QAEXPAI$$QAI@Z ; std::_Wrap_alloc<std::allocator<unsigned int> >::construct<unsigned int,unsigned int>

; 912  : 				_STD forward<value_type>(_Val));
; 913  : 			++this->_Mylast();

  0014e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00151	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  00156	89 45 f0	 mov	 DWORD PTR tv229[ebp], eax
  00159	8b 4d f0	 mov	 ecx, DWORD PTR tv229[ebp]
  0015c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0015e	83 c2 04	 add	 edx, 4
  00161	8b 45 f0	 mov	 eax, DWORD PTR tv229[ebp]
  00164	89 10		 mov	 DWORD PTR [eax], edx
$LN1@push_back:

; 914  : 			}
; 915  : 		}

  00166	5e		 pop	 esi
  00167	83 c4 10	 add	 esp, 16			; 00000010H
  0016a	3b ec		 cmp	 ebp, esp
  0016c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00171	8b e5		 mov	 esp, ebp
  00173	5d		 pop	 ebp
  00174	c2 04 00	 ret	 4
?push_back@?$vector@IV?$allocator@I@std@@@std@@QAEX$$QAI@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@IV?$allocator@I@std@@@std@@QAE@XZ PROC	; std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> >, COMDAT
; _this$ = ecx

; 706  : 		{	// construct empty vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$vector@IV?$allocator@I@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 705  : 		: _Mybase()

  00036	8d 4d ef	 lea	 ecx, DWORD PTR $T2[ebp]
  00039	e8 00 00 00 00	 call	 ??0?$allocator@I@std@@QAE@XZ ; std::allocator<unsigned int>::allocator<unsigned int>
  0003e	50		 push	 eax
  0003f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAE@ABV?$allocator@I@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >

; 707  : 		}

  00047	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00054	59		 pop	 ecx
  00055	83 c4 14	 add	 esp, 20			; 00000014H
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@IV?$allocator@I@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$vector@IV?$allocator@I@std@@@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$vector@IV?$allocator@I@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned int,std::allocator<unsigned int> >::vector<unsigned int,std::allocator<unsigned int> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 810  : 		{	// construct from [_Ptr, _Ptr + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 809  : 		: _Mybase()

  00036	8d 4d ef	 lea	 ecx, DWORD PTR $T2[ebp]
  00039	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QAE@XZ ; std::allocator<char>::allocator<char>
  0003e	50		 push	 eax
  0003f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
  00047	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 811  : 		_Tidy();

  0004e	6a 00		 push	 0
  00050	6a 00		 push	 0
  00052	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 812  : 		assign(_Ptr, _Count);

  0005a	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  0005d	50		 push	 eax
  0005e	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00061	51		 push	 ecx
  00062	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 813  : 		}

  0006a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00071	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00074	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007e	59		 pop	 ecx
  0007f	83 c4 14	 add	 esp, 20			; 00000014H
  00082	3b ec		 cmp	 ebp, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
_TEXT	SEGMENT
tv342 = -32						; size = 8
tv282 = -24						; size = 8
tv259 = -16						; size = 4
__Off$ = -12						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Ptr$ = 12						; size = 24
__Mode$ = 36						; size = 4
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos, COMDAT
; _this$ = ecx

; 276  : 		{	// change position to _Pos, according to _Mode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000d	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00010	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00013	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00016	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00019	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0001c	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001f	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00022	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00025	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 277  : 		streamoff _Off = (streamoff)_Ptr;

  00028	8d 4d 0c	 lea	 ecx, DWORD PTR __Ptr$[ebp]
  0002b	e8 00 00 00 00	 call	 ??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ ; std::fpos<_Mbstatet>::operator __int64
  00030	89 45 f4	 mov	 DWORD PTR __Off$[ebp], eax
  00033	89 55 f8	 mov	 DWORD PTR __Off$[ebp+4], edx

; 278  : 		if (_Mysb::pptr() != 0 && _Seekhigh < _Mysb::pptr())

  00036	8b f4		 mov	 esi, esp
  00038	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00041	3b f4		 cmp	 esi, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	85 c0		 test	 eax, eax
  0004a	74 32		 je	 SHORT $LN2@seekpos
  0004c	8b f4		 mov	 esi, esp
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00057	3b f4		 cmp	 esi, esp
  00059	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	39 41 38	 cmp	 DWORD PTR [ecx+56], eax
  00064	73 18		 jae	 SHORT $LN2@seekpos

; 279  : 			_Seekhigh = _Mysb::pptr();	// update high-water pointer

  00066	8b f4		 mov	 esi, esp
  00068	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0007b	89 42 38	 mov	 DWORD PTR [edx+56], eax
$LN2@seekpos:

; 280  : 
; 281  : 		if (_Off == _BADOFF)

  0007e	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  00083	89 45 f0	 mov	 DWORD PTR tv259[ebp], eax
  00086	8b 4d f0	 mov	 ecx, DWORD PTR tv259[ebp]
  00089	8b 55 f4	 mov	 edx, DWORD PTR __Off$[ebp]
  0008c	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0008e	75 10		 jne	 SHORT $LN3@seekpos
  00090	8b 45 f0	 mov	 eax, DWORD PTR tv259[ebp]
  00093	8b 4d f8	 mov	 ecx, DWORD PTR __Off$[ebp+4]
  00096	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00099	75 05		 jne	 SHORT $LN3@seekpos
  0009b	e9 14 02 00 00	 jmp	 $LN4@seekpos
$LN3@seekpos:

; 282  : 			;
; 283  : 		else if (_Mode & ios_base::in && _Mysb::gptr() != 0)

  000a0	8b 55 24	 mov	 edx, DWORD PTR __Mode$[ebp]
  000a3	83 e2 01	 and	 edx, 1
  000a6	0f 84 31 01 00
	00		 je	 $LN5@seekpos
  000ac	8b f4		 mov	 esi, esp
  000ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000b7	3b f4		 cmp	 esi, esp
  000b9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000be	85 c0		 test	 eax, eax
  000c0	0f 84 17 01 00
	00		 je	 $LN5@seekpos

; 284  : 			{	// position within read buffer
; 285  : 			if (0 <= _Off && _Off <= _Seekhigh - _Mysb::eback())

  000c6	83 7d f8 00	 cmp	 DWORD PTR __Off$[ebp+4], 0
  000ca	0f 8c f8 00 00
	00		 jl	 $LN7@seekpos
  000d0	7f 0a		 jg	 SHORT $LN15@seekpos
  000d2	83 7d f4 00	 cmp	 DWORD PTR __Off$[ebp], 0
  000d6	0f 82 ec 00 00
	00		 jb	 $LN7@seekpos
$LN15@seekpos:
  000dc	8b f4		 mov	 esi, esp
  000de	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000e7	3b f4		 cmp	 esi, esp
  000e9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ee	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f1	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  000f4	2b d0		 sub	 edx, eax
  000f6	8b c2		 mov	 eax, edx
  000f8	99		 cdq
  000f9	89 45 e8	 mov	 DWORD PTR tv282[ebp], eax
  000fc	89 55 ec	 mov	 DWORD PTR tv282[ebp+4], edx
  000ff	8b 45 f8	 mov	 eax, DWORD PTR __Off$[ebp+4]
  00102	3b 45 ec	 cmp	 eax, DWORD PTR tv282[ebp+4]
  00105	0f 8f bd 00 00
	00		 jg	 $LN7@seekpos
  0010b	7c 0c		 jl	 SHORT $LN16@seekpos
  0010d	8b 4d f4	 mov	 ecx, DWORD PTR __Off$[ebp]
  00110	3b 4d e8	 cmp	 ecx, DWORD PTR tv282[ebp]
  00113	0f 87 af 00 00
	00		 ja	 $LN7@seekpos
$LN16@seekpos:

; 286  : 				{	// change read position
; 287  : 				_Mysb::gbump((int)(_Mysb::eback() - _Mysb::gptr() + _Off));

  00119	8b f4		 mov	 esi, esp
  0011b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00124	3b f4		 cmp	 esi, esp
  00126	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012b	8b f0		 mov	 esi, eax
  0012d	8b fc		 mov	 edi, esp
  0012f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00132	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00138	3b fc		 cmp	 edi, esp
  0013a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0013f	2b f0		 sub	 esi, eax
  00141	8b c6		 mov	 eax, esi
  00143	99		 cdq
  00144	03 45 f4	 add	 eax, DWORD PTR __Off$[ebp]
  00147	13 55 f8	 adc	 edx, DWORD PTR __Off$[ebp+4]
  0014a	8b f4		 mov	 esi, esp
  0014c	50		 push	 eax
  0014d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
  00156	3b f4		 cmp	 esi, esp
  00158	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 288  : 				if (_Mode & ios_base::out && _Mysb::pptr() != 0)

  0015d	8b 55 24	 mov	 edx, DWORD PTR __Mode$[ebp]
  00160	83 e2 02	 and	 edx, 2
  00163	74 61		 je	 SHORT $LN9@seekpos
  00165	8b f4		 mov	 esi, esp
  00167	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00170	3b f4		 cmp	 esi, esp
  00172	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00177	85 c0		 test	 eax, eax
  00179	74 4b		 je	 SHORT $LN9@seekpos

; 289  : 					_Mysb::setp(_Mysb::pbase(), _Mysb::gptr(),

  0017b	8b f4		 mov	 esi, esp
  0017d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00180	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00186	3b f4		 cmp	 esi, esp
  00188	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018d	8b f4		 mov	 esi, esp
  0018f	50		 push	 eax
  00190	8b fc		 mov	 edi, esp
  00192	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00195	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0019b	3b fc		 cmp	 edi, esp
  0019d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a2	50		 push	 eax
  001a3	8b fc		 mov	 edi, esp
  001a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  001ae	3b fc		 cmp	 edi, esp
  001b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b5	50		 push	 eax
  001b6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  001bf	3b f4		 cmp	 esi, esp
  001c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN9@seekpos:

; 290  : 						_Mysb::epptr());	// change write position to match
; 291  : 				}
; 292  : 			else

  001c6	eb 10		 jmp	 SHORT $LN8@seekpos
$LN7@seekpos:

; 293  : 				_Off = _BADOFF;

  001c8	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  001cd	8b 08		 mov	 ecx, DWORD PTR [eax]
  001cf	89 4d f4	 mov	 DWORD PTR __Off$[ebp], ecx
  001d2	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  001d5	89 55 f8	 mov	 DWORD PTR __Off$[ebp+4], edx
$LN8@seekpos:
  001d8	e9 d7 00 00 00	 jmp	 $LN4@seekpos
$LN5@seekpos:

; 294  : 			}
; 295  : 		else if (_Mode & ios_base::out && _Mysb::pptr() != 0)

  001dd	8b 45 24	 mov	 eax, DWORD PTR __Mode$[ebp]
  001e0	83 e0 02	 and	 eax, 2
  001e3	0f 84 ba 00 00
	00		 je	 $LN10@seekpos
  001e9	8b f4		 mov	 esi, esp
  001eb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  001f4	3b f4		 cmp	 esi, esp
  001f6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001fb	85 c0		 test	 eax, eax
  001fd	0f 84 a0 00 00
	00		 je	 $LN10@seekpos

; 296  : 			{	// position within write buffer
; 297  : 			if (0 <= _Off && _Off <= _Seekhigh - _Mysb::eback())

  00203	83 7d f8 00	 cmp	 DWORD PTR __Off$[ebp+4], 0
  00207	0f 8c 83 00 00
	00		 jl	 $LN12@seekpos
  0020d	7f 06		 jg	 SHORT $LN17@seekpos
  0020f	83 7d f4 00	 cmp	 DWORD PTR __Off$[ebp], 0
  00213	72 7b		 jb	 SHORT $LN12@seekpos
$LN17@seekpos:
  00215	8b f4		 mov	 esi, esp
  00217	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0021a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00220	3b f4		 cmp	 esi, esp
  00222	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00227	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0022a	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  0022d	2b d0		 sub	 edx, eax
  0022f	8b c2		 mov	 eax, edx
  00231	99		 cdq
  00232	89 45 e0	 mov	 DWORD PTR tv342[ebp], eax
  00235	89 55 e4	 mov	 DWORD PTR tv342[ebp+4], edx
  00238	8b 45 f8	 mov	 eax, DWORD PTR __Off$[ebp+4]
  0023b	3b 45 e4	 cmp	 eax, DWORD PTR tv342[ebp+4]
  0023e	7f 50		 jg	 SHORT $LN12@seekpos
  00240	7c 08		 jl	 SHORT $LN18@seekpos
  00242	8b 4d f4	 mov	 ecx, DWORD PTR __Off$[ebp]
  00245	3b 4d e0	 cmp	 ecx, DWORD PTR tv342[ebp]
  00248	77 46		 ja	 SHORT $LN12@seekpos
$LN18@seekpos:

; 298  : 				_Mysb::pbump((int)(_Mysb::eback()

  0024a	8b f4		 mov	 esi, esp
  0024c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0024f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00255	3b f4		 cmp	 esi, esp
  00257	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0025c	8b f0		 mov	 esi, eax
  0025e	8b fc		 mov	 edi, esp
  00260	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00263	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00269	3b fc		 cmp	 edi, esp
  0026b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00270	2b f0		 sub	 esi, eax
  00272	8b c6		 mov	 eax, esi
  00274	99		 cdq
  00275	03 45 f4	 add	 eax, DWORD PTR __Off$[ebp]
  00278	13 55 f8	 adc	 edx, DWORD PTR __Off$[ebp+4]
  0027b	8b f4		 mov	 esi, esp
  0027d	50		 push	 eax
  0027e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00281	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
  00287	3b f4		 cmp	 esi, esp
  00289	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 299  : 					- _Mysb::pptr() + _Off));	// change write position
; 300  : 			else

  0028e	eb 11		 jmp	 SHORT $LN13@seekpos
$LN12@seekpos:

; 301  : 				_Off = _BADOFF;

  00290	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
  00296	8b 02		 mov	 eax, DWORD PTR [edx]
  00298	89 45 f4	 mov	 DWORD PTR __Off$[ebp], eax
  0029b	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  0029e	89 4d f8	 mov	 DWORD PTR __Off$[ebp+4], ecx
$LN13@seekpos:

; 302  : 			}
; 303  : 		else

  002a1	eb 11		 jmp	 SHORT $LN4@seekpos
$LN10@seekpos:

; 304  : 			_Off = _BADOFF;	// neither read nor write buffer selected, fail

  002a3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
  002a9	8b 02		 mov	 eax, DWORD PTR [edx]
  002ab	89 45 f4	 mov	 DWORD PTR __Off$[ebp], eax
  002ae	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  002b1	89 4d f8	 mov	 DWORD PTR __Off$[ebp+4], ecx
$LN4@seekpos:

; 305  : 		return (streampos(_Off));

  002b4	8b 55 f8	 mov	 edx, DWORD PTR __Off$[ebp+4]
  002b7	52		 push	 edx
  002b8	8b 45 f4	 mov	 eax, DWORD PTR __Off$[ebp]
  002bb	50		 push	 eax
  002bc	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  002bf	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  002c4	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 306  : 		}

  002c7	5f		 pop	 edi
  002c8	5e		 pop	 esi
  002c9	83 c4 20	 add	 esp, 32			; 00000020H
  002cc	3b ec		 cmp	 ebp, esp
  002ce	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002d3	8b e5		 mov	 esp, ebp
  002d5	5d		 pop	 ebp
  002d6	c2 20 00	 ret	 32			; 00000020H
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
_TEXT	SEGMENT
tv453 = -20						; size = 8
tv360 = -12						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 8
__Way$ = 20						; size = 4
__Which$ = 24						; size = 4
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff, COMDAT
; _this$ = ecx

; 227  : 		{	// change position by _Off, according to _Way, _Mode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000d	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00010	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00013	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00016	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00019	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 228  : 		if (_Mysb::pptr() != 0 && _Seekhigh < _Mysb::pptr())

  0001f	8b f4		 mov	 esi, esp
  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0002a	3b f4		 cmp	 esi, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	85 c0		 test	 eax, eax
  00033	74 32		 je	 SHORT $LN2@seekoff
  00035	8b f4		 mov	 esi, esp
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	39 41 38	 cmp	 DWORD PTR [ecx+56], eax
  0004d	73 18		 jae	 SHORT $LN2@seekoff

; 229  : 			_Seekhigh = _Mysb::pptr();	// update high-water pointer

  0004f	8b f4		 mov	 esi, esp
  00051	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0005a	3b f4		 cmp	 esi, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00064	89 42 38	 mov	 DWORD PTR [edx+56], eax
$LN2@seekoff:

; 230  : 
; 231  : 		if (_Which & ios_base::in && _Mysb::gptr() != 0)

  00067	8b 45 18	 mov	 eax, DWORD PTR __Which$[ebp]
  0006a	83 e0 01	 and	 eax, 1
  0006d	0f 84 c0 01 00
	00		 je	 $LN3@seekoff
  00073	8b f4		 mov	 esi, esp
  00075	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0007e	3b f4		 cmp	 esi, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	85 c0		 test	 eax, eax
  00087	0f 84 a6 01 00
	00		 je	 $LN3@seekoff

; 232  : 			{	// position within read buffer
; 233  : 			if (_Way == ios_base::end)

  0008d	83 7d 14 02	 cmp	 DWORD PTR __Way$[ebp], 2
  00091	75 2b		 jne	 SHORT $LN5@seekoff

; 234  : 				_Off += (off_type)(_Seekhigh - _Mysb::eback());

  00093	8b f4		 mov	 esi, esp
  00095	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0009e	3b f4		 cmp	 esi, esp
  000a0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a8	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  000ab	2b d0		 sub	 edx, eax
  000ad	8b c2		 mov	 eax, edx
  000af	99		 cdq
  000b0	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  000b3	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  000b6	89 45 0c	 mov	 DWORD PTR __Off$[ebp], eax
  000b9	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx

; 235  : 			else if (_Way == ios_base::cur

  000bc	eb 5e		 jmp	 SHORT $LN6@seekoff
$LN5@seekoff:

; 236  : 				&& (_Which & ios_base::out) == 0)

  000be	83 7d 14 01	 cmp	 DWORD PTR __Way$[ebp], 1
  000c2	75 41		 jne	 SHORT $LN7@seekoff
  000c4	8b 45 18	 mov	 eax, DWORD PTR __Which$[ebp]
  000c7	83 e0 02	 and	 eax, 2
  000ca	75 39		 jne	 SHORT $LN7@seekoff

; 237  : 				_Off += (off_type)(_Mysb::gptr() - _Mysb::eback());

  000cc	8b f4		 mov	 esi, esp
  000ce	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000d7	3b f4		 cmp	 esi, esp
  000d9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000de	8b f0		 mov	 esi, eax
  000e0	8b fc		 mov	 edi, esp
  000e2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000eb	3b fc		 cmp	 edi, esp
  000ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f2	2b f0		 sub	 esi, eax
  000f4	8b c6		 mov	 eax, esi
  000f6	99		 cdq
  000f7	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  000fa	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  000fd	89 45 0c	 mov	 DWORD PTR __Off$[ebp], eax
  00100	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
  00103	eb 17		 jmp	 SHORT $LN6@seekoff
$LN7@seekoff:

; 238  : 			else if (_Way != ios_base::beg)

  00105	83 7d 14 00	 cmp	 DWORD PTR __Way$[ebp], 0
  00109	74 11		 je	 SHORT $LN6@seekoff

; 239  : 				_Off = _BADOFF;

  0010b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?_BADOFF@std@@3_JB
  00111	8b 11		 mov	 edx, DWORD PTR [ecx]
  00113	89 55 0c	 mov	 DWORD PTR __Off$[ebp], edx
  00116	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00119	89 45 10	 mov	 DWORD PTR __Off$[ebp+4], eax
$LN6@seekoff:

; 240  : 
; 241  : 			if (0 <= _Off && _Off <= _Seekhigh - _Mysb::eback())

  0011c	83 7d 10 00	 cmp	 DWORD PTR __Off$[ebp+4], 0
  00120	0f 8c f8 00 00
	00		 jl	 $LN10@seekoff
  00126	7f 0a		 jg	 SHORT $LN24@seekoff
  00128	83 7d 0c 00	 cmp	 DWORD PTR __Off$[ebp], 0
  0012c	0f 82 ec 00 00
	00		 jb	 $LN10@seekoff
$LN24@seekoff:
  00132	8b f4		 mov	 esi, esp
  00134	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00137	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0013d	3b f4		 cmp	 esi, esp
  0013f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00144	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00147	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  0014a	2b d0		 sub	 edx, eax
  0014c	8b c2		 mov	 eax, edx
  0014e	99		 cdq
  0014f	89 45 f4	 mov	 DWORD PTR tv360[ebp], eax
  00152	89 55 f8	 mov	 DWORD PTR tv360[ebp+4], edx
  00155	8b 45 10	 mov	 eax, DWORD PTR __Off$[ebp+4]
  00158	3b 45 f8	 cmp	 eax, DWORD PTR tv360[ebp+4]
  0015b	0f 8f bd 00 00
	00		 jg	 $LN10@seekoff
  00161	7c 0c		 jl	 SHORT $LN25@seekoff
  00163	8b 4d 0c	 mov	 ecx, DWORD PTR __Off$[ebp]
  00166	3b 4d f4	 cmp	 ecx, DWORD PTR tv360[ebp]
  00169	0f 87 af 00 00
	00		 ja	 $LN10@seekoff
$LN25@seekoff:

; 242  : 				{	// change read position
; 243  : 				_Mysb::gbump((int)(_Mysb::eback() - _Mysb::gptr() + _Off));

  0016f	8b f4		 mov	 esi, esp
  00171	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00174	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0017a	3b f4		 cmp	 esi, esp
  0017c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00181	8b f0		 mov	 esi, eax
  00183	8b fc		 mov	 edi, esp
  00185	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00188	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0018e	3b fc		 cmp	 edi, esp
  00190	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00195	2b f0		 sub	 esi, eax
  00197	8b c6		 mov	 eax, esi
  00199	99		 cdq
  0019a	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  0019d	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  001a0	8b f4		 mov	 esi, esp
  001a2	50		 push	 eax
  001a3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
  001ac	3b f4		 cmp	 esi, esp
  001ae	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 244  : 				if (_Which & ios_base::out && _Mysb::pptr() != 0)

  001b3	8b 55 18	 mov	 edx, DWORD PTR __Which$[ebp]
  001b6	83 e2 02	 and	 edx, 2
  001b9	74 61		 je	 SHORT $LN12@seekoff
  001bb	8b f4		 mov	 esi, esp
  001bd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  001c6	3b f4		 cmp	 esi, esp
  001c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001cd	85 c0		 test	 eax, eax
  001cf	74 4b		 je	 SHORT $LN12@seekoff

; 245  : 					_Mysb::setp(_Mysb::pbase(), _Mysb::gptr(),

  001d1	8b f4		 mov	 esi, esp
  001d3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001d6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  001dc	3b f4		 cmp	 esi, esp
  001de	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001e3	8b f4		 mov	 esi, esp
  001e5	50		 push	 eax
  001e6	8b fc		 mov	 edi, esp
  001e8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  001f1	3b fc		 cmp	 edi, esp
  001f3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f8	50		 push	 eax
  001f9	8b fc		 mov	 edi, esp
  001fb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  001fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00204	3b fc		 cmp	 edi, esp
  00206	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0020b	50		 push	 eax
  0020c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0020f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  00215	3b f4		 cmp	 esi, esp
  00217	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN12@seekoff:

; 246  : 						_Mysb::epptr());	// change write position to match
; 247  : 				}
; 248  : 			else

  0021c	eb 10		 jmp	 SHORT $LN11@seekoff
$LN10@seekoff:

; 249  : 				_Off = _BADOFF;

  0021e	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  00223	8b 08		 mov	 ecx, DWORD PTR [eax]
  00225	89 4d 0c	 mov	 DWORD PTR __Off$[ebp], ecx
  00228	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0022b	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
$LN11@seekoff:
  0022e	e9 64 01 00 00	 jmp	 $LN4@seekoff
$LN3@seekoff:

; 250  : 			}
; 251  : 		else if (_Which & ios_base::out && _Mysb::pptr() != 0)

  00233	8b 45 18	 mov	 eax, DWORD PTR __Which$[ebp]
  00236	83 e0 02	 and	 eax, 2
  00239	0f 84 40 01 00
	00		 je	 $LN13@seekoff
  0023f	8b f4		 mov	 esi, esp
  00241	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00244	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0024a	3b f4		 cmp	 esi, esp
  0024c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00251	85 c0		 test	 eax, eax
  00253	0f 84 26 01 00
	00		 je	 $LN13@seekoff

; 252  : 			{	// position within write buffer
; 253  : 			if (_Way == ios_base::end)

  00259	83 7d 14 02	 cmp	 DWORD PTR __Way$[ebp], 2
  0025d	75 2b		 jne	 SHORT $LN15@seekoff

; 254  : 				_Off += (off_type)(_Seekhigh - _Mysb::eback());

  0025f	8b f4		 mov	 esi, esp
  00261	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00264	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0026a	3b f4		 cmp	 esi, esp
  0026c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00271	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00274	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  00277	2b d0		 sub	 edx, eax
  00279	8b c2		 mov	 eax, edx
  0027b	99		 cdq
  0027c	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  0027f	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  00282	89 45 0c	 mov	 DWORD PTR __Off$[ebp], eax
  00285	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
  00288	eb 55		 jmp	 SHORT $LN16@seekoff
$LN15@seekoff:

; 255  : 			else if (_Way == ios_base::cur)

  0028a	83 7d 14 01	 cmp	 DWORD PTR __Way$[ebp], 1
  0028e	75 39		 jne	 SHORT $LN17@seekoff

; 256  : 				_Off += (off_type)(_Mysb::pptr() - _Mysb::eback());

  00290	8b f4		 mov	 esi, esp
  00292	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00295	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0029b	3b f4		 cmp	 esi, esp
  0029d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002a2	8b f0		 mov	 esi, eax
  002a4	8b fc		 mov	 edi, esp
  002a6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  002af	3b fc		 cmp	 edi, esp
  002b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002b6	2b f0		 sub	 esi, eax
  002b8	8b c6		 mov	 eax, esi
  002ba	99		 cdq
  002bb	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  002be	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  002c1	89 45 0c	 mov	 DWORD PTR __Off$[ebp], eax
  002c4	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
  002c7	eb 16		 jmp	 SHORT $LN16@seekoff
$LN17@seekoff:

; 257  : 			else if (_Way != ios_base::beg)

  002c9	83 7d 14 00	 cmp	 DWORD PTR __Way$[ebp], 0
  002cd	74 10		 je	 SHORT $LN16@seekoff

; 258  : 				_Off = _BADOFF;

  002cf	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  002d4	8b 08		 mov	 ecx, DWORD PTR [eax]
  002d6	89 4d 0c	 mov	 DWORD PTR __Off$[ebp], ecx
  002d9	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  002dc	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
$LN16@seekoff:

; 259  : 
; 260  : 			if (0 <= _Off && _Off <= _Seekhigh - _Mysb::eback())

  002df	83 7d 10 00	 cmp	 DWORD PTR __Off$[ebp+4], 0
  002e3	0f 8c 83 00 00
	00		 jl	 $LN20@seekoff
  002e9	7f 06		 jg	 SHORT $LN26@seekoff
  002eb	83 7d 0c 00	 cmp	 DWORD PTR __Off$[ebp], 0
  002ef	72 7b		 jb	 SHORT $LN20@seekoff
$LN26@seekoff:
  002f1	8b f4		 mov	 esi, esp
  002f3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  002fc	3b f4		 cmp	 esi, esp
  002fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00303	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00306	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  00309	2b d0		 sub	 edx, eax
  0030b	8b c2		 mov	 eax, edx
  0030d	99		 cdq
  0030e	89 45 ec	 mov	 DWORD PTR tv453[ebp], eax
  00311	89 55 f0	 mov	 DWORD PTR tv453[ebp+4], edx
  00314	8b 45 10	 mov	 eax, DWORD PTR __Off$[ebp+4]
  00317	3b 45 f0	 cmp	 eax, DWORD PTR tv453[ebp+4]
  0031a	7f 50		 jg	 SHORT $LN20@seekoff
  0031c	7c 08		 jl	 SHORT $LN27@seekoff
  0031e	8b 4d 0c	 mov	 ecx, DWORD PTR __Off$[ebp]
  00321	3b 4d ec	 cmp	 ecx, DWORD PTR tv453[ebp]
  00324	77 46		 ja	 SHORT $LN20@seekoff
$LN27@seekoff:

; 261  : 				_Mysb::pbump((int)(_Mysb::eback()

  00326	8b f4		 mov	 esi, esp
  00328	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0032b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00331	3b f4		 cmp	 esi, esp
  00333	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00338	8b f0		 mov	 esi, eax
  0033a	8b fc		 mov	 edi, esp
  0033c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0033f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00345	3b fc		 cmp	 edi, esp
  00347	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0034c	2b f0		 sub	 esi, eax
  0034e	8b c6		 mov	 eax, esi
  00350	99		 cdq
  00351	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  00354	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  00357	8b f4		 mov	 esi, esp
  00359	50		 push	 eax
  0035a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0035d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
  00363	3b f4		 cmp	 esi, esp
  00365	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 262  : 					- _Mysb::pptr() + _Off));	// change write position
; 263  : 			else

  0036a	eb 11		 jmp	 SHORT $LN21@seekoff
$LN20@seekoff:

; 264  : 				_Off = _BADOFF;

  0036c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
  00372	8b 02		 mov	 eax, DWORD PTR [edx]
  00374	89 45 0c	 mov	 DWORD PTR __Off$[ebp], eax
  00377	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  0037a	89 4d 10	 mov	 DWORD PTR __Off$[ebp+4], ecx
$LN21@seekoff:
  0037d	eb 18		 jmp	 SHORT $LN4@seekoff
$LN13@seekoff:

; 265  : 			}
; 266  : 
; 267  : 		else if (_Off != 0)

  0037f	8b 55 0c	 mov	 edx, DWORD PTR __Off$[ebp]
  00382	0b 55 10	 or	 edx, DWORD PTR __Off$[ebp+4]
  00385	74 10		 je	 SHORT $LN4@seekoff

; 268  : 
; 269  : 
; 270  : 			_Off = _BADOFF;	// neither read nor write buffer selected, fail

  00387	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  0038c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0038e	89 4d 0c	 mov	 DWORD PTR __Off$[ebp], ecx
  00391	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00394	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
$LN4@seekoff:

; 271  : 		return (pos_type(_Off));

  00397	8b 45 10	 mov	 eax, DWORD PTR __Off$[ebp+4]
  0039a	50		 push	 eax
  0039b	8b 4d 0c	 mov	 ecx, DWORD PTR __Off$[ebp]
  0039e	51		 push	 ecx
  0039f	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  003a2	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  003a7	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 272  : 		}

  003aa	5f		 pop	 edi
  003ab	5e		 pop	 esi
  003ac	83 c4 14	 add	 esp, 20			; 00000014H
  003af	3b ec		 cmp	 ebp, esp
  003b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003b6	8b e5		 mov	 esp, ebp
  003b8	5d		 pop	 ebp
  003b9	c2 14 00	 ret	 20			; 00000014H
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow, COMDAT
; _this$ = ecx

; 207  : 		{	// get an element from stream, but don't point past it

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 208  : 		if (_Mysb::gptr() == 0)

  00010	8b f4		 mov	 esi, esp
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0001b	3b f4		 cmp	 esi, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00022	85 c0		 test	 eax, eax
  00024	75 0f		 jne	 SHORT $LN2@underflow

; 209  : 			return (_Traits::eof());	// no character buffer, fail

  00026	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  0002b	e9 54 01 00 00	 jmp	 $LN1@underflow
  00030	e9 4f 01 00 00	 jmp	 $LN1@underflow
$LN2@underflow:

; 210  : 		else if (_Mysb::gptr() < _Mysb::egptr())

  00035	8b f4		 mov	 esi, esp
  00037	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b f0		 mov	 esi, eax
  00049	8b fc		 mov	 edi, esp
  0004b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00054	3b fc		 cmp	 edi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	3b f0		 cmp	 esi, eax
  0005d	73 25		 jae	 SHORT $LN4@underflow

; 211  : 			return (_Traits::to_int_type(*_Mysb::gptr()));	// return buffered

  0005f	8b f4		 mov	 esi, esp
  00061	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0006a	3b f4		 cmp	 esi, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
  00077	83 c4 04	 add	 esp, 4
  0007a	e9 05 01 00 00	 jmp	 $LN1@underflow

; 212  : 		else if (_Mystate & _Noread || _Mysb::pptr() == 0

  0007f	e9 00 01 00 00	 jmp	 $LN1@underflow
$LN4@underflow:

; 213  : 			|| (_Mysb::pptr() <= _Mysb::gptr() && _Seekhigh <= _Mysb::gptr()))

  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00087	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0008a	83 e1 04	 and	 ecx, 4
  0008d	75 5a		 jne	 SHORT $LN8@underflow
  0008f	8b f4		 mov	 esi, esp
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0009a	3b f4		 cmp	 esi, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a1	85 c0		 test	 eax, eax
  000a3	74 44		 je	 SHORT $LN8@underflow
  000a5	8b f4		 mov	 esi, esp
  000a7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000b0	3b f4		 cmp	 esi, esp
  000b2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b7	8b f0		 mov	 esi, eax
  000b9	8b fc		 mov	 edi, esp
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000c4	3b fc		 cmp	 edi, esp
  000c6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cb	3b f0		 cmp	 esi, eax
  000cd	77 29		 ja	 SHORT $LN6@underflow
  000cf	8b f4		 mov	 esi, esp
  000d1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000da	3b f4		 cmp	 esi, esp
  000dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e1	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000e4	39 42 38	 cmp	 DWORD PTR [edx+56], eax
  000e7	77 0f		 ja	 SHORT $LN6@underflow
$LN8@underflow:

; 214  : 			return (_Traits::eof());	// can't read, fail

  000e9	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  000ee	e9 91 00 00 00	 jmp	 $LN1@underflow

; 215  : 		else

  000f3	e9 8c 00 00 00	 jmp	 $LN1@underflow
$LN6@underflow:

; 216  : 			{	// extend read buffer into written area, then return buffered
; 217  : 			if (_Seekhigh < _Mysb::pptr())

  000f8	8b f4		 mov	 esi, esp
  000fa	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000fd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00103	3b f4		 cmp	 esi, esp
  00105	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010d	39 41 38	 cmp	 DWORD PTR [ecx+56], eax
  00110	73 18		 jae	 SHORT $LN9@underflow

; 218  : 				_Seekhigh = _Mysb::pptr();

  00112	8b f4		 mov	 esi, esp
  00114	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0011d	3b f4		 cmp	 esi, esp
  0011f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00124	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00127	89 42 38	 mov	 DWORD PTR [edx+56], eax
$LN9@underflow:

; 219  : 			_Mysb::setg(_Mysb::eback(), _Mysb::gptr(), _Seekhigh);

  0012a	8b f4		 mov	 esi, esp
  0012c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0012f	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00132	51		 push	 ecx
  00133	8b fc		 mov	 edi, esp
  00135	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00138	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0013e	3b fc		 cmp	 edi, esp
  00140	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00145	50		 push	 eax
  00146	8b fc		 mov	 edi, esp
  00148	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0014b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00151	3b fc		 cmp	 edi, esp
  00153	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00158	50		 push	 eax
  00159	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0015c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  00162	3b f4		 cmp	 esi, esp
  00164	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 220  : 			return (_Traits::to_int_type(*_Mysb::gptr()));

  00169	8b f4		 mov	 esi, esp
  0016b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0016e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00174	3b f4		 cmp	 esi, esp
  00176	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0017b	50		 push	 eax
  0017c	e8 00 00 00 00	 call	 ?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
  00181	83 c4 04	 add	 esp, 4
$LN1@underflow:

; 221  : 			}
; 222  : 		}

  00184	5f		 pop	 edi
  00185	5e		 pop	 esi
  00186	83 c4 04	 add	 esp, 4
  00189	3b ec		 cmp	 ebp, esp
  0018b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00190	8b e5		 mov	 esp, ebp
  00192	5d		 pop	 ebp
  00193	c3		 ret	 0
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
_TEXT	SEGMENT
$T1 = -16						; size = 4
$T2 = -9						; size = 1
$T3 = -8						; size = 4
_this$ = -4						; size = 4
__Meta$ = 8						; size = 4
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail, COMDAT
; _this$ = ecx

; 190  : 		{	// put an element back to stream

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 191  : 		if (_Mysb::gptr() == 0
; 192  : 			|| _Mysb::gptr() <= _Mysb::eback()
; 193  : 			|| (!_Traits::eq_int_type(_Traits::eof(), _Meta)

  0001d	8b f4		 mov	 esi, esp
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00028	3b f4		 cmp	 esi, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	85 c0		 test	 eax, eax
  00031	0f 84 93 00 00
	00		 je	 $LN4@pbackfail
  00037	8b f4		 mov	 esi, esp
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00042	3b f4		 cmp	 esi, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b f0		 mov	 esi, eax
  0004b	8b fc		 mov	 edi, esp
  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00056	3b fc		 cmp	 edi, esp
  00058	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005d	3b f0		 cmp	 esi, eax
  0005f	76 69		 jbe	 SHORT $LN4@pbackfail
  00061	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00066	89 45 f8	 mov	 DWORD PTR $T3[ebp], eax
  00069	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  0006c	50		 push	 eax
  0006d	8d 4d f8	 lea	 ecx, DWORD PTR $T3[ebp]
  00070	51		 push	 ecx
  00071	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  00076	83 c4 08	 add	 esp, 8
  00079	0f b6 d0	 movzx	 edx, al
  0007c	85 d2		 test	 edx, edx
  0007e	75 53		 jne	 SHORT $LN2@pbackfail
  00080	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
  00089	83 c4 04	 add	 esp, 4
  0008c	88 45 f7	 mov	 BYTE PTR $T2[ebp], al
  0008f	8b f4		 mov	 esi, esp
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0009a	3b f4		 cmp	 esi, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a1	b9 01 00 00 00	 mov	 ecx, 1
  000a6	6b d1 ff	 imul	 edx, ecx, -1
  000a9	03 c2		 add	 eax, edx
  000ab	50		 push	 eax
  000ac	8d 45 f7	 lea	 eax, DWORD PTR $T2[ebp]
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 ?eq@?$char_traits@D@std@@SA_NABD0@Z ; std::char_traits<char>::eq
  000b5	83 c4 08	 add	 esp, 8
  000b8	0f b6 c8	 movzx	 ecx, al
  000bb	85 c9		 test	 ecx, ecx
  000bd	75 14		 jne	 SHORT $LN2@pbackfail
  000bf	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000c2	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000c5	83 e0 02	 and	 eax, 2
  000c8	74 09		 je	 SHORT $LN2@pbackfail
$LN4@pbackfail:

; 194  : 			&& !_Traits::eq(_Traits::to_char_type(_Meta), _Mysb::gptr()[-1])
; 195  : 			&& _Mystate & _Constant))
; 196  : 			return (_Traits::eof());	// can't put back, fail

  000ca	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  000cf	eb 63		 jmp	 SHORT $LN1@pbackfail

; 197  : 		else

  000d1	eb 61		 jmp	 SHORT $LN1@pbackfail
$LN2@pbackfail:

; 198  : 			{	// back up one position and store put-back character
; 199  : 			_Mysb::gbump(-1);

  000d3	8b f4		 mov	 esi, esp
  000d5	6a ff		 push	 -1
  000d7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
  000e0	3b f4		 cmp	 esi, esp
  000e2	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 200  : 			if (!_Traits::eq_int_type(_Traits::eof(), _Meta))

  000e7	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  000ec	89 45 f0	 mov	 DWORD PTR $T1[ebp], eax
  000ef	8d 4d 08	 lea	 ecx, DWORD PTR __Meta$[ebp]
  000f2	51		 push	 ecx
  000f3	8d 55 f0	 lea	 edx, DWORD PTR $T1[ebp]
  000f6	52		 push	 edx
  000f7	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  000fc	83 c4 08	 add	 esp, 8
  000ff	0f b6 c0	 movzx	 eax, al
  00102	85 c0		 test	 eax, eax
  00104	75 22		 jne	 SHORT $LN5@pbackfail

; 201  : 				*_Mysb::gptr() = _Traits::to_char_type(_Meta);

  00106	8d 4d 08	 lea	 ecx, DWORD PTR __Meta$[ebp]
  00109	51		 push	 ecx
  0010a	e8 00 00 00 00	 call	 ?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
  0010f	83 c4 04	 add	 esp, 4
  00112	8a d8		 mov	 bl, al
  00114	8b f4		 mov	 esi, esp
  00116	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0011f	3b f4		 cmp	 esi, esp
  00121	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00126	88 18		 mov	 BYTE PTR [eax], bl
$LN5@pbackfail:

; 202  : 			return (_Traits::not_eof(_Meta));

  00128	8d 55 08	 lea	 edx, DWORD PTR __Meta$[ebp]
  0012b	52		 push	 edx
  0012c	e8 00 00 00 00	 call	 ?not_eof@?$char_traits@D@std@@SAHABH@Z ; std::char_traits<char>::not_eof
  00131	83 c4 04	 add	 esp, 4
$LN1@pbackfail:

; 203  : 			}
; 204  : 		}

  00134	5f		 pop	 edi
  00135	5e		 pop	 esi
  00136	5b		 pop	 ebx
  00137	83 c4 10	 add	 esp, 16			; 00000010H
  0013a	3b ec		 cmp	 ebp, esp
  0013c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00141	8b e5		 mov	 esp, ebp
  00143	5d		 pop	 ebp
  00144	c2 04 00	 ret	 4
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
_TEXT	SEGMENT
tv199 = -36						; size = 4
tv195 = -32						; size = 4
$T1 = -28						; size = 4
__Oldptr$2 = -24					; size = 4
__Newptr$3 = -20					; size = 4
__Inc$4 = -16						; size = 4
__Newsize$5 = -12					; size = 4
__Oldsize$6 = -8					; size = 4
_this$ = -4						; size = 4
__Meta$ = 8						; size = 4
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow, COMDAT
; _this$ = ecx

; 120  : 		{	// put an element to stream

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000e	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00011	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00014	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00017	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0001a	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0001d	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00020	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00023	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00026	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00029	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 121  : 		if (_Mystate & _Constant)

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00032	83 e1 02	 and	 ecx, 2
  00035	74 0c		 je	 SHORT $LN4@overflow

; 122  : 			return (_Traits::eof());	// array nonmutable, fail

  00037	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  0003c	e9 a1 03 00 00	 jmp	 $LN1@overflow
  00041	eb 30		 jmp	 SHORT $LN5@overflow
$LN4@overflow:

; 123  : 		else if (_Traits::eq_int_type(_Traits::eof(), _Meta))

  00043	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00048	89 45 e4	 mov	 DWORD PTR $T1[ebp], eax
  0004b	8d 55 08	 lea	 edx, DWORD PTR __Meta$[ebp]
  0004e	52		 push	 edx
  0004f	8d 45 e4	 lea	 eax, DWORD PTR $T1[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  00058	83 c4 08	 add	 esp, 8
  0005b	0f b6 c8	 movzx	 ecx, al
  0005e	85 c9		 test	 ecx, ecx
  00060	74 11		 je	 SHORT $LN5@overflow

; 124  : 			return (_Traits::not_eof(_Meta));	// EOF, return success code

  00062	8d 55 08	 lea	 edx, DWORD PTR __Meta$[ebp]
  00065	52		 push	 edx
  00066	e8 00 00 00 00	 call	 ?not_eof@?$char_traits@D@std@@SAHABH@Z ; std::char_traits<char>::not_eof
  0006b	83 c4 04	 add	 esp, 4
  0006e	e9 6f 03 00 00	 jmp	 $LN1@overflow
$LN5@overflow:

; 125  : 
; 126  : 		if (_Mystate & _Append
; 127  : 			&& _Mysb::pptr() != 0 && _Mysb::pptr() < _Seekhigh)

  00073	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00076	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00079	83 e1 08	 and	 ecx, 8
  0007c	74 6f		 je	 SHORT $LN7@overflow
  0007e	8b f4		 mov	 esi, esp
  00080	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00089	3b f4		 cmp	 esi, esp
  0008b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00090	85 c0		 test	 eax, eax
  00092	74 59		 je	 SHORT $LN7@overflow
  00094	8b f4		 mov	 esi, esp
  00096	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a6	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a9	3b 42 38	 cmp	 eax, DWORD PTR [edx+56]
  000ac	73 3f		 jae	 SHORT $LN7@overflow

; 128  : 			_Mysb::setp(_Mysb::pbase(), _Seekhigh, _Mysb::epptr());

  000ae	8b f4		 mov	 esi, esp
  000b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000b9	3b f4		 cmp	 esi, esp
  000bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c0	8b f4		 mov	 esi, esp
  000c2	50		 push	 eax
  000c3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c6	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  000c9	51		 push	 ecx
  000ca	8b fc		 mov	 edi, esp
  000cc	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000d5	3b fc		 cmp	 edi, esp
  000d7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000dc	50		 push	 eax
  000dd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  000e6	3b f4		 cmp	 esi, esp
  000e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN7@overflow:

; 129  : 
; 130  : 		if (_Mysb::pptr() != 0
; 131  : 			&& _Mysb::pptr() < _Mysb::epptr())

  000ed	8b f4		 mov	 esi, esp
  000ef	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000f8	3b f4		 cmp	 esi, esp
  000fa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ff	85 c0		 test	 eax, eax
  00101	74 59		 je	 SHORT $LN8@overflow
  00103	8b f4		 mov	 esi, esp
  00105	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00108	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0010e	3b f4		 cmp	 esi, esp
  00110	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00115	8b f0		 mov	 esi, eax
  00117	8b fc		 mov	 edi, esp
  00119	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00122	3b fc		 cmp	 edi, esp
  00124	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00129	3b f0		 cmp	 esi, eax
  0012b	73 2f		 jae	 SHORT $LN8@overflow

; 132  : 			{	// room in buffer, store it
; 133  : 			*_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

  0012d	8d 55 08	 lea	 edx, DWORD PTR __Meta$[ebp]
  00130	52		 push	 edx
  00131	e8 00 00 00 00	 call	 ?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
  00136	83 c4 04	 add	 esp, 4
  00139	8a d8		 mov	 bl, al
  0013b	8b f4		 mov	 esi, esp
  0013d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00140	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
  00146	3b f4		 cmp	 esi, esp
  00148	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014d	88 18		 mov	 BYTE PTR [eax], bl

; 134  : 			return (_Meta);

  0014f	8b 45 08	 mov	 eax, DWORD PTR __Meta$[ebp]
  00152	e9 8b 02 00 00	 jmp	 $LN1@overflow

; 135  : 			}
; 136  : 		else

  00157	e9 86 02 00 00	 jmp	 $LN1@overflow
$LN8@overflow:

; 137  : 			{	// grow buffer and store element
; 138  : 			size_t _Oldsize = _Mysb::pptr() == 0

  0015c	8b f4		 mov	 esi, esp
  0015e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00161	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00167	3b f4		 cmp	 esi, esp
  00169	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0016e	85 c0		 test	 eax, eax
  00170	75 09		 jne	 SHORT $LN20@overflow
  00172	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR tv195[ebp], 0
  00179	eb 2b		 jmp	 SHORT $LN21@overflow
$LN20@overflow:
  0017b	8b f4		 mov	 esi, esp
  0017d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00180	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00186	3b f4		 cmp	 esi, esp
  00188	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018d	8b f0		 mov	 esi, eax
  0018f	8b fc		 mov	 edi, esp
  00191	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00194	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0019a	3b fc		 cmp	 edi, esp
  0019c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a1	2b f0		 sub	 esi, eax
  001a3	89 75 e0	 mov	 DWORD PTR tv195[ebp], esi
$LN21@overflow:
  001a6	8b 45 e0	 mov	 eax, DWORD PTR tv195[ebp]
  001a9	89 45 f8	 mov	 DWORD PTR __Oldsize$6[ebp], eax

; 139  : 				? 0 : _Mysb::epptr() - _Mysb::eback();
; 140  : 			size_t _Newsize = _Oldsize;

  001ac	8b 4d f8	 mov	 ecx, DWORD PTR __Oldsize$6[ebp]
  001af	89 4d f4	 mov	 DWORD PTR __Newsize$5[ebp], ecx

; 141  : 			size_t _Inc = _Newsize / 2 < _MINSIZE

  001b2	8b 55 f4	 mov	 edx, DWORD PTR __Newsize$5[ebp]
  001b5	d1 ea		 shr	 edx, 1
  001b7	83 fa 20	 cmp	 edx, 32			; 00000020H
  001ba	73 09		 jae	 SHORT $LN22@overflow
  001bc	c7 45 dc 20 00
	00 00		 mov	 DWORD PTR tv199[ebp], 32 ; 00000020H
  001c3	eb 08		 jmp	 SHORT $LN23@overflow
$LN22@overflow:
  001c5	8b 45 f4	 mov	 eax, DWORD PTR __Newsize$5[ebp]
  001c8	d1 e8		 shr	 eax, 1
  001ca	89 45 dc	 mov	 DWORD PTR tv199[ebp], eax
$LN23@overflow:
  001cd	8b 4d dc	 mov	 ecx, DWORD PTR tv199[ebp]
  001d0	89 4d f0	 mov	 DWORD PTR __Inc$4[ebp], ecx
$LN2@overflow:

; 142  : 				? _MINSIZE : _Newsize / 2;	// grow by 50 per cent
; 143  : 
; 144  : 			while (0 < _Inc && INT_MAX - _Inc < _Newsize)

  001d3	83 7d f0 00	 cmp	 DWORD PTR __Inc$4[ebp], 0
  001d7	76 17		 jbe	 SHORT $LN3@overflow
  001d9	ba ff ff ff 7f	 mov	 edx, 2147483647		; 7fffffffH
  001de	2b 55 f0	 sub	 edx, DWORD PTR __Inc$4[ebp]
  001e1	3b 55 f4	 cmp	 edx, DWORD PTR __Newsize$5[ebp]
  001e4	73 0a		 jae	 SHORT $LN3@overflow

; 145  : 				_Inc /= 2;	// increment causes overflow, halve it

  001e6	8b 45 f0	 mov	 eax, DWORD PTR __Inc$4[ebp]
  001e9	d1 e8		 shr	 eax, 1
  001eb	89 45 f0	 mov	 DWORD PTR __Inc$4[ebp], eax
  001ee	eb e3		 jmp	 SHORT $LN2@overflow
$LN3@overflow:

; 146  : 			if (_Inc == 0)

  001f0	83 7d f0 00	 cmp	 DWORD PTR __Inc$4[ebp], 0
  001f4	75 0a		 jne	 SHORT $LN10@overflow

; 147  : 				return (_Traits::eof());	// buffer can't grow, fail

  001f6	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  001fb	e9 e2 01 00 00	 jmp	 $LN1@overflow
$LN10@overflow:

; 148  : 
; 149  : 			_Newsize += _Inc;

  00200	8b 4d f4	 mov	 ecx, DWORD PTR __Newsize$5[ebp]
  00203	03 4d f0	 add	 ecx, DWORD PTR __Inc$4[ebp]
  00206	89 4d f4	 mov	 DWORD PTR __Newsize$5[ebp], ecx

; 150  : 
; 151  : 			_Elem *_Newptr = _Al.allocate(_Newsize);

  00209	8b 55 f4	 mov	 edx, DWORD PTR __Newsize$5[ebp]
  0020c	52		 push	 edx
  0020d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00210	83 c1 40	 add	 ecx, 64			; 00000040H
  00213	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QAEPADI@Z ; std::allocator<char>::allocate
  00218	89 45 ec	 mov	 DWORD PTR __Newptr$3[ebp], eax

; 152  : 			_Elem *_Oldptr = _Mysb::eback();

  0021b	8b f4		 mov	 esi, esp
  0021d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00220	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00226	3b f4		 cmp	 esi, esp
  00228	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0022d	89 45 e8	 mov	 DWORD PTR __Oldptr$2[ebp], eax

; 153  : 
; 154  : 			if (0 < _Oldsize)

  00230	83 7d f8 00	 cmp	 DWORD PTR __Oldsize$6[ebp], 0
  00234	76 14		 jbe	 SHORT $LN11@overflow

; 155  : 				_Traits::copy(_Newptr, _Oldptr, _Oldsize);

  00236	8b 45 f8	 mov	 eax, DWORD PTR __Oldsize$6[ebp]
  00239	50		 push	 eax
  0023a	8b 4d e8	 mov	 ecx, DWORD PTR __Oldptr$2[ebp]
  0023d	51		 push	 ecx
  0023e	8b 55 ec	 mov	 edx, DWORD PTR __Newptr$3[ebp]
  00241	52		 push	 edx
  00242	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
  00247	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN11@overflow:

; 156  : 
; 157  : 			if (_Oldsize == 0)

  0024a	83 7d f8 00	 cmp	 DWORD PTR __Oldsize$6[ebp], 0
  0024e	75 75		 jne	 SHORT $LN12@overflow

; 158  : 				{	// first growth, set up pointers
; 159  : 				_Seekhigh = _Newptr;

  00250	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00253	8b 4d ec	 mov	 ecx, DWORD PTR __Newptr$3[ebp]
  00256	89 48 38	 mov	 DWORD PTR [eax+56], ecx

; 160  : 				_Mysb::setp(_Newptr, _Newptr + _Newsize);

  00259	8b 55 ec	 mov	 edx, DWORD PTR __Newptr$3[ebp]
  0025c	03 55 f4	 add	 edx, DWORD PTR __Newsize$5[ebp]
  0025f	8b f4		 mov	 esi, esp
  00261	52		 push	 edx
  00262	8b 45 ec	 mov	 eax, DWORD PTR __Newptr$3[ebp]
  00265	50		 push	 eax
  00266	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00269	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z
  0026f	3b f4		 cmp	 esi, esp
  00271	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 161  : 				if (_Mystate & _Noread)

  00276	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00279	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  0027c	83 e2 04	 and	 edx, 4
  0027f	74 1e		 je	 SHORT $LN14@overflow

; 162  : 					_Mysb::setg(_Newptr, 0, _Newptr);

  00281	8b f4		 mov	 esi, esp
  00283	8b 45 ec	 mov	 eax, DWORD PTR __Newptr$3[ebp]
  00286	50		 push	 eax
  00287	6a 00		 push	 0
  00289	8b 4d ec	 mov	 ecx, DWORD PTR __Newptr$3[ebp]
  0028c	51		 push	 ecx
  0028d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00290	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  00296	3b f4		 cmp	 esi, esp
  00298	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 163  : 				else

  0029d	eb 21		 jmp	 SHORT $LN15@overflow
$LN14@overflow:

; 164  : 					_Mysb::setg(_Newptr, _Newptr, _Newptr + 1);

  0029f	8b 55 ec	 mov	 edx, DWORD PTR __Newptr$3[ebp]
  002a2	83 c2 01	 add	 edx, 1
  002a5	8b f4		 mov	 esi, esp
  002a7	52		 push	 edx
  002a8	8b 45 ec	 mov	 eax, DWORD PTR __Newptr$3[ebp]
  002ab	50		 push	 eax
  002ac	8b 4d ec	 mov	 ecx, DWORD PTR __Newptr$3[ebp]
  002af	51		 push	 ecx
  002b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  002b9	3b f4		 cmp	 esi, esp
  002bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN15@overflow:

; 165  : 				}
; 166  : 			else

  002c0	e9 cb 00 00 00	 jmp	 $LN13@overflow
$LN12@overflow:

; 167  : 				{	// not first growth, adjust pointers
; 168  : 				_Seekhigh = _Newptr + (_Seekhigh - _Oldptr);

  002c5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  002c8	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  002cb	2b 45 e8	 sub	 eax, DWORD PTR __Oldptr$2[ebp]
  002ce	03 45 ec	 add	 eax, DWORD PTR __Newptr$3[ebp]
  002d1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002d4	89 41 38	 mov	 DWORD PTR [ecx+56], eax

; 169  : 				_Mysb::setp(_Newptr + (_Mysb::pbase() - _Oldptr),

  002d7	8b 55 ec	 mov	 edx, DWORD PTR __Newptr$3[ebp]
  002da	03 55 f4	 add	 edx, DWORD PTR __Newsize$5[ebp]
  002dd	8b f4		 mov	 esi, esp
  002df	52		 push	 edx
  002e0	8b fc		 mov	 edi, esp
  002e2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  002eb	3b fc		 cmp	 edi, esp
  002ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002f2	2b 45 e8	 sub	 eax, DWORD PTR __Oldptr$2[ebp]
  002f5	03 45 ec	 add	 eax, DWORD PTR __Newptr$3[ebp]
  002f8	50		 push	 eax
  002f9	8b fc		 mov	 edi, esp
  002fb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  002fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00304	3b fc		 cmp	 edi, esp
  00306	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0030b	2b 45 e8	 sub	 eax, DWORD PTR __Oldptr$2[ebp]
  0030e	03 45 ec	 add	 eax, DWORD PTR __Newptr$3[ebp]
  00311	50		 push	 eax
  00312	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00315	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  0031b	3b f4		 cmp	 esi, esp
  0031d	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 170  : 					_Newptr + (_Mysb::pptr() - _Oldptr),
; 171  : 					_Newptr + _Newsize);
; 172  : 				if (_Mystate & _Noread)

  00322	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00325	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00328	83 e1 04	 and	 ecx, 4
  0032b	74 1e		 je	 SHORT $LN16@overflow

; 173  : 					_Mysb::setg(_Newptr, 0, _Newptr);

  0032d	8b f4		 mov	 esi, esp
  0032f	8b 55 ec	 mov	 edx, DWORD PTR __Newptr$3[ebp]
  00332	52		 push	 edx
  00333	6a 00		 push	 0
  00335	8b 45 ec	 mov	 eax, DWORD PTR __Newptr$3[ebp]
  00338	50		 push	 eax
  00339	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0033c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  00342	3b f4		 cmp	 esi, esp
  00344	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 174  : 				else

  00349	eb 45		 jmp	 SHORT $LN13@overflow
$LN16@overflow:

; 175  : 					_Mysb::setg(_Newptr,

  0034b	8b f4		 mov	 esi, esp
  0034d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00350	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00356	3b f4		 cmp	 esi, esp
  00358	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0035d	83 c0 01	 add	 eax, 1
  00360	8b f4		 mov	 esi, esp
  00362	50		 push	 eax
  00363	8b fc		 mov	 edi, esp
  00365	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00368	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0036e	3b fc		 cmp	 edi, esp
  00370	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00375	2b 45 e8	 sub	 eax, DWORD PTR __Oldptr$2[ebp]
  00378	03 45 ec	 add	 eax, DWORD PTR __Newptr$3[ebp]
  0037b	50		 push	 eax
  0037c	8b 4d ec	 mov	 ecx, DWORD PTR __Newptr$3[ebp]
  0037f	51		 push	 ecx
  00380	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00383	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  00389	3b f4		 cmp	 esi, esp
  0038b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN13@overflow:

; 176  : 						_Newptr + (_Mysb::gptr() - _Oldptr),
; 177  : 						_Mysb::pptr() + 1);
; 178  : 				}
; 179  : 
; 180  : 			if (_Mystate & _Allocated)

  00390	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00393	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00396	83 e0 01	 and	 eax, 1
  00399	74 13		 je	 SHORT $LN18@overflow

; 181  : 				_Al.deallocate(_Oldptr, _Oldsize);

  0039b	8b 4d f8	 mov	 ecx, DWORD PTR __Oldsize$6[ebp]
  0039e	51		 push	 ecx
  0039f	8b 55 e8	 mov	 edx, DWORD PTR __Oldptr$2[ebp]
  003a2	52		 push	 edx
  003a3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003a6	83 c1 40	 add	 ecx, 64			; 00000040H
  003a9	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN18@overflow:

; 182  : 			_Mystate |= _Allocated;

  003ae	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  003b1	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  003b4	83 c9 01	 or	 ecx, 1
  003b7	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  003ba	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx

; 183  : 
; 184  : 			*_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

  003bd	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  003c0	50		 push	 eax
  003c1	e8 00 00 00 00	 call	 ?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
  003c6	83 c4 04	 add	 esp, 4
  003c9	8a d8		 mov	 bl, al
  003cb	8b f4		 mov	 esi, esp
  003cd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  003d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
  003d6	3b f4		 cmp	 esi, esp
  003d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003dd	88 18		 mov	 BYTE PTR [eax], bl

; 185  : 			return (_Meta);

  003df	8b 45 08	 mov	 eax, DWORD PTR __Meta$[ebp]
$LN1@overflow:

; 186  : 			}
; 187  : 		}

  003e2	5f		 pop	 edi
  003e3	5e		 pop	 esi
  003e4	5b		 pop	 ebx
  003e5	83 c4 24	 add	 esp, 36			; 00000024H
  003e8	3b ec		 cmp	 ebp, esp
  003ea	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003ef	8b e5		 mov	 esp, ebp
  003f1	5d		 pop	 ebp
  003f2	c2 04 00	 ret	 4
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 75   : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00031	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@

; 76   : 		_Tidy();

  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 77   : 		}

  0003f	8b f4		 mov	 esi, esp
  00041	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00054	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005b	59		 pop	 ecx
  0005c	5e		 pop	 esi
  0005d	83 c4 10	 add	 esp, 16			; 00000010H
  00060	3b ec		 cmp	 ebp, esp
  00062	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00014	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 44		 push	 68			; 00000044H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00020	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00023	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	83 c4 04	 add	 esp, 4
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@ABU01@@Z ; std::_Iterator_base12::_Iterator_base12
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@SAPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@ABU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@SAPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@ABU32@@Z PROC ; std::pointer_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *>::pointer_to, COMDAT

; 316  : 		{	// convert raw reference to pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 317  : 		return (_STD addressof(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$addressof@$$CBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@YAPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@0@ABU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const >
  0000c	83 c4 04	 add	 esp, 4

; 318  : 		}

  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?pointer_to@?$pointer_traits@PBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@SAPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@ABU32@@Z ENDP ; std::pointer_traits<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::_Mynode, COMDAT
; _this$ = ecx

; 122  : 		{	// return node pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 123  : 		return (_Ptr);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 124  : 		}

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::_Mynode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMesh@@@1@@Z
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
??0?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMesh@@@1@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >, COMDAT
; _this$ = ecx

; 540  : 		{	// construct allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMesh@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 539  : 		: _Mypair(_One_then_variadic_args_t(), _Al)

  00036	8b 45 08	 mov	 eax, DWORD PTR __Al$[ebp]
  00039	50		 push	 eax
  0003a	0f b6 4d ef	 movzx	 ecx, BYTE PTR $T2[ebp]
  0003e	51		 push	 ecx
  0003f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ??$?0ABV?$allocator@PAVMesh@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMesh@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@PAVMesh@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Mesh *> >,std::_Vector_val<std::_Simple_types<Mesh *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<Mesh *> >,std::_Vector_val<std::_Simple_types<Mesh *> >,1><std::allocator<Mesh *> const &>
  00047	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 541  : 		_Alloc_proxy();

  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Alloc_proxy

; 542  : 		}

  00056	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00060	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00063	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006a	59		 pop	 ecx
  0006b	83 c4 14	 add	 esp, 20			; 00000014H
  0006e	3b ec		 cmp	 ebp, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMesh@@@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMesh@@@std@@@2@$00@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMesh@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMesh@@@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMesh@@@1@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myend, COMDAT
; _this$ = ecx

; 661  : 		{	// return reference to _Myend

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 662  : 		return (_Get_data()._Myend);

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Get_data
  00016	83 c0 0c	 add	 eax, 12			; 0000000cH

; 663  : 		}

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABQAPAVMeshData@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABQAPAVMeshData@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast, COMDAT
; _this$ = ecx

; 656  : 		{	// return const reference to _Mylast

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 657  : 		return (_Get_data()._Mylast);

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Get_data
  00016	83 c0 08	 add	 eax, 8

; 658  : 		}

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABQAPAVMeshData@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast, COMDAT
; _this$ = ecx

; 651  : 		{	// return reference to _Mylast

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 652  : 		return (_Get_data()._Mylast);

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Get_data
  00016	83 c0 08	 add	 eax, 8

; 653  : 		}

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABQAPAVMeshData@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABQAPAVMeshData@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst, COMDAT
; _this$ = ecx

; 646  : 		{	// return const reference to _Myfirst

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 647  : 		return (_Get_data()._Myfirst);

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Get_data
  00016	83 c0 04	 add	 eax, 4

; 648  : 		}

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABQAPAVMeshData@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst, COMDAT
; _this$ = ecx

; 641  : 		{	// return reference to _Myfirst

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 642  : 		return (_Get_data()._Myfirst);

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Get_data
  00016	83 c0 04	 add	 eax, 4

; 643  : 		}

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Getal, COMDAT
; _this$ = ecx

; 621  : 		{	// return reference to allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 622  : 		return (_Mypair._Get_first());

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Get_first

; 623  : 		}

  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??1?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::~_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >, COMDAT
; _this$ = ecx

; 551  : 		{	// destroy proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 552  : 		_Free_proxy();

  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Free_proxy

; 553  : 		}

  00035	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAE@XZ
  0003d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00040	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00047	59		 pop	 ecx
  00048	83 c4 10	 add	 esp, 16			; 00000010H
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::~_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@$$QAV?$allocator@PAVMeshData@@@1@@Z
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@$$QAV?$allocator@PAVMeshData@@@1@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >, COMDAT
; _this$ = ecx

; 546  : 		{	// construct allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@$$QAV?$allocator@PAVMeshData@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 545  : 		: _Mypair(_One_then_variadic_args_t(), _STD move(_Al))

  00036	8b 45 08	 mov	 eax, DWORD PTR __Al$[ebp]
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ??$move@AAV?$allocator@PAVMeshData@@@std@@@std@@YA$$QAV?$allocator@PAVMeshData@@@0@AAV10@@Z ; std::move<std::allocator<MeshData *> &>
  0003f	83 c4 04	 add	 esp, 4
  00042	50		 push	 eax
  00043	0f b6 4d ef	 movzx	 ecx, BYTE PTR $T2[ebp]
  00047	51		 push	 ecx
  00048	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ??$?0V?$allocator@PAVMeshData@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@PAVMeshData@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1><std::allocator<MeshData *> >
  00050	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 547  : 		_Alloc_proxy();

  00057	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Alloc_proxy

; 548  : 		}

  0005f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00066	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00069	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00073	59		 pop	 ecx
  00074	83 c4 14	 add	 esp, 20			; 00000014H
  00077	3b ec		 cmp	 ebp, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@$$QAV?$allocator@PAVMeshData@@@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@$$QAV?$allocator@PAVMeshData@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@$$QAV?$allocator@PAVMeshData@@@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@$$QAV?$allocator@PAVMeshData@@@1@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >, COMDAT
; _this$ = ecx

; 540  : 		{	// construct allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 539  : 		: _Mypair(_One_then_variadic_args_t(), _Al)

  00036	8b 45 08	 mov	 eax, DWORD PTR __Al$[ebp]
  00039	50		 push	 eax
  0003a	0f b6 4d ef	 movzx	 ecx, BYTE PTR $T2[ebp]
  0003e	51		 push	 ecx
  0003f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ??$?0ABV?$allocator@PAVMeshData@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@PAVMeshData@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1><std::allocator<MeshData *> const &>
  00047	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 541  : 		_Alloc_proxy();

  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Alloc_proxy

; 542  : 		}

  00056	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00060	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00063	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006a	59		 pop	 ecx
  0006b	83 c4 14	 add	 esp, 20			; 00000014H
  0006e	3b ec		 cmp	 ebp, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >, COMDAT
; _this$ = ecx

; 382  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 381  : 		: _Mybase(_Pnode, _Plist)

  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Plist$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >

; 383  : 		}

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv139 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator==, COMDAT
; _this$ = ecx

; 322  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 323  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 324  : 		if (this->_Getcont() != _Right._Getcont())

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00020	8b f0		 mov	 esi, eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00025	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002a	3b f0		 cmp	 esi, eax
  0002c	0f 84 86 00 00
	00		 je	 $LN2@operator

; 325  : 			{	// report error
; 326  : 			_DEBUG_ERROR("map/set iterators incompatible");

  00032	8b f4		 mov	 esi, esp
  00034	68 46 01 00 00	 push	 326			; 00000146H
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@BEABFJGP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_1DO@CFEEPGGJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00049	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004c	3b f4		 cmp	 esi, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 327  : 			_SCL_SECURE_INVALID_ARGUMENT;

  00053	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
  00058	85 c0		 test	 eax, eax
  0005a	74 04		 je	 SHORT $LN4@operator
  0005c	33 c9		 xor	 ecx, ecx
  0005e	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  00060	8b f4		 mov	 esi, esp
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  0006c	6a 00		 push	 0
  0006e	68 47 01 00 00	 push	 327			; 00000147H
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@BEABFJGP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00078	6a 02		 push	 2
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00080	83 c4 18	 add	 esp, 24			; 00000018H
  00083	3b f4		 cmp	 esi, esp
  00085	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008a	83 f8 01	 cmp	 eax, 1
  0008d	75 01		 jne	 SHORT $LN5@operator
  0008f	cc		 int	 3
$LN5@operator:
  00090	8b f4		 mov	 esi, esp
  00092	6a 00		 push	 0
  00094	68 47 01 00 00	 push	 327			; 00000147H
  00099	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@BEABFJGP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_1BNC@NDBBHKGP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
  000a3	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000ae	83 c4 14	 add	 esp, 20			; 00000014H
  000b1	3b f4		 cmp	 esi, esp
  000b3	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:

; 328  : 			}
; 329  : 
; 330  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 331  : 		_SCL_SECURE_VALIDATE(this->_Getcont() == _Right._Getcont());
; 332  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 333  : 
; 334  : 		return (this->_Ptr == _Right._Ptr);

  000b8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000bb	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  000be	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000c1	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  000c4	75 09		 jne	 SHORT $LN6@operator
  000c6	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv139[ebp], 1
  000cd	eb 07		 jmp	 SHORT $LN7@operator
$LN6@operator:
  000cf	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv139[ebp], 0
$LN7@operator:
  000d6	8a 45 f8	 mov	 al, BYTE PTR tv139[ebp]

; 335  : 		}

  000d9	5e		 pop	 esi
  000da	83 c4 08	 add	 esp, 8
  000dd	3b ec		 cmp	 ebp, esp
  000df	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c2 04 00	 ret	 4
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator*, COMDAT
; _this$ = ecx

; 231  : 		{	// return designated value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 232  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 233  : 		if (this->_Getcont() == 0
; 234  : 			|| this->_Ptr == 0
; 235  : 			|| this->_Ptr == ((_Mytree *)this->_Getcont())->_Myhead)

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 20		 je	 SHORT $LN3@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 17		 je	 SHORT $LN3@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00032	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00035	0f 85 86 00 00
	00		 jne	 $LN2@operator
$LN3@operator:

; 236  : 			{	// report error
; 237  : 			_DEBUG_ERROR("map/set iterator not dereferencable");

  0003b	8b f4		 mov	 esi, esp
  0003d	68 ed 00 00 00	 push	 237			; 000000edH
  00042	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@BEABFJGP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_1EI@FHEHNNNM@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa@
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00052	83 c4 0c	 add	 esp, 12			; 0000000cH
  00055	3b f4		 cmp	 esi, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 238  : 			_SCL_SECURE_OUT_OF_RANGE;

  0005c	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00061	85 c0		 test	 eax, eax
  00063	74 04		 je	 SHORT $LN5@operator
  00065	33 c9		 xor	 ecx, ecx
  00067	75 30		 jne	 SHORT $LN6@operator
$LN5@operator:
  00069	8b f4		 mov	 esi, esp
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00075	6a 00		 push	 0
  00077	68 ee 00 00 00	 push	 238			; 000000eeH
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@BEABFJGP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00081	6a 02		 push	 2
  00083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00089	83 c4 18	 add	 esp, 24			; 00000018H
  0008c	3b f4		 cmp	 esi, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	83 f8 01	 cmp	 eax, 1
  00096	75 01		 jne	 SHORT $LN6@operator
  00098	cc		 int	 3
$LN6@operator:
  00099	8b f4		 mov	 esi, esp
  0009b	6a 00		 push	 0
  0009d	68 ee 00 00 00	 push	 238			; 000000eeH
  000a2	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@BEABFJGP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_1BNA@POBKPEOD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
  000ac	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000b7	83 c4 14	 add	 esp, 20			; 00000014H
  000ba	3b f4		 cmp	 esi, esp
  000bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:

; 239  : 			}
; 240  : 
; 241  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 242  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 243  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 244  : 			((_Mytree *)this->_Getcont())->_Myhead);
; 245  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 246  : 
; 247  : 		return (_Mytree::_Myval(this->_Ptr));

  000c1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c4	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000c7	51		 push	 ecx
  000c8	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Myval
  000cd	83 c4 04	 add	 esp, 4

; 248  : 		}

  000d0	5e		 pop	 esi
  000d1	83 c4 04	 add	 esp, 4
  000d4	3b ec		 cmp	 ebp, esp
  000d6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c3		 ret	 0
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myhead, COMDAT
; _this$ = ecx

; 937  : 		{	// return reference to _Myhead

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 938  : 		return (_Get_data()._Myhead);

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Get_data
  00016	83 c0 04	 add	 eax, 4

; 939  : 		}

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myhead
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Get_data, COMDAT
; _this$ = ecx

; 927  : 		{	// return reference to _Tree_val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 928  : 		return (_Mypair._Get_second()._Get_second());

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::_Get_second
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>::_Get_second

; 929  : 		}

  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getcomp, COMDAT
; _this$ = ecx

; 907  : 		{	// return reference to ordering predicate

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 908  : 		return (_Mypair._Get_first());

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::_Get_first

; 909  : 		}

  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??1?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >, COMDAT
; _this$ = ecx

; 753  : 		{	// destroy head node, proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 754  : 		_Freeheadnode(_Myhead());

  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myhead
  00035	8b 00		 mov	 eax, DWORD PTR [eax]
  00037	50		 push	 eax
  00038	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Freeheadnode

; 755  : 		_Free_proxy();

  00040	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Free_proxy

; 756  : 		}

  00048	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ
  00050	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00053	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005a	59		 pop	 ecx
  0005b	83 c4 10	 add	 esp, 16			; 00000010H
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Key, COMDAT
; _this$ = ecx

; 2205 : 		{	// return reference to key in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2206 : 		return ((const key_type&)this->_Kfn(this->_Myval(_Pnode)));

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myval
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Kfn

; 2207 : 		}

  00023	83 c4 04	 add	 esp, 4
  00026	3b ec		 cmp	 ebp, esp
  00028	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Key
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
tv149 = -92						; size = 4
tv154 = -88						; size = 4
tv151 = -84						; size = 4
tv158 = -80						; size = 4
tv148 = -76						; size = 4
tv157 = -72						; size = 4
tv146 = -68						; size = 4
tv156 = -64						; size = 4
$T2 = -60						; size = 12
$T3 = -48						; size = 12
$T4 = -36						; size = 4
$T5 = -32						; size = 12
$T6 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 2195 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d a4	 lea	 edi, DWORD PTR [ebp-92]
  00019	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 2196 : 		erase(begin(), end());

  0003a	8d 45 e0	 lea	 eax, DWORD PTR $T5[ebp]
  0003d	50		 push	 eax
  0003e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::end
  00046	89 45 c0	 mov	 DWORD PTR tv156[ebp], eax
  00049	8b 4d c0	 mov	 ecx, DWORD PTR tv156[ebp]
  0004c	89 4d bc	 mov	 DWORD PTR tv146[ebp], ecx
  0004f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00056	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00059	8b cc		 mov	 ecx, esp
  0005b	89 65 ec	 mov	 DWORD PTR $T6[ebp], esp
  0005e	8b 55 bc	 mov	 edx, DWORD PTR tv146[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
  00067	89 45 b8	 mov	 DWORD PTR tv157[ebp], eax
  0006a	8b 45 b8	 mov	 eax, DWORD PTR tv157[ebp]
  0006d	89 45 b4	 mov	 DWORD PTR tv148[ebp], eax
  00070	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00074	8d 4d d0	 lea	 ecx, DWORD PTR $T3[ebp]
  00077	51		 push	 ecx
  00078	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::begin
  00080	89 45 b0	 mov	 DWORD PTR tv158[ebp], eax
  00083	8b 55 b0	 mov	 edx, DWORD PTR tv158[ebp]
  00086	89 55 ac	 mov	 DWORD PTR tv151[ebp], edx
  00089	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0008d	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00090	8b cc		 mov	 ecx, esp
  00092	89 65 dc	 mov	 DWORD PTR $T4[ebp], esp
  00095	8b 45 ac	 mov	 eax, DWORD PTR tv151[ebp]
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
  0009e	89 45 a8	 mov	 DWORD PTR tv154[ebp], eax
  000a1	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  000a4	51		 push	 ecx
  000a5	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000a9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ac	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::erase
  000b1	89 45 a4	 mov	 DWORD PTR tv149[ebp], eax
  000b4	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  000b7	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
  000bc	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000c0	8d 4d d0	 lea	 ecx, DWORD PTR $T3[ebp]
  000c3	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
  000c8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000cf	8d 4d e0	 lea	 ecx, DWORD PTR $T5[ebp]
  000d2	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ

; 2197 : 		}

  000d7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000da	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e1	59		 pop	 ecx
  000e2	5f		 pop	 edi
  000e3	83 c4 5c	 add	 esp, 92			; 0000005cH
  000e6	3b ec		 cmp	 ebp, esp
  000e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ed	8b e5		 mov	 esp, ebp
  000ef	5d		 pop	 ebp
  000f0	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXXZ$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR $T5[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXXZ$1:
  00008	8b 4d ec	 mov	 ecx, DWORD PTR $T6[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXXZ$2:
  00010	8d 4d d0	 lea	 ecx, DWORD PTR $T3[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXXZ:
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001f	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXXZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Tidy
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 1546 : 		{	// find leftmost node not less than _Keyval in mutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0

; 1547 : 		return (iterator(_Lbound(_Keyval), &this->_Get_data()));

  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Get_data
  00026	50		 push	 eax
  00027	8b 45 0c	 mov	 eax, DWORD PTR __Keyval$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??$_Lbound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Lbound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00033	50		 push	 eax
  00034	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00037	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >
  0003c	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  0003f	83 c9 01	 or	 ecx, 1
  00042	89 4d f8	 mov	 DWORD PTR $T1[ebp], ecx
  00045	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1548 : 		}

  00048	83 c4 08	 add	 esp, 8
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::lower_bound
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >, COMDAT
; _this$ = ecx

; 1013 : 		{	// construct empty tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1012 : 		: _Mybase(_Parg, _Al)

  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Al$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >

; 1014 : 		}

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??1?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >, COMDAT
; _this$ = ecx

; 753  : 		{	// destroy head node, proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 754  : 		_Freeheadnode(_Myhead());

  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Myhead
  00035	8b 00		 mov	 eax, DWORD PTR [eax]
  00037	50		 push	 eax
  00038	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Freeheadnode

; 755  : 		_Free_proxy();

  00040	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Free_proxy

; 756  : 		}

  00048	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ
  00050	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00053	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005a	59		 pop	 ecx
  0005b	83 c4 10	 add	 esp, 16			; 00000010H
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::~_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
tv149 = -92						; size = 4
tv154 = -88						; size = 4
tv151 = -84						; size = 4
tv158 = -80						; size = 4
tv148 = -76						; size = 4
tv157 = -72						; size = 4
tv146 = -68						; size = 4
tv156 = -64						; size = 4
$T2 = -60						; size = 12
$T3 = -48						; size = 12
$T4 = -36						; size = 4
$T5 = -32						; size = 12
$T6 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 2195 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d a4	 lea	 edi, DWORD PTR [ebp-92]
  00019	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 2196 : 		erase(begin(), end());

  0003a	8d 45 e0	 lea	 eax, DWORD PTR $T5[ebp]
  0003d	50		 push	 eax
  0003e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::end
  00046	89 45 c0	 mov	 DWORD PTR tv156[ebp], eax
  00049	8b 4d c0	 mov	 ecx, DWORD PTR tv156[ebp]
  0004c	89 4d bc	 mov	 DWORD PTR tv146[ebp], ecx
  0004f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00056	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00059	8b cc		 mov	 ecx, esp
  0005b	89 65 ec	 mov	 DWORD PTR $T6[ebp], esp
  0005e	8b 55 bc	 mov	 edx, DWORD PTR tv146[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
  00067	89 45 b8	 mov	 DWORD PTR tv157[ebp], eax
  0006a	8b 45 b8	 mov	 eax, DWORD PTR tv157[ebp]
  0006d	89 45 b4	 mov	 DWORD PTR tv148[ebp], eax
  00070	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00074	8d 4d d0	 lea	 ecx, DWORD PTR $T3[ebp]
  00077	51		 push	 ecx
  00078	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::begin
  00080	89 45 b0	 mov	 DWORD PTR tv158[ebp], eax
  00083	8b 55 b0	 mov	 edx, DWORD PTR tv158[ebp]
  00086	89 55 ac	 mov	 DWORD PTR tv151[ebp], edx
  00089	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0008d	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00090	8b cc		 mov	 ecx, esp
  00092	89 65 dc	 mov	 DWORD PTR $T4[ebp], esp
  00095	8b 45 ac	 mov	 eax, DWORD PTR tv151[ebp]
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
  0009e	89 45 a8	 mov	 DWORD PTR tv154[ebp], eax
  000a1	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  000a4	51		 push	 ecx
  000a5	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000a9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ac	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::erase
  000b1	89 45 a4	 mov	 DWORD PTR tv149[ebp], eax
  000b4	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  000b7	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  000bc	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000c0	8d 4d d0	 lea	 ecx, DWORD PTR $T3[ebp]
  000c3	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  000c8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000cf	8d 4d e0	 lea	 ecx, DWORD PTR $T5[ebp]
  000d2	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ

; 2197 : 		}

  000d7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000da	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e1	59		 pop	 ecx
  000e2	5f		 pop	 edi
  000e3	83 c4 5c	 add	 esp, 92			; 0000005cH
  000e6	3b ec		 cmp	 ebp, esp
  000e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ed	8b e5		 mov	 esp, ebp
  000ef	5d		 pop	 ebp
  000f0	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXXZ$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR $T5[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXXZ$1:
  00008	8b 4d ec	 mov	 ecx, DWORD PTR $T6[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXXZ$2:
  00010	8d 4d d0	 lea	 ecx, DWORD PTR $T3[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXXZ:
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001f	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXXZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Tidy
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::equal_range, COMDAT
; _this$ = ecx

; 1598 : 		{	// find range equivalent to _Keyval in mutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0

; 1599 : 		return (_Eqrange(_Keyval));

  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Keyval$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00025	51		 push	 ecx
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Eqrange<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0002e	8b 55 f8	 mov	 edx, DWORD PTR $T1[ebp]
  00031	83 ca 01	 or	 edx, 1
  00034	89 55 f8	 mov	 DWORD PTR $T1[ebp], edx
  00037	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1600 : 		}

  0003a	83 c4 08	 add	 esp, 8
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 08 00	 ret	 8
?equal_range@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::equal_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
tv199 = -92						; size = 4
tv198 = -88						; size = 4
tv94 = -84						; size = 4
tv186 = -80						; size = 4
tv206 = -76						; size = 4
tv181 = -72						; size = 4
tv160 = -68						; size = 4
$T2 = -64						; size = 4
$T3 = -60						; size = 12
$T4 = -48						; size = 4
$T5 = -44						; size = 12
$T6 = -32						; size = 12
$T7 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 12
__Last$ = 24						; size = 12
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1448 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d a4	 lea	 edi, DWORD PTR [ebp-92]
  00019	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003a	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  00041	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 1449 : 		if (_First == begin() && _Last == end())

  00048	8d 45 e0	 lea	 eax, DWORD PTR $T6[ebp]
  0004b	50		 push	 eax
  0004c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::begin
  00054	89 45 bc	 mov	 DWORD PTR tv160[ebp], eax
  00057	8b 4d bc	 mov	 ecx, DWORD PTR tv160[ebp]
  0005a	89 4d b8	 mov	 DWORD PTR tv181[ebp], ecx
  0005d	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00061	8b 55 c0	 mov	 edx, DWORD PTR $T2[ebp]
  00064	83 ca 01	 or	 edx, 1
  00067	89 55 c0	 mov	 DWORD PTR $T2[ebp], edx
  0006a	8b 45 b8	 mov	 eax, DWORD PTR tv181[ebp]
  0006d	50		 push	 eax
  0006e	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  00071	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::operator==
  00076	0f b6 c8	 movzx	 ecx, al
  00079	85 c9		 test	 ecx, ecx
  0007b	74 41		 je	 SHORT $LN7@erase
  0007d	8d 55 d4	 lea	 edx, DWORD PTR $T5[ebp]
  00080	52		 push	 edx
  00081	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::end
  00089	89 45 b4	 mov	 DWORD PTR tv206[ebp], eax
  0008c	8b 45 b4	 mov	 eax, DWORD PTR tv206[ebp]
  0008f	89 45 b0	 mov	 DWORD PTR tv186[ebp], eax
  00092	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  00099	8b 4d c0	 mov	 ecx, DWORD PTR $T2[ebp]
  0009c	83 c9 02	 or	 ecx, 2
  0009f	89 4d c0	 mov	 DWORD PTR $T2[ebp], ecx
  000a2	8b 55 b0	 mov	 edx, DWORD PTR tv186[ebp]
  000a5	52		 push	 edx
  000a6	8d 4d 18	 lea	 ecx, DWORD PTR __Last$[ebp]
  000a9	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::operator==
  000ae	0f b6 c0	 movzx	 eax, al
  000b1	85 c0		 test	 eax, eax
  000b3	74 09		 je	 SHORT $LN7@erase
  000b5	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv94[ebp], 1
  000bc	eb 07		 jmp	 SHORT $LN8@erase
$LN7@erase:
  000be	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv94[ebp], 0
$LN8@erase:
  000c5	8a 4d ac	 mov	 cl, BYTE PTR tv94[ebp]
  000c8	88 4d ef	 mov	 BYTE PTR $T7[ebp], cl
  000cb	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  000d2	8b 55 c0	 mov	 edx, DWORD PTR $T2[ebp]
  000d5	83 e2 02	 and	 edx, 2
  000d8	74 0c		 je	 SHORT $LN15@erase
  000da	83 65 c0 fd	 and	 DWORD PTR $T2[ebp], -3	; fffffffdH
  000de	8d 4d d4	 lea	 ecx, DWORD PTR $T5[ebp]
  000e1	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
$LN15@erase:
  000e6	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000ed	8b 45 c0	 mov	 eax, DWORD PTR $T2[ebp]
  000f0	83 e0 01	 and	 eax, 1
  000f3	74 0c		 je	 SHORT $LN16@erase
  000f5	83 65 c0 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  000f9	8d 4d e0	 lea	 ecx, DWORD PTR $T6[ebp]
  000fc	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
$LN16@erase:
  00101	0f b6 4d ef	 movzx	 ecx, BYTE PTR $T7[ebp]
  00105	85 c9		 test	 ecx, ecx
  00107	74 45		 je	 SHORT $LN2@erase

; 1450 : 			{	// erase all
; 1451 : 			clear();

  00109	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0010c	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::clear

; 1452 : 			return (begin());

  00111	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00114	52		 push	 edx
  00115	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00118	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::begin
  0011d	8b 45 c0	 mov	 eax, DWORD PTR $T2[ebp]
  00120	83 c8 04	 or	 eax, 4
  00123	89 45 c0	 mov	 DWORD PTR $T2[ebp], eax
  00126	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0012a	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  0012d	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  00132	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00139	8d 4d 18	 lea	 ecx, DWORD PTR __Last$[ebp]
  0013c	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  00141	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00144	e9 a0 00 00 00	 jmp	 $LN1@erase

; 1453 : 			}
; 1454 : 		else

  00149	e9 80 00 00 00	 jmp	 $LN5@erase
$LN2@erase:

; 1455 : 			{	// partial erase, one at a time
; 1456 : 			while (_First != _Last)

  0014e	8d 4d 18	 lea	 ecx, DWORD PTR __Last$[ebp]
  00151	51		 push	 ecx
  00152	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  00155	e8 00 00 00 00	 call	 ??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::operator!=
  0015a	0f b6 d0	 movzx	 edx, al
  0015d	85 d2		 test	 edx, edx
  0015f	74 2f		 je	 SHORT $LN3@erase

; 1457 : 				erase(_First++);

  00161	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00164	8b c4		 mov	 eax, esp
  00166	89 65 d0	 mov	 DWORD PTR $T4[ebp], esp
  00169	6a 00		 push	 0
  0016b	50		 push	 eax
  0016c	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  0016f	e8 00 00 00 00	 call	 ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::operator++
  00174	89 45 a8	 mov	 DWORD PTR tv198[ebp], eax
  00177	8d 4d c4	 lea	 ecx, DWORD PTR $T3[ebp]
  0017a	51		 push	 ecx
  0017b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0017e	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::erase
  00183	89 45 a4	 mov	 DWORD PTR tv199[ebp], eax
  00186	8d 4d c4	 lea	 ecx, DWORD PTR $T3[ebp]
  00189	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  0018e	eb be		 jmp	 SHORT $LN2@erase
$LN3@erase:

; 1458 : 			return (iterator(_First._Ptr, &this->_Get_data()));

  00190	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00193	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Get_data
  00198	50		 push	 eax
  00199	8b 55 14	 mov	 edx, DWORD PTR __First$[ebp+8]
  0019c	52		 push	 edx
  0019d	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  001a0	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >
  001a5	8b 45 c0	 mov	 eax, DWORD PTR $T2[ebp]
  001a8	83 c8 04	 or	 eax, 4
  001ab	89 45 c0	 mov	 DWORD PTR $T2[ebp], eax
  001ae	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001b2	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  001b5	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  001ba	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001c1	8d 4d 18	 lea	 ecx, DWORD PTR __Last$[ebp]
  001c4	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  001c9	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  001cc	eb 1b		 jmp	 SHORT $LN1@erase
$LN5@erase:

; 1459 : 			}
; 1460 : 		}

  001ce	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001d2	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  001d5	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  001da	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001e1	8d 4d 18	 lea	 ecx, DWORD PTR __Last$[ebp]
  001e4	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
$LN1@erase:
  001e9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001ec	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001f3	59		 pop	 ecx
  001f4	5f		 pop	 edi
  001f5	83 c4 5c	 add	 esp, 92			; 0000005cH
  001f8	3b ec		 cmp	 ebp, esp
  001fa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@0@Z$0:
  00000	8d 4d 18	 lea	 ecx, DWORD PTR __Last$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@0@Z$1:
  00008	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@0@Z$2:
  00010	8b 45 c0	 mov	 eax, DWORD PTR $T2[ebp]
  00013	83 e0 01	 and	 eax, 1
  00016	0f 84 0c 00 00
	00		 je	 $LN12@erase
  0001c	83 65 c0 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00020	8d 4d e0	 lea	 ecx, DWORD PTR $T6[ebp]
  00023	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
$LN12@erase:
  00028	c3		 ret	 0
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@0@Z$3:
  00029	8b 45 c0	 mov	 eax, DWORD PTR $T2[ebp]
  0002c	83 e0 02	 and	 eax, 2
  0002f	0f 84 0c 00 00
	00		 je	 $LN14@erase
  00035	83 65 c0 fd	 and	 DWORD PTR $T2[ebp], -3	; fffffffdH
  00039	8d 4d d4	 lea	 ecx, DWORD PTR $T5[ebp]
  0003c	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
$LN14@erase:
  00041	c3		 ret	 0
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@0@Z:
  00042	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00046	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00049	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  0004c	33 c8		 xor	 ecx, eax
  0004e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00053	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@0@Z
  00058	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::erase
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >, COMDAT
; _this$ = ecx

; 1013 : 		{	// construct empty tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1012 : 		: _Mybase(_Parg, _Al)

  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Al$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >

; 1014 : 		}

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >, COMDAT
; _this$ = ecx

; 617  : 	allocator() _THROW0()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 618  : 		{	// construct default allocator (do nothing)
; 619  : 		}

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >, COMDAT
; _this$ = ecx

; 617  : 	allocator() _THROW0()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 618  : 		{	// construct default allocator (do nothing)
; 619  : 		}

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_range@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBEXPAPAVMesh@@0@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBEXPAPAVMesh@@0@Z PROC ; std::vector<Mesh *,std::allocator<Mesh *> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1794 : 		{	// orphan iterators within specified (inclusive) range

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBEXPAPAVMesh@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00020	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00023	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00026	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1795 : 		_Lockit _Lock(_LOCK_DEBUG);

  0003d	8b f4		 mov	 esi, esp
  0003f	6a 03		 push	 3
  00041	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1796 : 		const_iterator **_Pnext = (const_iterator **)this->_Getpfirst();

  00058	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Getpfirst
  00060	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax

; 1797 : 		if (_Pnext != 0)

  00063	83 7d e0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00067	74 4e		 je	 SHORT $LN4@Orphan_ran
$LN2@Orphan_ran:

; 1798 : 			{	// test an iterator
; 1799 : 			while (*_Pnext != 0)

  00069	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  0006c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0006f	74 46		 je	 SHORT $LN4@Orphan_ran

; 1800 : 				if ((*_Pnext)->_Ptr < _First || _Last < (*_Pnext)->_Ptr)

  00071	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00074	8b 11		 mov	 edx, DWORD PTR [ecx]
  00076	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00079	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  0007c	72 0d		 jb	 SHORT $LN7@Orphan_ran
  0007e	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00081	8b 11		 mov	 edx, DWORD PTR [ecx]
  00083	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00086	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00089	73 0f		 jae	 SHORT $LN5@Orphan_ran
$LN7@Orphan_ran:

; 1801 : 					_Pnext = (const_iterator **)(*_Pnext)->_Getpnext();

  0008b	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0008e	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00090	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  00095	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax

; 1802 : 				else

  00098	eb 1b		 jmp	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:

; 1803 : 					{	// orphan the iterator
; 1804 : 					(*_Pnext)->_Clrcont();

  0009a	8b 55 e0	 mov	 edx, DWORD PTR __Pnext$[ebp]
  0009d	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0009f	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont

; 1805 : 					*_Pnext = *(const_iterator **)(*_Pnext)->_Getpnext();

  000a4	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a9	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000ae	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000b1	8b 10		 mov	 edx, DWORD PTR [eax]
  000b3	89 11		 mov	 DWORD PTR [ecx], edx
$LN6@Orphan_ran:

; 1806 : 					}

  000b5	eb b2		 jmp	 SHORT $LN2@Orphan_ran
$LN4@Orphan_ran:

; 1807 : 			}
; 1808 : 		}

  000b7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000be	8b f4		 mov	 esi, esp
  000c0	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000c9	3b f4		 cmp	 esi, esp
  000cb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d0	52		 push	 edx
  000d1	8b cd		 mov	 ecx, ebp
  000d3	50		 push	 eax
  000d4	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000da	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000df	58		 pop	 eax
  000e0	5a		 pop	 edx
  000e1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000eb	59		 pop	 ecx
  000ec	5e		 pop	 esi
  000ed	83 c4 20	 add	 esp, 32			; 00000020H
  000f0	3b ec		 cmp	 ebp, esp
  000f2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f7	8b e5		 mov	 esp, ebp
  000f9	5d		 pop	 ebp
  000fa	c2 08 00	 ret	 8
  000fd	0f 1f 00	 npad	 3
$LN13@Orphan_ran:
  00100	01 00 00 00	 DD	 1
  00104	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00108	e8 ff ff ff	 DD	 -24			; ffffffe8H
  0010c	04 00 00 00	 DD	 4
  00110	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  00114	5f		 DB	 95			; 0000005fH
  00115	4c		 DB	 76			; 0000004cH
  00116	6f		 DB	 111			; 0000006fH
  00117	63		 DB	 99			; 00000063H
  00118	6b		 DB	 107			; 0000006bH
  00119	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBEXPAPAVMesh@@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBEXPAPAVMesh@@0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBEXPAPAVMesh@@0@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBEXPAPAVMesh@@0@Z ENDP ; std::vector<Mesh *,std::allocator<Mesh *> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reserve@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z PROC ; std::vector<Mesh *,std::allocator<Mesh *> >::_Reserve, COMDAT
; _this$ = ecx

; 1645 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1646 : 		if (_Unused_capacity() < _Count)

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QBEIXZ ; std::vector<Mesh *,std::allocator<Mesh *> >::_Unused_capacity
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0001a	73 3e		 jae	 SHORT $LN4@Reserve

; 1647 : 			{	// need more room, try to get it
; 1648 : 			if (max_size() - size() < _Count)

  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?max_size@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QBEIXZ ; std::vector<Mesh *,std::allocator<Mesh *> >::max_size
  00024	8b f0		 mov	 esi, eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?size@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QBEIXZ ; std::vector<Mesh *,std::allocator<Mesh *> >::size
  0002e	2b f0		 sub	 esi, eax
  00030	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00033	73 08		 jae	 SHORT $LN3@Reserve

; 1649 : 				_Xlen();

  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBEXXZ ; std::vector<Mesh *,std::allocator<Mesh *> >::_Xlen
$LN3@Reserve:

; 1650 : 			_Reallocate(_Grow_to(size() + _Count));

  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?size@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QBEIXZ ; std::vector<Mesh *,std::allocator<Mesh *> >::size
  00045	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  00048	50		 push	 eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBEII@Z ; std::vector<Mesh *,std::allocator<Mesh *> >::_Grow_to
  00051	50		 push	 eax
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z ; std::vector<Mesh *,std::allocator<Mesh *> >::_Reallocate
$LN4@Reserve:

; 1651 : 			}
; 1652 : 		}

  0005a	5e		 pop	 esi
  0005b	83 c4 04	 add	 esp, 4
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?_Reserve@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z ENDP ; std::vector<Mesh *,std::allocator<Mesh *> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBE_NPBQAVMesh@@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBE_NPBQAVMesh@@@Z PROC ; std::vector<Mesh *,std::allocator<Mesh *> >::_Inside, COMDAT
; _this$ = ecx

; 1615 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1616 : 		return (_Ptr < this->_Mylast() && this->_Myfirst() <= _Ptr);

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QBEABQAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Mylast
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00022	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00024	73 18		 jae	 SHORT $LN3@Inside
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QBEABQAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Myfirst
  0002e	8b 10		 mov	 edx, DWORD PTR [eax]
  00030	3b 55 08	 cmp	 edx, DWORD PTR __Ptr$[ebp]
  00033	77 09		 ja	 SHORT $LN3@Inside
  00035	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv78[ebp], 1
  0003c	eb 07		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  0003e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN4@Inside:
  00045	8a 45 f8	 mov	 al, BYTE PTR tv78[ebp]

; 1617 : 		}

  00048	83 c4 08	 add	 esp, 8
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
?_Inside@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBE_NPBQAVMesh@@@Z ENDP ; std::vector<Mesh *,std::allocator<Mesh *> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@PAVMesh@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAVMesh@@@std@@QAE@XZ PROC		; std::allocator<Mesh *>::allocator<Mesh *>, COMDAT
; _this$ = ecx

; 617  : 	allocator() _THROW0()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 618  : 		{	// construct default allocator (do nothing)
; 619  : 		}

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@PAVMesh@@@std@@QAE@XZ ENDP		; std::allocator<Mesh *>::allocator<Mesh *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_range@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBEXPAPAVMaterial@@0@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBEXPAPAVMaterial@@0@Z PROC ; std::vector<Material *,std::allocator<Material *> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1794 : 		{	// orphan iterators within specified (inclusive) range

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBEXPAPAVMaterial@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00020	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00023	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00026	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1795 : 		_Lockit _Lock(_LOCK_DEBUG);

  0003d	8b f4		 mov	 esi, esp
  0003f	6a 03		 push	 3
  00041	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1796 : 		const_iterator **_Pnext = (const_iterator **)this->_Getpfirst();

  00058	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Getpfirst
  00060	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax

; 1797 : 		if (_Pnext != 0)

  00063	83 7d e0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00067	74 4e		 je	 SHORT $LN4@Orphan_ran
$LN2@Orphan_ran:

; 1798 : 			{	// test an iterator
; 1799 : 			while (*_Pnext != 0)

  00069	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  0006c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0006f	74 46		 je	 SHORT $LN4@Orphan_ran

; 1800 : 				if ((*_Pnext)->_Ptr < _First || _Last < (*_Pnext)->_Ptr)

  00071	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00074	8b 11		 mov	 edx, DWORD PTR [ecx]
  00076	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00079	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  0007c	72 0d		 jb	 SHORT $LN7@Orphan_ran
  0007e	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00081	8b 11		 mov	 edx, DWORD PTR [ecx]
  00083	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00086	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00089	73 0f		 jae	 SHORT $LN5@Orphan_ran
$LN7@Orphan_ran:

; 1801 : 					_Pnext = (const_iterator **)(*_Pnext)->_Getpnext();

  0008b	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0008e	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00090	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  00095	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax

; 1802 : 				else

  00098	eb 1b		 jmp	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:

; 1803 : 					{	// orphan the iterator
; 1804 : 					(*_Pnext)->_Clrcont();

  0009a	8b 55 e0	 mov	 edx, DWORD PTR __Pnext$[ebp]
  0009d	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0009f	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont

; 1805 : 					*_Pnext = *(const_iterator **)(*_Pnext)->_Getpnext();

  000a4	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a9	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000ae	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000b1	8b 10		 mov	 edx, DWORD PTR [eax]
  000b3	89 11		 mov	 DWORD PTR [ecx], edx
$LN6@Orphan_ran:

; 1806 : 					}

  000b5	eb b2		 jmp	 SHORT $LN2@Orphan_ran
$LN4@Orphan_ran:

; 1807 : 			}
; 1808 : 		}

  000b7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000be	8b f4		 mov	 esi, esp
  000c0	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000c9	3b f4		 cmp	 esi, esp
  000cb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d0	52		 push	 edx
  000d1	8b cd		 mov	 ecx, ebp
  000d3	50		 push	 eax
  000d4	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000da	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000df	58		 pop	 eax
  000e0	5a		 pop	 edx
  000e1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000eb	59		 pop	 ecx
  000ec	5e		 pop	 esi
  000ed	83 c4 20	 add	 esp, 32			; 00000020H
  000f0	3b ec		 cmp	 ebp, esp
  000f2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f7	8b e5		 mov	 esp, ebp
  000f9	5d		 pop	 ebp
  000fa	c2 08 00	 ret	 8
  000fd	0f 1f 00	 npad	 3
$LN13@Orphan_ran:
  00100	01 00 00 00	 DD	 1
  00104	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00108	e8 ff ff ff	 DD	 -24			; ffffffe8H
  0010c	04 00 00 00	 DD	 4
  00110	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  00114	5f		 DB	 95			; 0000005fH
  00115	4c		 DB	 76			; 0000004cH
  00116	6f		 DB	 111			; 0000006fH
  00117	63		 DB	 99			; 00000063H
  00118	6b		 DB	 107			; 0000006bH
  00119	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBEXPAPAVMaterial@@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBEXPAPAVMaterial@@0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBEXPAPAVMaterial@@0@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBEXPAPAVMaterial@@0@Z ENDP ; std::vector<Material *,std::allocator<Material *> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reserve@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z PROC ; std::vector<Material *,std::allocator<Material *> >::_Reserve, COMDAT
; _this$ = ecx

; 1645 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1646 : 		if (_Unused_capacity() < _Count)

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QBEIXZ ; std::vector<Material *,std::allocator<Material *> >::_Unused_capacity
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0001a	73 3e		 jae	 SHORT $LN4@Reserve

; 1647 : 			{	// need more room, try to get it
; 1648 : 			if (max_size() - size() < _Count)

  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?max_size@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QBEIXZ ; std::vector<Material *,std::allocator<Material *> >::max_size
  00024	8b f0		 mov	 esi, eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?size@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QBEIXZ ; std::vector<Material *,std::allocator<Material *> >::size
  0002e	2b f0		 sub	 esi, eax
  00030	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00033	73 08		 jae	 SHORT $LN3@Reserve

; 1649 : 				_Xlen();

  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBEXXZ ; std::vector<Material *,std::allocator<Material *> >::_Xlen
$LN3@Reserve:

; 1650 : 			_Reallocate(_Grow_to(size() + _Count));

  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?size@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QBEIXZ ; std::vector<Material *,std::allocator<Material *> >::size
  00045	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  00048	50		 push	 eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBEII@Z ; std::vector<Material *,std::allocator<Material *> >::_Grow_to
  00051	50		 push	 eax
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z ; std::vector<Material *,std::allocator<Material *> >::_Reallocate
$LN4@Reserve:

; 1651 : 			}
; 1652 : 		}

  0005a	5e		 pop	 esi
  0005b	83 c4 04	 add	 esp, 4
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?_Reserve@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z ENDP ; std::vector<Material *,std::allocator<Material *> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBE_NPBQAVMaterial@@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBE_NPBQAVMaterial@@@Z PROC ; std::vector<Material *,std::allocator<Material *> >::_Inside, COMDAT
; _this$ = ecx

; 1615 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1616 : 		return (_Ptr < this->_Mylast() && this->_Myfirst() <= _Ptr);

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QBEABQAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Mylast
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00022	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00024	73 18		 jae	 SHORT $LN3@Inside
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QBEABQAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Myfirst
  0002e	8b 10		 mov	 edx, DWORD PTR [eax]
  00030	3b 55 08	 cmp	 edx, DWORD PTR __Ptr$[ebp]
  00033	77 09		 ja	 SHORT $LN3@Inside
  00035	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv78[ebp], 1
  0003c	eb 07		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  0003e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN4@Inside:
  00045	8a 45 f8	 mov	 al, BYTE PTR tv78[ebp]

; 1617 : 		}

  00048	83 c4 08	 add	 esp, 8
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
?_Inside@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBE_NPBQAVMaterial@@@Z ENDP ; std::vector<Material *,std::allocator<Material *> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_range@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXPAPAVMeshData@@0@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXPAPAVMeshData@@0@Z PROC ; std::vector<MeshData *,std::allocator<MeshData *> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1794 : 		{	// orphan iterators within specified (inclusive) range

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXPAPAVMeshData@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00020	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00023	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00026	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1795 : 		_Lockit _Lock(_LOCK_DEBUG);

  0003d	8b f4		 mov	 esi, esp
  0003f	6a 03		 push	 3
  00041	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1796 : 		const_iterator **_Pnext = (const_iterator **)this->_Getpfirst();

  00058	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Getpfirst
  00060	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax

; 1797 : 		if (_Pnext != 0)

  00063	83 7d e0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00067	74 4e		 je	 SHORT $LN4@Orphan_ran
$LN2@Orphan_ran:

; 1798 : 			{	// test an iterator
; 1799 : 			while (*_Pnext != 0)

  00069	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  0006c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0006f	74 46		 je	 SHORT $LN4@Orphan_ran

; 1800 : 				if ((*_Pnext)->_Ptr < _First || _Last < (*_Pnext)->_Ptr)

  00071	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00074	8b 11		 mov	 edx, DWORD PTR [ecx]
  00076	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00079	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  0007c	72 0d		 jb	 SHORT $LN7@Orphan_ran
  0007e	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00081	8b 11		 mov	 edx, DWORD PTR [ecx]
  00083	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00086	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00089	73 0f		 jae	 SHORT $LN5@Orphan_ran
$LN7@Orphan_ran:

; 1801 : 					_Pnext = (const_iterator **)(*_Pnext)->_Getpnext();

  0008b	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0008e	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00090	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  00095	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax

; 1802 : 				else

  00098	eb 1b		 jmp	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:

; 1803 : 					{	// orphan the iterator
; 1804 : 					(*_Pnext)->_Clrcont();

  0009a	8b 55 e0	 mov	 edx, DWORD PTR __Pnext$[ebp]
  0009d	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0009f	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont

; 1805 : 					*_Pnext = *(const_iterator **)(*_Pnext)->_Getpnext();

  000a4	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a9	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000ae	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000b1	8b 10		 mov	 edx, DWORD PTR [eax]
  000b3	89 11		 mov	 DWORD PTR [ecx], edx
$LN6@Orphan_ran:

; 1806 : 					}

  000b5	eb b2		 jmp	 SHORT $LN2@Orphan_ran
$LN4@Orphan_ran:

; 1807 : 			}
; 1808 : 		}

  000b7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000be	8b f4		 mov	 esi, esp
  000c0	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000c9	3b f4		 cmp	 esi, esp
  000cb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d0	52		 push	 edx
  000d1	8b cd		 mov	 ecx, ebp
  000d3	50		 push	 eax
  000d4	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000da	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000df	58		 pop	 eax
  000e0	5a		 pop	 edx
  000e1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000eb	59		 pop	 ecx
  000ec	5e		 pop	 esi
  000ed	83 c4 20	 add	 esp, 32			; 00000020H
  000f0	3b ec		 cmp	 ebp, esp
  000f2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f7	8b e5		 mov	 esp, ebp
  000f9	5d		 pop	 ebp
  000fa	c2 08 00	 ret	 8
  000fd	0f 1f 00	 npad	 3
$LN13@Orphan_ran:
  00100	01 00 00 00	 DD	 1
  00104	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00108	e8 ff ff ff	 DD	 -24			; ffffffe8H
  0010c	04 00 00 00	 DD	 4
  00110	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  00114	5f		 DB	 95			; 0000005fH
  00115	4c		 DB	 76			; 0000004cH
  00116	6f		 DB	 111			; 0000006fH
  00117	63		 DB	 99			; 00000063H
  00118	6b		 DB	 107			; 0000006bH
  00119	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXPAPAVMeshData@@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXPAPAVMeshData@@0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXPAPAVMeshData@@0@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXPAPAVMeshData@@0@Z ENDP ; std::vector<MeshData *,std::allocator<MeshData *> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Xran@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXXZ PROC ; std::vector<MeshData *,std::allocator<MeshData *> >::_Xran, COMDAT
; _this$ = ecx

; 1788 : 		{	// report an out_of_range error

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1789 : 		_Xout_of_range("invalid vector<T> subscript");

  0000f	8b f4		 mov	 esi, esp
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
  0001c	3b f4		 cmp	 esi, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xran:

; 1790 : 		}

  00023	5e		 pop	 esi
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?_Xran@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXXZ ENDP ; std::vector<MeshData *,std::allocator<MeshData *> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXXZ PROC ; std::vector<MeshData *,std::allocator<MeshData *> >::_Tidy, COMDAT
; _this$ = ecx

; 1655 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1656 : 		if (this->_Myfirst() != pointer())

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
  00017	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001a	0f 84 84 00 00
	00		 je	 $LN1@Tidy

; 1657 : 			{	// something to free, destroy and deallocate it
; 1658 : 			this->_Orphan_all();

  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Orphan_all

; 1659 : 			_Destroy(this->_Myfirst(), this->_Mylast());

  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	50		 push	 eax
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	51		 push	 ecx
  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXPAPAVMeshData@@0@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::_Destroy

; 1660 : 			this->_Getal().deallocate(this->_Myfirst(),

  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myend
  0004e	8b f0		 mov	 esi, eax
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
  00058	8b 16		 mov	 edx, DWORD PTR [esi]
  0005a	2b 10		 sub	 edx, DWORD PTR [eax]
  0005c	c1 fa 02	 sar	 edx, 2
  0005f	52		 push	 edx
  00060	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
  00068	8b 00		 mov	 eax, DWORD PTR [eax]
  0006a	50		 push	 eax
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Getal
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAEXPAPAVMeshData@@I@Z ; std::_Wrap_alloc<std::allocator<MeshData *> >::deallocate

; 1661 : 				this->_Myend() - this->_Myfirst());
; 1662 : 			this->_Myfirst() = pointer();

  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
  00082	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1663 : 			this->_Mylast() = pointer();

  00088	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
  00090	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1664 : 			this->_Myend() = pointer();

  00096	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myend
  0009e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN1@Tidy:

; 1665 : 			}
; 1666 : 		}

  000a4	5e		 pop	 esi
  000a5	83 c4 04	 add	 esp, 4
  000a8	3b ec		 cmp	 ebp, esp
  000aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c3		 ret	 0
?_Tidy@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXXZ ENDP ; std::vector<MeshData *,std::allocator<MeshData *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reserve@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z PROC ; std::vector<MeshData *,std::allocator<MeshData *> >::_Reserve, COMDAT
; _this$ = ecx

; 1645 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1646 : 		if (_Unused_capacity() < _Count)

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ ; std::vector<MeshData *,std::allocator<MeshData *> >::_Unused_capacity
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0001a	73 3e		 jae	 SHORT $LN4@Reserve

; 1647 : 			{	// need more room, try to get it
; 1648 : 			if (max_size() - size() < _Count)

  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?max_size@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ ; std::vector<MeshData *,std::allocator<MeshData *> >::max_size
  00024	8b f0		 mov	 esi, eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?size@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ ; std::vector<MeshData *,std::allocator<MeshData *> >::size
  0002e	2b f0		 sub	 esi, eax
  00030	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00033	73 08		 jae	 SHORT $LN3@Reserve

; 1649 : 				_Xlen();

  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Xlen@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXXZ ; std::vector<MeshData *,std::allocator<MeshData *> >::_Xlen
$LN3@Reserve:

; 1650 : 			_Reallocate(_Grow_to(size() + _Count));

  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?size@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ ; std::vector<MeshData *,std::allocator<MeshData *> >::size
  00045	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  00048	50		 push	 eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEII@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::_Grow_to
  00051	50		 push	 eax
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::_Reallocate
$LN4@Reserve:

; 1651 : 			}
; 1652 : 		}

  0005a	5e		 pop	 esi
  0005b	83 c4 04	 add	 esp, 4
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?_Reserve@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z ENDP ; std::vector<MeshData *,std::allocator<MeshData *> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBE_NPBQAVMeshData@@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBE_NPBQAVMeshData@@@Z PROC ; std::vector<MeshData *,std::allocator<MeshData *> >::_Inside, COMDAT
; _this$ = ecx

; 1615 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1616 : 		return (_Ptr < this->_Mylast() && this->_Myfirst() <= _Ptr);

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABQAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00022	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00024	73 18		 jae	 SHORT $LN3@Inside
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABQAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
  0002e	8b 10		 mov	 edx, DWORD PTR [eax]
  00030	3b 55 08	 cmp	 edx, DWORD PTR __Ptr$[ebp]
  00033	77 09		 ja	 SHORT $LN3@Inside
  00035	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv78[ebp], 1
  0003c	eb 07		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  0003e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN4@Inside:
  00045	8a 45 f8	 mov	 al, BYTE PTR tv78[ebp]

; 1617 : 		}

  00048	83 c4 08	 add	 esp, 8
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
?_Inside@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBE_NPBQAVMeshData@@@Z ENDP ; std::vector<MeshData *,std::allocator<MeshData *> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Assign_rv@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
___formal$ = 12						; size = 1
?_Assign_rv@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::vector<MeshData *,std::allocator<MeshData *> >::_Assign_rv, COMDAT
; _this$ = ecx

; 867  : 		{	// move from _Right, stealing its contents

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 868  : 		this->_Swap_all((_Myt&)_Right);

  0000f	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00012	50		 push	 eax
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	e8 00 00 00 00	 call	 ?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEXAAV12@@Z ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Swap_all

; 869  : 		this->_Myfirst() = _Right._Myfirst();

  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
  00023	8b f0		 mov	 esi, eax
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
  0002d	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0002f	89 08		 mov	 DWORD PTR [eax], ecx

; 870  : 		this->_Mylast() = _Right._Mylast();

  00031	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00034	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
  00039	8b f0		 mov	 esi, eax
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
  00043	8b 16		 mov	 edx, DWORD PTR [esi]
  00045	89 10		 mov	 DWORD PTR [eax], edx

; 871  : 		this->_Myend() = _Right._Myend();

  00047	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0004a	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myend
  0004f	8b f0		 mov	 esi, eax
  00051	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myend
  00059	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005b	89 08		 mov	 DWORD PTR [eax], ecx

; 872  : 
; 873  : 		_Right._Myfirst() = pointer();

  0005d	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00060	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
  00065	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 874  : 		_Right._Mylast() = pointer();

  0006b	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0006e	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
  00073	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 875  : 		_Right._Myend() = pointer();

  00079	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0007c	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myend
  00081	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 876  : 		}

  00087	5e		 pop	 esi
  00088	83 c4 04	 add	 esp, 4
  0008b	3b ec		 cmp	 ebp, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c2 08 00	 ret	 8
?_Assign_rv@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<MeshData *,std::allocator<MeshData *> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@PAVMeshData@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAVMeshData@@@std@@QAE@XZ PROC		; std::allocator<MeshData *>::allocator<MeshData *>, COMDAT
; _this$ = ecx

; 617  : 	allocator() _THROW0()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 618  : 		{	// construct default allocator (do nothing)
; 619  : 		}

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@PAVMeshData@@@std@@QAE@XZ ENDP		; std::allocator<MeshData *>::allocator<MeshData *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$Vector2@M@@@1@@Z
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
??0?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$Vector2@M@@@1@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >, COMDAT
; _this$ = ecx

; 540  : 		{	// construct allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$Vector2@M@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 539  : 		: _Mypair(_One_then_variadic_args_t(), _Al)

  00036	8b 45 08	 mov	 eax, DWORD PTR __Al$[ebp]
  00039	50		 push	 eax
  0003a	0f b6 4d ef	 movzx	 ecx, BYTE PTR $T2[ebp]
  0003e	51		 push	 ecx
  0003f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ??$?0ABV?$allocator@V?$Vector2@M@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$Vector2@M@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@V?$Vector2@M@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Vector2<float> > >,std::_Vector_val<std::_Simple_types<Vector2<float> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<Vector2<float> > >,std::_Vector_val<std::_Simple_types<Vector2<float> > >,1><std::allocator<Vector2<float> > const &>
  00047	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 541  : 		_Alloc_proxy();

  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Alloc_proxy

; 542  : 		}

  00056	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00060	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00063	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006a	59		 pop	 ecx
  0006b	83 c4 14	 add	 esp, 20			; 00000014H
  0006e	3b ec		 cmp	 ebp, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$Vector2@M@@@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$Vector2@M@@@std@@@2@$00@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$Vector2@M@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$Vector2@M@@@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAE@ABV?$allocator@V?$Vector2@M@@@1@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAE@ABV?$allocator@I@1@@Z
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
??0?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAE@ABV?$allocator@I@1@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >, COMDAT
; _this$ = ecx

; 540  : 		{	// construct allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAE@ABV?$allocator@I@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 539  : 		: _Mypair(_One_then_variadic_args_t(), _Al)

  00036	8b 45 08	 mov	 eax, DWORD PTR __Al$[ebp]
  00039	50		 push	 eax
  0003a	0f b6 4d ef	 movzx	 ecx, BYTE PTR $T2[ebp]
  0003e	51		 push	 ecx
  0003f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ??$?0ABV?$allocator@I@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@I@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned int> >,std::_Vector_val<std::_Simple_types<unsigned int> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned int> >,std::_Vector_val<std::_Simple_types<unsigned int> >,1><std::allocator<unsigned int> const &>
  00047	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 541  : 		_Alloc_proxy();

  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Alloc_proxy

; 542  : 		}

  00056	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00060	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00063	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006a	59		 pop	 ecx
  0006b	83 c4 14	 add	 esp, 20			; 00000014H
  0006e	3b ec		 cmp	 ebp, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAE@ABV?$allocator@I@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAE@ABV?$allocator@I@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAE@ABV?$allocator@I@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAE@ABV?$allocator@I@1@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_range@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBEXPAV?$Vector2@M@@0@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBEXPAV?$Vector2@M@@0@Z PROC ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Orphan_range, COMDAT
; _this$ = ecx

; 1794 : 		{	// orphan iterators within specified (inclusive) range

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBEXPAV?$Vector2@M@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00020	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00023	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00026	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1795 : 		_Lockit _Lock(_LOCK_DEBUG);

  0003d	8b f4		 mov	 esi, esp
  0003f	6a 03		 push	 3
  00041	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1796 : 		const_iterator **_Pnext = (const_iterator **)this->_Getpfirst();

  00058	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Getpfirst
  00060	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax

; 1797 : 		if (_Pnext != 0)

  00063	83 7d e0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00067	74 4e		 je	 SHORT $LN4@Orphan_ran
$LN2@Orphan_ran:

; 1798 : 			{	// test an iterator
; 1799 : 			while (*_Pnext != 0)

  00069	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  0006c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0006f	74 46		 je	 SHORT $LN4@Orphan_ran

; 1800 : 				if ((*_Pnext)->_Ptr < _First || _Last < (*_Pnext)->_Ptr)

  00071	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00074	8b 11		 mov	 edx, DWORD PTR [ecx]
  00076	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00079	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  0007c	72 0d		 jb	 SHORT $LN7@Orphan_ran
  0007e	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00081	8b 11		 mov	 edx, DWORD PTR [ecx]
  00083	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00086	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00089	73 0f		 jae	 SHORT $LN5@Orphan_ran
$LN7@Orphan_ran:

; 1801 : 					_Pnext = (const_iterator **)(*_Pnext)->_Getpnext();

  0008b	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0008e	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00090	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  00095	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax

; 1802 : 				else

  00098	eb 1b		 jmp	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:

; 1803 : 					{	// orphan the iterator
; 1804 : 					(*_Pnext)->_Clrcont();

  0009a	8b 55 e0	 mov	 edx, DWORD PTR __Pnext$[ebp]
  0009d	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0009f	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont

; 1805 : 					*_Pnext = *(const_iterator **)(*_Pnext)->_Getpnext();

  000a4	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a9	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000ae	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000b1	8b 10		 mov	 edx, DWORD PTR [eax]
  000b3	89 11		 mov	 DWORD PTR [ecx], edx
$LN6@Orphan_ran:

; 1806 : 					}

  000b5	eb b2		 jmp	 SHORT $LN2@Orphan_ran
$LN4@Orphan_ran:

; 1807 : 			}
; 1808 : 		}

  000b7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000be	8b f4		 mov	 esi, esp
  000c0	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000c9	3b f4		 cmp	 esi, esp
  000cb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d0	52		 push	 edx
  000d1	8b cd		 mov	 ecx, ebp
  000d3	50		 push	 eax
  000d4	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000da	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000df	58		 pop	 eax
  000e0	5a		 pop	 edx
  000e1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000eb	59		 pop	 ecx
  000ec	5e		 pop	 esi
  000ed	83 c4 20	 add	 esp, 32			; 00000020H
  000f0	3b ec		 cmp	 ebp, esp
  000f2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f7	8b e5		 mov	 esp, ebp
  000f9	5d		 pop	 ebp
  000fa	c2 08 00	 ret	 8
  000fd	0f 1f 00	 npad	 3
$LN13@Orphan_ran:
  00100	01 00 00 00	 DD	 1
  00104	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00108	e8 ff ff ff	 DD	 -24			; ffffffe8H
  0010c	04 00 00 00	 DD	 4
  00110	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  00114	5f		 DB	 95			; 0000005fH
  00115	4c		 DB	 76			; 0000004cH
  00116	6f		 DB	 111			; 0000006fH
  00117	63		 DB	 99			; 00000063H
  00118	6b		 DB	 107			; 0000006bH
  00119	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBEXPAV?$Vector2@M@@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBEXPAV?$Vector2@M@@0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBEXPAV?$Vector2@M@@0@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBEXPAV?$Vector2@M@@0@Z ENDP ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Orphan_range
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reserve@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z PROC ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Reserve, COMDAT
; _this$ = ecx

; 1645 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1646 : 		if (_Unused_capacity() < _Count)

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEIXZ ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Unused_capacity
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0001a	73 3e		 jae	 SHORT $LN4@Reserve

; 1647 : 			{	// need more room, try to get it
; 1648 : 			if (max_size() - size() < _Count)

  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?max_size@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEIXZ ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::max_size
  00024	8b f0		 mov	 esi, eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?size@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEIXZ ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::size
  0002e	2b f0		 sub	 esi, eax
  00030	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00033	73 08		 jae	 SHORT $LN3@Reserve

; 1649 : 				_Xlen();

  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Xlen@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBEXXZ ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Xlen
$LN3@Reserve:

; 1650 : 			_Reallocate(_Grow_to(size() + _Count));

  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?size@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEIXZ ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::size
  00045	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  00048	50		 push	 eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBEII@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Grow_to
  00051	50		 push	 eax
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Reallocate
$LN4@Reserve:

; 1651 : 			}
; 1652 : 		}

  0005a	5e		 pop	 esi
  0005b	83 c4 04	 add	 esp, 4
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?_Reserve@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z ENDP ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBE_NPBV?$Vector2@M@@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBE_NPBV?$Vector2@M@@@Z PROC ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Inside, COMDAT
; _this$ = ecx

; 1615 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1616 : 		return (_Ptr < this->_Mylast() && this->_Myfirst() <= _Ptr);

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QBEABQAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00022	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00024	73 18		 jae	 SHORT $LN3@Inside
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QBEABQAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myfirst
  0002e	8b 10		 mov	 edx, DWORD PTR [eax]
  00030	3b 55 08	 cmp	 edx, DWORD PTR __Ptr$[ebp]
  00033	77 09		 ja	 SHORT $LN3@Inside
  00035	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv78[ebp], 1
  0003c	eb 07		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  0003e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN4@Inside:
  00045	8a 45 f8	 mov	 al, BYTE PTR tv78[ebp]

; 1617 : 		}

  00048	83 c4 08	 add	 esp, 8
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
?_Inside@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBE_NPBV?$Vector2@M@@@Z ENDP ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$Vector2@M@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$Vector2@M@@@std@@QAE@XZ PROC		; std::allocator<Vector2<float> >::allocator<Vector2<float> >, COMDAT
; _this$ = ecx

; 617  : 	allocator() _THROW0()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 618  : 		{	// construct default allocator (do nothing)
; 619  : 		}

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@V?$Vector2@M@@@std@@QAE@XZ ENDP		; std::allocator<Vector2<float> >::allocator<Vector2<float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_range@?$vector@IV?$allocator@I@std@@@std@@IBEXPAI0@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@IV?$allocator@I@std@@@std@@IBEXPAI0@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1794 : 		{	// orphan iterators within specified (inclusive) range

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@IV?$allocator@I@std@@@std@@IBEXPAI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00020	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00023	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00026	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1795 : 		_Lockit _Lock(_LOCK_DEBUG);

  0003d	8b f4		 mov	 esi, esp
  0003f	6a 03		 push	 3
  00041	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1796 : 		const_iterator **_Pnext = (const_iterator **)this->_Getpfirst();

  00058	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Getpfirst
  00060	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax

; 1797 : 		if (_Pnext != 0)

  00063	83 7d e0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00067	74 4e		 je	 SHORT $LN4@Orphan_ran
$LN2@Orphan_ran:

; 1798 : 			{	// test an iterator
; 1799 : 			while (*_Pnext != 0)

  00069	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  0006c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0006f	74 46		 je	 SHORT $LN4@Orphan_ran

; 1800 : 				if ((*_Pnext)->_Ptr < _First || _Last < (*_Pnext)->_Ptr)

  00071	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00074	8b 11		 mov	 edx, DWORD PTR [ecx]
  00076	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00079	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  0007c	72 0d		 jb	 SHORT $LN7@Orphan_ran
  0007e	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00081	8b 11		 mov	 edx, DWORD PTR [ecx]
  00083	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00086	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00089	73 0f		 jae	 SHORT $LN5@Orphan_ran
$LN7@Orphan_ran:

; 1801 : 					_Pnext = (const_iterator **)(*_Pnext)->_Getpnext();

  0008b	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0008e	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00090	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  00095	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax

; 1802 : 				else

  00098	eb 1b		 jmp	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:

; 1803 : 					{	// orphan the iterator
; 1804 : 					(*_Pnext)->_Clrcont();

  0009a	8b 55 e0	 mov	 edx, DWORD PTR __Pnext$[ebp]
  0009d	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0009f	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont

; 1805 : 					*_Pnext = *(const_iterator **)(*_Pnext)->_Getpnext();

  000a4	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a9	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000ae	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000b1	8b 10		 mov	 edx, DWORD PTR [eax]
  000b3	89 11		 mov	 DWORD PTR [ecx], edx
$LN6@Orphan_ran:

; 1806 : 					}

  000b5	eb b2		 jmp	 SHORT $LN2@Orphan_ran
$LN4@Orphan_ran:

; 1807 : 			}
; 1808 : 		}

  000b7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000be	8b f4		 mov	 esi, esp
  000c0	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000c9	3b f4		 cmp	 esi, esp
  000cb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d0	52		 push	 edx
  000d1	8b cd		 mov	 ecx, ebp
  000d3	50		 push	 eax
  000d4	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000da	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000df	58		 pop	 eax
  000e0	5a		 pop	 edx
  000e1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000eb	59		 pop	 ecx
  000ec	5e		 pop	 esi
  000ed	83 c4 20	 add	 esp, 32			; 00000020H
  000f0	3b ec		 cmp	 ebp, esp
  000f2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f7	8b e5		 mov	 esp, ebp
  000f9	5d		 pop	 ebp
  000fa	c2 08 00	 ret	 8
  000fd	0f 1f 00	 npad	 3
$LN13@Orphan_ran:
  00100	01 00 00 00	 DD	 1
  00104	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00108	e8 ff ff ff	 DD	 -24			; ffffffe8H
  0010c	04 00 00 00	 DD	 4
  00110	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  00114	5f		 DB	 95			; 0000005fH
  00115	4c		 DB	 76			; 0000004cH
  00116	6f		 DB	 111			; 0000006fH
  00117	63		 DB	 99			; 00000063H
  00118	6b		 DB	 107			; 0000006bH
  00119	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@IV?$allocator@I@std@@@std@@IBEXPAI0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@IV?$allocator@I@std@@@std@@IBEXPAI0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@IV?$allocator@I@std@@@std@@IBEXPAI0@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@IV?$allocator@I@std@@@std@@IBEXPAI0@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reserve@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Reserve, COMDAT
; _this$ = ecx

; 1645 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1646 : 		if (_Unused_capacity() < _Count)

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Unused_capacity
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0001a	73 3e		 jae	 SHORT $LN4@Reserve

; 1647 : 			{	// need more room, try to get it
; 1648 : 			if (max_size() - size() < _Count)

  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?max_size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::max_size
  00024	8b f0		 mov	 esi, eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::size
  0002e	2b f0		 sub	 esi, eax
  00030	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00033	73 08		 jae	 SHORT $LN3@Reserve

; 1649 : 				_Xlen();

  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Xlen@?$vector@IV?$allocator@I@std@@@std@@IBEXXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::_Xlen
$LN3@Reserve:

; 1650 : 			_Reallocate(_Grow_to(size() + _Count));

  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::size
  00045	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  00048	50		 push	 eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@IV?$allocator@I@std@@@std@@IBEII@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Grow_to
  00051	50		 push	 eax
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Reallocate
$LN4@Reserve:

; 1651 : 			}
; 1652 : 		}

  0005a	5e		 pop	 esi
  0005b	83 c4 04	 add	 esp, 4
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?_Reserve@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@IV?$allocator@I@std@@@std@@IBE_NPBI@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@IV?$allocator@I@std@@@std@@IBE_NPBI@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Inside, COMDAT
; _this$ = ecx

; 1615 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1616 : 		return (_Ptr < this->_Mylast() && this->_Myfirst() <= _Ptr);

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QBEABQAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00022	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00024	73 18		 jae	 SHORT $LN3@Inside
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QBEABQAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myfirst
  0002e	8b 10		 mov	 edx, DWORD PTR [eax]
  00030	3b 55 08	 cmp	 edx, DWORD PTR __Ptr$[ebp]
  00033	77 09		 ja	 SHORT $LN3@Inside
  00035	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv78[ebp], 1
  0003c	eb 07		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  0003e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN4@Inside:
  00045	8a 45 f8	 mov	 al, BYTE PTR tv78[ebp]

; 1617 : 		}

  00048	83 c4 08	 add	 esp, 8
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
?_Inside@?$vector@IV?$allocator@I@std@@@std@@IBE_NPBI@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@I@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@I@std@@QAE@XZ PROC			; std::allocator<unsigned int>::allocator<unsigned int>, COMDAT
; _this$ = ecx

; 617  : 	allocator() _THROW0()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 618  : 		{	// construct default allocator (do nothing)
; 619  : 		}

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??0?$allocator@I@std@@QAE@XZ ENDP			; std::allocator<unsigned int>::allocator<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?capacity@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::capacity, COMDAT
; _this$ = ecx

; 1773 : 		{	// return current length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1774 : 		return (this->_Myres());

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
  00016	8b 00		 mov	 eax, DWORD PTR [eax]

; 1775 : 		}

  00018	83 c4 04	 add	 esp, 4
  0001b	3b ec		 cmp	 ebp, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?capacity@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ
_TEXT	SEGMENT
tv88 = -8						; size = 4
_this$ = -4						; size = 4
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 337  : 		{	// discard any allocated buffer and clear pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 338  : 		if (_Mystate & _Allocated)

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0001e	83 e1 01	 and	 ecx, 1
  00021	74 78		 je	 SHORT $LN2@Tidy

; 339  : 			_Al.deallocate(_Mysb::eback(),

  00023	8b f4		 mov	 esi, esp
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	85 c0		 test	 eax, eax
  00037	74 17		 je	 SHORT $LN4@Tidy
  00039	8b f4		 mov	 esi, esp
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	89 45 f8	 mov	 DWORD PTR tv88[ebp], eax
  0004e	eb 15		 jmp	 SHORT $LN5@Tidy
$LN4@Tidy:
  00050	8b f4		 mov	 esi, esp
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0005b	3b f4		 cmp	 esi, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	89 45 f8	 mov	 DWORD PTR tv88[ebp], eax
$LN5@Tidy:
  00065	8b f4		 mov	 esi, esp
  00067	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00070	3b f4		 cmp	 esi, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	8b 55 f8	 mov	 edx, DWORD PTR tv88[ebp]
  0007a	2b d0		 sub	 edx, eax
  0007c	52		 push	 edx
  0007d	8b f4		 mov	 esi, esp
  0007f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00088	3b f4		 cmp	 esi, esp
  0008a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008f	50		 push	 eax
  00090	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	83 c1 40	 add	 ecx, 64			; 00000040H
  00096	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN2@Tidy:

; 340  : 				(_Mysb::pptr() != 0 ? _Mysb::epptr()
; 341  : 					: _Mysb::egptr()) - _Mysb::eback());
; 342  : 		_Mysb::setg(0, 0, 0);

  0009b	8b f4		 mov	 esi, esp
  0009d	6a 00		 push	 0
  0009f	6a 00		 push	 0
  000a1	6a 00		 push	 0
  000a3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  000ac	3b f4		 cmp	 esi, esp
  000ae	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 343  : 		_Mysb::setp(0, 0);

  000b3	8b f4		 mov	 esi, esp
  000b5	6a 00		 push	 0
  000b7	6a 00		 push	 0
  000b9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z
  000c2	3b f4		 cmp	 esi, esp
  000c4	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 344  : 		_Seekhigh = 0;

  000c9	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cc	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0

; 345  : 		_Mystate &= ~_Allocated;

  000d3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d6	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  000d9	83 e2 fe	 and	 edx, -2			; fffffffeH
  000dc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000df	89 50 3c	 mov	 DWORD PTR [eax+60], edx

; 346  : 		}

  000e2	5e		 pop	 esi
  000e3	83 c4 08	 add	 esp, 8
  000e6	3b ec		 cmp	 ebp, esp
  000e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ed	8b e5		 mov	 esp, ebp
  000ef	5d		 pop	 ebp
  000f0	c3		 ret	 0
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ PROC		; std::fpos<_Mbstatet>::operator __int64, COMDAT
; _this$ = ecx

; 67   : 		{	// return offset

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 68   : 		return ((streamoff)(_Myoff + _FPOSOFF(_Fpos)));

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	8b 10		 mov	 edx, DWORD PTR [eax]
  00017	03 51 08	 add	 edx, DWORD PTR [ecx+8]
  0001a	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  0001d	13 71 0c	 adc	 esi, DWORD PTR [ecx+12]
  00020	8b c2		 mov	 eax, edx
  00022	8b d6		 mov	 edx, esi

; 69   : 		}

  00024	5e		 pop	 esi
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ ENDP		; std::fpos<_Mbstatet>::operator __int64
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 8
??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z PROC		; std::fpos<_Mbstatet>::fpos<_Mbstatet>, COMDAT
; _this$ = ecx

; 43   : 		{	// construct with stream offset

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 42   : 		: _Myoff(_Off), _Fpos(_Fpz), _Mystate()

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  00014	89 08		 mov	 DWORD PTR [eax], ecx
  00016	8b 55 0c	 mov	 edx, DWORD PTR __Off$[ebp+4]
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
  00026	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
  0002d	33 c9		 xor	 ecx, ecx
  0002f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00032	83 c2 10	 add	 edx, 16			; 00000010H
  00035	89 0a		 mov	 DWORD PTR [edx], ecx
  00037	89 4a 04	 mov	 DWORD PTR [edx+4], ecx

; 44   : 		}

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 08 00	 ret	 8
??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z ENDP		; std::fpos<_Mbstatet>::fpos<_Mbstatet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::~_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::~_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>,1>::~_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>,1>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@$00@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>,1>::~_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<MeshData *> >::~_Vector_val<std::_Simple_types<MeshData *> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1_Container_base12@std@@QAE@XZ ; std::_Container_base12::~_Container_base12
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<MeshData *> >::~_Vector_val<std::_Simple_types<MeshData *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@QAE@XZ
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::~_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1_Container_base12@std@@QAE@XZ ; std::_Container_base12::~_Container_base12
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::~_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::~_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1_Container_base12@std@@QAE@XZ ; std::_Container_base12::~_Container_base12
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::~_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Getpfirst, COMDAT
; _this$ = ecx

; 595  : 		{	// get address of iterator chain

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 596  : 		return (_Get_data()._Getpfirst());

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAVMesh@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Get_data
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst

; 597  : 		}

  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Getpfirst, COMDAT
; _this$ = ecx

; 595  : 		{	// get address of iterator chain

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 596  : 		return (_Get_data()._Getpfirst());

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAVMaterial@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Get_data
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst

; 597  : 		}

  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 293  : 		{	// return reference to first

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 294  : 		return (*this);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 295  : 		}

  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAEXPAPAVMeshData@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAEXPAPAVMeshData@@I@Z PROC ; std::_Wrap_alloc<std::allocator<MeshData *> >::deallocate, COMDAT
; _this$ = ecx

; 908  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 909  : 		_Mybase::deallocate(_Ptr, _Count);

  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAVMeshData@@@std@@QAEXPAPAVMeshData@@I@Z ; std::allocator<MeshData *>::deallocate

; 910  : 		}

  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAEXPAPAVMeshData@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<MeshData *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Get_data, COMDAT
; _this$ = ecx

; 636  : 		{	// return const reference to _Vector_val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 637  : 		return (_Mypair._Get_second());

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Get_second

; 638  : 		}

  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Get_data, COMDAT
; _this$ = ecx

; 631  : 		{	// return reference to _Vector_val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 632  : 		return (_Mypair._Get_second());

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Get_second

; 633  : 		}

  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEXAAV12@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Swap_all, COMDAT
; _this$ = ecx

; 616  : 		{	// swap all iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 617  : 		_Get_data()._Swap_all(_Right._Get_data());

  0000e	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Get_data
  00016	50		 push	 eax
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Get_data
  0001f	8b c8		 mov	 ecx, eax
  00021	e8 00 00 00 00	 call	 ?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z ; std::_Container_base12::_Swap_all

; 618  : 		}

  00026	83 c4 04	 add	 esp, 4
  00029	3b ec		 cmp	 ebp, esp
  0002b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEXAAV12@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Swap_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 611  : 		{	// orphan all iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 612  : 		_Get_data()._Orphan_all();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Get_data
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 613  : 		}

  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Getpfirst, COMDAT
; _this$ = ecx

; 595  : 		{	// get address of iterator chain

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 596  : 		return (_Get_data()._Getpfirst());

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Get_data
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst

; 597  : 		}

  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Free_proxy, COMDAT
; _this$ = ecx

; 585  : 		{	// destroy proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 586  : 		typename _Alty::template rebind<_Container_proxy>::other
; 587  : 			_Alproxy(_Getal());

  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Getal
  00022	50		 push	 eax
  00023	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00026	e8 00 00 00 00	 call	 ??$?0U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<MeshData *> > >

; 588  : 		_Orphan_all();

  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Orphan_all

; 589  : 		_Alproxy.destroy(_Myproxy());

  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myproxy
  0003b	8b 00		 mov	 eax, DWORD PTR [eax]
  0003d	50		 push	 eax
  0003e	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00041	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 590  : 		_Alproxy.deallocate(_Myproxy(), 1);

  00046	6a 01		 push	 1
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myproxy
  00050	8b 08		 mov	 ecx, DWORD PTR [eax]
  00052	51		 push	 ecx
  00053	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00056	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate

; 591  : 		_Myproxy() = 0;

  0005b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myproxy
  00063	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 592  : 		}

  00069	52		 push	 edx
  0006a	8b cd		 mov	 ecx, ebp
  0006c	50		 push	 eax
  0006d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00073	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00078	58		 pop	 eax
  00079	5a		 pop	 edx
  0007a	83 c4 10	 add	 esp, 16			; 00000010H
  0007d	3b ec		 cmp	 ebp, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
$LN5@Free_proxy:
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  00090	f7 ff ff ff	 DD	 -9			; fffffff7H
  00094	01 00 00 00	 DD	 1
  00098	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  0009c	5f		 DB	 95			; 0000005fH
  0009d	41		 DB	 65			; 00000041H
  0009e	6c		 DB	 108			; 0000006cH
  0009f	70		 DB	 112			; 00000070H
  000a0	72		 DB	 114			; 00000072H
  000a1	6f		 DB	 111			; 0000006fH
  000a2	78		 DB	 120			; 00000078H
  000a3	79		 DB	 121			; 00000079H
  000a4	00		 DB	 0
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Alloc_proxy, COMDAT
; _this$ = ecx

; 576  : 		{	// construct proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 577  : 		typename _Alty::template rebind<_Container_proxy>::other
; 578  : 			_Alproxy(_Getal());

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Getal
  00029	50		 push	 eax
  0002a	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0002d	e8 00 00 00 00	 call	 ??$?0U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<MeshData *> > >

; 579  : 		_Myproxy() = _Alproxy.allocate(1);

  00032	6a 01		 push	 1
  00034	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00037	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  0003c	8b f0		 mov	 esi, eax
  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myproxy
  00046	89 30		 mov	 DWORD PTR [eax], esi

; 580  : 		_Alproxy.construct(_Myproxy(), _Container_proxy());

  00048	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  0004b	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  00050	50		 push	 eax
  00051	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myproxy
  00059	8b 00		 mov	 eax, DWORD PTR [eax]
  0005b	50		 push	 eax
  0005c	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0005f	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 581  : 		_Myproxy()->_Mycont = &_Get_data();

  00064	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Get_data
  0006c	8b f0		 mov	 esi, eax
  0006e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myproxy
  00076	8b 08		 mov	 ecx, DWORD PTR [eax]
  00078	89 31		 mov	 DWORD PTR [ecx], esi

; 582  : 		}

  0007a	52		 push	 edx
  0007b	8b cd		 mov	 ecx, ebp
  0007d	50		 push	 eax
  0007e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00084	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00089	58		 pop	 eax
  0008a	5a		 pop	 edx
  0008b	5e		 pop	 esi
  0008c	83 c4 18	 add	 esp, 24			; 00000018H
  0008f	3b ec		 cmp	 ebp, esp
  00091	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c3		 ret	 0
  0009a	66 90		 npad	 2
$LN5@Alloc_prox:
  0009c	01 00 00 00	 DD	 1
  000a0	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  000a4	f7 ff ff ff	 DD	 -9			; fffffff7H
  000a8	01 00 00 00	 DD	 1
  000ac	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  000b0	5f		 DB	 95			; 0000005fH
  000b1	41		 DB	 65			; 00000041H
  000b2	6c		 DB	 108			; 0000006cH
  000b3	70		 DB	 112			; 00000070H
  000b4	72		 DB	 114			; 00000072H
  000b5	6f		 DB	 111			; 0000006fH
  000b6	78		 DB	 120			; 00000078H
  000b7	79		 DB	 121			; 00000079H
  000b8	00		 DB	 0
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_second@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@XZ PROC ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::_Get_second, COMDAT
; _this$ = ecx

; 313  : 		{	// return reference to second

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 314  : 		return (_Myval2);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 315  : 		}

  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@XZ ENDP ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::_Get_first, COMDAT
; _this$ = ecx

; 293  : 		{	// return reference to first

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 294  : 		return (*this);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 295  : 		}

  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QAEAAU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 313  : 		{	// return reference to second

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 314  : 		return (_Myval2);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 315  : 		}

  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >, COMDAT
; _this$ = ecx

; 214  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 213  : 		: _Mybase(_Pnode, _Plist)

  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Plist$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>

; 215  : 		}

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Myval, COMDAT

; 601  : 		{	// return reference to value in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 602  : 		return ((reference)_Pnode->_Myval);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 10	 add	 eax, 16			; 00000010H

; 603  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Myval
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Freeheadnode, COMDAT
; _this$ = ecx

; 845  : 		{	// free head node using current allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 846  : 		_Getal().destroy(

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>
  00020	83 c4 04	 add	 esp, 4
  00023	50		 push	 eax
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getal
  0002c	8b c8		 mov	 ecx, eax
  0002e	e8 00 00 00 00	 call	 ??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::destroy<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>

; 847  : 			_STD addressof(_Left(_Pnode)));
; 848  : 		_Getal().destroy(

  00033	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00036	51		 push	 ecx
  00037	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  0003c	83 c4 04	 add	 esp, 4
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>
  00045	83 c4 04	 add	 esp, 4
  00048	50		 push	 eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getal
  00051	8b c8		 mov	 ecx, eax
  00053	e8 00 00 00 00	 call	 ??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::destroy<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>

; 849  : 			_STD addressof(_Parent(_Pnode)));
; 850  : 		_Getal().destroy(

  00058	8b 55 08	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0005b	52		 push	 edx
  0005c	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  00061	83 c4 04	 add	 esp, 4
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>
  0006a	83 c4 04	 add	 esp, 4
  0006d	50		 push	 eax
  0006e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getal
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::destroy<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>

; 851  : 			_STD addressof(_Right(_Pnode)));
; 852  : 		_Getal().deallocate(_Pnode, 1);

  0007d	6a 01		 push	 1
  0007f	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00082	50		 push	 eax
  00083	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getal
  0008b	8b c8		 mov	 ecx, eax
  0008d	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::deallocate

; 853  : 		}

  00092	83 c4 04	 add	 esp, 4
  00095	3b ec		 cmp	 ebp, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c2 04 00	 ret	 4
?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Freeheadnode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Free_proxy, COMDAT
; _this$ = ecx

; 788  : 		{	// destroy proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 789  : 		typename _Alty::template rebind<_Container_proxy>::other
; 790  : 			_Alproxy(_Getal());

  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getal
  00022	50		 push	 eax
  00023	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00026	e8 00 00 00 00	 call	 ??$?0U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > > >

; 791  : 		_Orphan_all();

  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Orphan_all

; 792  : 		_Alproxy.destroy(_Myproxy());

  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myproxy
  0003b	8b 00		 mov	 eax, DWORD PTR [eax]
  0003d	50		 push	 eax
  0003e	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00041	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 793  : 		_Alproxy.deallocate(_Myproxy(), 1);

  00046	6a 01		 push	 1
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myproxy
  00050	8b 08		 mov	 ecx, DWORD PTR [eax]
  00052	51		 push	 ecx
  00053	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00056	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate

; 794  : 		_Myproxy() = 0;

  0005b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	e8 00 00 00 00	 call	 ?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myproxy
  00063	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 795  : 		}

  00069	52		 push	 edx
  0006a	8b cd		 mov	 ecx, ebp
  0006c	50		 push	 eax
  0006d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00073	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00078	58		 pop	 eax
  00079	5a		 pop	 edx
  0007a	83 c4 10	 add	 esp, 16			; 00000010H
  0007d	3b ec		 cmp	 ebp, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
$LN5@Free_proxy:
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  00090	f7 ff ff ff	 DD	 -9			; fffffff7H
  00094	01 00 00 00	 DD	 1
  00098	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  0009c	5f		 DB	 95			; 0000005fH
  0009d	41		 DB	 65			; 00000041H
  0009e	6c		 DB	 108			; 0000006cH
  0009f	70		 DB	 112			; 00000070H
  000a0	72		 DB	 114			; 00000072H
  000a1	6f		 DB	 111			; 0000006fH
  000a2	78		 DB	 120			; 00000078H
  000a3	79		 DB	 121			; 00000079H
  000a4	00		 DB	 0
?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z
_TEXT	SEGMENT
$T2 = -18						; size = 1
$T3 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >, COMDAT
; _this$ = ecx

; 703  : 		{	// construct from comparator, allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 701  : 		: _Mypair(_One_then_variadic_args_t(), _Parg,

  00036	8b 45 0c	 mov	 eax, DWORD PTR __Al$[ebp]
  00039	50		 push	 eax
  0003a	8d 4d ef	 lea	 ecx, DWORD PTR $T3[ebp]
  0003d	51		 push	 ecx
  0003e	8b 55 08	 mov	 edx, DWORD PTR __Parg$[ebp]
  00041	52		 push	 edx
  00042	0f b6 45 ee	 movzx	 eax, BYTE PTR $T2[ebp]
  00046	50		 push	 eax
  00047	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ??$?0ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAU21@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_One_then_variadic_args_t,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > const &>
  0004f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 704  : 		_Construct();

  00056	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Construct

; 705  : 		}

  0005e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00065	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00072	59		 pop	 ecx
  00073	83 c4 14	 add	 esp, 20			; 00000014H
  00076	3b ec		 cmp	 ebp, esp
  00078	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ
__ehhandler$??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myval, COMDAT

; 686  : 		{	// return reference to value in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 687  : 		return (_Tree_val<_Val_types>::_Myval(_Pnode));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Myval
  0000c	83 c4 04	 add	 esp, 4

; 688  : 		}

  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myval
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Kfn, COMDAT
; _this$ = ecx

; 2200 : 		{	// get key from value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2201 : 		return (_Traits::_Kfn(_Val));

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@@Z ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>
  00017	83 c4 04	 add	 esp, 4

; 2202 : 		}

  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?_Kfn@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Kfn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
tv199 = -92						; size = 4
tv198 = -88						; size = 4
tv94 = -84						; size = 4
tv186 = -80						; size = 4
tv206 = -76						; size = 4
tv181 = -72						; size = 4
tv160 = -68						; size = 4
$T2 = -64						; size = 4
$T3 = -60						; size = 12
$T4 = -48						; size = 4
$T5 = -44						; size = 12
$T6 = -32						; size = 12
$T7 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 12
__Last$ = 24						; size = 12
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1448 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d a4	 lea	 edi, DWORD PTR [ebp-92]
  00019	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003a	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  00041	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 1449 : 		if (_First == begin() && _Last == end())

  00048	8d 45 e0	 lea	 eax, DWORD PTR $T6[ebp]
  0004b	50		 push	 eax
  0004c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::begin
  00054	89 45 bc	 mov	 DWORD PTR tv160[ebp], eax
  00057	8b 4d bc	 mov	 ecx, DWORD PTR tv160[ebp]
  0005a	89 4d b8	 mov	 DWORD PTR tv181[ebp], ecx
  0005d	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00061	8b 55 c0	 mov	 edx, DWORD PTR $T2[ebp]
  00064	83 ca 01	 or	 edx, 1
  00067	89 55 c0	 mov	 DWORD PTR $T2[ebp], edx
  0006a	8b 45 b8	 mov	 eax, DWORD PTR tv181[ebp]
  0006d	50		 push	 eax
  0006e	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  00071	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator==
  00076	0f b6 c8	 movzx	 ecx, al
  00079	85 c9		 test	 ecx, ecx
  0007b	74 41		 je	 SHORT $LN7@erase
  0007d	8d 55 d4	 lea	 edx, DWORD PTR $T5[ebp]
  00080	52		 push	 edx
  00081	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::end
  00089	89 45 b4	 mov	 DWORD PTR tv206[ebp], eax
  0008c	8b 45 b4	 mov	 eax, DWORD PTR tv206[ebp]
  0008f	89 45 b0	 mov	 DWORD PTR tv186[ebp], eax
  00092	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  00099	8b 4d c0	 mov	 ecx, DWORD PTR $T2[ebp]
  0009c	83 c9 02	 or	 ecx, 2
  0009f	89 4d c0	 mov	 DWORD PTR $T2[ebp], ecx
  000a2	8b 55 b0	 mov	 edx, DWORD PTR tv186[ebp]
  000a5	52		 push	 edx
  000a6	8d 4d 18	 lea	 ecx, DWORD PTR __Last$[ebp]
  000a9	e8 00 00 00 00	 call	 ??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator==
  000ae	0f b6 c0	 movzx	 eax, al
  000b1	85 c0		 test	 eax, eax
  000b3	74 09		 je	 SHORT $LN7@erase
  000b5	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv94[ebp], 1
  000bc	eb 07		 jmp	 SHORT $LN8@erase
$LN7@erase:
  000be	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv94[ebp], 0
$LN8@erase:
  000c5	8a 4d ac	 mov	 cl, BYTE PTR tv94[ebp]
  000c8	88 4d ef	 mov	 BYTE PTR $T7[ebp], cl
  000cb	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  000d2	8b 55 c0	 mov	 edx, DWORD PTR $T2[ebp]
  000d5	83 e2 02	 and	 edx, 2
  000d8	74 0c		 je	 SHORT $LN15@erase
  000da	83 65 c0 fd	 and	 DWORD PTR $T2[ebp], -3	; fffffffdH
  000de	8d 4d d4	 lea	 ecx, DWORD PTR $T5[ebp]
  000e1	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
$LN15@erase:
  000e6	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000ed	8b 45 c0	 mov	 eax, DWORD PTR $T2[ebp]
  000f0	83 e0 01	 and	 eax, 1
  000f3	74 0c		 je	 SHORT $LN16@erase
  000f5	83 65 c0 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  000f9	8d 4d e0	 lea	 ecx, DWORD PTR $T6[ebp]
  000fc	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
$LN16@erase:
  00101	0f b6 4d ef	 movzx	 ecx, BYTE PTR $T7[ebp]
  00105	85 c9		 test	 ecx, ecx
  00107	74 45		 je	 SHORT $LN2@erase

; 1450 : 			{	// erase all
; 1451 : 			clear();

  00109	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0010c	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::clear

; 1452 : 			return (begin());

  00111	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00114	52		 push	 edx
  00115	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00118	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::begin
  0011d	8b 45 c0	 mov	 eax, DWORD PTR $T2[ebp]
  00120	83 c8 04	 or	 eax, 4
  00123	89 45 c0	 mov	 DWORD PTR $T2[ebp], eax
  00126	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0012a	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  0012d	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
  00132	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00139	8d 4d 18	 lea	 ecx, DWORD PTR __Last$[ebp]
  0013c	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
  00141	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00144	e9 a0 00 00 00	 jmp	 $LN1@erase

; 1453 : 			}
; 1454 : 		else

  00149	e9 80 00 00 00	 jmp	 $LN5@erase
$LN2@erase:

; 1455 : 			{	// partial erase, one at a time
; 1456 : 			while (_First != _Last)

  0014e	8d 4d 18	 lea	 ecx, DWORD PTR __Last$[ebp]
  00151	51		 push	 ecx
  00152	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  00155	e8 00 00 00 00	 call	 ??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator!=
  0015a	0f b6 d0	 movzx	 edx, al
  0015d	85 d2		 test	 edx, edx
  0015f	74 2f		 je	 SHORT $LN3@erase

; 1457 : 				erase(_First++);

  00161	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00164	8b c4		 mov	 eax, esp
  00166	89 65 d0	 mov	 DWORD PTR $T4[ebp], esp
  00169	6a 00		 push	 0
  0016b	50		 push	 eax
  0016c	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  0016f	e8 00 00 00 00	 call	 ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator++
  00174	89 45 a8	 mov	 DWORD PTR tv198[ebp], eax
  00177	8d 4d c4	 lea	 ecx, DWORD PTR $T3[ebp]
  0017a	51		 push	 ecx
  0017b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0017e	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::erase
  00183	89 45 a4	 mov	 DWORD PTR tv199[ebp], eax
  00186	8d 4d c4	 lea	 ecx, DWORD PTR $T3[ebp]
  00189	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
  0018e	eb be		 jmp	 SHORT $LN2@erase
$LN3@erase:

; 1458 : 			return (iterator(_First._Ptr, &this->_Get_data()));

  00190	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00193	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Get_data
  00198	50		 push	 eax
  00199	8b 55 14	 mov	 edx, DWORD PTR __First$[ebp+8]
  0019c	52		 push	 edx
  0019d	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  001a0	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >
  001a5	8b 45 c0	 mov	 eax, DWORD PTR $T2[ebp]
  001a8	83 c8 04	 or	 eax, 4
  001ab	89 45 c0	 mov	 DWORD PTR $T2[ebp], eax
  001ae	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001b2	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  001b5	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
  001ba	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001c1	8d 4d 18	 lea	 ecx, DWORD PTR __Last$[ebp]
  001c4	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
  001c9	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  001cc	eb 1b		 jmp	 SHORT $LN1@erase
$LN5@erase:

; 1459 : 			}
; 1460 : 		}

  001ce	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  001d2	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  001d5	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
  001da	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001e1	8d 4d 18	 lea	 ecx, DWORD PTR __Last$[ebp]
  001e4	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
$LN1@erase:
  001e9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001ec	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001f3	59		 pop	 ecx
  001f4	5f		 pop	 edi
  001f5	83 c4 5c	 add	 esp, 92			; 0000005cH
  001f8	3b ec		 cmp	 ebp, esp
  001fa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@0@Z$0:
  00000	8d 4d 18	 lea	 ecx, DWORD PTR __Last$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@0@Z$1:
  00008	8d 4d 0c	 lea	 ecx, DWORD PTR __First$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@0@Z$2:
  00010	8b 45 c0	 mov	 eax, DWORD PTR $T2[ebp]
  00013	83 e0 01	 and	 eax, 1
  00016	0f 84 0c 00 00
	00		 je	 $LN12@erase
  0001c	83 65 c0 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00020	8d 4d e0	 lea	 ecx, DWORD PTR $T6[ebp]
  00023	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
$LN12@erase:
  00028	c3		 ret	 0
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@0@Z$3:
  00029	8b 45 c0	 mov	 eax, DWORD PTR $T2[ebp]
  0002c	83 e0 02	 and	 eax, 2
  0002f	0f 84 0c 00 00
	00		 je	 $LN14@erase
  00035	83 65 c0 fd	 and	 DWORD PTR $T2[ebp], -3	; fffffffdH
  00039	8d 4d d4	 lea	 ecx, DWORD PTR $T5[ebp]
  0003c	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
$LN14@erase:
  00041	c3		 ret	 0
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@0@Z:
  00042	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00046	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00049	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  0004c	33 c8		 xor	 ecx, eax
  0004e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00053	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@0@Z
  00058	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::erase
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::begin, COMDAT
; _this$ = ecx

; 1146 : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1147 : 		return (iterator(_Lmost(), &this->_Get_data()));

  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Get_data
  00035	50		 push	 eax
  00036	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Lmost
  0003e	8b 00		 mov	 eax, DWORD PTR [eax]
  00040	50		 push	 eax
  00041	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00044	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >
  00049	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1148 : 		}

  0004c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00056	59		 pop	 ecx
  00057	83 c4 10	 add	 esp, 16			; 00000010H
  0005a	3b ec		 cmp	 ebp, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::begin
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
$T2 = -40						; size = 4
__Tmp$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::operator++, COMDAT
; _this$ = ecx

; 276  : 		{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  0001c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0001f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00022	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00025	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00028	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0002b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00042	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 277  : 		_Myiter _Tmp = *this;

  00049	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	50		 push	 eax
  0004d	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00050	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
  00055	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 278  : 		++*this;

  0005c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	e8 00 00 00 00	 call	 ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::operator++

; 279  : 		return (_Tmp);

  00064	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00067	51		 push	 ecx
  00068	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0006b	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
  00070	8b 55 d8	 mov	 edx, DWORD PTR $T2[ebp]
  00073	83 ca 01	 or	 edx, 1
  00076	89 55 d8	 mov	 DWORD PTR $T2[ebp], edx
  00079	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00080	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00083	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  00088	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 280  : 		}

  0008b	52		 push	 edx
  0008c	8b cd		 mov	 ecx, ebp
  0008e	50		 push	 eax
  0008f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@operator
  00095	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0009a	58		 pop	 eax
  0009b	5a		 pop	 edx
  0009c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a6	59		 pop	 ecx
  000a7	83 c4 28	 add	 esp, 40			; 00000028H
  000aa	3b ec		 cmp	 ebp, esp
  000ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c2 08 00	 ret	 8
  000b7	90		 npad	 1
$LN9@operator:
  000b8	01 00 00 00	 DD	 1
  000bc	00 00 00 00	 DD	 $LN8@operator
$LN8@operator:
  000c0	e0 ff ff ff	 DD	 -32			; ffffffe0H
  000c4	0c 00 00 00	 DD	 12			; 0000000cH
  000c8	00 00 00 00	 DD	 $LN6@operator
$LN6@operator:
  000cc	5f		 DB	 95			; 0000005fH
  000cd	54		 DB	 84			; 00000054H
  000ce	6d		 DB	 109			; 0000006dH
  000cf	70		 DB	 112			; 00000070H
  000d0	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::operator++
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Freeheadnode, COMDAT
; _this$ = ecx

; 845  : 		{	// free head node using current allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 846  : 		_Getal().destroy(

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> *>
  00020	83 c4 04	 add	 esp, 4
  00023	50		 push	 eax
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Getal
  0002c	8b c8		 mov	 ecx, eax
  0002e	e8 00 00 00 00	 call	 ??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >::destroy<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> *>

; 847  : 			_STD addressof(_Left(_Pnode)));
; 848  : 		_Getal().destroy(

  00033	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00036	51		 push	 ecx
  00037	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Parent
  0003c	83 c4 04	 add	 esp, 4
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> *>
  00045	83 c4 04	 add	 esp, 4
  00048	50		 push	 eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Getal
  00051	8b c8		 mov	 ecx, eax
  00053	e8 00 00 00 00	 call	 ??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >::destroy<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> *>

; 849  : 			_STD addressof(_Parent(_Pnode)));
; 850  : 		_Getal().destroy(

  00058	8b 55 08	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0005b	52		 push	 edx
  0005c	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Right
  00061	83 c4 04	 add	 esp, 4
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> *>
  0006a	83 c4 04	 add	 esp, 4
  0006d	50		 push	 eax
  0006e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Getal
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >::destroy<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> *>

; 851  : 			_STD addressof(_Right(_Pnode)));
; 852  : 		_Getal().deallocate(_Pnode, 1);

  0007d	6a 01		 push	 1
  0007f	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00082	50		 push	 eax
  00083	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Getal
  0008b	8b c8		 mov	 ecx, eax
  0008d	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >::deallocate

; 853  : 		}

  00092	83 c4 04	 add	 esp, 4
  00095	3b ec		 cmp	 ebp, esp
  00097	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c2 04 00	 ret	 4
?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Freeheadnode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Free_proxy, COMDAT
; _this$ = ecx

; 788  : 		{	// destroy proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000e	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00011	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00014	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00017	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 789  : 		typename _Alty::template rebind<_Container_proxy>::other
; 790  : 			_Alproxy(_Getal());

  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Getal
  00022	50		 push	 eax
  00023	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00026	e8 00 00 00 00	 call	 ??$?0U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > > >

; 791  : 		_Orphan_all();

  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Orphan_all

; 792  : 		_Alproxy.destroy(_Myproxy());

  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Myproxy
  0003b	8b 00		 mov	 eax, DWORD PTR [eax]
  0003d	50		 push	 eax
  0003e	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00041	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 793  : 		_Alproxy.deallocate(_Myproxy(), 1);

  00046	6a 01		 push	 1
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Myproxy
  00050	8b 08		 mov	 ecx, DWORD PTR [eax]
  00052	51		 push	 ecx
  00053	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00056	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate

; 794  : 		_Myproxy() = 0;

  0005b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	e8 00 00 00 00	 call	 ?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Myproxy
  00063	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 795  : 		}

  00069	52		 push	 edx
  0006a	8b cd		 mov	 ecx, ebp
  0006c	50		 push	 eax
  0006d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00073	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00078	58		 pop	 eax
  00079	5a		 pop	 edx
  0007a	83 c4 10	 add	 esp, 16			; 00000010H
  0007d	3b ec		 cmp	 ebp, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
$LN5@Free_proxy:
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  00090	f7 ff ff ff	 DD	 -9			; fffffff7H
  00094	01 00 00 00	 DD	 1
  00098	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  0009c	5f		 DB	 95			; 0000005fH
  0009d	41		 DB	 65			; 00000041H
  0009e	6c		 DB	 108			; 0000006cH
  0009f	70		 DB	 112			; 00000070H
  000a0	72		 DB	 114			; 00000072H
  000a1	6f		 DB	 111			; 0000006fH
  000a2	78		 DB	 120			; 00000078H
  000a3	79		 DB	 121			; 00000079H
  000a4	00		 DB	 0
?_Free_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z
_TEXT	SEGMENT
$T2 = -18						; size = 1
$T3 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >, COMDAT
; _this$ = ecx

; 703  : 		{	// construct from comparator, allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001b	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00027	33 c5		 xor	 eax, ebp
  00029	50		 push	 eax
  0002a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00033	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 701  : 		: _Mypair(_One_then_variadic_args_t(), _Parg,

  00036	8b 45 0c	 mov	 eax, DWORD PTR __Al$[ebp]
  00039	50		 push	 eax
  0003a	8d 4d ef	 lea	 ecx, DWORD PTR $T3[ebp]
  0003d	51		 push	 ecx
  0003e	8b 55 08	 mov	 edx, DWORD PTR __Parg$[ebp]
  00041	52		 push	 edx
  00042	0f b6 45 ee	 movzx	 eax, BYTE PTR $T2[ebp]
  00046	50		 push	 eax
  00047	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ??$?0ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAU21@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_One_then_variadic_args_t,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > const &>
  0004f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 704  : 		_Construct();

  00056	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Construct

; 705  : 		}

  0005e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00065	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00068	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00072	59		 pop	 ecx
  00073	83 c4 14	 add	 esp, 20			; 00000014H
  00076	3b ec		 cmp	 ebp, esp
  00078	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@$00@2@$00@std@@QAE@XZ
__ehhandler$??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::clear, COMDAT
; _this$ = ecx

; 1472 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1473 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1474 : 		this->_Orphan_ptr(0);

  0002e	6a 00		 push	 0
  00030	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Orphan_ptr

; 1475 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1476 : 
; 1477 : 		_Erase(_Root());

  00038	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Root
  00040	8b 00		 mov	 eax, DWORD PTR [eax]
  00042	50		 push	 eax
  00043	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Erase

; 1478 : 		_Root() = this->_Myhead();

  0004b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Myhead
  00053	8b f0		 mov	 esi, eax
  00055	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Root
  0005d	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005f	89 08		 mov	 DWORD PTR [eax], ecx

; 1479 : 		_Lmost() = this->_Myhead();

  00061	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Myhead
  00069	8b f0		 mov	 esi, eax
  0006b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Lmost
  00073	8b 16		 mov	 edx, DWORD PTR [esi]
  00075	89 10		 mov	 DWORD PTR [eax], edx

; 1480 : 		_Rmost() = this->_Myhead();

  00077	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	e8 00 00 00 00	 call	 ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Myhead
  0007f	8b f0		 mov	 esi, eax
  00081	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Rmost
  00089	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0008b	89 08		 mov	 DWORD PTR [eax], ecx

; 1481 : 		this->_Mysize() = 0;

  0008d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	e8 00 00 00 00	 call	 ?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Mysize
  00095	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1482 : 		}

  0009b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a5	59		 pop	 ecx
  000a6	5e		 pop	 esi
  000a7	83 c4 10	 add	 esp, 16			; 00000010H
  000aa	3b ec		 cmp	 ebp, esp
  000ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::clear
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv434 = -48						; size = 4
tv204 = -44						; size = 4
tv192 = -40						; size = 4
$T2 = -36						; size = 4
__Pnode$ = -32						; size = 4
__Fixnodeparent$ = -28					; size = 4
__Fixnode$ = -24					; size = 4
__Erasednode$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1263 : 		{	// erase element at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 d0	 mov	 DWORD PTR [ebp-48], eax
  0001d	89 45 d4	 mov	 DWORD PTR [ebp-44], eax
  00020	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  00023	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00026	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00029	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0002c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0002f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00032	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0003a	33 c5		 xor	 eax, ebp
  0003c	50		 push	 eax
  0003d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00040	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00046	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00049	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  00050	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1264 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1265 : 		if (_Where._Getcont() != &this->_Get_data()
; 1266 : 			|| this->_Isnil(_Where._Mynode()))

  00057	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0005a	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0005f	8b f0		 mov	 esi, eax
  00061	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Get_data
  00069	3b f0		 cmp	 esi, eax
  0006b	75 18		 jne	 SHORT $LN6@erase
  0006d	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00070	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,std::_Iterator_base12>::_Mynode
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Isnil
  0007b	83 c4 04	 add	 esp, 4
  0007e	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00081	85 c0		 test	 eax, eax
  00083	74 21		 je	 SHORT $LN5@erase
$LN6@erase:

; 1267 : 			_DEBUG_ERROR("map/set erase iterator outside range");

  00085	8b f4		 mov	 esi, esp
  00087	68 f3 04 00 00	 push	 1267			; 000004f3H
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@BEABFJGP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1EK@PPDBPCAN@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0009c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@erase:

; 1268 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  000a6	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  000a9	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,std::_Iterator_base12>::_Mynode
  000ae	89 45 ec	 mov	 DWORD PTR __Erasednode$[ebp], eax

; 1269 : 		++_Where;	// save successor iterator for return

  000b1	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  000b4	e8 00 00 00 00	 call	 ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::operator++

; 1270 : 		_Orphan_ptr(_Erasednode);

  000b9	8b 4d ec	 mov	 ecx, DWORD PTR __Erasednode$[ebp]
  000bc	51		 push	 ecx
  000bd	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Orphan_ptr

; 1271 : 
; 1272 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1273 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1274 : 		++_Where;	// save successor iterator for return
; 1275 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1276 : 
; 1277 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1278 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1279 : 		_Nodeptr _Pnode = _Erasednode;

  000c5	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  000c8	89 55 e0	 mov	 DWORD PTR __Pnode$[ebp], edx

; 1280 : 
; 1281 : 		if (this->_Isnil(this->_Left(_Pnode)))

  000cb	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  000ce	50		 push	 eax
  000cf	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  000d4	83 c4 04	 add	 esp, 4
  000d7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Isnil
  000df	83 c4 04	 add	 esp, 4
  000e2	0f be 10	 movsx	 edx, BYTE PTR [eax]
  000e5	85 d2		 test	 edx, edx
  000e7	74 13		 je	 SHORT $LN7@erase

; 1282 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

  000e9	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  000ec	50		 push	 eax
  000ed	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Right
  000f2	83 c4 04	 add	 esp, 4
  000f5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f7	89 4d e8	 mov	 DWORD PTR __Fixnode$[ebp], ecx
  000fa	eb 4d		 jmp	 SHORT $LN8@erase
$LN7@erase:

; 1283 : 		else if (this->_Isnil(this->_Right(_Pnode)))

  000fc	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  000ff	52		 push	 edx
  00100	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Right
  00105	83 c4 04	 add	 esp, 4
  00108	8b 00		 mov	 eax, DWORD PTR [eax]
  0010a	50		 push	 eax
  0010b	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Isnil
  00110	83 c4 04	 add	 esp, 4
  00113	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00116	85 c9		 test	 ecx, ecx
  00118	74 13		 je	 SHORT $LN9@erase

; 1284 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

  0011a	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0011d	52		 push	 edx
  0011e	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  00123	83 c4 04	 add	 esp, 4
  00126	8b 00		 mov	 eax, DWORD PTR [eax]
  00128	89 45 e8	 mov	 DWORD PTR __Fixnode$[ebp], eax

; 1285 : 		else

  0012b	eb 1c		 jmp	 SHORT $LN8@erase
$LN9@erase:

; 1286 : 			{	// two subtrees, must lift successor node to replace erased
; 1287 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

  0012d	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00130	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,std::_Iterator_base12>::_Mynode
  00135	89 45 e0	 mov	 DWORD PTR __Pnode$[ebp], eax

; 1288 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

  00138	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0013b	51		 push	 ecx
  0013c	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Right
  00141	83 c4 04	 add	 esp, 4
  00144	8b 10		 mov	 edx, DWORD PTR [eax]
  00146	89 55 e8	 mov	 DWORD PTR __Fixnode$[ebp], edx
$LN8@erase:

; 1289 : 			}
; 1290 : 
; 1291 : 		if (_Pnode == _Erasednode)

  00149	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0014c	3b 45 ec	 cmp	 eax, DWORD PTR __Erasednode$[ebp]
  0014f	0f 85 1b 01 00
	00		 jne	 $LN11@erase

; 1292 : 			{	// at most one subtree, relink it
; 1293 : 			_Fixnodeparent = this->_Parent(_Erasednode);

  00155	8b 4d ec	 mov	 ecx, DWORD PTR __Erasednode$[ebp]
  00158	51		 push	 ecx
  00159	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Parent
  0015e	83 c4 04	 add	 esp, 4
  00161	8b 10		 mov	 edx, DWORD PTR [eax]
  00163	89 55 e4	 mov	 DWORD PTR __Fixnodeparent$[ebp], edx

; 1294 : 			if (!this->_Isnil(_Fixnode))

  00166	8b 45 e8	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  00169	50		 push	 eax
  0016a	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Isnil
  0016f	83 c4 04	 add	 esp, 4
  00172	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00175	85 c9		 test	 ecx, ecx
  00177	75 11		 jne	 SHORT $LN13@erase

; 1295 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

  00179	8b 55 e8	 mov	 edx, DWORD PTR __Fixnode$[ebp]
  0017c	52		 push	 edx
  0017d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Parent
  00182	83 c4 04	 add	 esp, 4
  00185	8b 4d e4	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  00188	89 08		 mov	 DWORD PTR [eax], ecx
$LN13@erase:

; 1296 : 
; 1297 : 			if (_Root() == _Erasednode)

  0018a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0018d	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Root
  00192	8b 10		 mov	 edx, DWORD PTR [eax]
  00194	3b 55 ec	 cmp	 edx, DWORD PTR __Erasednode$[ebp]
  00197	75 0f		 jne	 SHORT $LN14@erase

; 1298 : 				_Root() = _Fixnode;	// link down from root

  00199	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0019c	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Root
  001a1	8b 4d e8	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  001a4	89 08		 mov	 DWORD PTR [eax], ecx
  001a6	eb 37		 jmp	 SHORT $LN15@erase
$LN14@erase:

; 1299 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

  001a8	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  001ab	52		 push	 edx
  001ac	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  001b1	83 c4 04	 add	 esp, 4
  001b4	8b 00		 mov	 eax, DWORD PTR [eax]
  001b6	3b 45 ec	 cmp	 eax, DWORD PTR __Erasednode$[ebp]
  001b9	75 13		 jne	 SHORT $LN16@erase

; 1300 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  001bb	8b 4d e4	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  001be	51		 push	 ecx
  001bf	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  001c4	83 c4 04	 add	 esp, 4
  001c7	8b 55 e8	 mov	 edx, DWORD PTR __Fixnode$[ebp]
  001ca	89 10		 mov	 DWORD PTR [eax], edx

; 1301 : 			else

  001cc	eb 11		 jmp	 SHORT $LN15@erase
$LN16@erase:

; 1302 : 				this->_Right(_Fixnodeparent) =

  001ce	8b 45 e4	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  001d1	50		 push	 eax
  001d2	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Right
  001d7	83 c4 04	 add	 esp, 4
  001da	8b 4d e8	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  001dd	89 08		 mov	 DWORD PTR [eax], ecx
$LN15@erase:

; 1303 : 					_Fixnode;	// link down to right
; 1304 : 
; 1305 : 			if (_Lmost() == _Erasednode)

  001df	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001e2	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Lmost
  001e7	8b 10		 mov	 edx, DWORD PTR [eax]
  001e9	3b 55 ec	 cmp	 edx, DWORD PTR __Erasednode$[ebp]
  001ec	75 37		 jne	 SHORT $LN18@erase

; 1306 : 				_Lmost() = this->_Isnil(_Fixnode)

  001ee	8b 45 e8	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  001f1	50		 push	 eax
  001f2	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Isnil
  001f7	83 c4 04	 add	 esp, 4
  001fa	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  001fd	85 c9		 test	 ecx, ecx
  001ff	74 08		 je	 SHORT $LN44@erase
  00201	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  00204	89 55 d8	 mov	 DWORD PTR tv192[ebp], edx
  00207	eb 0f		 jmp	 SHORT $LN45@erase
$LN44@erase:
  00209	8b 45 e8	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  0020c	50		 push	 eax
  0020d	e8 00 00 00 00	 call	 ?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Min
  00212	83 c4 04	 add	 esp, 4
  00215	89 45 d8	 mov	 DWORD PTR tv192[ebp], eax
$LN45@erase:
  00218	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0021b	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Lmost
  00220	8b 4d d8	 mov	 ecx, DWORD PTR tv192[ebp]
  00223	89 08		 mov	 DWORD PTR [eax], ecx
$LN18@erase:

; 1307 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1308 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree
; 1309 : 
; 1310 : 			if (_Rmost() == _Erasednode)

  00225	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00228	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Rmost
  0022d	8b 10		 mov	 edx, DWORD PTR [eax]
  0022f	3b 55 ec	 cmp	 edx, DWORD PTR __Erasednode$[ebp]
  00232	75 37		 jne	 SHORT $LN19@erase

; 1311 : 				_Rmost() = this->_Isnil(_Fixnode)

  00234	8b 45 e8	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  00237	50		 push	 eax
  00238	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Isnil
  0023d	83 c4 04	 add	 esp, 4
  00240	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00243	85 c9		 test	 ecx, ecx
  00245	74 08		 je	 SHORT $LN46@erase
  00247	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  0024a	89 55 d4	 mov	 DWORD PTR tv204[ebp], edx
  0024d	eb 0f		 jmp	 SHORT $LN47@erase
$LN46@erase:
  0024f	8b 45 e8	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  00252	50		 push	 eax
  00253	e8 00 00 00 00	 call	 ?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Max
  00258	83 c4 04	 add	 esp, 4
  0025b	89 45 d4	 mov	 DWORD PTR tv204[ebp], eax
$LN47@erase:
  0025e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00261	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Rmost
  00266	8b 4d d4	 mov	 ecx, DWORD PTR tv204[ebp]
  00269	89 08		 mov	 DWORD PTR [eax], ecx
$LN19@erase:

; 1312 : 					? _Fixnodeparent	// largest is parent of erased node
; 1313 : 					: this->_Max(_Fixnode);	// largest in relinked subtree
; 1314 : 			}
; 1315 : 		else

  0026b	e9 8e 01 00 00	 jmp	 $LN12@erase
$LN11@erase:

; 1316 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1317 : 			this->_Parent(this->_Left(_Erasednode)) =

  00270	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  00273	52		 push	 edx
  00274	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  00279	83 c4 04	 add	 esp, 4
  0027c	8b 00		 mov	 eax, DWORD PTR [eax]
  0027e	50		 push	 eax
  0027f	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Parent
  00284	83 c4 04	 add	 esp, 4
  00287	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0028a	89 08		 mov	 DWORD PTR [eax], ecx

; 1318 : 				_Pnode;	// link left up
; 1319 : 			this->_Left(_Pnode) =

  0028c	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  0028f	52		 push	 edx
  00290	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  00295	83 c4 04	 add	 esp, 4
  00298	8b f0		 mov	 esi, eax
  0029a	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0029d	50		 push	 eax
  0029e	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  002a3	83 c4 04	 add	 esp, 4
  002a6	8b 0e		 mov	 ecx, DWORD PTR [esi]
  002a8	89 08		 mov	 DWORD PTR [eax], ecx

; 1320 : 				this->_Left(_Erasednode);	// link successor down
; 1321 : 
; 1322 : 			if (_Pnode == this->_Right(_Erasednode))

  002aa	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  002ad	52		 push	 edx
  002ae	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Right
  002b3	83 c4 04	 add	 esp, 4
  002b6	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  002b9	3b 08		 cmp	 ecx, DWORD PTR [eax]
  002bb	75 0b		 jne	 SHORT $LN20@erase

; 1323 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  002bd	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  002c0	89 55 e4	 mov	 DWORD PTR __Fixnodeparent$[ebp], edx

; 1324 : 			else

  002c3	e9 80 00 00 00	 jmp	 $LN21@erase
$LN20@erase:

; 1325 : 				{	// successor further down, link in place of erased
; 1326 : 				_Fixnodeparent =

  002c8	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  002cb	50		 push	 eax
  002cc	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Parent
  002d1	83 c4 04	 add	 esp, 4
  002d4	8b 08		 mov	 ecx, DWORD PTR [eax]
  002d6	89 4d e4	 mov	 DWORD PTR __Fixnodeparent$[ebp], ecx

; 1327 : 					this->_Parent(_Pnode);	// parent is successor's
; 1328 : 				if (!this->_Isnil(_Fixnode))

  002d9	8b 55 e8	 mov	 edx, DWORD PTR __Fixnode$[ebp]
  002dc	52		 push	 edx
  002dd	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Isnil
  002e2	83 c4 04	 add	 esp, 4
  002e5	0f be 00	 movsx	 eax, BYTE PTR [eax]
  002e8	85 c0		 test	 eax, eax
  002ea	75 11		 jne	 SHORT $LN22@erase

; 1329 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  002ec	8b 4d e8	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  002ef	51		 push	 ecx
  002f0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Parent
  002f5	83 c4 04	 add	 esp, 4
  002f8	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  002fb	89 10		 mov	 DWORD PTR [eax], edx
$LN22@erase:

; 1330 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  002fd	8b 45 e4	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00300	50		 push	 eax
  00301	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  00306	83 c4 04	 add	 esp, 4
  00309	8b 4d e8	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  0030c	89 08		 mov	 DWORD PTR [eax], ecx

; 1331 : 				this->_Right(_Pnode) =

  0030e	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  00311	52		 push	 edx
  00312	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Right
  00317	83 c4 04	 add	 esp, 4
  0031a	8b f0		 mov	 esi, eax
  0031c	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0031f	50		 push	 eax
  00320	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Right
  00325	83 c4 04	 add	 esp, 4
  00328	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0032a	89 08		 mov	 DWORD PTR [eax], ecx

; 1332 : 					this->_Right(_Erasednode);	// link next down
; 1333 : 				this->_Parent(this->_Right(_Erasednode)) =

  0032c	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  0032f	52		 push	 edx
  00330	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Right
  00335	83 c4 04	 add	 esp, 4
  00338	8b 00		 mov	 eax, DWORD PTR [eax]
  0033a	50		 push	 eax
  0033b	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Parent
  00340	83 c4 04	 add	 esp, 4
  00343	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00346	89 08		 mov	 DWORD PTR [eax], ecx
$LN21@erase:

; 1334 : 					_Pnode;	// right up
; 1335 : 				}
; 1336 : 
; 1337 : 			if (_Root() == _Erasednode)

  00348	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0034b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Root
  00350	8b 10		 mov	 edx, DWORD PTR [eax]
  00352	3b 55 ec	 cmp	 edx, DWORD PTR __Erasednode$[ebp]
  00355	75 0f		 jne	 SHORT $LN23@erase

; 1338 : 				_Root() = _Pnode;	// link down from root

  00357	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0035a	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Root
  0035f	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00362	89 08		 mov	 DWORD PTR [eax], ecx
  00364	eb 58		 jmp	 SHORT $LN24@erase
$LN23@erase:

; 1339 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

  00366	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  00369	52		 push	 edx
  0036a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Parent
  0036f	83 c4 04	 add	 esp, 4
  00372	8b 00		 mov	 eax, DWORD PTR [eax]
  00374	50		 push	 eax
  00375	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  0037a	83 c4 04	 add	 esp, 4
  0037d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0037f	3b 4d ec	 cmp	 ecx, DWORD PTR __Erasednode$[ebp]
  00382	75 1e		 jne	 SHORT $LN25@erase

; 1340 : 				this->_Left(this->_Parent(_Erasednode)) =

  00384	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  00387	52		 push	 edx
  00388	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Parent
  0038d	83 c4 04	 add	 esp, 4
  00390	8b 00		 mov	 eax, DWORD PTR [eax]
  00392	50		 push	 eax
  00393	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  00398	83 c4 04	 add	 esp, 4
  0039b	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0039e	89 08		 mov	 DWORD PTR [eax], ecx

; 1341 : 					_Pnode;	// link down to left
; 1342 : 			else

  003a0	eb 1c		 jmp	 SHORT $LN24@erase
$LN25@erase:

; 1343 : 				this->_Right(this->_Parent(_Erasednode)) =

  003a2	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  003a5	52		 push	 edx
  003a6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Parent
  003ab	83 c4 04	 add	 esp, 4
  003ae	8b 00		 mov	 eax, DWORD PTR [eax]
  003b0	50		 push	 eax
  003b1	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Right
  003b6	83 c4 04	 add	 esp, 4
  003b9	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  003bc	89 08		 mov	 DWORD PTR [eax], ecx
$LN24@erase:

; 1344 : 					_Pnode;	// link down to right
; 1345 : 
; 1346 : 			this->_Parent(_Pnode) =

  003be	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  003c1	52		 push	 edx
  003c2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Parent
  003c7	83 c4 04	 add	 esp, 4
  003ca	8b f0		 mov	 esi, eax
  003cc	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  003cf	50		 push	 eax
  003d0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Parent
  003d5	83 c4 04	 add	 esp, 4
  003d8	8b 0e		 mov	 ecx, DWORD PTR [esi]
  003da	89 08		 mov	 DWORD PTR [eax], ecx

; 1347 : 				this->_Parent(_Erasednode);	// link successor up
; 1348 : 			_STD swap(this->_Color(_Pnode),

  003dc	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  003df	52		 push	 edx
  003e0	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  003e5	83 c4 04	 add	 esp, 4
  003e8	50		 push	 eax
  003e9	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  003ec	50		 push	 eax
  003ed	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  003f2	83 c4 04	 add	 esp, 4
  003f5	50		 push	 eax
  003f6	e8 00 00 00 00	 call	 ??$swap@D@std@@YAXAAD0@Z ; std::swap<char>
  003fb	83 c4 08	 add	 esp, 8
$LN12@erase:

; 1349 : 				this->_Color(_Erasednode));	// recolor it
; 1350 : 			}
; 1351 : 
; 1352 : 		if (this->_Color(_Erasednode) == this->_Black)

  003fe	8b 4d ec	 mov	 ecx, DWORD PTR __Erasednode$[ebp]
  00401	51		 push	 ecx
  00402	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  00407	83 c4 04	 add	 esp, 4
  0040a	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0040d	83 fa 01	 cmp	 edx, 1
  00410	0f 85 8f 03 00
	00		 jne	 $LN27@erase

; 1353 : 			{	// erasing black link, must recolor/rebalance tree
; 1354 : 			for (; _Fixnode != _Root()

  00416	eb 11		 jmp	 SHORT $LN4@erase
$LN2@erase:

; 1356 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  00418	8b 45 e8	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  0041b	50		 push	 eax
  0041c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Parent
  00421	83 c4 04	 add	 esp, 4
  00424	8b 08		 mov	 ecx, DWORD PTR [eax]
  00426	89 4d e4	 mov	 DWORD PTR __Fixnodeparent$[ebp], ecx
$LN4@erase:

; 1355 : 				&& this->_Color(_Fixnode) == this->_Black;

  00429	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0042c	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Root
  00431	8b 55 e8	 mov	 edx, DWORD PTR __Fixnode$[ebp]
  00434	3b 10		 cmp	 edx, DWORD PTR [eax]
  00436	0f 84 5a 03 00
	00		 je	 $LN3@erase
  0043c	8b 45 e8	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  0043f	50		 push	 eax
  00440	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  00445	83 c4 04	 add	 esp, 4
  00448	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0044b	83 f9 01	 cmp	 ecx, 1
  0044e	0f 85 42 03 00
	00		 jne	 $LN3@erase

; 1357 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

  00454	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  00457	52		 push	 edx
  00458	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  0045d	83 c4 04	 add	 esp, 4
  00460	8b 4d e8	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  00463	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00465	0f 85 97 01 00
	00		 jne	 $LN28@erase

; 1358 : 					{	// fixup left subtree
; 1359 : 					_Pnode = this->_Right(_Fixnodeparent);

  0046b	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  0046e	52		 push	 edx
  0046f	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Right
  00474	83 c4 04	 add	 esp, 4
  00477	8b 00		 mov	 eax, DWORD PTR [eax]
  00479	89 45 e0	 mov	 DWORD PTR __Pnode$[ebp], eax

; 1360 : 					if (this->_Color(_Pnode) == this->_Red)

  0047c	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0047f	51		 push	 ecx
  00480	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  00485	83 c4 04	 add	 esp, 4
  00488	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0048b	85 d2		 test	 edx, edx
  0048d	75 3b		 jne	 SHORT $LN30@erase

; 1361 : 						{	// rotate red up from right subtree
; 1362 : 						this->_Color(_Pnode) = this->_Black;

  0048f	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00492	50		 push	 eax
  00493	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  00498	83 c4 04	 add	 esp, 4
  0049b	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1363 : 						this->_Color(_Fixnodeparent) = this->_Red;

  0049e	8b 4d e4	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  004a1	51		 push	 ecx
  004a2	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  004a7	83 c4 04	 add	 esp, 4
  004aa	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1364 : 						_Lrotate(_Fixnodeparent);

  004ad	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  004b0	52		 push	 edx
  004b1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  004b4	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Lrotate

; 1365 : 						_Pnode = this->_Right(_Fixnodeparent);

  004b9	8b 45 e4	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  004bc	50		 push	 eax
  004bd	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Right
  004c2	83 c4 04	 add	 esp, 4
  004c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  004c7	89 4d e0	 mov	 DWORD PTR __Pnode$[ebp], ecx
$LN30@erase:

; 1366 : 						}
; 1367 : 
; 1368 : 					if (this->_Isnil(_Pnode))

  004ca	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  004cd	52		 push	 edx
  004ce	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Isnil
  004d3	83 c4 04	 add	 esp, 4
  004d6	0f be 00	 movsx	 eax, BYTE PTR [eax]
  004d9	85 c0		 test	 eax, eax
  004db	74 0b		 je	 SHORT $LN31@erase

; 1369 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

  004dd	8b 4d e4	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  004e0	89 4d e8	 mov	 DWORD PTR __Fixnode$[ebp], ecx

; 1370 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

  004e3	e9 15 01 00 00	 jmp	 $LN32@erase
$LN31@erase:

; 1371 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

  004e8	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  004eb	52		 push	 edx
  004ec	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  004f1	83 c4 04	 add	 esp, 4
  004f4	8b 00		 mov	 eax, DWORD PTR [eax]
  004f6	50		 push	 eax
  004f7	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  004fc	83 c4 04	 add	 esp, 4
  004ff	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00502	83 f9 01	 cmp	 ecx, 1
  00505	75 39		 jne	 SHORT $LN33@erase
  00507	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0050a	52		 push	 edx
  0050b	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Right
  00510	83 c4 04	 add	 esp, 4
  00513	8b 00		 mov	 eax, DWORD PTR [eax]
  00515	50		 push	 eax
  00516	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  0051b	83 c4 04	 add	 esp, 4
  0051e	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00521	83 f9 01	 cmp	 ecx, 1
  00524	75 1a		 jne	 SHORT $LN33@erase

; 1372 : 						{	// redden right subtree with black children
; 1373 : 						this->_Color(_Pnode) = this->_Red;

  00526	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00529	52		 push	 edx
  0052a	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  0052f	83 c4 04	 add	 esp, 4
  00532	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1374 : 						_Fixnode = _Fixnodeparent;

  00535	8b 45 e4	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00538	89 45 e8	 mov	 DWORD PTR __Fixnode$[ebp], eax

; 1375 : 						}
; 1376 : 					else

  0053b	e9 bd 00 00 00	 jmp	 $LN32@erase
$LN33@erase:

; 1377 : 						{	// must rearrange right subtree
; 1378 : 						if (this->_Color(this->_Right(_Pnode))
; 1379 : 							== this->_Black)

  00540	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00543	51		 push	 ecx
  00544	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Right
  00549	83 c4 04	 add	 esp, 4
  0054c	8b 10		 mov	 edx, DWORD PTR [eax]
  0054e	52		 push	 edx
  0054f	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  00554	83 c4 04	 add	 esp, 4
  00557	0f be 00	 movsx	 eax, BYTE PTR [eax]
  0055a	83 f8 01	 cmp	 eax, 1
  0055d	75 46		 jne	 SHORT $LN35@erase

; 1380 : 							{	// rotate red up from left sub-subtree
; 1381 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

  0055f	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00562	51		 push	 ecx
  00563	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  00568	83 c4 04	 add	 esp, 4
  0056b	8b 10		 mov	 edx, DWORD PTR [eax]
  0056d	52		 push	 edx
  0056e	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  00573	83 c4 04	 add	 esp, 4
  00576	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1382 : 							this->_Color(_Pnode) = this->_Red;

  00579	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0057c	50		 push	 eax
  0057d	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  00582	83 c4 04	 add	 esp, 4
  00585	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1383 : 							_Rrotate(_Pnode);

  00588	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0058b	51		 push	 ecx
  0058c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0058f	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Rrotate

; 1384 : 							_Pnode = this->_Right(_Fixnodeparent);

  00594	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  00597	52		 push	 edx
  00598	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Right
  0059d	83 c4 04	 add	 esp, 4
  005a0	8b 00		 mov	 eax, DWORD PTR [eax]
  005a2	89 45 e0	 mov	 DWORD PTR __Pnode$[ebp], eax
$LN35@erase:

; 1385 : 							}
; 1386 : 
; 1387 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  005a5	8b 4d e4	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  005a8	51		 push	 ecx
  005a9	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  005ae	83 c4 04	 add	 esp, 4
  005b1	8b f0		 mov	 esi, eax
  005b3	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  005b6	52		 push	 edx
  005b7	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  005bc	83 c4 04	 add	 esp, 4
  005bf	8a 0e		 mov	 cl, BYTE PTR [esi]
  005c1	88 08		 mov	 BYTE PTR [eax], cl

; 1388 : 						this->_Color(_Fixnodeparent) = this->_Black;

  005c3	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  005c6	52		 push	 edx
  005c7	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  005cc	83 c4 04	 add	 esp, 4
  005cf	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1389 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;

  005d2	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  005d5	50		 push	 eax
  005d6	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Right
  005db	83 c4 04	 add	 esp, 4
  005de	8b 08		 mov	 ecx, DWORD PTR [eax]
  005e0	51		 push	 ecx
  005e1	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  005e6	83 c4 04	 add	 esp, 4
  005e9	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1390 : 						_Lrotate(_Fixnodeparent);

  005ec	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  005ef	52		 push	 edx
  005f0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  005f3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Lrotate

; 1391 : 						break;	// tree now recolored/rebalanced

  005f8	e9 99 01 00 00	 jmp	 $LN3@erase
$LN32@erase:

; 1392 : 						}
; 1393 : 					}
; 1394 : 				else

  005fd	e9 8f 01 00 00	 jmp	 $LN29@erase
$LN28@erase:

; 1395 : 					{	// fixup right subtree
; 1396 : 					_Pnode = this->_Left(_Fixnodeparent);

  00602	8b 45 e4	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00605	50		 push	 eax
  00606	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  0060b	83 c4 04	 add	 esp, 4
  0060e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00610	89 4d e0	 mov	 DWORD PTR __Pnode$[ebp], ecx

; 1397 : 					if (this->_Color(_Pnode) == this->_Red)

  00613	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00616	52		 push	 edx
  00617	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  0061c	83 c4 04	 add	 esp, 4
  0061f	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00622	85 c0		 test	 eax, eax
  00624	75 3b		 jne	 SHORT $LN36@erase

; 1398 : 						{	// rotate red up from left subtree
; 1399 : 						this->_Color(_Pnode) = this->_Black;

  00626	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00629	51		 push	 ecx
  0062a	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  0062f	83 c4 04	 add	 esp, 4
  00632	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1400 : 						this->_Color(_Fixnodeparent) = this->_Red;

  00635	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  00638	52		 push	 edx
  00639	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  0063e	83 c4 04	 add	 esp, 4
  00641	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1401 : 						_Rrotate(_Fixnodeparent);

  00644	8b 45 e4	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00647	50		 push	 eax
  00648	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0064b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Rrotate

; 1402 : 						_Pnode = this->_Left(_Fixnodeparent);

  00650	8b 4d e4	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  00653	51		 push	 ecx
  00654	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  00659	83 c4 04	 add	 esp, 4
  0065c	8b 10		 mov	 edx, DWORD PTR [eax]
  0065e	89 55 e0	 mov	 DWORD PTR __Pnode$[ebp], edx
$LN36@erase:

; 1403 : 						}
; 1404 : 
; 1405 : 					if (this->_Isnil(_Pnode))

  00661	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00664	50		 push	 eax
  00665	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Isnil
  0066a	83 c4 04	 add	 esp, 4
  0066d	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00670	85 c9		 test	 ecx, ecx
  00672	74 0b		 je	 SHORT $LN37@erase

; 1406 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

  00674	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  00677	89 55 e8	 mov	 DWORD PTR __Fixnode$[ebp], edx

; 1407 : 					else if (this->_Color(this->_Right(_Pnode)) ==

  0067a	e9 12 01 00 00	 jmp	 $LN29@erase
$LN37@erase:

; 1408 : 						this->_Black
; 1409 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

  0067f	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00682	50		 push	 eax
  00683	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Right
  00688	83 c4 04	 add	 esp, 4
  0068b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0068d	51		 push	 ecx
  0068e	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  00693	83 c4 04	 add	 esp, 4
  00696	0f be 10	 movsx	 edx, BYTE PTR [eax]
  00699	83 fa 01	 cmp	 edx, 1
  0069c	75 39		 jne	 SHORT $LN39@erase
  0069e	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  006a1	50		 push	 eax
  006a2	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  006a7	83 c4 04	 add	 esp, 4
  006aa	8b 08		 mov	 ecx, DWORD PTR [eax]
  006ac	51		 push	 ecx
  006ad	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  006b2	83 c4 04	 add	 esp, 4
  006b5	0f be 10	 movsx	 edx, BYTE PTR [eax]
  006b8	83 fa 01	 cmp	 edx, 1
  006bb	75 1a		 jne	 SHORT $LN39@erase

; 1410 : 						{	// redden left subtree with black children
; 1411 : 						this->_Color(_Pnode) = this->_Red;

  006bd	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  006c0	50		 push	 eax
  006c1	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  006c6	83 c4 04	 add	 esp, 4
  006c9	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1412 : 						_Fixnode = _Fixnodeparent;

  006cc	8b 4d e4	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  006cf	89 4d e8	 mov	 DWORD PTR __Fixnode$[ebp], ecx

; 1413 : 						}
; 1414 : 					else

  006d2	e9 ba 00 00 00	 jmp	 $LN29@erase
$LN39@erase:

; 1415 : 						{	// must rearrange left subtree
; 1416 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

  006d7	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  006da	52		 push	 edx
  006db	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  006e0	83 c4 04	 add	 esp, 4
  006e3	8b 00		 mov	 eax, DWORD PTR [eax]
  006e5	50		 push	 eax
  006e6	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  006eb	83 c4 04	 add	 esp, 4
  006ee	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  006f1	83 f9 01	 cmp	 ecx, 1
  006f4	75 46		 jne	 SHORT $LN41@erase

; 1417 : 							{	// rotate red up from right sub-subtree
; 1418 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

  006f6	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  006f9	52		 push	 edx
  006fa	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Right
  006ff	83 c4 04	 add	 esp, 4
  00702	8b 00		 mov	 eax, DWORD PTR [eax]
  00704	50		 push	 eax
  00705	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  0070a	83 c4 04	 add	 esp, 4
  0070d	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1419 : 							this->_Color(_Pnode) = this->_Red;

  00710	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00713	51		 push	 ecx
  00714	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  00719	83 c4 04	 add	 esp, 4
  0071c	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1420 : 							_Lrotate(_Pnode);

  0071f	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00722	52		 push	 edx
  00723	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00726	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Lrotate

; 1421 : 							_Pnode = this->_Left(_Fixnodeparent);

  0072b	8b 45 e4	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  0072e	50		 push	 eax
  0072f	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  00734	83 c4 04	 add	 esp, 4
  00737	8b 08		 mov	 ecx, DWORD PTR [eax]
  00739	89 4d e0	 mov	 DWORD PTR __Pnode$[ebp], ecx
$LN41@erase:

; 1422 : 							}
; 1423 : 
; 1424 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  0073c	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  0073f	52		 push	 edx
  00740	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  00745	83 c4 04	 add	 esp, 4
  00748	8b f0		 mov	 esi, eax
  0074a	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0074d	50		 push	 eax
  0074e	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  00753	83 c4 04	 add	 esp, 4
  00756	8a 0e		 mov	 cl, BYTE PTR [esi]
  00758	88 08		 mov	 BYTE PTR [eax], cl

; 1425 : 						this->_Color(_Fixnodeparent) = this->_Black;

  0075a	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  0075d	52		 push	 edx
  0075e	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  00763	83 c4 04	 add	 esp, 4
  00766	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1426 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;

  00769	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0076c	50		 push	 eax
  0076d	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  00772	83 c4 04	 add	 esp, 4
  00775	8b 08		 mov	 ecx, DWORD PTR [eax]
  00777	51		 push	 ecx
  00778	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  0077d	83 c4 04	 add	 esp, 4
  00780	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1427 : 						_Rrotate(_Fixnodeparent);

  00783	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  00786	52		 push	 edx
  00787	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0078a	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Rrotate

; 1428 : 						break;	// tree now recolored/rebalanced

  0078f	eb 05		 jmp	 SHORT $LN3@erase
$LN29@erase:

; 1429 : 						}
; 1430 : 					}

  00791	e9 82 fc ff ff	 jmp	 $LN2@erase
$LN3@erase:

; 1431 : 
; 1432 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

  00796	8b 45 e8	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  00799	50		 push	 eax
  0079a	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  0079f	83 c4 04	 add	 esp, 4
  007a2	c6 00 01	 mov	 BYTE PTR [eax], 1
$LN27@erase:

; 1433 : 			}
; 1434 : 
; 1435 : 		this->_Getal().destroy(

  007a5	8b 4d ec	 mov	 ecx, DWORD PTR __Erasednode$[ebp]
  007a8	51		 push	 ecx
  007a9	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Myval
  007ae	83 c4 04	 add	 esp, 4
  007b1	50		 push	 eax
  007b2	e8 00 00 00 00	 call	 ??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@0@AAU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >
  007b7	83 c4 04	 add	 esp, 4
  007ba	50		 push	 eax
  007bb	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  007be	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Getal
  007c3	8b c8		 mov	 ecx, eax
  007c5	e8 00 00 00 00	 call	 ??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >

; 1436 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node
; 1437 : 
; 1438 : 		this->_Getal().deallocate(_Erasednode, 1);

  007ca	6a 01		 push	 1
  007cc	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  007cf	52		 push	 edx
  007d0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  007d3	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Getal
  007d8	8b c8		 mov	 ecx, eax
  007da	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >::deallocate

; 1439 : 
; 1440 : 		if (0 < this->_Mysize())

  007df	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  007e2	e8 00 00 00 00	 call	 ?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Mysize
  007e7	83 38 00	 cmp	 DWORD PTR [eax], 0
  007ea	76 18		 jbe	 SHORT $LN42@erase

; 1441 : 			--this->_Mysize();

  007ec	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  007ef	e8 00 00 00 00	 call	 ?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Mysize
  007f4	89 45 d0	 mov	 DWORD PTR tv434[ebp], eax
  007f7	8b 45 d0	 mov	 eax, DWORD PTR tv434[ebp]
  007fa	8b 08		 mov	 ecx, DWORD PTR [eax]
  007fc	83 e9 01	 sub	 ecx, 1
  007ff	8b 55 d0	 mov	 edx, DWORD PTR tv434[ebp]
  00802	89 0a		 mov	 DWORD PTR [edx], ecx
$LN42@erase:

; 1442 : 
; 1443 : 		return (iterator(_Where._Ptr,

  00804	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00807	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Get_data
  0080c	50		 push	 eax
  0080d	8b 45 14	 mov	 eax, DWORD PTR __Where$[ebp+8]
  00810	50		 push	 eax
  00811	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00814	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >
  00819	8b 4d dc	 mov	 ecx, DWORD PTR $T2[ebp]
  0081c	83 c9 01	 or	 ecx, 1
  0081f	89 4d dc	 mov	 DWORD PTR $T2[ebp], ecx
  00822	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00829	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0082c	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  00831	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1444 : 			&this->_Get_data()));	// return successor iterator
; 1445 : 		}

  00834	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00837	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0083e	59		 pop	 ecx
  0083f	5e		 pop	 esi
  00840	83 c4 30	 add	 esp, 48			; 00000030H
  00843	3b ec		 cmp	 ebp, esp
  00845	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0084a	8b e5		 mov	 esp, ebp
  0084c	5d		 pop	 ebp
  0084d	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@@Z$0:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::erase
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reallocate@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z PROC ; std::vector<Mesh *,std::allocator<Mesh *> >::_Reallocate, COMDAT
; _this$ = ecx

; 1620 : 		{	// move to array of exactly _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	c7 45 e4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-28], -858993460 ; ccccccccH
  0001f	c7 45 e8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-24], -858993460 ; ccccccccH
  00026	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00041	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1621 : 		pointer _Ptr = this->_Getal().allocate(_Count);

  00044	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00047	50		 push	 eax
  00048	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Getal
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@QAEPAPAVMesh@@I@Z ; std::_Wrap_alloc<std::allocator<Mesh *> >::allocate
  00057	89 45 e8	 mov	 DWORD PTR __Ptr$[ebp], eax

; 1622 : 
; 1623 : 		_TRY_BEGIN

  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 1624 : 		_Umove(this->_Myfirst(), this->_Mylast(), _Ptr);

  00061	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00064	51		 push	 ecx
  00065	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Mylast
  0006d	8b 10		 mov	 edx, DWORD PTR [eax]
  0006f	52		 push	 edx
  00070	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Myfirst
  00078	8b 00		 mov	 eax, DWORD PTR [eax]
  0007a	50		 push	 eax
  0007b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	e8 00 00 00 00	 call	 ??$_Umove@PAPAVMesh@@@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEPAPAVMesh@@PAPAV2@00@Z ; std::vector<Mesh *,std::allocator<Mesh *> >::_Umove<Mesh * *>
  00083	eb 26		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z$0:

; 1625 : 		_CATCH_ALL
; 1626 : 		this->_Getal().deallocate(_Ptr, _Count);

  00085	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00088	51		 push	 ecx
  00089	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0008c	52		 push	 edx
  0008d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Getal
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@QAEXPAPAVMesh@@I@Z ; std::_Wrap_alloc<std::allocator<Mesh *> >::deallocate

; 1627 : 		_RERAISE;

  0009c	6a 00		 push	 0
  0009e	6a 00		 push	 0
  000a0	e8 00 00 00 00	 call	 __CxxThrowException@8

; 1628 : 		_CATCH_END

  000a5	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000aa	c3		 ret	 0
$LN5@Reallocate:
  000ab	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000b2	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000b4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z$1:

; 1629 : 
; 1630 : 		size_type _Size = size();

  000bb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	e8 00 00 00 00	 call	 ?size@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QBEIXZ ; std::vector<Mesh *,std::allocator<Mesh *> >::size
  000c3	89 45 e4	 mov	 DWORD PTR __Size$[ebp], eax

; 1631 : 		if (this->_Myfirst() != pointer())

  000c6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c9	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Myfirst
  000ce	83 38 00	 cmp	 DWORD PTR [eax], 0
  000d1	74 52		 je	 SHORT $LN3@Reallocate

; 1632 : 			{	// destroy and deallocate old array
; 1633 : 			_Destroy(this->_Myfirst(), this->_Mylast());

  000d3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d6	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Mylast
  000db	8b 00		 mov	 eax, DWORD PTR [eax]
  000dd	50		 push	 eax
  000de	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Myfirst
  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	51		 push	 ecx
  000e9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ec	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXPAPAVMesh@@0@Z ; std::vector<Mesh *,std::allocator<Mesh *> >::_Destroy

; 1634 : 			this->_Getal().deallocate(this->_Myfirst(),

  000f1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f4	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Myfirst
  000f9	8b f0		 mov	 esi, eax
  000fb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000fe	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Myend
  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	2b 16		 sub	 edx, DWORD PTR [esi]
  00107	c1 fa 02	 sar	 edx, 2
  0010a	52		 push	 edx
  0010b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Myfirst
  00113	8b 00		 mov	 eax, DWORD PTR [eax]
  00115	50		 push	 eax
  00116	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Getal
  0011e	8b c8		 mov	 ecx, eax
  00120	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@QAEXPAPAVMesh@@I@Z ; std::_Wrap_alloc<std::allocator<Mesh *> >::deallocate
$LN3@Reallocate:

; 1635 : 				this->_Myend() - this->_Myfirst());
; 1636 : 			}
; 1637 : 
; 1638 : 		this->_Orphan_all();

  00125	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00128	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Orphan_all

; 1639 : 		this->_Myend() = _Ptr + _Count;

  0012d	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00130	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00133	8d 34 8a	 lea	 esi, DWORD PTR [edx+ecx*4]
  00136	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00139	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Myend
  0013e	89 30		 mov	 DWORD PTR [eax], esi

; 1640 : 		this->_Mylast() = _Ptr + _Size;

  00140	8b 45 e4	 mov	 eax, DWORD PTR __Size$[ebp]
  00143	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00146	8d 34 81	 lea	 esi, DWORD PTR [ecx+eax*4]
  00149	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0014c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Mylast
  00151	89 30		 mov	 DWORD PTR [eax], esi

; 1641 : 		this->_Myfirst() = _Ptr;

  00153	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00156	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAPAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Myfirst
  0015b	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0015e	89 10		 mov	 DWORD PTR [eax], edx
$LN4@Reallocate:

; 1642 : 		}

  00160	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00163	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0016a	59		 pop	 ecx
  0016b	5f		 pop	 edi
  0016c	5e		 pop	 esi
  0016d	5b		 pop	 ebx
  0016e	83 c4 1c	 add	 esp, 28			; 0000001cH
  00171	3b ec		 cmp	 ebp, esp
  00173	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00178	8b e5		 mov	 esp, ebp
  0017a	5d		 pop	 ebp
  0017b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEXI@Z ENDP ; std::vector<Mesh *,std::allocator<Mesh *> >::_Reallocate
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBEII@Z PROC ; std::vector<Mesh *,std::allocator<Mesh *> >::_Grow_to, COMDAT
; _this$ = ecx

; 1604 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1605 : 		size_type _Capacity = capacity();

  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?capacity@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QBEIXZ ; std::vector<Mesh *,std::allocator<Mesh *> >::capacity
  00026	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax

; 1606 : 
; 1607 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?max_size@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QBEIXZ ; std::vector<Mesh *,std::allocator<Mesh *> >::max_size
  00031	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00034	d1 e9		 shr	 ecx, 1
  00036	2b c1		 sub	 eax, ecx
  00038	3b 45 f8	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  0003b	73 09		 jae	 SHORT $LN4@Grow_to
  0003d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
  00044	eb 0b		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00046	8b 55 f8	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00049	d1 ea		 shr	 edx, 1
  0004b	03 55 f8	 add	 edx, DWORD PTR __Capacity$[ebp]
  0004e	89 55 f4	 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  00051	8b 45 f4	 mov	 eax, DWORD PTR tv73[ebp]
  00054	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax

; 1608 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%
; 1609 : 		if (_Capacity < _Count)

  00057	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  0005a	3b 4d 08	 cmp	 ecx, DWORD PTR __Count$[ebp]
  0005d	73 06		 jae	 SHORT $LN2@Grow_to

; 1610 : 			_Capacity = _Count;

  0005f	8b 55 08	 mov	 edx, DWORD PTR __Count$[ebp]
  00062	89 55 f8	 mov	 DWORD PTR __Capacity$[ebp], edx
$LN2@Grow_to:

; 1611 : 		return (_Capacity);

  00065	8b 45 f8	 mov	 eax, DWORD PTR __Capacity$[ebp]

; 1612 : 		}

  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?_Grow_to@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IBEII@Z ENDP ; std::vector<Mesh *,std::allocator<Mesh *> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Unused_capacity@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QBEIXZ PROC ; std::vector<Mesh *,std::allocator<Mesh *> >::_Unused_capacity, COMDAT
; _this$ = ecx

; 1046 : 		{	// micro-optimization for capacity() - size()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1047 : 		return (this->_Myend() - this->_Mylast());

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QBEABQAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Myend
  00017	8b f0		 mov	 esi, eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QBEABQAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Mylast
  00021	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00023	2b 08		 sub	 ecx, DWORD PTR [eax]
  00025	c1 f9 02	 sar	 ecx, 2
  00028	8b c1		 mov	 eax, ecx

; 1048 : 		}

  0002a	5e		 pop	 esi
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?_Unused_capacity@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QBEIXZ ENDP ; std::vector<Mesh *,std::allocator<Mesh *> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reallocate@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z PROC ; std::vector<Material *,std::allocator<Material *> >::_Reallocate, COMDAT
; _this$ = ecx

; 1620 : 		{	// move to array of exactly _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	c7 45 e4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-28], -858993460 ; ccccccccH
  0001f	c7 45 e8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-24], -858993460 ; ccccccccH
  00026	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00041	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1621 : 		pointer _Ptr = this->_Getal().allocate(_Count);

  00044	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00047	50		 push	 eax
  00048	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Getal
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@QAEPAPAVMaterial@@I@Z ; std::_Wrap_alloc<std::allocator<Material *> >::allocate
  00057	89 45 e8	 mov	 DWORD PTR __Ptr$[ebp], eax

; 1622 : 
; 1623 : 		_TRY_BEGIN

  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 1624 : 		_Umove(this->_Myfirst(), this->_Mylast(), _Ptr);

  00061	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00064	51		 push	 ecx
  00065	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Mylast
  0006d	8b 10		 mov	 edx, DWORD PTR [eax]
  0006f	52		 push	 edx
  00070	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Myfirst
  00078	8b 00		 mov	 eax, DWORD PTR [eax]
  0007a	50		 push	 eax
  0007b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	e8 00 00 00 00	 call	 ??$_Umove@PAPAVMaterial@@@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEPAPAVMaterial@@PAPAV2@00@Z ; std::vector<Material *,std::allocator<Material *> >::_Umove<Material * *>
  00083	eb 26		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z$0:

; 1625 : 		_CATCH_ALL
; 1626 : 		this->_Getal().deallocate(_Ptr, _Count);

  00085	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00088	51		 push	 ecx
  00089	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0008c	52		 push	 edx
  0008d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Getal
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@QAEXPAPAVMaterial@@I@Z ; std::_Wrap_alloc<std::allocator<Material *> >::deallocate

; 1627 : 		_RERAISE;

  0009c	6a 00		 push	 0
  0009e	6a 00		 push	 0
  000a0	e8 00 00 00 00	 call	 __CxxThrowException@8

; 1628 : 		_CATCH_END

  000a5	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000aa	c3		 ret	 0
$LN5@Reallocate:
  000ab	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000b2	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000b4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z$1:

; 1629 : 
; 1630 : 		size_type _Size = size();

  000bb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	e8 00 00 00 00	 call	 ?size@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QBEIXZ ; std::vector<Material *,std::allocator<Material *> >::size
  000c3	89 45 e4	 mov	 DWORD PTR __Size$[ebp], eax

; 1631 : 		if (this->_Myfirst() != pointer())

  000c6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c9	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Myfirst
  000ce	83 38 00	 cmp	 DWORD PTR [eax], 0
  000d1	74 52		 je	 SHORT $LN3@Reallocate

; 1632 : 			{	// destroy and deallocate old array
; 1633 : 			_Destroy(this->_Myfirst(), this->_Mylast());

  000d3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d6	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Mylast
  000db	8b 00		 mov	 eax, DWORD PTR [eax]
  000dd	50		 push	 eax
  000de	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Myfirst
  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	51		 push	 ecx
  000e9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ec	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXPAPAVMaterial@@0@Z ; std::vector<Material *,std::allocator<Material *> >::_Destroy

; 1634 : 			this->_Getal().deallocate(this->_Myfirst(),

  000f1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f4	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Myfirst
  000f9	8b f0		 mov	 esi, eax
  000fb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000fe	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Myend
  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	2b 16		 sub	 edx, DWORD PTR [esi]
  00107	c1 fa 02	 sar	 edx, 2
  0010a	52		 push	 edx
  0010b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Myfirst
  00113	8b 00		 mov	 eax, DWORD PTR [eax]
  00115	50		 push	 eax
  00116	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Getal
  0011e	8b c8		 mov	 ecx, eax
  00120	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@QAEXPAPAVMaterial@@I@Z ; std::_Wrap_alloc<std::allocator<Material *> >::deallocate
$LN3@Reallocate:

; 1635 : 				this->_Myend() - this->_Myfirst());
; 1636 : 			}
; 1637 : 
; 1638 : 		this->_Orphan_all();

  00125	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00128	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Orphan_all

; 1639 : 		this->_Myend() = _Ptr + _Count;

  0012d	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00130	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00133	8d 34 8a	 lea	 esi, DWORD PTR [edx+ecx*4]
  00136	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00139	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Myend
  0013e	89 30		 mov	 DWORD PTR [eax], esi

; 1640 : 		this->_Mylast() = _Ptr + _Size;

  00140	8b 45 e4	 mov	 eax, DWORD PTR __Size$[ebp]
  00143	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00146	8d 34 81	 lea	 esi, DWORD PTR [ecx+eax*4]
  00149	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0014c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Mylast
  00151	89 30		 mov	 DWORD PTR [eax], esi

; 1641 : 		this->_Myfirst() = _Ptr;

  00153	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00156	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAPAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Myfirst
  0015b	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0015e	89 10		 mov	 DWORD PTR [eax], edx
$LN4@Reallocate:

; 1642 : 		}

  00160	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00163	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0016a	59		 pop	 ecx
  0016b	5f		 pop	 edi
  0016c	5e		 pop	 esi
  0016d	5b		 pop	 ebx
  0016e	83 c4 1c	 add	 esp, 28			; 0000001cH
  00171	3b ec		 cmp	 ebp, esp
  00173	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00178	8b e5		 mov	 esp, ebp
  0017a	5d		 pop	 ebp
  0017b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEXI@Z ENDP ; std::vector<Material *,std::allocator<Material *> >::_Reallocate
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBEII@Z PROC ; std::vector<Material *,std::allocator<Material *> >::_Grow_to, COMDAT
; _this$ = ecx

; 1604 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1605 : 		size_type _Capacity = capacity();

  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?capacity@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QBEIXZ ; std::vector<Material *,std::allocator<Material *> >::capacity
  00026	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax

; 1606 : 
; 1607 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?max_size@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QBEIXZ ; std::vector<Material *,std::allocator<Material *> >::max_size
  00031	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00034	d1 e9		 shr	 ecx, 1
  00036	2b c1		 sub	 eax, ecx
  00038	3b 45 f8	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  0003b	73 09		 jae	 SHORT $LN4@Grow_to
  0003d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
  00044	eb 0b		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00046	8b 55 f8	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00049	d1 ea		 shr	 edx, 1
  0004b	03 55 f8	 add	 edx, DWORD PTR __Capacity$[ebp]
  0004e	89 55 f4	 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  00051	8b 45 f4	 mov	 eax, DWORD PTR tv73[ebp]
  00054	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax

; 1608 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%
; 1609 : 		if (_Capacity < _Count)

  00057	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  0005a	3b 4d 08	 cmp	 ecx, DWORD PTR __Count$[ebp]
  0005d	73 06		 jae	 SHORT $LN2@Grow_to

; 1610 : 			_Capacity = _Count;

  0005f	8b 55 08	 mov	 edx, DWORD PTR __Count$[ebp]
  00062	89 55 f8	 mov	 DWORD PTR __Capacity$[ebp], edx
$LN2@Grow_to:

; 1611 : 		return (_Capacity);

  00065	8b 45 f8	 mov	 eax, DWORD PTR __Capacity$[ebp]

; 1612 : 		}

  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?_Grow_to@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IBEII@Z ENDP ; std::vector<Material *,std::allocator<Material *> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Unused_capacity@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QBEIXZ PROC ; std::vector<Material *,std::allocator<Material *> >::_Unused_capacity, COMDAT
; _this$ = ecx

; 1046 : 		{	// micro-optimization for capacity() - size()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1047 : 		return (this->_Myend() - this->_Mylast());

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QBEABQAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Myend
  00017	8b f0		 mov	 esi, eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QBEABQAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Mylast
  00021	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00023	2b 08		 sub	 ecx, DWORD PTR [eax]
  00025	c1 f9 02	 sar	 ecx, 2
  00028	8b c1		 mov	 eax, ecx

; 1048 : 		}

  0002a	5e		 pop	 esi
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?_Unused_capacity@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QBEIXZ ENDP ; std::vector<Material *,std::allocator<Material *> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Xlen@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXXZ PROC ; std::vector<MeshData *,std::allocator<MeshData *> >::_Xlen, COMDAT
; _this$ = ecx

; 1783 : 		{	// report a length_error

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1784 : 		_Xlength_error("vector<T> too long");

  0000f	8b f4		 mov	 esi, esp
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  0001c	3b f4		 cmp	 esi, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:

; 1785 : 		}

  00023	5e		 pop	 esi
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?_Xlen@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEXXZ ENDP ; std::vector<MeshData *,std::allocator<MeshData *> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reallocate@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z PROC ; std::vector<MeshData *,std::allocator<MeshData *> >::_Reallocate, COMDAT
; _this$ = ecx

; 1620 : 		{	// move to array of exactly _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	c7 45 e4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-28], -858993460 ; ccccccccH
  0001f	c7 45 e8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-24], -858993460 ; ccccccccH
  00026	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00041	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1621 : 		pointer _Ptr = this->_Getal().allocate(_Count);

  00044	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00047	50		 push	 eax
  00048	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Getal
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAEPAPAVMeshData@@I@Z ; std::_Wrap_alloc<std::allocator<MeshData *> >::allocate
  00057	89 45 e8	 mov	 DWORD PTR __Ptr$[ebp], eax

; 1622 : 
; 1623 : 		_TRY_BEGIN

  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 1624 : 		_Umove(this->_Myfirst(), this->_Mylast(), _Ptr);

  00061	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00064	51		 push	 ecx
  00065	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
  0006d	8b 10		 mov	 edx, DWORD PTR [eax]
  0006f	52		 push	 edx
  00070	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
  00078	8b 00		 mov	 eax, DWORD PTR [eax]
  0007a	50		 push	 eax
  0007b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	e8 00 00 00 00	 call	 ??$_Umove@PAPAVMeshData@@@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEPAPAVMeshData@@PAPAV2@00@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::_Umove<MeshData * *>
  00083	eb 26		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z$0:

; 1625 : 		_CATCH_ALL
; 1626 : 		this->_Getal().deallocate(_Ptr, _Count);

  00085	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00088	51		 push	 ecx
  00089	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0008c	52		 push	 edx
  0008d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Getal
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAEXPAPAVMeshData@@I@Z ; std::_Wrap_alloc<std::allocator<MeshData *> >::deallocate

; 1627 : 		_RERAISE;

  0009c	6a 00		 push	 0
  0009e	6a 00		 push	 0
  000a0	e8 00 00 00 00	 call	 __CxxThrowException@8

; 1628 : 		_CATCH_END

  000a5	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000aa	c3		 ret	 0
$LN5@Reallocate:
  000ab	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000b2	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000b4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z$1:

; 1629 : 
; 1630 : 		size_type _Size = size();

  000bb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	e8 00 00 00 00	 call	 ?size@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ ; std::vector<MeshData *,std::allocator<MeshData *> >::size
  000c3	89 45 e4	 mov	 DWORD PTR __Size$[ebp], eax

; 1631 : 		if (this->_Myfirst() != pointer())

  000c6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c9	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
  000ce	83 38 00	 cmp	 DWORD PTR [eax], 0
  000d1	74 52		 je	 SHORT $LN3@Reallocate

; 1632 : 			{	// destroy and deallocate old array
; 1633 : 			_Destroy(this->_Myfirst(), this->_Mylast());

  000d3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d6	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
  000db	8b 00		 mov	 eax, DWORD PTR [eax]
  000dd	50		 push	 eax
  000de	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	51		 push	 ecx
  000e9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ec	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXPAPAVMeshData@@0@Z ; std::vector<MeshData *,std::allocator<MeshData *> >::_Destroy

; 1634 : 			this->_Getal().deallocate(this->_Myfirst(),

  000f1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f4	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
  000f9	8b f0		 mov	 esi, eax
  000fb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000fe	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myend
  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	2b 16		 sub	 edx, DWORD PTR [esi]
  00107	c1 fa 02	 sar	 edx, 2
  0010a	52		 push	 edx
  0010b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
  00113	8b 00		 mov	 eax, DWORD PTR [eax]
  00115	50		 push	 eax
  00116	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Getal
  0011e	8b c8		 mov	 ecx, eax
  00120	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAEXPAPAVMeshData@@I@Z ; std::_Wrap_alloc<std::allocator<MeshData *> >::deallocate
$LN3@Reallocate:

; 1635 : 				this->_Myend() - this->_Myfirst());
; 1636 : 			}
; 1637 : 
; 1638 : 		this->_Orphan_all();

  00125	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00128	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Orphan_all

; 1639 : 		this->_Myend() = _Ptr + _Count;

  0012d	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00130	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00133	8d 34 8a	 lea	 esi, DWORD PTR [edx+ecx*4]
  00136	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00139	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myend
  0013e	89 30		 mov	 DWORD PTR [eax], esi

; 1640 : 		this->_Mylast() = _Ptr + _Size;

  00140	8b 45 e4	 mov	 eax, DWORD PTR __Size$[ebp]
  00143	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00146	8d 34 81	 lea	 esi, DWORD PTR [ecx+eax*4]
  00149	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0014c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
  00151	89 30		 mov	 DWORD PTR [eax], esi

; 1641 : 		this->_Myfirst() = _Ptr;

  00153	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00156	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
  0015b	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0015e	89 10		 mov	 DWORD PTR [eax], edx
$LN4@Reallocate:

; 1642 : 		}

  00160	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00163	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0016a	59		 pop	 ecx
  0016b	5f		 pop	 edi
  0016c	5e		 pop	 esi
  0016d	5b		 pop	 ebx
  0016e	83 c4 1c	 add	 esp, 28			; 0000001cH
  00171	3b ec		 cmp	 ebp, esp
  00173	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00178	8b e5		 mov	 esp, ebp
  0017a	5d		 pop	 ebp
  0017b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXI@Z ENDP ; std::vector<MeshData *,std::allocator<MeshData *> >::_Reallocate
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEII@Z PROC ; std::vector<MeshData *,std::allocator<MeshData *> >::_Grow_to, COMDAT
; _this$ = ecx

; 1604 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1605 : 		size_type _Capacity = capacity();

  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?capacity@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ ; std::vector<MeshData *,std::allocator<MeshData *> >::capacity
  00026	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax

; 1606 : 
; 1607 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?max_size@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ ; std::vector<MeshData *,std::allocator<MeshData *> >::max_size
  00031	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00034	d1 e9		 shr	 ecx, 1
  00036	2b c1		 sub	 eax, ecx
  00038	3b 45 f8	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  0003b	73 09		 jae	 SHORT $LN4@Grow_to
  0003d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
  00044	eb 0b		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00046	8b 55 f8	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00049	d1 ea		 shr	 edx, 1
  0004b	03 55 f8	 add	 edx, DWORD PTR __Capacity$[ebp]
  0004e	89 55 f4	 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  00051	8b 45 f4	 mov	 eax, DWORD PTR tv73[ebp]
  00054	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax

; 1608 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%
; 1609 : 		if (_Capacity < _Count)

  00057	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  0005a	3b 4d 08	 cmp	 ecx, DWORD PTR __Count$[ebp]
  0005d	73 06		 jae	 SHORT $LN2@Grow_to

; 1610 : 			_Capacity = _Count;

  0005f	8b 55 08	 mov	 edx, DWORD PTR __Count$[ebp]
  00062	89 55 f8	 mov	 DWORD PTR __Capacity$[ebp], edx
$LN2@Grow_to:

; 1611 : 		return (_Capacity);

  00065	8b 45 f8	 mov	 eax, DWORD PTR __Capacity$[ebp]

; 1612 : 		}

  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?_Grow_to@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IBEII@Z ENDP ; std::vector<MeshData *,std::allocator<MeshData *> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXPAPAVMeshData@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXPAPAVMeshData@@0@Z PROC ; std::vector<MeshData *,std::allocator<MeshData *> >::_Destroy, COMDAT
; _this$ = ecx

; 1599 : 		{	// destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1600 : 		_Destroy_range(_First, _Last, this->_Getal());

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Getal
  00016	50		 push	 eax
  00017	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YAXPAPAVMeshData@@0AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<MeshData *> > >
  00024	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1601 : 		}

  00027	83 c4 04	 add	 esp, 4
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 08 00	 ret	 8
?_Destroy@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEXPAPAVMeshData@@0@Z ENDP ; std::vector<MeshData *,std::allocator<MeshData *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?max_size@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?max_size@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ PROC ; std::vector<MeshData *,std::allocator<MeshData *> >::max_size, COMDAT
; _this$ = ecx

; 1183 : 		{	// return maximum possible length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1184 : 		return (this->_Getal().max_size());

  00017	0f b6 45 fb	 movzx	 eax, BYTE PTR $T1[ebp]
  0001b	50		 push	 eax
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Getal
  00024	8b c8		 mov	 ecx, eax
  00026	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<MeshData *> >::max_size

; 1185 : 		}

  0002b	83 c4 08	 add	 esp, 8
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?max_size@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ ENDP ; std::vector<MeshData *,std::allocator<MeshData *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Unused_capacity@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ PROC ; std::vector<MeshData *,std::allocator<MeshData *> >::_Unused_capacity, COMDAT
; _this$ = ecx

; 1046 : 		{	// micro-optimization for capacity() - size()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1047 : 		return (this->_Myend() - this->_Mylast());

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABQAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myend
  00017	8b f0		 mov	 esi, eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABQAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Mylast
  00021	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00023	2b 08		 sub	 ecx, DWORD PTR [eax]
  00025	c1 f9 02	 sar	 ecx, 2
  00028	8b c1		 mov	 eax, ecx

; 1048 : 		}

  0002a	5e		 pop	 esi
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?_Unused_capacity@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ ENDP ; std::vector<MeshData *,std::allocator<MeshData *> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Getpfirst, COMDAT
; _this$ = ecx

; 595  : 		{	// get address of iterator chain

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 596  : 		return (_Get_data()._Getpfirst());

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$Vector2@M@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Get_data
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst

; 597  : 		}

  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Getpfirst, COMDAT
; _this$ = ecx

; 595  : 		{	// get address of iterator chain

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 596  : 		return (_Get_data()._Getpfirst());

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@I@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Get_data
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst

; 597  : 		}

  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reallocate@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z PROC ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Reallocate, COMDAT
; _this$ = ecx

; 1620 : 		{	// move to array of exactly _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	c7 45 e4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-28], -858993460 ; ccccccccH
  0001f	c7 45 e8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-24], -858993460 ; ccccccccH
  00026	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00041	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1621 : 		pointer _Ptr = this->_Getal().allocate(_Count);

  00044	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00047	50		 push	 eax
  00048	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Getal
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEPAV?$Vector2@M@@I@Z ; std::_Wrap_alloc<std::allocator<Vector2<float> > >::allocate
  00057	89 45 e8	 mov	 DWORD PTR __Ptr$[ebp], eax

; 1622 : 
; 1623 : 		_TRY_BEGIN

  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 1624 : 		_Umove(this->_Myfirst(), this->_Mylast(), _Ptr);

  00061	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00064	51		 push	 ecx
  00065	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  0006d	8b 10		 mov	 edx, DWORD PTR [eax]
  0006f	52		 push	 edx
  00070	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myfirst
  00078	8b 00		 mov	 eax, DWORD PTR [eax]
  0007a	50		 push	 eax
  0007b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	e8 00 00 00 00	 call	 ??$_Umove@PAV?$Vector2@M@@@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEPAV?$Vector2@M@@PAV2@00@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Umove<Vector2<float> *>
  00083	eb 26		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z$0:

; 1625 : 		_CATCH_ALL
; 1626 : 		this->_Getal().deallocate(_Ptr, _Count);

  00085	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00088	51		 push	 ecx
  00089	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0008c	52		 push	 edx
  0008d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Getal
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEXPAV?$Vector2@M@@I@Z ; std::_Wrap_alloc<std::allocator<Vector2<float> > >::deallocate

; 1627 : 		_RERAISE;

  0009c	6a 00		 push	 0
  0009e	6a 00		 push	 0
  000a0	e8 00 00 00 00	 call	 __CxxThrowException@8

; 1628 : 		_CATCH_END

  000a5	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000aa	c3		 ret	 0
$LN5@Reallocate:
  000ab	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000b2	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000b4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z$1:

; 1629 : 
; 1630 : 		size_type _Size = size();

  000bb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	e8 00 00 00 00	 call	 ?size@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEIXZ ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::size
  000c3	89 45 e4	 mov	 DWORD PTR __Size$[ebp], eax

; 1631 : 		if (this->_Myfirst() != pointer())

  000c6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c9	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myfirst
  000ce	83 38 00	 cmp	 DWORD PTR [eax], 0
  000d1	74 52		 je	 SHORT $LN3@Reallocate

; 1632 : 			{	// destroy and deallocate old array
; 1633 : 			_Destroy(this->_Myfirst(), this->_Mylast());

  000d3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d6	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  000db	8b 00		 mov	 eax, DWORD PTR [eax]
  000dd	50		 push	 eax
  000de	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myfirst
  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	51		 push	 ecx
  000e9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ec	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXPAV?$Vector2@M@@0@Z ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Destroy

; 1634 : 			this->_Getal().deallocate(this->_Myfirst(),

  000f1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f4	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myfirst
  000f9	8b f0		 mov	 esi, eax
  000fb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000fe	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myend
  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	2b 16		 sub	 edx, DWORD PTR [esi]
  00107	c1 fa 03	 sar	 edx, 3
  0010a	52		 push	 edx
  0010b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myfirst
  00113	8b 00		 mov	 eax, DWORD PTR [eax]
  00115	50		 push	 eax
  00116	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Getal
  0011e	8b c8		 mov	 ecx, eax
  00120	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEXPAV?$Vector2@M@@I@Z ; std::_Wrap_alloc<std::allocator<Vector2<float> > >::deallocate
$LN3@Reallocate:

; 1635 : 				this->_Myend() - this->_Myfirst());
; 1636 : 			}
; 1637 : 
; 1638 : 		this->_Orphan_all();

  00125	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00128	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Orphan_all

; 1639 : 		this->_Myend() = _Ptr + _Count;

  0012d	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00130	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00133	8d 34 ca	 lea	 esi, DWORD PTR [edx+ecx*8]
  00136	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00139	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myend
  0013e	89 30		 mov	 DWORD PTR [eax], esi

; 1640 : 		this->_Mylast() = _Ptr + _Size;

  00140	8b 45 e4	 mov	 eax, DWORD PTR __Size$[ebp]
  00143	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00146	8d 34 c1	 lea	 esi, DWORD PTR [ecx+eax*8]
  00149	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0014c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  00151	89 30		 mov	 DWORD PTR [eax], esi

; 1641 : 		this->_Myfirst() = _Ptr;

  00153	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00156	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAPAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myfirst
  0015b	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0015e	89 10		 mov	 DWORD PTR [eax], edx
$LN4@Reallocate:

; 1642 : 		}

  00160	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00163	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0016a	59		 pop	 ecx
  0016b	5f		 pop	 edi
  0016c	5e		 pop	 esi
  0016d	5b		 pop	 ebx
  0016e	83 c4 1c	 add	 esp, 28			; 0000001cH
  00171	3b ec		 cmp	 ebp, esp
  00173	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00178	8b e5		 mov	 esp, ebp
  0017a	5d		 pop	 ebp
  0017b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEXI@Z ENDP ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Reallocate
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBEII@Z PROC ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Grow_to, COMDAT
; _this$ = ecx

; 1604 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1605 : 		size_type _Capacity = capacity();

  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?capacity@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEIXZ ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::capacity
  00026	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax

; 1606 : 
; 1607 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?max_size@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEIXZ ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::max_size
  00031	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00034	d1 e9		 shr	 ecx, 1
  00036	2b c1		 sub	 eax, ecx
  00038	3b 45 f8	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  0003b	73 09		 jae	 SHORT $LN4@Grow_to
  0003d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
  00044	eb 0b		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00046	8b 55 f8	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00049	d1 ea		 shr	 edx, 1
  0004b	03 55 f8	 add	 edx, DWORD PTR __Capacity$[ebp]
  0004e	89 55 f4	 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  00051	8b 45 f4	 mov	 eax, DWORD PTR tv73[ebp]
  00054	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax

; 1608 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%
; 1609 : 		if (_Capacity < _Count)

  00057	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  0005a	3b 4d 08	 cmp	 ecx, DWORD PTR __Count$[ebp]
  0005d	73 06		 jae	 SHORT $LN2@Grow_to

; 1610 : 			_Capacity = _Count;

  0005f	8b 55 08	 mov	 edx, DWORD PTR __Count$[ebp]
  00062	89 55 f8	 mov	 DWORD PTR __Capacity$[ebp], edx
$LN2@Grow_to:

; 1611 : 		return (_Capacity);

  00065	8b 45 f8	 mov	 eax, DWORD PTR __Capacity$[ebp]

; 1612 : 		}

  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?_Grow_to@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IBEII@Z ENDP ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Unused_capacity@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEIXZ PROC ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Unused_capacity, COMDAT
; _this$ = ecx

; 1046 : 		{	// micro-optimization for capacity() - size()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1047 : 		return (this->_Myend() - this->_Mylast());

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QBEABQAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myend
  00017	8b f0		 mov	 esi, eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QBEABQAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Mylast
  00021	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00023	2b 08		 sub	 ecx, DWORD PTR [eax]
  00025	c1 f9 03	 sar	 ecx, 3
  00028	8b c1		 mov	 eax, ecx

; 1048 : 		}

  0002a	5e		 pop	 esi
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?_Unused_capacity@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEIXZ ENDP ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reallocate@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Reallocate, COMDAT
; _this$ = ecx

; 1620 : 		{	// move to array of exactly _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	c7 45 e4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-28], -858993460 ; ccccccccH
  0001f	c7 45 e8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-24], -858993460 ; ccccccccH
  00026	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00041	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1621 : 		pointer _Ptr = this->_Getal().allocate(_Count);

  00044	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00047	50		 push	 eax
  00048	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@I@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Getal
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@I@std@@@std@@QAEPAII@Z ; std::_Wrap_alloc<std::allocator<unsigned int> >::allocate
  00057	89 45 e8	 mov	 DWORD PTR __Ptr$[ebp], eax

; 1622 : 
; 1623 : 		_TRY_BEGIN

  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 1624 : 		_Umove(this->_Myfirst(), this->_Mylast(), _Ptr);

  00061	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00064	51		 push	 ecx
  00065	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  0006d	8b 10		 mov	 edx, DWORD PTR [eax]
  0006f	52		 push	 edx
  00070	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myfirst
  00078	8b 00		 mov	 eax, DWORD PTR [eax]
  0007a	50		 push	 eax
  0007b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	e8 00 00 00 00	 call	 ??$_Umove@PAI@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAI00@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Umove<unsigned int *>
  00083	eb 26		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z$0:

; 1625 : 		_CATCH_ALL
; 1626 : 		this->_Getal().deallocate(_Ptr, _Count);

  00085	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00088	51		 push	 ecx
  00089	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0008c	52		 push	 edx
  0008d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@I@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Getal
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@I@std@@@std@@QAEXPAII@Z ; std::_Wrap_alloc<std::allocator<unsigned int> >::deallocate

; 1627 : 		_RERAISE;

  0009c	6a 00		 push	 0
  0009e	6a 00		 push	 0
  000a0	e8 00 00 00 00	 call	 __CxxThrowException@8

; 1628 : 		_CATCH_END

  000a5	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000aa	c3		 ret	 0
$LN5@Reallocate:
  000ab	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000b2	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000b4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z$1:

; 1629 : 
; 1630 : 		size_type _Size = size();

  000bb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	e8 00 00 00 00	 call	 ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::size
  000c3	89 45 e4	 mov	 DWORD PTR __Size$[ebp], eax

; 1631 : 		if (this->_Myfirst() != pointer())

  000c6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c9	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myfirst
  000ce	83 38 00	 cmp	 DWORD PTR [eax], 0
  000d1	74 52		 je	 SHORT $LN3@Reallocate

; 1632 : 			{	// destroy and deallocate old array
; 1633 : 			_Destroy(this->_Myfirst(), this->_Mylast());

  000d3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d6	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  000db	8b 00		 mov	 eax, DWORD PTR [eax]
  000dd	50		 push	 eax
  000de	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myfirst
  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	51		 push	 ecx
  000e9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ec	e8 00 00 00 00	 call	 ?_Destroy@?$vector@IV?$allocator@I@std@@@std@@IAEXPAI0@Z ; std::vector<unsigned int,std::allocator<unsigned int> >::_Destroy

; 1634 : 			this->_Getal().deallocate(this->_Myfirst(),

  000f1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f4	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myfirst
  000f9	8b f0		 mov	 esi, eax
  000fb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000fe	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myend
  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	2b 16		 sub	 edx, DWORD PTR [esi]
  00107	c1 fa 02	 sar	 edx, 2
  0010a	52		 push	 edx
  0010b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myfirst
  00113	8b 00		 mov	 eax, DWORD PTR [eax]
  00115	50		 push	 eax
  00116	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@I@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Getal
  0011e	8b c8		 mov	 ecx, eax
  00120	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@I@std@@@std@@QAEXPAII@Z ; std::_Wrap_alloc<std::allocator<unsigned int> >::deallocate
$LN3@Reallocate:

; 1635 : 				this->_Myend() - this->_Myfirst());
; 1636 : 			}
; 1637 : 
; 1638 : 		this->_Orphan_all();

  00125	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00128	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Orphan_all

; 1639 : 		this->_Myend() = _Ptr + _Count;

  0012d	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00130	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00133	8d 34 8a	 lea	 esi, DWORD PTR [edx+ecx*4]
  00136	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00139	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myend
  0013e	89 30		 mov	 DWORD PTR [eax], esi

; 1640 : 		this->_Mylast() = _Ptr + _Size;

  00140	8b 45 e4	 mov	 eax, DWORD PTR __Size$[ebp]
  00143	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00146	8d 34 81	 lea	 esi, DWORD PTR [ecx+eax*4]
  00149	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0014c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  00151	89 30		 mov	 DWORD PTR [eax], esi

; 1641 : 		this->_Myfirst() = _Ptr;

  00153	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00156	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAPAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myfirst
  0015b	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0015e	89 10		 mov	 DWORD PTR [eax], edx
$LN4@Reallocate:

; 1642 : 		}

  00160	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00163	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0016a	59		 pop	 ecx
  0016b	5f		 pop	 edi
  0016c	5e		 pop	 esi
  0016d	5b		 pop	 ebx
  0016e	83 c4 1c	 add	 esp, 28			; 0000001cH
  00171	3b ec		 cmp	 ebp, esp
  00173	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00178	8b e5		 mov	 esp, ebp
  0017a	5d		 pop	 ebp
  0017b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@IV?$allocator@I@std@@@std@@IAEXI@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Reallocate
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@IV?$allocator@I@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@IV?$allocator@I@std@@@std@@IBEII@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Grow_to, COMDAT
; _this$ = ecx

; 1604 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1605 : 		size_type _Capacity = capacity();

  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::capacity
  00026	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax

; 1606 : 
; 1607 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?max_size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ; std::vector<unsigned int,std::allocator<unsigned int> >::max_size
  00031	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00034	d1 e9		 shr	 ecx, 1
  00036	2b c1		 sub	 eax, ecx
  00038	3b 45 f8	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  0003b	73 09		 jae	 SHORT $LN4@Grow_to
  0003d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
  00044	eb 0b		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00046	8b 55 f8	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00049	d1 ea		 shr	 edx, 1
  0004b	03 55 f8	 add	 edx, DWORD PTR __Capacity$[ebp]
  0004e	89 55 f4	 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  00051	8b 45 f4	 mov	 eax, DWORD PTR tv73[ebp]
  00054	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax

; 1608 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%
; 1609 : 		if (_Capacity < _Count)

  00057	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  0005a	3b 4d 08	 cmp	 ecx, DWORD PTR __Count$[ebp]
  0005d	73 06		 jae	 SHORT $LN2@Grow_to

; 1610 : 			_Capacity = _Count;

  0005f	8b 55 08	 mov	 edx, DWORD PTR __Count$[ebp]
  00062	89 55 f8	 mov	 DWORD PTR __Capacity$[ebp], edx
$LN2@Grow_to:

; 1611 : 		return (_Capacity);

  00065	8b 45 f8	 mov	 eax, DWORD PTR __Capacity$[ebp]

; 1612 : 		}

  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?_Grow_to@?$vector@IV?$allocator@I@std@@@std@@IBEII@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Unused_capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Unused_capacity, COMDAT
; _this$ = ecx

; 1046 : 		{	// micro-optimization for capacity() - size()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1047 : 		return (this->_Myend() - this->_Mylast());

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QBEABQAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myend
  00017	8b f0		 mov	 esi, eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QBEABQAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Mylast
  00021	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00023	2b 08		 sub	 ecx, DWORD PTR [eax]
  00025	c1 f9 02	 sar	 ecx, 2
  00028	8b c1		 mov	 eax, ecx

; 1048 : 		}

  0002a	5e		 pop	 esi
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?_Unused_capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres, COMDAT
; _this$ = ecx

; 726  : 		{	// return const reference to _Myres

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 727  : 		return (_Get_data()._Myres);

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  00016	83 c0 18	 add	 eax, 24			; 00000018H

; 728  : 		}

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?_Myres@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABIXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myres
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z
_TEXT	SEGMENT
__State$ = -8						; size = 4
_this$ = -4						; size = 4
__Mode$ = 8						; size = 4
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate, COMDAT
; _this$ = ecx

; 354  : 		{	// convert open mode to stream state bits

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 355  : 		_Strstate _State = (_Strstate)0;

  00017	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __State$[ebp], 0

; 356  : 		if (!(_Mode & ios_base::in))

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Mode$[ebp]
  00021	83 e0 01	 and	 eax, 1
  00024	75 09		 jne	 SHORT $LN2@Getstate

; 357  : 			_State |= _Noread;

  00026	8b 4d f8	 mov	 ecx, DWORD PTR __State$[ebp]
  00029	83 c9 04	 or	 ecx, 4
  0002c	89 4d f8	 mov	 DWORD PTR __State$[ebp], ecx
$LN2@Getstate:

; 358  : 		if (!(_Mode & ios_base::out))

  0002f	8b 55 08	 mov	 edx, DWORD PTR __Mode$[ebp]
  00032	83 e2 02	 and	 edx, 2
  00035	75 09		 jne	 SHORT $LN3@Getstate

; 359  : 			_State |= _Constant;

  00037	8b 45 f8	 mov	 eax, DWORD PTR __State$[ebp]
  0003a	83 c8 02	 or	 eax, 2
  0003d	89 45 f8	 mov	 DWORD PTR __State$[ebp], eax
$LN3@Getstate:

; 360  : 		if (_Mode & ios_base::app)

  00040	8b 4d 08	 mov	 ecx, DWORD PTR __Mode$[ebp]
  00043	83 e1 08	 and	 ecx, 8
  00046	74 09		 je	 SHORT $LN4@Getstate

; 361  : 			_State |= _Append;

  00048	8b 55 f8	 mov	 edx, DWORD PTR __State$[ebp]
  0004b	83 ca 08	 or	 edx, 8
  0004e	89 55 f8	 mov	 DWORD PTR __State$[ebp], edx
$LN4@Getstate:

; 362  : 		if (_Mode & ios_base::ate)

  00051	8b 45 08	 mov	 eax, DWORD PTR __Mode$[ebp]
  00054	83 e0 04	 and	 eax, 4
  00057	74 09		 je	 SHORT $LN5@Getstate

; 363  : 			_State |= _Atend;

  00059	8b 4d f8	 mov	 ecx, DWORD PTR __State$[ebp]
  0005c	83 c9 10	 or	 ecx, 16			; 00000010H
  0005f	89 4d f8	 mov	 DWORD PTR __State$[ebp], ecx
$LN5@Getstate:

; 364  : 		return (_State);

  00062	8b 45 f8	 mov	 eax, DWORD PTR __State$[ebp]

; 365  : 		}

  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z
_TEXT	SEGMENT
tv140 = -12						; size = 4
__Pnew$1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__State$ = 16						; size = 4
?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init, COMDAT
; _this$ = ecx

; 310  : 		{	// initialize buffer to [_Ptr, _Ptr + _Count), set state

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 311  : 		_Seekhigh = 0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0

; 312  : 		_Mystate = _State;

  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	8b 55 10	 mov	 edx, DWORD PTR __State$[ebp]
  0002f	89 51 3c	 mov	 DWORD PTR [ecx+60], edx

; 313  : 
; 314  : 		if (_Count != 0
; 315  : 			&& (_Mystate & (_Noread | _Constant)) != (_Noread | _Constant))

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00036	0f 84 f9 00 00
	00		 je	 $LN1@Init
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00042	83 e1 06	 and	 ecx, 6
  00045	83 f9 06	 cmp	 ecx, 6
  00048	0f 84 e7 00 00
	00		 je	 $LN1@Init

; 316  : 			{	// finite buffer that can be read or written, set it up
; 317  : 			_Elem *_Pnew = _Al.allocate(_Count);

  0004e	8b 55 0c	 mov	 edx, DWORD PTR __Count$[ebp]
  00051	52		 push	 edx
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	83 c1 40	 add	 ecx, 64			; 00000040H
  00058	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QAEPADI@Z ; std::allocator<char>::allocate
  0005d	89 45 f8	 mov	 DWORD PTR __Pnew$1[ebp], eax

; 318  : 			_Traits::copy(_Pnew, _Ptr, _Count);

  00060	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00063	50		 push	 eax
  00064	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00067	51		 push	 ecx
  00068	8b 55 f8	 mov	 edx, DWORD PTR __Pnew$1[ebp]
  0006b	52		 push	 edx
  0006c	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
  00071	83 c4 0c	 add	 esp, 12			; 0000000cH

; 319  : 			_Seekhigh = _Pnew + _Count;

  00074	8b 45 f8	 mov	 eax, DWORD PTR __Pnew$1[ebp]
  00077	03 45 0c	 add	 eax, DWORD PTR __Count$[ebp]
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	89 41 38	 mov	 DWORD PTR [ecx+56], eax

; 320  : 
; 321  : 			if (!(_Mystate & _Noread))

  00080	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00083	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00086	83 e0 04	 and	 eax, 4
  00089	75 21		 jne	 SHORT $LN3@Init

; 322  : 				_Mysb::setg(_Pnew, _Pnew,

  0008b	8b 4d f8	 mov	 ecx, DWORD PTR __Pnew$1[ebp]
  0008e	03 4d 0c	 add	 ecx, DWORD PTR __Count$[ebp]
  00091	8b f4		 mov	 esi, esp
  00093	51		 push	 ecx
  00094	8b 55 f8	 mov	 edx, DWORD PTR __Pnew$1[ebp]
  00097	52		 push	 edx
  00098	8b 45 f8	 mov	 eax, DWORD PTR __Pnew$1[ebp]
  0009b	50		 push	 eax
  0009c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  000a5	3b f4		 cmp	 esi, esp
  000a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Init:

; 323  : 					_Pnew + _Count);	// setup read buffer
; 324  : 			if (!(_Mystate & _Constant))

  000ac	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000af	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  000b2	83 e2 02	 and	 edx, 2
  000b5	75 6f		 jne	 SHORT $LN4@Init

; 325  : 				{	// setup write buffer, and maybe read buffer
; 326  : 				_Mysb::setp(_Pnew,

  000b7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ba	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  000bd	83 e1 18	 and	 ecx, 24			; 00000018H
  000c0	74 0b		 je	 SHORT $LN7@Init
  000c2	8b 55 f8	 mov	 edx, DWORD PTR __Pnew$1[ebp]
  000c5	03 55 0c	 add	 edx, DWORD PTR __Count$[ebp]
  000c8	89 55 f4	 mov	 DWORD PTR tv140[ebp], edx
  000cb	eb 06		 jmp	 SHORT $LN8@Init
$LN7@Init:
  000cd	8b 45 f8	 mov	 eax, DWORD PTR __Pnew$1[ebp]
  000d0	89 45 f4	 mov	 DWORD PTR tv140[ebp], eax
$LN8@Init:
  000d3	8b 4d f8	 mov	 ecx, DWORD PTR __Pnew$1[ebp]
  000d6	03 4d 0c	 add	 ecx, DWORD PTR __Count$[ebp]
  000d9	8b f4		 mov	 esi, esp
  000db	51		 push	 ecx
  000dc	8b 55 f4	 mov	 edx, DWORD PTR tv140[ebp]
  000df	52		 push	 edx
  000e0	8b 45 f8	 mov	 eax, DWORD PTR __Pnew$1[ebp]
  000e3	50		 push	 eax
  000e4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  000ed	3b f4		 cmp	 esi, esp
  000ef	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 327  : 					(_Mystate & (_Atend | _Append)) ? _Pnew + _Count : _Pnew,
; 328  : 					_Pnew + _Count);
; 329  : 				if (_Mysb::gptr() == 0)

  000f4	8b f4		 mov	 esi, esp
  000f6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000ff	3b f4		 cmp	 esi, esp
  00101	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00106	85 c0		 test	 eax, eax
  00108	75 1c		 jne	 SHORT $LN4@Init

; 330  : 					_Mysb::setg(_Pnew, 0, _Pnew);

  0010a	8b f4		 mov	 esi, esp
  0010c	8b 4d f8	 mov	 ecx, DWORD PTR __Pnew$1[ebp]
  0010f	51		 push	 ecx
  00110	6a 00		 push	 0
  00112	8b 55 f8	 mov	 edx, DWORD PTR __Pnew$1[ebp]
  00115	52		 push	 edx
  00116	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  0011f	3b f4		 cmp	 esi, esp
  00121	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@Init:

; 331  : 				}
; 332  : 			_Mystate |= _Allocated;

  00126	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00129	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0012c	83 c9 01	 or	 ecx, 1
  0012f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00132	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx
$LN1@Init:

; 333  : 			}
; 334  : 		}

  00135	5e		 pop	 esi
  00136	83 c4 0c	 add	 esp, 12			; 0000000cH
  00139	3b ec		 cmp	 ebp, esp
  0013b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00140	8b e5		 mov	 esp, ebp
  00142	5d		 pop	 ebp
  00143	c2 0c 00	 ret	 12			; 0000000cH
?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx

; 44   : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 43   : 		: _Ptr(_Pnode)

  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00042	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 45   : 		this->_Adopt(_Plist);

  00045	8b 55 0c	 mov	 edx, DWORD PTR __Plist$[ebp]
  00048	52		 push	 edx
  00049	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 46   : 		}

  00051	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00058	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00065	59		 pop	 ecx
  00066	83 c4 10	 add	 esp, 16			; 00000010H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QBEABQAPAVMesh@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QBEABQAPAVMesh@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Myend, COMDAT
; _this$ = ecx

; 666  : 		{	// return const reference to _Myend

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 667  : 		return (_Get_data()._Myend);

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAVMesh@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Get_data
  00016	83 c0 0c	 add	 eax, 12			; 0000000cH

; 668  : 		}

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QBEABQAPAVMesh@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QBEABQAPAVMaterial@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QBEABQAPAVMaterial@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Myend, COMDAT
; _this$ = ecx

; 666  : 		{	// return const reference to _Myend

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 667  : 		return (_Get_data()._Myend);

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAVMaterial@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Get_data
  00016	83 c0 0c	 add	 eax, 12			; 0000000cH

; 668  : 		}

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QBEABQAPAVMaterial@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 318  : 		{	// return const reference to second

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 319  : 		return (_Myval2);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 320  : 		}

  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 313  : 		{	// return reference to second

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 314  : 		return (_Myval2);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 315  : 		}

  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<MeshData *> >::max_size, COMDAT
; _this$ = ecx

; 929  : 		{	// get maximum size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 930  : 		return (_Mytraits::max_size(*this));

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@PAVMeshData@@@std@@@std@@SAIABV?$allocator@PAVMeshData@@@2@@Z ; std::allocator_traits<std::allocator<MeshData *> >::max_size
  00017	83 c4 04	 add	 esp, 4

; 931  : 		}

  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?max_size@?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<MeshData *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAEPAPAVMeshData@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAEPAPAVMeshData@@I@Z PROC ; std::_Wrap_alloc<std::allocator<MeshData *> >::allocate, COMDAT
; _this$ = ecx

; 897  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 898  : 		return (_Mybase::allocate(_Count));

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?allocate@?$allocator@PAVMeshData@@@std@@QAEPAPAVMeshData@@I@Z ; std::allocator<MeshData *>::allocate

; 899  : 		}

  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAEPAPAVMeshData@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<MeshData *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABQAPAVMeshData@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABQAPAVMeshData@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myend, COMDAT
; _this$ = ecx

; 666  : 		{	// return const reference to _Myend

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 667  : 		return (_Get_data()._Myend);

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Get_data
  00016	83 c0 0c	 add	 eax, 12			; 0000000cH

; 668  : 		}

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABQAPAVMeshData@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Getal, COMDAT
; _this$ = ecx

; 626  : 		{	// return const reference to allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 627  : 		return (_Mypair._Get_first());

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Get_first

; 628  : 		}

  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myproxy, COMDAT
; _this$ = ecx

; 600  : 		{	// return reference to _Myproxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 601  : 		return (_Get_data()._Myproxy);

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Get_data

; 602  : 		}

  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
$T2 = -40						; size = 4
__Tmp$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator++, COMDAT
; _this$ = ecx

; 276  : 		{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  0001c	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0001f	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00022	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00025	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00028	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0002b	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00042	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 277  : 		_Myiter _Tmp = *this;

  00049	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	50		 push	 eax
  0004d	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00050	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
  00055	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 278  : 		++*this;

  0005c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	e8 00 00 00 00	 call	 ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator++

; 279  : 		return (_Tmp);

  00064	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00067	51		 push	 ecx
  00068	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0006b	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
  00070	8b 55 d8	 mov	 edx, DWORD PTR $T2[ebp]
  00073	83 ca 01	 or	 edx, 1
  00076	89 55 d8	 mov	 DWORD PTR $T2[ebp], edx
  00079	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00080	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00083	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
  00088	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 280  : 		}

  0008b	52		 push	 edx
  0008c	8b cd		 mov	 ecx, ebp
  0008e	50		 push	 eax
  0008f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@operator
  00095	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0009a	58		 pop	 eax
  0009b	5a		 pop	 edx
  0009c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a6	59		 pop	 ecx
  000a7	83 c4 28	 add	 esp, 40			; 00000028H
  000aa	3b ec		 cmp	 ebp, esp
  000ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c2 08 00	 ret	 8
  000b7	90		 npad	 1
$LN9@operator:
  000b8	01 00 00 00	 DD	 1
  000bc	00 00 00 00	 DD	 $LN8@operator
$LN8@operator:
  000c0	e0 ff ff ff	 DD	 -32			; ffffffe0H
  000c4	0c 00 00 00	 DD	 12			; 0000000cH
  000c8	00 00 00 00	 DD	 $LN6@operator
$LN6@operator:
  000cc	5f		 DB	 95			; 0000005fH
  000cd	54		 DB	 84			; 00000054H
  000ce	6d		 DB	 109			; 0000006dH
  000cf	70		 DB	 112			; 00000070H
  000d0	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator++
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::deallocate, COMDAT
; _this$ = ecx

; 908  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 909  : 		_Mybase::deallocate(_Ptr, _Count);

  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00015	51		 push	 ecx
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::deallocate

; 910  : 		}

  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getal, COMDAT
; _this$ = ecx

; 917  : 		{	// return reference to allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 918  : 		return (_Mypair._Get_second()._Get_first());

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QAEAAV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::_Get_second
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>::_Get_first

; 919  : 		}

  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Orphan_all, COMDAT
; _this$ = ecx

; 814  : 		{	// orphan all iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 815  : 		_Get_data()._Orphan_all();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Get_data
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 816  : 		}

  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myproxy, COMDAT
; _this$ = ecx

; 803  : 		{	// return reference to _Myproxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 804  : 		return (_Get_data()._Myproxy);

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Get_data

; 805  : 		}

  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Construct, COMDAT
; _this$ = ecx

; 742  : 		{	// construct head node, proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	51		 push	 ecx
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00031	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 743  : 		_Myhead() = _Buyheadnode();

  00034	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Buyheadnode
  0003c	8b f0		 mov	 esi, eax
  0003e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	e8 00 00 00 00	 call	 ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myhead
  00046	89 30		 mov	 DWORD PTR [eax], esi

; 744  : 		_TRY_BEGIN

  00048	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 745  : 		_Alloc_proxy();

  0004f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Alloc_proxy
  00057	eb 22		 jmp	 SHORT $LN4@Construct
__catch$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ$0:

; 746  : 		_CATCH_ALL
; 747  : 		_Freeheadnode(_Myhead());

  00059	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myhead
  00061	8b 00		 mov	 eax, DWORD PTR [eax]
  00063	50		 push	 eax
  00064	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	e8 00 00 00 00	 call	 ?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Freeheadnode

; 748  : 		_RERAISE;

  0006c	6a 00		 push	 0
  0006e	6a 00		 push	 0
  00070	e8 00 00 00 00	 call	 __CxxThrowException@8

; 749  : 		_CATCH_END

  00075	b8 00 00 00 00	 mov	 eax, $LN7@Construct
  0007a	c3		 ret	 0
$LN4@Construct:
  0007b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00082	eb 07		 jmp	 SHORT $LN3@Construct
$LN7@Construct:
  00084	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
$LN3@Construct:

; 750  : 		}

  0008b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0008e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00095	59		 pop	 ecx
  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	5b		 pop	 ebx
  00099	83 c4 14	 add	 esp, 20			; 00000014H
  0009c	3b ec		 cmp	 ebp, esp
  0009e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Construct
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right, COMDAT

; 681  : 		{	// return reference to right pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 682  : 		return (_Tree_val<_Val_types>::_Right(_Pnode));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Right
  0000c	83 c4 04	 add	 esp, 4

; 683  : 		}

  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent, COMDAT

; 676  : 		{	// return reference to parent pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 677  : 		return (_Tree_val<_Val_types>::_Parent(_Pnode));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Parent
  0000c	83 c4 04	 add	 esp, 4

; 678  : 		}

  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left, COMDAT

; 671  : 		{	// return reference to left pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 672  : 		return (_Tree_val<_Val_types>::_Left(_Pnode));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Left
  0000c	83 c4 04	 add	 esp, 4

; 673  : 		}

  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 2104 : 		{	// return leftmost node in nonmutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2105 : 		return (this->_Left(this->_Myhead()));

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myhead
  00016	8b 00		 mov	 eax, DWORD PTR [eax]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  0001e	83 c4 04	 add	 esp, 4

; 2106 : 		}

  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Lmost
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::clear, COMDAT
; _this$ = ecx

; 1472 : 		{	// erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1473 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1474 : 		this->_Orphan_ptr(0);

  0002e	6a 00		 push	 0
  00030	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Orphan_ptr

; 1475 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1476 : 
; 1477 : 		_Erase(_Root());

  00038	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Root
  00040	8b 00		 mov	 eax, DWORD PTR [eax]
  00042	50		 push	 eax
  00043	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Erase

; 1478 : 		_Root() = this->_Myhead();

  0004b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myhead
  00053	8b f0		 mov	 esi, eax
  00055	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Root
  0005d	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0005f	89 08		 mov	 DWORD PTR [eax], ecx

; 1479 : 		_Lmost() = this->_Myhead();

  00061	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myhead
  00069	8b f0		 mov	 esi, eax
  0006b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Lmost
  00073	8b 16		 mov	 edx, DWORD PTR [esi]
  00075	89 10		 mov	 DWORD PTR [eax], edx

; 1480 : 		_Rmost() = this->_Myhead();

  00077	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	e8 00 00 00 00	 call	 ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myhead
  0007f	8b f0		 mov	 esi, eax
  00081	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Rmost
  00089	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0008b	89 08		 mov	 DWORD PTR [eax], ecx

; 1481 : 		this->_Mysize() = 0;

  0008d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	e8 00 00 00 00	 call	 ?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Mysize
  00095	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1482 : 		}

  0009b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a5	59		 pop	 ecx
  000a6	5e		 pop	 esi
  000a7	83 c4 10	 add	 esp, 16			; 00000010H
  000aa	3b ec		 cmp	 ebp, esp
  000ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::clear
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv434 = -48						; size = 4
tv204 = -44						; size = 4
tv192 = -40						; size = 4
$T2 = -36						; size = 4
__Pnode$ = -32						; size = 4
__Fixnodeparent$ = -28					; size = 4
__Fixnode$ = -24					; size = 4
__Erasednode$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1263 : 		{	// erase element at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 d0	 mov	 DWORD PTR [ebp-48], eax
  0001d	89 45 d4	 mov	 DWORD PTR [ebp-44], eax
  00020	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  00023	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00026	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00029	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0002c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0002f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00032	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0003a	33 c5		 xor	 eax, ebp
  0003c	50		 push	 eax
  0003d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00040	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00046	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00049	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  00050	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1264 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1265 : 		if (_Where._Getcont() != &this->_Get_data()
; 1266 : 			|| this->_Isnil(_Where._Mynode()))

  00057	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0005a	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0005f	8b f0		 mov	 esi, eax
  00061	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Get_data
  00069	3b f0		 cmp	 esi, eax
  0006b	75 18		 jne	 SHORT $LN6@erase
  0006d	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00070	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::_Mynode
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Isnil
  0007b	83 c4 04	 add	 esp, 4
  0007e	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00081	85 c0		 test	 eax, eax
  00083	74 21		 je	 SHORT $LN5@erase
$LN6@erase:

; 1267 : 			_DEBUG_ERROR("map/set erase iterator outside range");

  00085	8b f4		 mov	 esi, esp
  00087	68 f3 04 00 00	 push	 1267			; 000004f3H
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@BEABFJGP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_1EK@PPDBPCAN@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0009c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@erase:

; 1268 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  000a6	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  000a9	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::_Mynode
  000ae	89 45 ec	 mov	 DWORD PTR __Erasednode$[ebp], eax

; 1269 : 		++_Where;	// save successor iterator for return

  000b1	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  000b4	e8 00 00 00 00	 call	 ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator++

; 1270 : 		_Orphan_ptr(_Erasednode);

  000b9	8b 4d ec	 mov	 ecx, DWORD PTR __Erasednode$[ebp]
  000bc	51		 push	 ecx
  000bd	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Orphan_ptr

; 1271 : 
; 1272 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1273 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1274 : 		++_Where;	// save successor iterator for return
; 1275 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1276 : 
; 1277 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1278 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1279 : 		_Nodeptr _Pnode = _Erasednode;

  000c5	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  000c8	89 55 e0	 mov	 DWORD PTR __Pnode$[ebp], edx

; 1280 : 
; 1281 : 		if (this->_Isnil(this->_Left(_Pnode)))

  000cb	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  000ce	50		 push	 eax
  000cf	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  000d4	83 c4 04	 add	 esp, 4
  000d7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Isnil
  000df	83 c4 04	 add	 esp, 4
  000e2	0f be 10	 movsx	 edx, BYTE PTR [eax]
  000e5	85 d2		 test	 edx, edx
  000e7	74 13		 je	 SHORT $LN7@erase

; 1282 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

  000e9	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  000ec	50		 push	 eax
  000ed	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  000f2	83 c4 04	 add	 esp, 4
  000f5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f7	89 4d e8	 mov	 DWORD PTR __Fixnode$[ebp], ecx
  000fa	eb 4d		 jmp	 SHORT $LN8@erase
$LN7@erase:

; 1283 : 		else if (this->_Isnil(this->_Right(_Pnode)))

  000fc	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  000ff	52		 push	 edx
  00100	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  00105	83 c4 04	 add	 esp, 4
  00108	8b 00		 mov	 eax, DWORD PTR [eax]
  0010a	50		 push	 eax
  0010b	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Isnil
  00110	83 c4 04	 add	 esp, 4
  00113	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00116	85 c9		 test	 ecx, ecx
  00118	74 13		 je	 SHORT $LN9@erase

; 1284 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

  0011a	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0011d	52		 push	 edx
  0011e	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  00123	83 c4 04	 add	 esp, 4
  00126	8b 00		 mov	 eax, DWORD PTR [eax]
  00128	89 45 e8	 mov	 DWORD PTR __Fixnode$[ebp], eax

; 1285 : 		else

  0012b	eb 1c		 jmp	 SHORT $LN8@erase
$LN9@erase:

; 1286 : 			{	// two subtrees, must lift successor node to replace erased
; 1287 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

  0012d	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00130	e8 00 00 00 00	 call	 ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::_Mynode
  00135	89 45 e0	 mov	 DWORD PTR __Pnode$[ebp], eax

; 1288 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

  00138	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0013b	51		 push	 ecx
  0013c	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  00141	83 c4 04	 add	 esp, 4
  00144	8b 10		 mov	 edx, DWORD PTR [eax]
  00146	89 55 e8	 mov	 DWORD PTR __Fixnode$[ebp], edx
$LN8@erase:

; 1289 : 			}
; 1290 : 
; 1291 : 		if (_Pnode == _Erasednode)

  00149	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0014c	3b 45 ec	 cmp	 eax, DWORD PTR __Erasednode$[ebp]
  0014f	0f 85 1b 01 00
	00		 jne	 $LN11@erase

; 1292 : 			{	// at most one subtree, relink it
; 1293 : 			_Fixnodeparent = this->_Parent(_Erasednode);

  00155	8b 4d ec	 mov	 ecx, DWORD PTR __Erasednode$[ebp]
  00158	51		 push	 ecx
  00159	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  0015e	83 c4 04	 add	 esp, 4
  00161	8b 10		 mov	 edx, DWORD PTR [eax]
  00163	89 55 e4	 mov	 DWORD PTR __Fixnodeparent$[ebp], edx

; 1294 : 			if (!this->_Isnil(_Fixnode))

  00166	8b 45 e8	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  00169	50		 push	 eax
  0016a	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Isnil
  0016f	83 c4 04	 add	 esp, 4
  00172	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00175	85 c9		 test	 ecx, ecx
  00177	75 11		 jne	 SHORT $LN13@erase

; 1295 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

  00179	8b 55 e8	 mov	 edx, DWORD PTR __Fixnode$[ebp]
  0017c	52		 push	 edx
  0017d	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  00182	83 c4 04	 add	 esp, 4
  00185	8b 4d e4	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  00188	89 08		 mov	 DWORD PTR [eax], ecx
$LN13@erase:

; 1296 : 
; 1297 : 			if (_Root() == _Erasednode)

  0018a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0018d	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Root
  00192	8b 10		 mov	 edx, DWORD PTR [eax]
  00194	3b 55 ec	 cmp	 edx, DWORD PTR __Erasednode$[ebp]
  00197	75 0f		 jne	 SHORT $LN14@erase

; 1298 : 				_Root() = _Fixnode;	// link down from root

  00199	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0019c	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Root
  001a1	8b 4d e8	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  001a4	89 08		 mov	 DWORD PTR [eax], ecx
  001a6	eb 37		 jmp	 SHORT $LN15@erase
$LN14@erase:

; 1299 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

  001a8	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  001ab	52		 push	 edx
  001ac	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  001b1	83 c4 04	 add	 esp, 4
  001b4	8b 00		 mov	 eax, DWORD PTR [eax]
  001b6	3b 45 ec	 cmp	 eax, DWORD PTR __Erasednode$[ebp]
  001b9	75 13		 jne	 SHORT $LN16@erase

; 1300 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  001bb	8b 4d e4	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  001be	51		 push	 ecx
  001bf	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  001c4	83 c4 04	 add	 esp, 4
  001c7	8b 55 e8	 mov	 edx, DWORD PTR __Fixnode$[ebp]
  001ca	89 10		 mov	 DWORD PTR [eax], edx

; 1301 : 			else

  001cc	eb 11		 jmp	 SHORT $LN15@erase
$LN16@erase:

; 1302 : 				this->_Right(_Fixnodeparent) =

  001ce	8b 45 e4	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  001d1	50		 push	 eax
  001d2	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  001d7	83 c4 04	 add	 esp, 4
  001da	8b 4d e8	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  001dd	89 08		 mov	 DWORD PTR [eax], ecx
$LN15@erase:

; 1303 : 					_Fixnode;	// link down to right
; 1304 : 
; 1305 : 			if (_Lmost() == _Erasednode)

  001df	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001e2	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Lmost
  001e7	8b 10		 mov	 edx, DWORD PTR [eax]
  001e9	3b 55 ec	 cmp	 edx, DWORD PTR __Erasednode$[ebp]
  001ec	75 37		 jne	 SHORT $LN18@erase

; 1306 : 				_Lmost() = this->_Isnil(_Fixnode)

  001ee	8b 45 e8	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  001f1	50		 push	 eax
  001f2	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Isnil
  001f7	83 c4 04	 add	 esp, 4
  001fa	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  001fd	85 c9		 test	 ecx, ecx
  001ff	74 08		 je	 SHORT $LN44@erase
  00201	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  00204	89 55 d8	 mov	 DWORD PTR tv192[ebp], edx
  00207	eb 0f		 jmp	 SHORT $LN45@erase
$LN44@erase:
  00209	8b 45 e8	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  0020c	50		 push	 eax
  0020d	e8 00 00 00 00	 call	 ?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Min
  00212	83 c4 04	 add	 esp, 4
  00215	89 45 d8	 mov	 DWORD PTR tv192[ebp], eax
$LN45@erase:
  00218	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0021b	e8 00 00 00 00	 call	 ?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Lmost
  00220	8b 4d d8	 mov	 ecx, DWORD PTR tv192[ebp]
  00223	89 08		 mov	 DWORD PTR [eax], ecx
$LN18@erase:

; 1307 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1308 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree
; 1309 : 
; 1310 : 			if (_Rmost() == _Erasednode)

  00225	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00228	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Rmost
  0022d	8b 10		 mov	 edx, DWORD PTR [eax]
  0022f	3b 55 ec	 cmp	 edx, DWORD PTR __Erasednode$[ebp]
  00232	75 37		 jne	 SHORT $LN19@erase

; 1311 : 				_Rmost() = this->_Isnil(_Fixnode)

  00234	8b 45 e8	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  00237	50		 push	 eax
  00238	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Isnil
  0023d	83 c4 04	 add	 esp, 4
  00240	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00243	85 c9		 test	 ecx, ecx
  00245	74 08		 je	 SHORT $LN46@erase
  00247	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  0024a	89 55 d4	 mov	 DWORD PTR tv204[ebp], edx
  0024d	eb 0f		 jmp	 SHORT $LN47@erase
$LN46@erase:
  0024f	8b 45 e8	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  00252	50		 push	 eax
  00253	e8 00 00 00 00	 call	 ?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Max
  00258	83 c4 04	 add	 esp, 4
  0025b	89 45 d4	 mov	 DWORD PTR tv204[ebp], eax
$LN47@erase:
  0025e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00261	e8 00 00 00 00	 call	 ?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Rmost
  00266	8b 4d d4	 mov	 ecx, DWORD PTR tv204[ebp]
  00269	89 08		 mov	 DWORD PTR [eax], ecx
$LN19@erase:

; 1312 : 					? _Fixnodeparent	// largest is parent of erased node
; 1313 : 					: this->_Max(_Fixnode);	// largest in relinked subtree
; 1314 : 			}
; 1315 : 		else

  0026b	e9 8e 01 00 00	 jmp	 $LN12@erase
$LN11@erase:

; 1316 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1317 : 			this->_Parent(this->_Left(_Erasednode)) =

  00270	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  00273	52		 push	 edx
  00274	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  00279	83 c4 04	 add	 esp, 4
  0027c	8b 00		 mov	 eax, DWORD PTR [eax]
  0027e	50		 push	 eax
  0027f	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  00284	83 c4 04	 add	 esp, 4
  00287	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0028a	89 08		 mov	 DWORD PTR [eax], ecx

; 1318 : 				_Pnode;	// link left up
; 1319 : 			this->_Left(_Pnode) =

  0028c	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  0028f	52		 push	 edx
  00290	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  00295	83 c4 04	 add	 esp, 4
  00298	8b f0		 mov	 esi, eax
  0029a	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0029d	50		 push	 eax
  0029e	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  002a3	83 c4 04	 add	 esp, 4
  002a6	8b 0e		 mov	 ecx, DWORD PTR [esi]
  002a8	89 08		 mov	 DWORD PTR [eax], ecx

; 1320 : 				this->_Left(_Erasednode);	// link successor down
; 1321 : 
; 1322 : 			if (_Pnode == this->_Right(_Erasednode))

  002aa	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  002ad	52		 push	 edx
  002ae	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  002b3	83 c4 04	 add	 esp, 4
  002b6	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  002b9	3b 08		 cmp	 ecx, DWORD PTR [eax]
  002bb	75 0b		 jne	 SHORT $LN20@erase

; 1323 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  002bd	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  002c0	89 55 e4	 mov	 DWORD PTR __Fixnodeparent$[ebp], edx

; 1324 : 			else

  002c3	e9 80 00 00 00	 jmp	 $LN21@erase
$LN20@erase:

; 1325 : 				{	// successor further down, link in place of erased
; 1326 : 				_Fixnodeparent =

  002c8	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  002cb	50		 push	 eax
  002cc	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  002d1	83 c4 04	 add	 esp, 4
  002d4	8b 08		 mov	 ecx, DWORD PTR [eax]
  002d6	89 4d e4	 mov	 DWORD PTR __Fixnodeparent$[ebp], ecx

; 1327 : 					this->_Parent(_Pnode);	// parent is successor's
; 1328 : 				if (!this->_Isnil(_Fixnode))

  002d9	8b 55 e8	 mov	 edx, DWORD PTR __Fixnode$[ebp]
  002dc	52		 push	 edx
  002dd	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Isnil
  002e2	83 c4 04	 add	 esp, 4
  002e5	0f be 00	 movsx	 eax, BYTE PTR [eax]
  002e8	85 c0		 test	 eax, eax
  002ea	75 11		 jne	 SHORT $LN22@erase

; 1329 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  002ec	8b 4d e8	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  002ef	51		 push	 ecx
  002f0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  002f5	83 c4 04	 add	 esp, 4
  002f8	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  002fb	89 10		 mov	 DWORD PTR [eax], edx
$LN22@erase:

; 1330 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  002fd	8b 45 e4	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00300	50		 push	 eax
  00301	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  00306	83 c4 04	 add	 esp, 4
  00309	8b 4d e8	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  0030c	89 08		 mov	 DWORD PTR [eax], ecx

; 1331 : 				this->_Right(_Pnode) =

  0030e	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  00311	52		 push	 edx
  00312	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  00317	83 c4 04	 add	 esp, 4
  0031a	8b f0		 mov	 esi, eax
  0031c	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0031f	50		 push	 eax
  00320	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  00325	83 c4 04	 add	 esp, 4
  00328	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0032a	89 08		 mov	 DWORD PTR [eax], ecx

; 1332 : 					this->_Right(_Erasednode);	// link next down
; 1333 : 				this->_Parent(this->_Right(_Erasednode)) =

  0032c	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  0032f	52		 push	 edx
  00330	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  00335	83 c4 04	 add	 esp, 4
  00338	8b 00		 mov	 eax, DWORD PTR [eax]
  0033a	50		 push	 eax
  0033b	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  00340	83 c4 04	 add	 esp, 4
  00343	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00346	89 08		 mov	 DWORD PTR [eax], ecx
$LN21@erase:

; 1334 : 					_Pnode;	// right up
; 1335 : 				}
; 1336 : 
; 1337 : 			if (_Root() == _Erasednode)

  00348	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0034b	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Root
  00350	8b 10		 mov	 edx, DWORD PTR [eax]
  00352	3b 55 ec	 cmp	 edx, DWORD PTR __Erasednode$[ebp]
  00355	75 0f		 jne	 SHORT $LN23@erase

; 1338 : 				_Root() = _Pnode;	// link down from root

  00357	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0035a	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Root
  0035f	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00362	89 08		 mov	 DWORD PTR [eax], ecx
  00364	eb 58		 jmp	 SHORT $LN24@erase
$LN23@erase:

; 1339 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

  00366	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  00369	52		 push	 edx
  0036a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  0036f	83 c4 04	 add	 esp, 4
  00372	8b 00		 mov	 eax, DWORD PTR [eax]
  00374	50		 push	 eax
  00375	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  0037a	83 c4 04	 add	 esp, 4
  0037d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0037f	3b 4d ec	 cmp	 ecx, DWORD PTR __Erasednode$[ebp]
  00382	75 1e		 jne	 SHORT $LN25@erase

; 1340 : 				this->_Left(this->_Parent(_Erasednode)) =

  00384	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  00387	52		 push	 edx
  00388	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  0038d	83 c4 04	 add	 esp, 4
  00390	8b 00		 mov	 eax, DWORD PTR [eax]
  00392	50		 push	 eax
  00393	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  00398	83 c4 04	 add	 esp, 4
  0039b	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0039e	89 08		 mov	 DWORD PTR [eax], ecx

; 1341 : 					_Pnode;	// link down to left
; 1342 : 			else

  003a0	eb 1c		 jmp	 SHORT $LN24@erase
$LN25@erase:

; 1343 : 				this->_Right(this->_Parent(_Erasednode)) =

  003a2	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  003a5	52		 push	 edx
  003a6	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  003ab	83 c4 04	 add	 esp, 4
  003ae	8b 00		 mov	 eax, DWORD PTR [eax]
  003b0	50		 push	 eax
  003b1	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  003b6	83 c4 04	 add	 esp, 4
  003b9	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  003bc	89 08		 mov	 DWORD PTR [eax], ecx
$LN24@erase:

; 1344 : 					_Pnode;	// link down to right
; 1345 : 
; 1346 : 			this->_Parent(_Pnode) =

  003be	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  003c1	52		 push	 edx
  003c2	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  003c7	83 c4 04	 add	 esp, 4
  003ca	8b f0		 mov	 esi, eax
  003cc	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  003cf	50		 push	 eax
  003d0	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  003d5	83 c4 04	 add	 esp, 4
  003d8	8b 0e		 mov	 ecx, DWORD PTR [esi]
  003da	89 08		 mov	 DWORD PTR [eax], ecx

; 1347 : 				this->_Parent(_Erasednode);	// link successor up
; 1348 : 			_STD swap(this->_Color(_Pnode),

  003dc	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  003df	52		 push	 edx
  003e0	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  003e5	83 c4 04	 add	 esp, 4
  003e8	50		 push	 eax
  003e9	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  003ec	50		 push	 eax
  003ed	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  003f2	83 c4 04	 add	 esp, 4
  003f5	50		 push	 eax
  003f6	e8 00 00 00 00	 call	 ??$swap@D@std@@YAXAAD0@Z ; std::swap<char>
  003fb	83 c4 08	 add	 esp, 8
$LN12@erase:

; 1349 : 				this->_Color(_Erasednode));	// recolor it
; 1350 : 			}
; 1351 : 
; 1352 : 		if (this->_Color(_Erasednode) == this->_Black)

  003fe	8b 4d ec	 mov	 ecx, DWORD PTR __Erasednode$[ebp]
  00401	51		 push	 ecx
  00402	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  00407	83 c4 04	 add	 esp, 4
  0040a	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0040d	83 fa 01	 cmp	 edx, 1
  00410	0f 85 8f 03 00
	00		 jne	 $LN27@erase

; 1353 : 			{	// erasing black link, must recolor/rebalance tree
; 1354 : 			for (; _Fixnode != _Root()

  00416	eb 11		 jmp	 SHORT $LN4@erase
$LN2@erase:

; 1356 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  00418	8b 45 e8	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  0041b	50		 push	 eax
  0041c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  00421	83 c4 04	 add	 esp, 4
  00424	8b 08		 mov	 ecx, DWORD PTR [eax]
  00426	89 4d e4	 mov	 DWORD PTR __Fixnodeparent$[ebp], ecx
$LN4@erase:

; 1355 : 				&& this->_Color(_Fixnode) == this->_Black;

  00429	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0042c	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Root
  00431	8b 55 e8	 mov	 edx, DWORD PTR __Fixnode$[ebp]
  00434	3b 10		 cmp	 edx, DWORD PTR [eax]
  00436	0f 84 5a 03 00
	00		 je	 $LN3@erase
  0043c	8b 45 e8	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  0043f	50		 push	 eax
  00440	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  00445	83 c4 04	 add	 esp, 4
  00448	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0044b	83 f9 01	 cmp	 ecx, 1
  0044e	0f 85 42 03 00
	00		 jne	 $LN3@erase

; 1357 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

  00454	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  00457	52		 push	 edx
  00458	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  0045d	83 c4 04	 add	 esp, 4
  00460	8b 4d e8	 mov	 ecx, DWORD PTR __Fixnode$[ebp]
  00463	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00465	0f 85 97 01 00
	00		 jne	 $LN28@erase

; 1358 : 					{	// fixup left subtree
; 1359 : 					_Pnode = this->_Right(_Fixnodeparent);

  0046b	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  0046e	52		 push	 edx
  0046f	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  00474	83 c4 04	 add	 esp, 4
  00477	8b 00		 mov	 eax, DWORD PTR [eax]
  00479	89 45 e0	 mov	 DWORD PTR __Pnode$[ebp], eax

; 1360 : 					if (this->_Color(_Pnode) == this->_Red)

  0047c	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0047f	51		 push	 ecx
  00480	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  00485	83 c4 04	 add	 esp, 4
  00488	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0048b	85 d2		 test	 edx, edx
  0048d	75 3b		 jne	 SHORT $LN30@erase

; 1361 : 						{	// rotate red up from right subtree
; 1362 : 						this->_Color(_Pnode) = this->_Black;

  0048f	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00492	50		 push	 eax
  00493	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  00498	83 c4 04	 add	 esp, 4
  0049b	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1363 : 						this->_Color(_Fixnodeparent) = this->_Red;

  0049e	8b 4d e4	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  004a1	51		 push	 ecx
  004a2	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  004a7	83 c4 04	 add	 esp, 4
  004aa	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1364 : 						_Lrotate(_Fixnodeparent);

  004ad	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  004b0	52		 push	 edx
  004b1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  004b4	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Lrotate

; 1365 : 						_Pnode = this->_Right(_Fixnodeparent);

  004b9	8b 45 e4	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  004bc	50		 push	 eax
  004bd	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  004c2	83 c4 04	 add	 esp, 4
  004c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  004c7	89 4d e0	 mov	 DWORD PTR __Pnode$[ebp], ecx
$LN30@erase:

; 1366 : 						}
; 1367 : 
; 1368 : 					if (this->_Isnil(_Pnode))

  004ca	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  004cd	52		 push	 edx
  004ce	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Isnil
  004d3	83 c4 04	 add	 esp, 4
  004d6	0f be 00	 movsx	 eax, BYTE PTR [eax]
  004d9	85 c0		 test	 eax, eax
  004db	74 0b		 je	 SHORT $LN31@erase

; 1369 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

  004dd	8b 4d e4	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  004e0	89 4d e8	 mov	 DWORD PTR __Fixnode$[ebp], ecx

; 1370 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

  004e3	e9 15 01 00 00	 jmp	 $LN32@erase
$LN31@erase:

; 1371 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

  004e8	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  004eb	52		 push	 edx
  004ec	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  004f1	83 c4 04	 add	 esp, 4
  004f4	8b 00		 mov	 eax, DWORD PTR [eax]
  004f6	50		 push	 eax
  004f7	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  004fc	83 c4 04	 add	 esp, 4
  004ff	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00502	83 f9 01	 cmp	 ecx, 1
  00505	75 39		 jne	 SHORT $LN33@erase
  00507	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0050a	52		 push	 edx
  0050b	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  00510	83 c4 04	 add	 esp, 4
  00513	8b 00		 mov	 eax, DWORD PTR [eax]
  00515	50		 push	 eax
  00516	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  0051b	83 c4 04	 add	 esp, 4
  0051e	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00521	83 f9 01	 cmp	 ecx, 1
  00524	75 1a		 jne	 SHORT $LN33@erase

; 1372 : 						{	// redden right subtree with black children
; 1373 : 						this->_Color(_Pnode) = this->_Red;

  00526	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00529	52		 push	 edx
  0052a	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  0052f	83 c4 04	 add	 esp, 4
  00532	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1374 : 						_Fixnode = _Fixnodeparent;

  00535	8b 45 e4	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00538	89 45 e8	 mov	 DWORD PTR __Fixnode$[ebp], eax

; 1375 : 						}
; 1376 : 					else

  0053b	e9 bd 00 00 00	 jmp	 $LN32@erase
$LN33@erase:

; 1377 : 						{	// must rearrange right subtree
; 1378 : 						if (this->_Color(this->_Right(_Pnode))
; 1379 : 							== this->_Black)

  00540	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00543	51		 push	 ecx
  00544	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  00549	83 c4 04	 add	 esp, 4
  0054c	8b 10		 mov	 edx, DWORD PTR [eax]
  0054e	52		 push	 edx
  0054f	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  00554	83 c4 04	 add	 esp, 4
  00557	0f be 00	 movsx	 eax, BYTE PTR [eax]
  0055a	83 f8 01	 cmp	 eax, 1
  0055d	75 46		 jne	 SHORT $LN35@erase

; 1380 : 							{	// rotate red up from left sub-subtree
; 1381 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

  0055f	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00562	51		 push	 ecx
  00563	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  00568	83 c4 04	 add	 esp, 4
  0056b	8b 10		 mov	 edx, DWORD PTR [eax]
  0056d	52		 push	 edx
  0056e	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  00573	83 c4 04	 add	 esp, 4
  00576	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1382 : 							this->_Color(_Pnode) = this->_Red;

  00579	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0057c	50		 push	 eax
  0057d	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  00582	83 c4 04	 add	 esp, 4
  00585	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1383 : 							_Rrotate(_Pnode);

  00588	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0058b	51		 push	 ecx
  0058c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0058f	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Rrotate

; 1384 : 							_Pnode = this->_Right(_Fixnodeparent);

  00594	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  00597	52		 push	 edx
  00598	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  0059d	83 c4 04	 add	 esp, 4
  005a0	8b 00		 mov	 eax, DWORD PTR [eax]
  005a2	89 45 e0	 mov	 DWORD PTR __Pnode$[ebp], eax
$LN35@erase:

; 1385 : 							}
; 1386 : 
; 1387 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  005a5	8b 4d e4	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  005a8	51		 push	 ecx
  005a9	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  005ae	83 c4 04	 add	 esp, 4
  005b1	8b f0		 mov	 esi, eax
  005b3	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  005b6	52		 push	 edx
  005b7	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  005bc	83 c4 04	 add	 esp, 4
  005bf	8a 0e		 mov	 cl, BYTE PTR [esi]
  005c1	88 08		 mov	 BYTE PTR [eax], cl

; 1388 : 						this->_Color(_Fixnodeparent) = this->_Black;

  005c3	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  005c6	52		 push	 edx
  005c7	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  005cc	83 c4 04	 add	 esp, 4
  005cf	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1389 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;

  005d2	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  005d5	50		 push	 eax
  005d6	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  005db	83 c4 04	 add	 esp, 4
  005de	8b 08		 mov	 ecx, DWORD PTR [eax]
  005e0	51		 push	 ecx
  005e1	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  005e6	83 c4 04	 add	 esp, 4
  005e9	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1390 : 						_Lrotate(_Fixnodeparent);

  005ec	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  005ef	52		 push	 edx
  005f0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  005f3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Lrotate

; 1391 : 						break;	// tree now recolored/rebalanced

  005f8	e9 99 01 00 00	 jmp	 $LN3@erase
$LN32@erase:

; 1392 : 						}
; 1393 : 					}
; 1394 : 				else

  005fd	e9 8f 01 00 00	 jmp	 $LN29@erase
$LN28@erase:

; 1395 : 					{	// fixup right subtree
; 1396 : 					_Pnode = this->_Left(_Fixnodeparent);

  00602	8b 45 e4	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00605	50		 push	 eax
  00606	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  0060b	83 c4 04	 add	 esp, 4
  0060e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00610	89 4d e0	 mov	 DWORD PTR __Pnode$[ebp], ecx

; 1397 : 					if (this->_Color(_Pnode) == this->_Red)

  00613	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00616	52		 push	 edx
  00617	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  0061c	83 c4 04	 add	 esp, 4
  0061f	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00622	85 c0		 test	 eax, eax
  00624	75 3b		 jne	 SHORT $LN36@erase

; 1398 : 						{	// rotate red up from left subtree
; 1399 : 						this->_Color(_Pnode) = this->_Black;

  00626	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00629	51		 push	 ecx
  0062a	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  0062f	83 c4 04	 add	 esp, 4
  00632	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1400 : 						this->_Color(_Fixnodeparent) = this->_Red;

  00635	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  00638	52		 push	 edx
  00639	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  0063e	83 c4 04	 add	 esp, 4
  00641	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1401 : 						_Rrotate(_Fixnodeparent);

  00644	8b 45 e4	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  00647	50		 push	 eax
  00648	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0064b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Rrotate

; 1402 : 						_Pnode = this->_Left(_Fixnodeparent);

  00650	8b 4d e4	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  00653	51		 push	 ecx
  00654	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  00659	83 c4 04	 add	 esp, 4
  0065c	8b 10		 mov	 edx, DWORD PTR [eax]
  0065e	89 55 e0	 mov	 DWORD PTR __Pnode$[ebp], edx
$LN36@erase:

; 1403 : 						}
; 1404 : 
; 1405 : 					if (this->_Isnil(_Pnode))

  00661	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00664	50		 push	 eax
  00665	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Isnil
  0066a	83 c4 04	 add	 esp, 4
  0066d	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00670	85 c9		 test	 ecx, ecx
  00672	74 0b		 je	 SHORT $LN37@erase

; 1406 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen

  00674	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  00677	89 55 e8	 mov	 DWORD PTR __Fixnode$[ebp], edx

; 1407 : 					else if (this->_Color(this->_Right(_Pnode)) ==

  0067a	e9 12 01 00 00	 jmp	 $LN29@erase
$LN37@erase:

; 1408 : 						this->_Black
; 1409 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

  0067f	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00682	50		 push	 eax
  00683	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  00688	83 c4 04	 add	 esp, 4
  0068b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0068d	51		 push	 ecx
  0068e	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  00693	83 c4 04	 add	 esp, 4
  00696	0f be 10	 movsx	 edx, BYTE PTR [eax]
  00699	83 fa 01	 cmp	 edx, 1
  0069c	75 39		 jne	 SHORT $LN39@erase
  0069e	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  006a1	50		 push	 eax
  006a2	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  006a7	83 c4 04	 add	 esp, 4
  006aa	8b 08		 mov	 ecx, DWORD PTR [eax]
  006ac	51		 push	 ecx
  006ad	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  006b2	83 c4 04	 add	 esp, 4
  006b5	0f be 10	 movsx	 edx, BYTE PTR [eax]
  006b8	83 fa 01	 cmp	 edx, 1
  006bb	75 1a		 jne	 SHORT $LN39@erase

; 1410 : 						{	// redden left subtree with black children
; 1411 : 						this->_Color(_Pnode) = this->_Red;

  006bd	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  006c0	50		 push	 eax
  006c1	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  006c6	83 c4 04	 add	 esp, 4
  006c9	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1412 : 						_Fixnode = _Fixnodeparent;

  006cc	8b 4d e4	 mov	 ecx, DWORD PTR __Fixnodeparent$[ebp]
  006cf	89 4d e8	 mov	 DWORD PTR __Fixnode$[ebp], ecx

; 1413 : 						}
; 1414 : 					else

  006d2	e9 ba 00 00 00	 jmp	 $LN29@erase
$LN39@erase:

; 1415 : 						{	// must rearrange left subtree
; 1416 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

  006d7	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  006da	52		 push	 edx
  006db	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  006e0	83 c4 04	 add	 esp, 4
  006e3	8b 00		 mov	 eax, DWORD PTR [eax]
  006e5	50		 push	 eax
  006e6	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  006eb	83 c4 04	 add	 esp, 4
  006ee	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  006f1	83 f9 01	 cmp	 ecx, 1
  006f4	75 46		 jne	 SHORT $LN41@erase

; 1417 : 							{	// rotate red up from right sub-subtree
; 1418 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

  006f6	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  006f9	52		 push	 edx
  006fa	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  006ff	83 c4 04	 add	 esp, 4
  00702	8b 00		 mov	 eax, DWORD PTR [eax]
  00704	50		 push	 eax
  00705	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  0070a	83 c4 04	 add	 esp, 4
  0070d	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1419 : 							this->_Color(_Pnode) = this->_Red;

  00710	8b 4d e0	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00713	51		 push	 ecx
  00714	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  00719	83 c4 04	 add	 esp, 4
  0071c	c6 00 00	 mov	 BYTE PTR [eax], 0

; 1420 : 							_Lrotate(_Pnode);

  0071f	8b 55 e0	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00722	52		 push	 edx
  00723	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00726	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Lrotate

; 1421 : 							_Pnode = this->_Left(_Fixnodeparent);

  0072b	8b 45 e4	 mov	 eax, DWORD PTR __Fixnodeparent$[ebp]
  0072e	50		 push	 eax
  0072f	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  00734	83 c4 04	 add	 esp, 4
  00737	8b 08		 mov	 ecx, DWORD PTR [eax]
  00739	89 4d e0	 mov	 DWORD PTR __Pnode$[ebp], ecx
$LN41@erase:

; 1422 : 							}
; 1423 : 
; 1424 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  0073c	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  0073f	52		 push	 edx
  00740	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  00745	83 c4 04	 add	 esp, 4
  00748	8b f0		 mov	 esi, eax
  0074a	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0074d	50		 push	 eax
  0074e	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  00753	83 c4 04	 add	 esp, 4
  00756	8a 0e		 mov	 cl, BYTE PTR [esi]
  00758	88 08		 mov	 BYTE PTR [eax], cl

; 1425 : 						this->_Color(_Fixnodeparent) = this->_Black;

  0075a	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  0075d	52		 push	 edx
  0075e	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  00763	83 c4 04	 add	 esp, 4
  00766	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1426 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;

  00769	8b 45 e0	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0076c	50		 push	 eax
  0076d	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  00772	83 c4 04	 add	 esp, 4
  00775	8b 08		 mov	 ecx, DWORD PTR [eax]
  00777	51		 push	 ecx
  00778	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  0077d	83 c4 04	 add	 esp, 4
  00780	c6 00 01	 mov	 BYTE PTR [eax], 1

; 1427 : 						_Rrotate(_Fixnodeparent);

  00783	8b 55 e4	 mov	 edx, DWORD PTR __Fixnodeparent$[ebp]
  00786	52		 push	 edx
  00787	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0078a	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Rrotate

; 1428 : 						break;	// tree now recolored/rebalanced

  0078f	eb 05		 jmp	 SHORT $LN3@erase
$LN29@erase:

; 1429 : 						}
; 1430 : 					}

  00791	e9 82 fc ff ff	 jmp	 $LN2@erase
$LN3@erase:

; 1431 : 
; 1432 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

  00796	8b 45 e8	 mov	 eax, DWORD PTR __Fixnode$[ebp]
  00799	50		 push	 eax
  0079a	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  0079f	83 c4 04	 add	 esp, 4
  007a2	c6 00 01	 mov	 BYTE PTR [eax], 1
$LN27@erase:

; 1433 : 			}
; 1434 : 
; 1435 : 		this->_Getal().destroy(

  007a5	8b 4d ec	 mov	 ecx, DWORD PTR __Erasednode$[ebp]
  007a8	51		 push	 ecx
  007a9	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myval
  007ae	83 c4 04	 add	 esp, 4
  007b1	50		 push	 eax
  007b2	e8 00 00 00 00	 call	 ??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@0@AAU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >
  007b7	83 c4 04	 add	 esp, 4
  007ba	50		 push	 eax
  007bb	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  007be	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getal
  007c3	8b c8		 mov	 ecx, eax
  007c5	e8 00 00 00 00	 call	 ??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >

; 1436 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node
; 1437 : 
; 1438 : 		this->_Getal().deallocate(_Erasednode, 1);

  007ca	6a 01		 push	 1
  007cc	8b 55 ec	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  007cf	52		 push	 edx
  007d0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  007d3	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getal
  007d8	8b c8		 mov	 ecx, eax
  007da	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::deallocate

; 1439 : 
; 1440 : 		if (0 < this->_Mysize())

  007df	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  007e2	e8 00 00 00 00	 call	 ?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Mysize
  007e7	83 38 00	 cmp	 DWORD PTR [eax], 0
  007ea	76 18		 jbe	 SHORT $LN42@erase

; 1441 : 			--this->_Mysize();

  007ec	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  007ef	e8 00 00 00 00	 call	 ?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Mysize
  007f4	89 45 d0	 mov	 DWORD PTR tv434[ebp], eax
  007f7	8b 45 d0	 mov	 eax, DWORD PTR tv434[ebp]
  007fa	8b 08		 mov	 ecx, DWORD PTR [eax]
  007fc	83 e9 01	 sub	 ecx, 1
  007ff	8b 55 d0	 mov	 edx, DWORD PTR tv434[ebp]
  00802	89 0a		 mov	 DWORD PTR [edx], ecx
$LN42@erase:

; 1442 : 
; 1443 : 		return (iterator(_Where._Ptr,

  00804	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00807	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Get_data
  0080c	50		 push	 eax
  0080d	8b 45 14	 mov	 eax, DWORD PTR __Where$[ebp+8]
  00810	50		 push	 eax
  00811	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00814	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >
  00819	8b 4d dc	 mov	 ecx, DWORD PTR $T2[ebp]
  0081c	83 c9 01	 or	 ecx, 1
  0081f	89 4d dc	 mov	 DWORD PTR $T2[ebp], ecx
  00822	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00829	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  0082c	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
  00831	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1444 : 			&this->_Get_data()));	// return successor iterator
; 1445 : 		}

  00834	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00837	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0083e	59		 pop	 ecx
  0083f	5e		 pop	 esi
  00840	83 c4 30	 add	 esp, 48			; 00000030H
  00843	3b ec		 cmp	 ebp, esp
  00845	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0084a	8b e5		 mov	 esp, ebp
  0084c	5d		 pop	 ebp
  0084d	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@@Z$0:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::erase
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::operator++, COMDAT
; _this$ = ecx

; 256  : 		{	// preincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 257  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 258  : 		if (this->_Getcont() == 0
; 259  : 			|| this->_Ptr == 0
; 260  : 			|| _Mytree::_Isnil(this->_Ptr))

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 23		 je	 SHORT $LN3@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 1a		 je	 SHORT $LN3@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0002a	52		 push	 edx
  0002b	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::_Isnil
  00030	83 c4 04	 add	 esp, 4
  00033	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00036	85 c0		 test	 eax, eax
  00038	0f 84 86 00 00
	00		 je	 $LN2@operator
$LN3@operator:

; 261  : 			{	// report error
; 262  : 			_DEBUG_ERROR("map/set iterator not incrementable");

  0003e	8b f4		 mov	 esi, esp
  00040	68 06 01 00 00	 push	 262			; 00000106H
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@BEABFJGP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_1EG@EHJFMBHJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00055	83 c4 0c	 add	 esp, 12			; 0000000cH
  00058	3b f4		 cmp	 esi, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 263  : 			_SCL_SECURE_OUT_OF_RANGE;

  0005f	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00064	85 c9		 test	 ecx, ecx
  00066	74 04		 je	 SHORT $LN5@operator
  00068	33 d2		 xor	 edx, edx
  0006a	75 30		 jne	 SHORT $LN6@operator
$LN5@operator:
  0006c	8b f4		 mov	 esi, esp
  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00078	6a 00		 push	 0
  0007a	68 07 01 00 00	 push	 263			; 00000107H
  0007f	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@BEABFJGP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00084	6a 02		 push	 2
  00086	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0008c	83 c4 18	 add	 esp, 24			; 00000018H
  0008f	3b f4		 cmp	 esi, esp
  00091	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00096	83 f8 01	 cmp	 eax, 1
  00099	75 01		 jne	 SHORT $LN6@operator
  0009b	cc		 int	 3
$LN6@operator:
  0009c	8b f4		 mov	 esi, esp
  0009e	6a 00		 push	 0
  000a0	68 07 01 00 00	 push	 263			; 00000107H
  000a5	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@BEABFJGP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_1BMG@HPABLFEM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000ba	83 c4 14	 add	 esp, 20			; 00000014H
  000bd	3b f4		 cmp	 esi, esp
  000bf	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:

; 264  : 			}
; 265  : 
; 266  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 267  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 268  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 269  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 270  : 
; 271  : 		++(*(_Mybase *)this);

  000c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c7	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,std::_Iterator_base12>::operator++

; 272  : 		return (*this);

  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 273  : 		}

  000cf	5e		 pop	 esi
  000d0	83 c4 04	 add	 esp, 4
  000d3	3b ec		 cmp	 ebp, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c3		 ret	 0
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Orphan_all, COMDAT
; _this$ = ecx

; 814  : 		{	// orphan all iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 815  : 		_Get_data()._Orphan_all();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Get_data
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 816  : 		}

  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?_Orphan_all@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Myproxy, COMDAT
; _this$ = ecx

; 803  : 		{	// return reference to _Myproxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 804  : 		return (_Get_data()._Myproxy);

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Get_data

; 805  : 		}

  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Construct, COMDAT
; _this$ = ecx

; 742  : 		{	// construct head node, proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	51		 push	 ecx
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00031	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 743  : 		_Myhead() = _Buyheadnode();

  00034	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Buyheadnode
  0003c	8b f0		 mov	 esi, eax
  0003e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	e8 00 00 00 00	 call	 ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Myhead
  00046	89 30		 mov	 DWORD PTR [eax], esi

; 744  : 		_TRY_BEGIN

  00048	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 745  : 		_Alloc_proxy();

  0004f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Alloc_proxy
  00057	eb 22		 jmp	 SHORT $LN4@Construct
__catch$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ$0:

; 746  : 		_CATCH_ALL
; 747  : 		_Freeheadnode(_Myhead());

  00059	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Myhead
  00061	8b 00		 mov	 eax, DWORD PTR [eax]
  00063	50		 push	 eax
  00064	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	e8 00 00 00 00	 call	 ?_Freeheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Freeheadnode

; 748  : 		_RERAISE;

  0006c	6a 00		 push	 0
  0006e	6a 00		 push	 0
  00070	e8 00 00 00 00	 call	 __CxxThrowException@8

; 749  : 		_CATCH_END

  00075	b8 00 00 00 00	 mov	 eax, $LN7@Construct
  0007a	c3		 ret	 0
$LN4@Construct:
  0007b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00082	eb 07		 jmp	 SHORT $LN3@Construct
$LN7@Construct:
  00084	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
$LN3@Construct:

; 750  : 		}

  0008b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0008e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00095	59		 pop	 ecx
  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	5b		 pop	 ebx
  00099	83 c4 14	 add	 esp, 20			; 00000014H
  0009c	3b ec		 cmp	 ebp, esp
  0009e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Construct@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Construct
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Min, COMDAT

; 696  : 		{	// return leftmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 697  : 		return (_Tree_val<_Val_types>::_Min(_Pnode));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::_Min
  0000c	83 c4 04	 add	 esp, 4

; 698  : 		}

  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Min
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Max, COMDAT

; 691  : 		{	// return rightmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 692  : 		return (_Tree_val<_Val_types>::_Max(_Pnode));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::_Max
  0000c	83 c4 04	 add	 esp, 4

; 693  : 		}

  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Orphan_ptr, COMDAT
; _this$ = ecx

; 2178 : 		{	// orphan iterators with specified node pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00020	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00023	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00026	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 2179 : 		_Lockit _Lock(_LOCK_DEBUG);

  0003d	8b f4		 mov	 esi, esp
  0003f	6a 03		 push	 3
  00041	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2180 : 		const_iterator **_Pnext = (const_iterator **)this->_Getpfirst();

  00058	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Getpfirst
  00060	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax

; 2181 : 		if (_Pnext != 0)

  00063	83 7d e0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00067	74 5b		 je	 SHORT $LN4@Orphan_ptr
$LN2@Orphan_ptr:

; 2182 : 			while (*_Pnext != 0)

  00069	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  0006c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0006f	74 53		 je	 SHORT $LN4@Orphan_ptr

; 2183 : 				if ((*_Pnext)->_Ptr == this->_Myhead()
; 2184 : 					|| _Ptr != 0 && (*_Pnext)->_Ptr != _Ptr)

  00071	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00074	8b 31		 mov	 esi, DWORD PTR [ecx]
  00076	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00079	e8 00 00 00 00	 call	 ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Myhead
  0007e	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  00081	3b 10		 cmp	 edx, DWORD PTR [eax]
  00083	74 13		 je	 SHORT $LN7@Orphan_ptr
  00085	83 7d 08 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  00089	74 1c		 je	 SHORT $LN5@Orphan_ptr
  0008b	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  0008e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00090	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00093	3b 55 08	 cmp	 edx, DWORD PTR __Ptr$[ebp]
  00096	74 0f		 je	 SHORT $LN5@Orphan_ptr
$LN7@Orphan_ptr:

; 2185 : 					_Pnext = (const_iterator **)(*_Pnext)->_Getpnext();

  00098	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  0009b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009d	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000a2	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax

; 2186 : 				else

  000a5	eb 1b		 jmp	 SHORT $LN6@Orphan_ptr
$LN5@Orphan_ptr:

; 2187 : 					{	// orphan the iterator
; 2188 : 					(*_Pnext)->_Clrcont();

  000a7	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000aa	8b 09		 mov	 ecx, DWORD PTR [ecx]
  000ac	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont

; 2189 : 					*_Pnext = *(const_iterator **)(*_Pnext)->_Getpnext();

  000b1	8b 55 e0	 mov	 edx, DWORD PTR __Pnext$[ebp]
  000b4	8b 0a		 mov	 ecx, DWORD PTR [edx]
  000b6	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000bb	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000be	8b 10		 mov	 edx, DWORD PTR [eax]
  000c0	89 11		 mov	 DWORD PTR [ecx], edx
$LN6@Orphan_ptr:

; 2190 : 					}

  000c2	eb a5		 jmp	 SHORT $LN2@Orphan_ptr
$LN4@Orphan_ptr:

; 2191 : 		}

  000c4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000cb	8b f4		 mov	 esi, esp
  000cd	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000d6	3b f4		 cmp	 esi, esp
  000d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000dd	52		 push	 edx
  000de	8b cd		 mov	 ecx, ebp
  000e0	50		 push	 eax
  000e1	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ptr
  000e7	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000ec	58		 pop	 eax
  000ed	5a		 pop	 edx
  000ee	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f8	59		 pop	 ecx
  000f9	5e		 pop	 esi
  000fa	83 c4 20	 add	 esp, 32			; 00000020H
  000fd	3b ec		 cmp	 ebp, esp
  000ff	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00104	8b e5		 mov	 esp, ebp
  00106	5d		 pop	 ebp
  00107	c2 04 00	 ret	 4
  0010a	66 90		 npad	 2
$LN13@Orphan_ptr:
  0010c	01 00 00 00	 DD	 1
  00110	00 00 00 00	 DD	 $LN12@Orphan_ptr
$LN12@Orphan_ptr:
  00114	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00118	04 00 00 00	 DD	 4
  0011c	00 00 00 00	 DD	 $LN10@Orphan_ptr
$LN10@Orphan_ptr:
  00120	5f		 DB	 95			; 0000005fH
  00121	4c		 DB	 76			; 0000004cH
  00122	6f		 DB	 111			; 0000006fH
  00123	63		 DB	 99			; 00000063H
  00124	6b		 DB	 107			; 0000006bH
  00125	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Orphan_ptr
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$1 = -8						; size = 4
_this$ = -4						; size = 4
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 2060 : 		{	// free entire subtree, recursively

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2061 : 		for (_Nodeptr _Pnode = _Rootnode;

  00017	8b 45 08	 mov	 eax, DWORD PTR __Rootnode$[ebp]
  0001a	89 45 f8	 mov	 DWORD PTR __Pnode$1[ebp], eax
  0001d	eb 06		 jmp	 SHORT $LN4@Erase
$LN2@Erase:

; 2062 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

  0001f	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$1[ebp]
  00022	89 4d 08	 mov	 DWORD PTR __Rootnode$[ebp], ecx
$LN4@Erase:
  00025	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$1[ebp]
  00028	52		 push	 edx
  00029	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Isnil
  0002e	83 c4 04	 add	 esp, 4
  00031	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00034	85 c0		 test	 eax, eax
  00036	75 64		 jne	 SHORT $LN1@Erase

; 2063 : 			{	// free subtrees, then node
; 2064 : 			_Erase(this->_Right(_Pnode));

  00038	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$1[ebp]
  0003b	51		 push	 ecx
  0003c	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Right
  00041	83 c4 04	 add	 esp, 4
  00044	8b 10		 mov	 edx, DWORD PTR [eax]
  00046	52		 push	 edx
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Erase

; 2065 : 			_Pnode = this->_Left(_Pnode);

  0004f	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$1[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  00058	83 c4 04	 add	 esp, 4
  0005b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005d	89 4d f8	 mov	 DWORD PTR __Pnode$1[ebp], ecx

; 2066 : 			this->_Getal().destroy(

  00060	8b 55 08	 mov	 edx, DWORD PTR __Rootnode$[ebp]
  00063	52		 push	 edx
  00064	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Myval
  00069	83 c4 04	 add	 esp, 4
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@0@AAU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >
  00072	83 c4 04	 add	 esp, 4
  00075	50		 push	 eax
  00076	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00079	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Getal
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >

; 2067 : 				_STD addressof(this->_Myval(_Rootnode)));
; 2068 : 
; 2069 : 			this->_Getal().deallocate(_Rootnode, 1);

  00085	6a 01		 push	 1
  00087	8b 45 08	 mov	 eax, DWORD PTR __Rootnode$[ebp]
  0008a	50		 push	 eax
  0008b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008e	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Getal
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >::deallocate

; 2070 : 			}

  0009a	eb 83		 jmp	 SHORT $LN2@Erase
$LN1@Erase:

; 2071 : 		}

  0009c	83 c4 08	 add	 esp, 8
  0009f	3b ec		 cmp	 ebp, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?capacity@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QBEIXZ PROC ; std::vector<Mesh *,std::allocator<Mesh *> >::capacity, COMDAT
; _this$ = ecx

; 1041 : 		{	// return current length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1042 : 		return (this->_Myend() - this->_Myfirst());

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QBEABQAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Myend
  00017	8b f0		 mov	 esi, eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QBEABQAPAVMesh@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Myfirst
  00021	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00023	2b 08		 sub	 ecx, DWORD PTR [eax]
  00025	c1 f9 02	 sar	 ecx, 2
  00028	8b c1		 mov	 eax, ecx

; 1043 : 		}

  0002a	5e		 pop	 esi
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?capacity@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@QBEIXZ ENDP ; std::vector<Mesh *,std::allocator<Mesh *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?capacity@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QBEIXZ PROC ; std::vector<Material *,std::allocator<Material *> >::capacity, COMDAT
; _this$ = ecx

; 1041 : 		{	// return current length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1042 : 		return (this->_Myend() - this->_Myfirst());

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QBEABQAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Myend
  00017	8b f0		 mov	 esi, eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QBEABQAPAVMaterial@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Myfirst
  00021	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00023	2b 08		 sub	 ecx, DWORD PTR [eax]
  00025	c1 f9 02	 sar	 ecx, 2
  00028	8b c1		 mov	 eax, ecx

; 1043 : 		}

  0002a	5e		 pop	 esi
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?capacity@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@QBEIXZ ENDP ; std::vector<Material *,std::allocator<Material *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?capacity@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ PROC ; std::vector<MeshData *,std::allocator<MeshData *> >::capacity, COMDAT
; _this$ = ecx

; 1041 : 		{	// return current length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1042 : 		return (this->_Myend() - this->_Myfirst());

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABQAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myend
  00017	8b f0		 mov	 esi, eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QBEABQAPAVMeshData@@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Myfirst
  00021	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00023	2b 08		 sub	 ecx, DWORD PTR [eax]
  00025	c1 f9 02	 sar	 ecx, 2
  00028	8b c1		 mov	 eax, ecx

; 1043 : 		}

  0002a	5e		 pop	 esi
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?capacity@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@QBEIXZ ENDP ; std::vector<MeshData *,std::allocator<MeshData *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@PAVMeshData@@@std@@QAEXPAPAVMeshData@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@PAVMeshData@@@std@@QAEXPAPAVMeshData@@I@Z PROC ; std::allocator<MeshData *>::deallocate, COMDAT
; _this$ = ecx

; 637  : 		{	// deallocate object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 638  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  0000e	6a 04		 push	 4
  00010	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00013	50		 push	 eax
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00017	51		 push	 ecx
  00018	e8 00 00 00 00	 call	 ?_Deallocate@std@@YAXPAXII@Z ; std::_Deallocate
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 639  : 		}

  00020	83 c4 04	 add	 esp, 4
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVMeshData@@@std@@QAEXPAPAVMeshData@@I@Z ENDP ; std::allocator<MeshData *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QBEABQAV?$Vector2@M@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QBEABQAV?$Vector2@M@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myend, COMDAT
; _this$ = ecx

; 666  : 		{	// return const reference to _Myend

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 667  : 		return (_Get_data()._Myend);

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@V?$Vector2@M@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Get_data
  00016	83 c0 0c	 add	 eax, 12			; 0000000cH

; 668  : 		}

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QBEABQAV?$Vector2@M@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QBEABQAIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QBEABQAIXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myend, COMDAT
; _this$ = ecx

; 666  : 		{	// return const reference to _Myend

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 667  : 		return (_Get_data()._Myend);

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@I@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Get_data
  00016	83 c0 0c	 add	 eax, 12			; 0000000cH

; 668  : 		}

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QBEABQAIXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?capacity@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEIXZ PROC ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::capacity, COMDAT
; _this$ = ecx

; 1041 : 		{	// return current length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1042 : 		return (this->_Myend() - this->_Myfirst());

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QBEABQAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myend
  00017	8b f0		 mov	 esi, eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QBEABQAV?$Vector2@M@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Myfirst
  00021	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00023	2b 08		 sub	 ecx, DWORD PTR [eax]
  00025	c1 f9 03	 sar	 ecx, 3
  00028	8b c1		 mov	 eax, ecx

; 1043 : 		}

  0002a	5e		 pop	 esi
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?capacity@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@QBEIXZ ENDP ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::capacity, COMDAT
; _this$ = ecx

; 1041 : 		{	// return current length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1042 : 		return (this->_Myend() - this->_Myfirst());

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QBEABQAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myend
  00017	8b f0		 mov	 esi, eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QBEABQAIXZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Myfirst
  00021	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00023	2b 08		 sub	 ecx, DWORD PTR [eax]
  00025	c1 f9 02	 sar	 ecx, 2
  00028	8b c1		 mov	 eax, ecx

; 1043 : 		}

  0002a	5e		 pop	 esi
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QAE@XZ ; std::_Iterator_base12::_Iterator_base12
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@HPBU32@ABU32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,int,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const *,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 298  : 		{	// return const reference to first

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 299  : 		return (*this);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 300  : 		}

  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@PAVMeshData@@@std@@@std@@SAIABV?$allocator@PAVMeshData@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@PAVMeshData@@@std@@@std@@SAIABV?$allocator@PAVMeshData@@@2@@Z PROC ; std::allocator_traits<std::allocator<MeshData *> >::max_size, COMDAT

; 784  : 		{	// get maximum size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 785  : 		return (_Al.max_size());

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00006	e8 00 00 00 00	 call	 ?max_size@?$allocator@PAVMeshData@@@std@@QBEIXZ ; std::allocator<MeshData *>::max_size

; 786  : 		}

  0000b	3b ec		 cmp	 ebp, esp
  0000d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@PAVMeshData@@@std@@@std@@SAIABV?$allocator@PAVMeshData@@@2@@Z ENDP ; std::allocator_traits<std::allocator<MeshData *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Pnode$1 = -8						; size = 4
_this$ = -4						; size = 4
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,std::_Iterator_base12>::operator++, COMDAT
; _this$ = ecx

; 59   : 		{	// preincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 60   : 		if (_Mytree::_Isnil(_Ptr))

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::_Isnil
  00023	83 c4 04	 add	 esp, 4
  00026	0f be 10	 movsx	 edx, BYTE PTR [eax]
  00029	85 d2		 test	 edx, edx
  0002b	74 05		 je	 SHORT $LN4@operator
  0002d	e9 94 00 00 00	 jmp	 $LN5@operator
$LN4@operator:

; 61   : 			;	// end() shouldn't be incremented, don't move
; 62   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::_Right
  0003e	83 c4 04	 add	 esp, 4
  00041	8b 10		 mov	 edx, DWORD PTR [eax]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::_Isnil
  00049	83 c4 04	 add	 esp, 4
  0004c	0f be 00	 movsx	 eax, BYTE PTR [eax]
  0004f	85 c0		 test	 eax, eax
  00051	75 22		 jne	 SHORT $LN2@operator

; 63   : 			_Ptr = _Mytree::_Min(

  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00059	52		 push	 edx
  0005a	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::_Right
  0005f	83 c4 04	 add	 esp, 4
  00062	8b 00		 mov	 eax, DWORD PTR [eax]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::_Min
  0006a	83 c4 04	 add	 esp, 4
  0006d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 64   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree
; 65   : 		else

  00073	eb 51		 jmp	 SHORT $LN5@operator
$LN2@operator:

; 66   : 			{	// climb looking for right subtree
; 67   : 			_Nodeptr _Pnode;
; 68   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 69   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  00075	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00078	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::_Parent
  00081	83 c4 04	 add	 esp, 4
  00084	8b 08		 mov	 ecx, DWORD PTR [eax]
  00086	89 4d f8	 mov	 DWORD PTR __Pnode$1[ebp], ecx
  00089	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$1[ebp]
  0008c	52		 push	 edx
  0008d	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::_Isnil
  00092	83 c4 04	 add	 esp, 4
  00095	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00098	85 c0		 test	 eax, eax
  0009a	75 21		 jne	 SHORT $LN3@operator
  0009c	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$1[ebp]
  0009f	51		 push	 ecx
  000a0	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::_Right
  000a5	83 c4 04	 add	 esp, 4
  000a8	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ab	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  000ae	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000b0	75 0b		 jne	 SHORT $LN3@operator

; 70   : 				_Ptr = _Pnode;	// ==> parent while right subtree

  000b2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b5	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$1[ebp]
  000b8	89 42 08	 mov	 DWORD PTR [edx+8], eax
  000bb	eb b8		 jmp	 SHORT $LN2@operator
$LN3@operator:

; 71   : 			_Ptr = _Pnode;	// ==> parent (head if end())

  000bd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$1[ebp]
  000c3	89 51 08	 mov	 DWORD PTR [ecx+8], edx
$LN5@operator:

; 72   : 			}
; 73   : 		return (*this);

  000c6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 74   : 		}

  000c9	83 c4 08	 add	 esp, 8
  000cc	3b ec		 cmp	 ebp, esp
  000ce	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c3		 ret	 0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,std::_Iterator_base12>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 293  : 		{	// return reference to first

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 294  : 		return (*this);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 295  : 		}

  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator++, COMDAT
; _this$ = ecx

; 256  : 		{	// preincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 257  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 258  : 		if (this->_Getcont() == 0
; 259  : 			|| this->_Ptr == 0
; 260  : 			|| _Mytree::_Isnil(this->_Ptr))

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00017	85 c0		 test	 eax, eax
  00019	74 23		 je	 SHORT $LN3@operator
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00022	74 1a		 je	 SHORT $LN3@operator
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0002a	52		 push	 edx
  0002b	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Isnil
  00030	83 c4 04	 add	 esp, 4
  00033	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00036	85 c0		 test	 eax, eax
  00038	0f 84 86 00 00
	00		 je	 $LN2@operator
$LN3@operator:

; 261  : 			{	// report error
; 262  : 			_DEBUG_ERROR("map/set iterator not incrementable");

  0003e	8b f4		 mov	 esi, esp
  00040	68 06 01 00 00	 push	 262			; 00000106H
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@BEABFJGP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_1EG@EHJFMBHJ@?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb@
  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00055	83 c4 0c	 add	 esp, 12			; 0000000cH
  00058	3b f4		 cmp	 esi, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 263  : 			_SCL_SECURE_OUT_OF_RANGE;

  0005f	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  00064	85 c9		 test	 ecx, ecx
  00066	74 04		 je	 SHORT $LN5@operator
  00068	33 d2		 xor	 edx, edx
  0006a	75 30		 jne	 SHORT $LN6@operator
$LN5@operator:
  0006c	8b f4		 mov	 esi, esp
  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00078	6a 00		 push	 0
  0007a	68 07 01 00 00	 push	 263			; 00000107H
  0007f	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@BEABFJGP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00084	6a 02		 push	 2
  00086	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0008c	83 c4 18	 add	 esp, 24			; 00000018H
  0008f	3b f4		 cmp	 esi, esp
  00091	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00096	83 f8 01	 cmp	 eax, 1
  00099	75 01		 jne	 SHORT $LN6@operator
  0009b	cc		 int	 3
$LN6@operator:
  0009c	8b f4		 mov	 esi, esp
  0009e	6a 00		 push	 0
  000a0	68 07 01 00 00	 push	 263			; 00000107H
  000a5	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@BEABFJGP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_1BNC@HDOMJDKK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAT?$AAr?$AAe?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000ba	83 c4 14	 add	 esp, 20			; 00000014H
  000bd	3b f4		 cmp	 esi, esp
  000bf	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@operator:

; 264  : 			}
; 265  : 
; 266  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 267  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 268  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 269  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 270  : 
; 271  : 		++(*(_Mybase *)this);

  000c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c7	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::operator++

; 272  : 		return (*this);

  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 273  : 		}

  000cf	5e		 pop	 esi
  000d0	83 c4 04	 add	 esp, 4
  000d3	3b ec		 cmp	 ebp, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c3		 ret	 0
??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Right, COMDAT

; 596  : 		{	// return reference to right pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 597  : 		return ((_Nodepref)_Pnode->_Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 08	 add	 eax, 8

; 598  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Right
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Parent, COMDAT

; 591  : 		{	// return reference to parent pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 592  : 		return ((_Nodepref)_Pnode->_Parent);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 04	 add	 eax, 4

; 593  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Parent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Left, COMDAT

; 586  : 		{	// return reference to left pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 587  : 		return ((_Nodepref)_Pnode->_Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 588  : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Left
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::deallocate, COMDAT
; _this$ = ecx

; 637  : 		{	// deallocate object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 638  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

  0000e	6a 30		 push	 48			; 00000030H
  00010	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00013	50		 push	 eax
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00017	51		 push	 ecx
  00018	e8 00 00 00 00	 call	 ?_Deallocate@std@@YAXPAXII@Z ; std::_Deallocate
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 639  : 		}

  00020	83 c4 04	 add	 esp, 4
  00023	3b ec		 cmp	 ebp, esp
  00025	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Mysize, COMDAT
; _this$ = ecx

; 947  : 		{	// return reference to _Mysize

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 948  : 		return (_Get_data()._Mysize);

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Get_data
  00016	83 c0 08	 add	 eax, 8

; 949  : 		}

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?_Mysize@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAIXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myhead, COMDAT
; _this$ = ecx

; 942  : 		{	// return const reference to _Myhead

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 943  : 		return (_Get_data()._Myhead);

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Get_data
  00016	83 c0 04	 add	 eax, 4

; 944  : 		}

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myhead
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ
_TEXT	SEGMENT
tv145 = -44						; size = 4
tv144 = -40						; size = 4
tv143 = -36						; size = 4
__Pnode$ = -28						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Buyheadnode, COMDAT
; _this$ = ecx

; 824  : 		{	// get head node using current allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	89 45 d4	 mov	 DWORD PTR [ebp-44], eax
  00020	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  00023	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00026	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00029	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0002c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0002f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00037	33 c5		 xor	 eax, ebp
  00039	50		 push	 eax
  0003a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  0003d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00043	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00046	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 825  : 		_Nodeptr _Pnode = _Getal().allocate(1);

  00049	6a 01		 push	 1
  0004b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getal
  00053	8b c8		 mov	 ecx, eax
  00055	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::allocate
  0005a	89 45 e4	 mov	 DWORD PTR __Pnode$[ebp], eax

; 826  : 
; 827  : 		_TRY_BEGIN

  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 828  : 		_Getal().construct(

  00064	8b 45 e4	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00067	50		 push	 eax
  00068	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  0006d	83 c4 04	 add	 esp, 4
  00070	89 45 dc	 mov	 DWORD PTR tv143[ebp], eax
  00073	8d 4d e4	 lea	 ecx, DWORD PTR __Pnode$[ebp]
  00076	51		 push	 ecx
  00077	8b 55 dc	 mov	 edx, DWORD PTR tv143[ebp]
  0007a	52		 push	 edx
  0007b	e8 00 00 00 00	 call	 ??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>
  00080	83 c4 04	 add	 esp, 4
  00083	50		 push	 eax
  00084	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00087	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getal
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::construct<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> * &>

; 829  : 			_STD addressof(_Left(_Pnode)), _Pnode);
; 830  : 		_Getal().construct(

  00093	8b 45 e4	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  0009c	83 c4 04	 add	 esp, 4
  0009f	89 45 d8	 mov	 DWORD PTR tv144[ebp], eax
  000a2	8d 4d e4	 lea	 ecx, DWORD PTR __Pnode$[ebp]
  000a5	51		 push	 ecx
  000a6	8b 55 d8	 mov	 edx, DWORD PTR tv144[ebp]
  000a9	52		 push	 edx
  000aa	e8 00 00 00 00	 call	 ??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>
  000af	83 c4 04	 add	 esp, 4
  000b2	50		 push	 eax
  000b3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b6	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getal
  000bb	8b c8		 mov	 ecx, eax
  000bd	e8 00 00 00 00	 call	 ??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::construct<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> * &>

; 831  : 			_STD addressof(_Parent(_Pnode)), _Pnode);
; 832  : 		_Getal().construct(

  000c2	8b 45 e4	 mov	 eax, DWORD PTR __Pnode$[ebp]
  000c5	50		 push	 eax
  000c6	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  000cb	83 c4 04	 add	 esp, 4
  000ce	89 45 d4	 mov	 DWORD PTR tv145[ebp], eax
  000d1	8d 4d e4	 lea	 ecx, DWORD PTR __Pnode$[ebp]
  000d4	51		 push	 ecx
  000d5	8b 55 d4	 mov	 edx, DWORD PTR tv145[ebp]
  000d8	52		 push	 edx
  000d9	e8 00 00 00 00	 call	 ??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>
  000de	83 c4 04	 add	 esp, 4
  000e1	50		 push	 eax
  000e2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e5	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getal
  000ea	8b c8		 mov	 ecx, eax
  000ec	e8 00 00 00 00	 call	 ??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::construct<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> * &>
  000f1	eb 24		 jmp	 SHORT $LN4@Buyheadnod
__catch$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ$0:

; 833  : 			_STD addressof(_Right(_Pnode)), _Pnode);
; 834  : 		_CATCH_ALL
; 835  : 		_Getal().deallocate(_Pnode, 1);

  000f3	6a 01		 push	 1
  000f5	8b 45 e4	 mov	 eax, DWORD PTR __Pnode$[ebp]
  000f8	50		 push	 eax
  000f9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000fc	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getal
  00101	8b c8		 mov	 ecx, eax
  00103	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::deallocate

; 836  : 		_RERAISE;

  00108	6a 00		 push	 0
  0010a	6a 00		 push	 0
  0010c	e8 00 00 00 00	 call	 __CxxThrowException@8

; 837  : 		_CATCH_END

  00111	b8 00 00 00 00	 mov	 eax, $LN7@Buyheadnod
  00116	c3		 ret	 0
$LN4@Buyheadnod:
  00117	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0011e	eb 07		 jmp	 SHORT __tryend$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ$1
$LN7@Buyheadnod:
  00120	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ$1:

; 838  : 
; 839  : 		_Color(_Pnode) = _Black;

  00127	8b 4d e4	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0012a	51		 push	 ecx
  0012b	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
  00130	83 c4 04	 add	 esp, 4
  00133	c6 00 01	 mov	 BYTE PTR [eax], 1

; 840  : 		_Isnil(_Pnode) = true;

  00136	8b 55 e4	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00139	52		 push	 edx
  0013a	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Isnil
  0013f	83 c4 04	 add	 esp, 4
  00142	c6 00 01	 mov	 BYTE PTR [eax], 1

; 841  : 		return (_Pnode);

  00145	8b 45 e4	 mov	 eax, DWORD PTR __Pnode$[ebp]
$LN3@Buyheadnod:

; 842  : 		}

  00148	52		 push	 edx
  00149	8b cd		 mov	 ecx, ebp
  0014b	50		 push	 eax
  0014c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@Buyheadnod
  00152	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00157	58		 pop	 eax
  00158	5a		 pop	 edx
  00159	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0015c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00163	59		 pop	 ecx
  00164	5f		 pop	 edi
  00165	5e		 pop	 esi
  00166	5b		 pop	 ebx
  00167	83 c4 2c	 add	 esp, 44			; 0000002cH
  0016a	3b ec		 cmp	 ebp, esp
  0016c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00171	8b e5		 mov	 esp, ebp
  00173	5d		 pop	 ebp
  00174	c3		 ret	 0
  00175	0f 1f 00	 npad	 3
$LN11@Buyheadnod:
  00178	01 00 00 00	 DD	 1
  0017c	00 00 00 00	 DD	 $LN10@Buyheadnod
$LN10@Buyheadnod:
  00180	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00184	04 00 00 00	 DD	 4
  00188	00 00 00 00	 DD	 $LN8@Buyheadnod
$LN8@Buyheadnod:
  0018c	5f		 DB	 95			; 0000005fH
  0018d	50		 DB	 80			; 00000050H
  0018e	6e		 DB	 110			; 0000006eH
  0018f	6f		 DB	 111			; 0000006fH
  00190	64		 DB	 100			; 00000064H
  00191	65		 DB	 101			; 00000065H
  00192	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Buyheadnode
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Alloc_proxy, COMDAT
; _this$ = ecx

; 779  : 		{	// construct proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 780  : 		typename _Alty::template rebind<_Container_proxy>::other
; 781  : 			_Alproxy(_Getal());

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getal
  00029	50		 push	 eax
  0002a	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0002d	e8 00 00 00 00	 call	 ??$?0U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > > >

; 782  : 		_Myproxy() = _Alproxy.allocate(1);

  00032	6a 01		 push	 1
  00034	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00037	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  0003c	8b f0		 mov	 esi, eax
  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	e8 00 00 00 00	 call	 ?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myproxy
  00046	89 30		 mov	 DWORD PTR [eax], esi

; 783  : 		_Alproxy.construct(_Myproxy(), _Container_proxy());

  00048	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  0004b	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  00050	50		 push	 eax
  00051	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myproxy
  00059	8b 00		 mov	 eax, DWORD PTR [eax]
  0005b	50		 push	 eax
  0005c	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0005f	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 784  : 		_Myproxy()->_Mycont = &_Get_data();

  00064	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Get_data
  0006c	8b f0		 mov	 esi, eax
  0006e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	e8 00 00 00 00	 call	 ?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myproxy
  00076	8b 08		 mov	 ecx, DWORD PTR [eax]
  00078	89 31		 mov	 DWORD PTR [ecx], esi

; 785  : 		}

  0007a	52		 push	 edx
  0007b	8b cd		 mov	 ecx, ebp
  0007d	50		 push	 eax
  0007e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00084	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00089	58		 pop	 eax
  0008a	5a		 pop	 edx
  0008b	5e		 pop	 esi
  0008c	83 c4 18	 add	 esp, 24			; 00000018H
  0008f	3b ec		 cmp	 ebp, esp
  00091	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c3		 ret	 0
  0009a	66 90		 npad	 2
$LN5@Alloc_prox:
  0009c	01 00 00 00	 DD	 1
  000a0	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  000a4	f7 ff ff ff	 DD	 -9			; fffffff7H
  000a8	01 00 00 00	 DD	 1
  000ac	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  000b0	5f		 DB	 95			; 0000005fH
  000b1	41		 DB	 65			; 00000041H
  000b2	6c		 DB	 108			; 0000006cH
  000b3	70		 DB	 112			; 00000070H
  000b4	72		 DB	 114			; 00000072H
  000b5	6f		 DB	 111			; 0000006fH
  000b6	78		 DB	 120			; 00000078H
  000b7	79		 DB	 121			; 00000079H
  000b8	00		 DB	 0
?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Min, COMDAT

; 696  : 		{	// return leftmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 697  : 		return (_Tree_val<_Val_types>::_Min(_Pnode));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Min
  0000c	83 c4 04	 add	 esp, 4

; 698  : 		}

  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?_Min@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Min
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Max, COMDAT

; 691  : 		{	// return rightmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 692  : 		return (_Tree_val<_Val_types>::_Max(_Pnode));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Max
  0000c	83 c4 04	 add	 esp, 4

; 693  : 		}

  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?_Max@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Isnil, COMDAT

; 666  : 		{	// return reference to nil flag in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 667  : 		return (_Tree_val<_Val_types>::_Isnil(_Pnode));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Isnil
  0000c	83 c4 04	 add	 esp, 4

; 668  : 		}

  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Isnil
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color, COMDAT

; 661  : 		{	// return reference to color in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 662  : 		return (_Tree_val<_Val_types>::_Color(_Pnode));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Color
  0000c	83 c4 04	 add	 esp, 4

; 663  : 		}

  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Color
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Orphan_ptr, COMDAT
; _this$ = ecx

; 2178 : 		{	// orphan iterators with specified node pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00020	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00023	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00026	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 2179 : 		_Lockit _Lock(_LOCK_DEBUG);

  0003d	8b f4		 mov	 esi, esp
  0003f	6a 03		 push	 3
  00041	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2180 : 		const_iterator **_Pnext = (const_iterator **)this->_Getpfirst();

  00058	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getpfirst
  00060	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax

; 2181 : 		if (_Pnext != 0)

  00063	83 7d e0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00067	74 5b		 je	 SHORT $LN4@Orphan_ptr
$LN2@Orphan_ptr:

; 2182 : 			while (*_Pnext != 0)

  00069	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  0006c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0006f	74 53		 je	 SHORT $LN4@Orphan_ptr

; 2183 : 				if ((*_Pnext)->_Ptr == this->_Myhead()
; 2184 : 					|| _Ptr != 0 && (*_Pnext)->_Ptr != _Ptr)

  00071	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00074	8b 31		 mov	 esi, DWORD PTR [ecx]
  00076	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00079	e8 00 00 00 00	 call	 ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myhead
  0007e	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  00081	3b 10		 cmp	 edx, DWORD PTR [eax]
  00083	74 13		 je	 SHORT $LN7@Orphan_ptr
  00085	83 7d 08 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  00089	74 1c		 je	 SHORT $LN5@Orphan_ptr
  0008b	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  0008e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00090	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00093	3b 55 08	 cmp	 edx, DWORD PTR __Ptr$[ebp]
  00096	74 0f		 je	 SHORT $LN5@Orphan_ptr
$LN7@Orphan_ptr:

; 2185 : 					_Pnext = (const_iterator **)(*_Pnext)->_Getpnext();

  00098	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  0009b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009d	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000a2	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax

; 2186 : 				else

  000a5	eb 1b		 jmp	 SHORT $LN6@Orphan_ptr
$LN5@Orphan_ptr:

; 2187 : 					{	// orphan the iterator
; 2188 : 					(*_Pnext)->_Clrcont();

  000a7	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000aa	8b 09		 mov	 ecx, DWORD PTR [ecx]
  000ac	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont

; 2189 : 					*_Pnext = *(const_iterator **)(*_Pnext)->_Getpnext();

  000b1	8b 55 e0	 mov	 edx, DWORD PTR __Pnext$[ebp]
  000b4	8b 0a		 mov	 ecx, DWORD PTR [edx]
  000b6	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000bb	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000be	8b 10		 mov	 edx, DWORD PTR [eax]
  000c0	89 11		 mov	 DWORD PTR [ecx], edx
$LN6@Orphan_ptr:

; 2190 : 					}

  000c2	eb a5		 jmp	 SHORT $LN2@Orphan_ptr
$LN4@Orphan_ptr:

; 2191 : 		}

  000c4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000cb	8b f4		 mov	 esi, esp
  000cd	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000d6	3b f4		 cmp	 esi, esp
  000d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000dd	52		 push	 edx
  000de	8b cd		 mov	 ecx, ebp
  000e0	50		 push	 eax
  000e1	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ptr
  000e7	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000ec	58		 pop	 eax
  000ed	5a		 pop	 edx
  000ee	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f8	59		 pop	 ecx
  000f9	5e		 pop	 esi
  000fa	83 c4 20	 add	 esp, 32			; 00000020H
  000fd	3b ec		 cmp	 ebp, esp
  000ff	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00104	8b e5		 mov	 esp, ebp
  00106	5d		 pop	 ebp
  00107	c2 04 00	 ret	 4
  0010a	66 90		 npad	 2
$LN13@Orphan_ptr:
  0010c	01 00 00 00	 DD	 1
  00110	00 00 00 00	 DD	 $LN12@Orphan_ptr
$LN12@Orphan_ptr:
  00114	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00118	04 00 00 00	 DD	 4
  0011c	00 00 00 00	 DD	 $LN10@Orphan_ptr
$LN10@Orphan_ptr:
  00120	5f		 DB	 95			; 0000005fH
  00121	4c		 DB	 76			; 0000004cH
  00122	6f		 DB	 111			; 0000006fH
  00123	63		 DB	 99			; 00000063H
  00124	6b		 DB	 107			; 0000006bH
  00125	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_ptr@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Orphan_ptr
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 2139 : 		{	// promote left node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2140 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

  00018	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  00021	83 c4 04	 add	 esp, 4
  00024	8b 08		 mov	 ecx, DWORD PTR [eax]
  00026	89 4d f8	 mov	 DWORD PTR __Pnode$[ebp], ecx

; 2141 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

  00029	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0002c	52		 push	 edx
  0002d	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  00032	83 c4 04	 add	 esp, 4
  00035	8b f0		 mov	 esi, eax
  00037	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  00040	83 c4 04	 add	 esp, 4
  00043	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00045	89 08		 mov	 DWORD PTR [eax], ecx

; 2142 : 
; 2143 : 		if (!this->_Isnil(this->_Right(_Pnode)))

  00047	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0004a	52		 push	 edx
  0004b	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  00050	83 c4 04	 add	 esp, 4
  00053	8b 00		 mov	 eax, DWORD PTR [eax]
  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Isnil
  0005b	83 c4 04	 add	 esp, 4
  0005e	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00061	85 c9		 test	 ecx, ecx
  00063	75 1c		 jne	 SHORT $LN2@Rrotate

; 2144 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

  00065	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00068	52		 push	 edx
  00069	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  0006e	83 c4 04	 add	 esp, 4
  00071	8b 00		 mov	 eax, DWORD PTR [eax]
  00073	50		 push	 eax
  00074	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  00079	83 c4 04	 add	 esp, 4
  0007c	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  0007f	89 08		 mov	 DWORD PTR [eax], ecx
$LN2@Rrotate:

; 2145 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  00081	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00084	52		 push	 edx
  00085	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  0008a	83 c4 04	 add	 esp, 4
  0008d	8b f0		 mov	 esi, eax
  0008f	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  00098	83 c4 04	 add	 esp, 4
  0009b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0009d	89 08		 mov	 DWORD PTR [eax], ecx

; 2146 : 
; 2147 : 		if (_Wherenode == _Root())

  0009f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a2	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Root
  000a7	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000aa	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ac	75 0f		 jne	 SHORT $LN3@Rrotate

; 2148 : 			_Root() = _Pnode;

  000ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Root
  000b6	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  000b9	89 08		 mov	 DWORD PTR [eax], ecx
  000bb	eb 58		 jmp	 SHORT $LN4@Rrotate
$LN3@Rrotate:

; 2149 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

  000bd	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000c0	52		 push	 edx
  000c1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  000c6	83 c4 04	 add	 esp, 4
  000c9	8b 00		 mov	 eax, DWORD PTR [eax]
  000cb	50		 push	 eax
  000cc	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  000d1	83 c4 04	 add	 esp, 4
  000d4	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  000d7	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000d9	75 1e		 jne	 SHORT $LN5@Rrotate

; 2150 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  000db	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000de	52		 push	 edx
  000df	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  000e4	83 c4 04	 add	 esp, 4
  000e7	8b 00		 mov	 eax, DWORD PTR [eax]
  000e9	50		 push	 eax
  000ea	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  000ef	83 c4 04	 add	 esp, 4
  000f2	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  000f5	89 08		 mov	 DWORD PTR [eax], ecx

; 2151 : 		else

  000f7	eb 1c		 jmp	 SHORT $LN4@Rrotate
$LN5@Rrotate:

; 2152 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  000f9	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000fc	52		 push	 edx
  000fd	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  00102	83 c4 04	 add	 esp, 4
  00105	8b 00		 mov	 eax, DWORD PTR [eax]
  00107	50		 push	 eax
  00108	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  0010d	83 c4 04	 add	 esp, 4
  00110	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00113	89 08		 mov	 DWORD PTR [eax], ecx
$LN4@Rrotate:

; 2153 : 
; 2154 : 		this->_Right(_Pnode) = _Wherenode;

  00115	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00118	52		 push	 edx
  00119	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  0011e	83 c4 04	 add	 esp, 4
  00121	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  00124	89 08		 mov	 DWORD PTR [eax], ecx

; 2155 : 		this->_Parent(_Wherenode) = _Pnode;

  00126	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00129	52		 push	 edx
  0012a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  0012f	83 c4 04	 add	 esp, 4
  00132	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00135	89 08		 mov	 DWORD PTR [eax], ecx

; 2156 : 		}

  00137	5e		 pop	 esi
  00138	83 c4 08	 add	 esp, 8
  0013b	3b ec		 cmp	 ebp, esp
  0013d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00142	8b e5		 mov	 esp, ebp
  00144	5d		 pop	 ebp
  00145	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Rrotate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 2134 : 		{	// return root of nonmutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2135 : 		return (this->_Parent(this->_Myhead()));

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myhead
  00016	8b 00		 mov	 eax, DWORD PTR [eax]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  0001e	83 c4 04	 add	 esp, 4

; 2136 : 		}

  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Root
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 2129 : 		{	// return rightmost node in nonmutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2130 : 		return (this->_Right(this->_Myhead()));

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myhead
  00016	8b 00		 mov	 eax, DWORD PTR [eax]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  0001e	83 c4 04	 add	 esp, 4

; 2131 : 		}

  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Rmost
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 2109 : 		{	// promote right node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2110 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

  00018	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  00021	83 c4 04	 add	 esp, 4
  00024	8b 08		 mov	 ecx, DWORD PTR [eax]
  00026	89 4d f8	 mov	 DWORD PTR __Pnode$[ebp], ecx

; 2111 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

  00029	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0002c	52		 push	 edx
  0002d	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  00032	83 c4 04	 add	 esp, 4
  00035	8b f0		 mov	 esi, eax
  00037	8b 45 08	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  00040	83 c4 04	 add	 esp, 4
  00043	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00045	89 08		 mov	 DWORD PTR [eax], ecx

; 2112 : 
; 2113 : 		if (!this->_Isnil(this->_Left(_Pnode)))

  00047	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0004a	52		 push	 edx
  0004b	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  00050	83 c4 04	 add	 esp, 4
  00053	8b 00		 mov	 eax, DWORD PTR [eax]
  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Isnil
  0005b	83 c4 04	 add	 esp, 4
  0005e	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00061	85 c9		 test	 ecx, ecx
  00063	75 1c		 jne	 SHORT $LN2@Lrotate

; 2114 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

  00065	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00068	52		 push	 edx
  00069	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  0006e	83 c4 04	 add	 esp, 4
  00071	8b 00		 mov	 eax, DWORD PTR [eax]
  00073	50		 push	 eax
  00074	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  00079	83 c4 04	 add	 esp, 4
  0007c	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  0007f	89 08		 mov	 DWORD PTR [eax], ecx
$LN2@Lrotate:

; 2115 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  00081	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00084	52		 push	 edx
  00085	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  0008a	83 c4 04	 add	 esp, 4
  0008d	8b f0		 mov	 esi, eax
  0008f	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  00098	83 c4 04	 add	 esp, 4
  0009b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0009d	89 08		 mov	 DWORD PTR [eax], ecx

; 2116 : 
; 2117 : 		if (_Wherenode == _Root())

  0009f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a2	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Root
  000a7	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000aa	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ac	75 0f		 jne	 SHORT $LN3@Lrotate

; 2118 : 			_Root() = _Pnode;

  000ae	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Root
  000b6	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  000b9	89 08		 mov	 DWORD PTR [eax], ecx
  000bb	eb 58		 jmp	 SHORT $LN4@Lrotate
$LN3@Lrotate:

; 2119 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

  000bd	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000c0	52		 push	 edx
  000c1	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  000c6	83 c4 04	 add	 esp, 4
  000c9	8b 00		 mov	 eax, DWORD PTR [eax]
  000cb	50		 push	 eax
  000cc	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  000d1	83 c4 04	 add	 esp, 4
  000d4	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  000d7	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000d9	75 1e		 jne	 SHORT $LN5@Lrotate

; 2120 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  000db	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000de	52		 push	 edx
  000df	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  000e4	83 c4 04	 add	 esp, 4
  000e7	8b 00		 mov	 eax, DWORD PTR [eax]
  000e9	50		 push	 eax
  000ea	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  000ef	83 c4 04	 add	 esp, 4
  000f2	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  000f5	89 08		 mov	 DWORD PTR [eax], ecx

; 2121 : 		else

  000f7	eb 1c		 jmp	 SHORT $LN4@Lrotate
$LN5@Lrotate:

; 2122 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  000f9	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  000fc	52		 push	 edx
  000fd	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  00102	83 c4 04	 add	 esp, 4
  00105	8b 00		 mov	 eax, DWORD PTR [eax]
  00107	50		 push	 eax
  00108	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  0010d	83 c4 04	 add	 esp, 4
  00110	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00113	89 08		 mov	 DWORD PTR [eax], ecx
$LN4@Lrotate:

; 2123 : 
; 2124 : 		this->_Left(_Pnode) = _Wherenode;

  00115	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00118	52		 push	 edx
  00119	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  0011e	83 c4 04	 add	 esp, 4
  00121	8b 4d 08	 mov	 ecx, DWORD PTR __Wherenode$[ebp]
  00124	89 08		 mov	 DWORD PTR [eax], ecx

; 2125 : 		this->_Parent(_Wherenode) = _Pnode;

  00126	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00129	52		 push	 edx
  0012a	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Parent
  0012f	83 c4 04	 add	 esp, 4
  00132	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00135	89 08		 mov	 DWORD PTR [eax], ecx

; 2126 : 		}

  00137	5e		 pop	 esi
  00138	83 c4 08	 add	 esp, 8
  0013b	3b ec		 cmp	 ebp, esp
  0013d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00142	8b e5		 mov	 esp, ebp
  00144	5d		 pop	 ebp
  00145	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Lrotate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$1 = -8						; size = 4
_this$ = -4						; size = 4
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 2060 : 		{	// free entire subtree, recursively

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2061 : 		for (_Nodeptr _Pnode = _Rootnode;

  00017	8b 45 08	 mov	 eax, DWORD PTR __Rootnode$[ebp]
  0001a	89 45 f8	 mov	 DWORD PTR __Pnode$1[ebp], eax
  0001d	eb 06		 jmp	 SHORT $LN4@Erase
$LN2@Erase:

; 2062 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

  0001f	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$1[ebp]
  00022	89 4d 08	 mov	 DWORD PTR __Rootnode$[ebp], ecx
$LN4@Erase:
  00025	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$1[ebp]
  00028	52		 push	 edx
  00029	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Isnil
  0002e	83 c4 04	 add	 esp, 4
  00031	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00034	85 c0		 test	 eax, eax
  00036	75 64		 jne	 SHORT $LN1@Erase

; 2063 : 			{	// free subtrees, then node
; 2064 : 			_Erase(this->_Right(_Pnode));

  00038	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$1[ebp]
  0003b	51		 push	 ecx
  0003c	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  00041	83 c4 04	 add	 esp, 4
  00044	8b 10		 mov	 edx, DWORD PTR [eax]
  00046	52		 push	 edx
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Erase

; 2065 : 			_Pnode = this->_Left(_Pnode);

  0004f	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$1[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  00058	83 c4 04	 add	 esp, 4
  0005b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005d	89 4d f8	 mov	 DWORD PTR __Pnode$1[ebp], ecx

; 2066 : 			this->_Getal().destroy(

  00060	8b 55 08	 mov	 edx, DWORD PTR __Rootnode$[ebp]
  00063	52		 push	 edx
  00064	e8 00 00 00 00	 call	 ?_Myval@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myval
  00069	83 c4 04	 add	 esp, 4
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@0@AAU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >
  00072	83 c4 04	 add	 esp, 4
  00075	50		 push	 eax
  00076	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00079	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getal
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >

; 2067 : 				_STD addressof(this->_Myval(_Rootnode)));
; 2068 : 
; 2069 : 			this->_Getal().deallocate(_Rootnode, 1);

  00085	6a 01		 push	 1
  00087	8b 45 08	 mov	 eax, DWORD PTR __Rootnode$[ebp]
  0008a	50		 push	 eax
  0008b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008e	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getal
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::deallocate

; 2070 : 			}

  0009a	eb 83		 jmp	 SHORT $LN2@Erase
$LN1@Erase:

; 2071 : 		}

  0009c	83 c4 08	 add	 esp, 8
  0009f	3b ec		 cmp	 ebp, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::_Min, COMDAT

; 613  : 		{	// return leftmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
$LN2@Min:

; 614  : 		while (!_Isnil(_Left(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::_Left
  0000c	83 c4 04	 add	 esp, 4
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::_Isnil
  00017	83 c4 04	 add	 esp, 4
  0001a	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0001d	85 d2		 test	 edx, edx
  0001f	75 13		 jne	 SHORT $LN3@Min

; 615  : 			_Pnode = _Left(_Pnode);

  00021	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::_Left
  0002a	83 c4 04	 add	 esp, 4
  0002d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002f	89 4d 08	 mov	 DWORD PTR __Pnode$[ebp], ecx
  00032	eb cf		 jmp	 SHORT $LN2@Min
$LN3@Min:

; 616  : 		return (_Pnode);

  00034	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 617  : 		}

  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::_Min
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ
_TEXT	SEGMENT
tv145 = -44						; size = 4
tv144 = -40						; size = 4
tv143 = -36						; size = 4
__Pnode$ = -28						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Buyheadnode, COMDAT
; _this$ = ecx

; 824  : 		{	// get head node using current allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	89 45 d4	 mov	 DWORD PTR [ebp-44], eax
  00020	89 45 d8	 mov	 DWORD PTR [ebp-40], eax
  00023	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  00026	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  00029	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0002c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0002f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00037	33 c5		 xor	 eax, ebp
  00039	50		 push	 eax
  0003a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  0003d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00043	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00046	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 825  : 		_Nodeptr _Pnode = _Getal().allocate(1);

  00049	6a 01		 push	 1
  0004b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Getal
  00053	8b c8		 mov	 ecx, eax
  00055	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >::allocate
  0005a	89 45 e4	 mov	 DWORD PTR __Pnode$[ebp], eax

; 826  : 
; 827  : 		_TRY_BEGIN

  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 828  : 		_Getal().construct(

  00064	8b 45 e4	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00067	50		 push	 eax
  00068	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  0006d	83 c4 04	 add	 esp, 4
  00070	89 45 dc	 mov	 DWORD PTR tv143[ebp], eax
  00073	8d 4d e4	 lea	 ecx, DWORD PTR __Pnode$[ebp]
  00076	51		 push	 ecx
  00077	8b 55 dc	 mov	 edx, DWORD PTR tv143[ebp]
  0007a	52		 push	 edx
  0007b	e8 00 00 00 00	 call	 ??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> *>
  00080	83 c4 04	 add	 esp, 4
  00083	50		 push	 eax
  00084	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00087	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Getal
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >::construct<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> * &>

; 829  : 			_STD addressof(_Left(_Pnode)), _Pnode);
; 830  : 		_Getal().construct(

  00093	8b 45 e4	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Parent
  0009c	83 c4 04	 add	 esp, 4
  0009f	89 45 d8	 mov	 DWORD PTR tv144[ebp], eax
  000a2	8d 4d e4	 lea	 ecx, DWORD PTR __Pnode$[ebp]
  000a5	51		 push	 ecx
  000a6	8b 55 d8	 mov	 edx, DWORD PTR tv144[ebp]
  000a9	52		 push	 edx
  000aa	e8 00 00 00 00	 call	 ??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> *>
  000af	83 c4 04	 add	 esp, 4
  000b2	50		 push	 eax
  000b3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b6	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Getal
  000bb	8b c8		 mov	 ecx, eax
  000bd	e8 00 00 00 00	 call	 ??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >::construct<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> * &>

; 831  : 			_STD addressof(_Parent(_Pnode)), _Pnode);
; 832  : 		_Getal().construct(

  000c2	8b 45 e4	 mov	 eax, DWORD PTR __Pnode$[ebp]
  000c5	50		 push	 eax
  000c6	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Right
  000cb	83 c4 04	 add	 esp, 4
  000ce	89 45 d4	 mov	 DWORD PTR tv145[ebp], eax
  000d1	8d 4d e4	 lea	 ecx, DWORD PTR __Pnode$[ebp]
  000d4	51		 push	 ecx
  000d5	8b 55 d4	 mov	 edx, DWORD PTR tv145[ebp]
  000d8	52		 push	 edx
  000d9	e8 00 00 00 00	 call	 ??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> *>
  000de	83 c4 04	 add	 esp, 4
  000e1	50		 push	 eax
  000e2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e5	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Getal
  000ea	8b c8		 mov	 ecx, eax
  000ec	e8 00 00 00 00	 call	 ??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >::construct<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> * &>
  000f1	eb 24		 jmp	 SHORT $LN4@Buyheadnod
__catch$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ$0:

; 833  : 			_STD addressof(_Right(_Pnode)), _Pnode);
; 834  : 		_CATCH_ALL
; 835  : 		_Getal().deallocate(_Pnode, 1);

  000f3	6a 01		 push	 1
  000f5	8b 45 e4	 mov	 eax, DWORD PTR __Pnode$[ebp]
  000f8	50		 push	 eax
  000f9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000fc	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Getal
  00101	8b c8		 mov	 ecx, eax
  00103	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >::deallocate

; 836  : 		_RERAISE;

  00108	6a 00		 push	 0
  0010a	6a 00		 push	 0
  0010c	e8 00 00 00 00	 call	 __CxxThrowException@8

; 837  : 		_CATCH_END

  00111	b8 00 00 00 00	 mov	 eax, $LN7@Buyheadnod
  00116	c3		 ret	 0
$LN4@Buyheadnod:
  00117	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0011e	eb 07		 jmp	 SHORT __tryend$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ$1
$LN7@Buyheadnod:
  00120	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ$1:

; 838  : 
; 839  : 		_Color(_Pnode) = _Black;

  00127	8b 4d e4	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0012a	51		 push	 ecx
  0012b	e8 00 00 00 00	 call	 ?_Color@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Color
  00130	83 c4 04	 add	 esp, 4
  00133	c6 00 01	 mov	 BYTE PTR [eax], 1

; 840  : 		_Isnil(_Pnode) = true;

  00136	8b 55 e4	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00139	52		 push	 edx
  0013a	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Isnil
  0013f	83 c4 04	 add	 esp, 4
  00142	c6 00 01	 mov	 BYTE PTR [eax], 1

; 841  : 		return (_Pnode);

  00145	8b 45 e4	 mov	 eax, DWORD PTR __Pnode$[ebp]
$LN3@Buyheadnod:

; 842  : 		}

  00148	52		 push	 edx
  00149	8b cd		 mov	 ecx, ebp
  0014b	50		 push	 eax
  0014c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@Buyheadnod
  00152	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00157	58		 pop	 eax
  00158	5a		 pop	 edx
  00159	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0015c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00163	59		 pop	 ecx
  00164	5f		 pop	 edi
  00165	5e		 pop	 esi
  00166	5b		 pop	 ebx
  00167	83 c4 2c	 add	 esp, 44			; 0000002cH
  0016a	3b ec		 cmp	 ebp, esp
  0016c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00171	8b e5		 mov	 esp, ebp
  00173	5d		 pop	 ebp
  00174	c3		 ret	 0
  00175	0f 1f 00	 npad	 3
$LN11@Buyheadnod:
  00178	01 00 00 00	 DD	 1
  0017c	00 00 00 00	 DD	 $LN10@Buyheadnod
$LN10@Buyheadnod:
  00180	e4 ff ff ff	 DD	 -28			; ffffffe4H
  00184	04 00 00 00	 DD	 4
  00188	00 00 00 00	 DD	 $LN8@Buyheadnod
$LN8@Buyheadnod:
  0018c	5f		 DB	 95			; 0000005fH
  0018d	50		 DB	 80			; 00000050H
  0018e	6e		 DB	 110			; 0000006eH
  0018f	6f		 DB	 111			; 0000006fH
  00190	64		 DB	 100			; 00000064H
  00191	65		 DB	 101			; 00000065H
  00192	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a d0	 mov	 ecx, DWORD PTR [edx-48]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Buyheadnode
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Getpfirst, COMDAT
; _this$ = ecx

; 798  : 		{	// get address of iterator chain

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 799  : 		return (_Get_data()._Getpfirst());

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Get_data
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst

; 800  : 		}

  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Alloc_proxy, COMDAT
; _this$ = ecx

; 779  : 		{	// construct proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000f	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00012	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00015	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00018	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001b	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001e	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 780  : 		typename _Alty::template rebind<_Container_proxy>::other
; 781  : 			_Alproxy(_Getal());

  00021	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?_Getal@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Getal
  00029	50		 push	 eax
  0002a	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0002d	e8 00 00 00 00	 call	 ??$?0U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > > >

; 782  : 		_Myproxy() = _Alproxy.allocate(1);

  00032	6a 01		 push	 1
  00034	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00037	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  0003c	8b f0		 mov	 esi, eax
  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	e8 00 00 00 00	 call	 ?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Myproxy
  00046	89 30		 mov	 DWORD PTR [eax], esi

; 783  : 		_Alproxy.construct(_Myproxy(), _Container_proxy());

  00048	8d 4d e8	 lea	 ecx, DWORD PTR $T1[ebp]
  0004b	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  00050	50		 push	 eax
  00051	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Myproxy
  00059	8b 00		 mov	 eax, DWORD PTR [eax]
  0005b	50		 push	 eax
  0005c	8d 4d f7	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0005f	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 784  : 		_Myproxy()->_Mycont = &_Get_data();

  00064	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Get_data
  0006c	8b f0		 mov	 esi, eax
  0006e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	e8 00 00 00 00	 call	 ?_Myproxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Myproxy
  00076	8b 08		 mov	 ecx, DWORD PTR [eax]
  00078	89 31		 mov	 DWORD PTR [ecx], esi

; 785  : 		}

  0007a	52		 push	 edx
  0007b	8b cd		 mov	 ecx, ebp
  0007d	50		 push	 eax
  0007e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00084	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00089	58		 pop	 eax
  0008a	5a		 pop	 edx
  0008b	5e		 pop	 esi
  0008c	83 c4 18	 add	 esp, 24			; 00000018H
  0008f	3b ec		 cmp	 ebp, esp
  00091	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c3		 ret	 0
  0009a	66 90		 npad	 2
$LN5@Alloc_prox:
  0009c	01 00 00 00	 DD	 1
  000a0	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  000a4	f7 ff ff ff	 DD	 -9			; fffffff7H
  000a8	01 00 00 00	 DD	 1
  000ac	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  000b0	5f		 DB	 95			; 0000005fH
  000b1	41		 DB	 65			; 00000041H
  000b2	6c		 DB	 108			; 0000006cH
  000b3	70		 DB	 112			; 00000070H
  000b4	72		 DB	 114			; 00000072H
  000b5	6f		 DB	 111			; 0000006fH
  000b6	78		 DB	 120			; 00000078H
  000b7	79		 DB	 121			; 00000079H
  000b8	00		 DB	 0
?_Alloc_proxy@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@PAVMeshData@@@std@@QAEPAPAVMeshData@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVMeshData@@@std@@QAEPAPAVMeshData@@I@Z PROC ; std::allocator<MeshData *>::allocate, COMDAT
; _this$ = ecx

; 642  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 643  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

  0000e	6a 01		 push	 1
  00010	6a 04		 push	 4
  00012	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?_Allocate@std@@YAPAXII_N@Z ; std::_Allocate
  0001b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 644  : 		}

  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?allocate@?$allocator@PAVMeshData@@@std@@QAEPAPAVMeshData@@I@Z ENDP ; std::allocator<MeshData *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Pnode$1 = -8						; size = 4
_this$ = -4						; size = 4
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::operator++, COMDAT
; _this$ = ecx

; 59   : 		{	// preincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 60   : 		if (_Mytree::_Isnil(_Ptr))

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Isnil
  00023	83 c4 04	 add	 esp, 4
  00026	0f be 10	 movsx	 edx, BYTE PTR [eax]
  00029	85 d2		 test	 edx, edx
  0002b	74 05		 je	 SHORT $LN4@operator
  0002d	e9 94 00 00 00	 jmp	 $LN5@operator
$LN4@operator:

; 61   : 			;	// end() shouldn't be incremented, don't move
; 62   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Right
  0003e	83 c4 04	 add	 esp, 4
  00041	8b 10		 mov	 edx, DWORD PTR [eax]
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Isnil
  00049	83 c4 04	 add	 esp, 4
  0004c	0f be 00	 movsx	 eax, BYTE PTR [eax]
  0004f	85 c0		 test	 eax, eax
  00051	75 22		 jne	 SHORT $LN2@operator

; 63   : 			_Ptr = _Mytree::_Min(

  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00059	52		 push	 edx
  0005a	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Right
  0005f	83 c4 04	 add	 esp, 4
  00062	8b 00		 mov	 eax, DWORD PTR [eax]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Min
  0006a	83 c4 04	 add	 esp, 4
  0006d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 64   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree
; 65   : 		else

  00073	eb 51		 jmp	 SHORT $LN5@operator
$LN2@operator:

; 66   : 			{	// climb looking for right subtree
; 67   : 			_Nodeptr _Pnode;
; 68   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 69   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  00075	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00078	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ?_Parent@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Parent
  00081	83 c4 04	 add	 esp, 4
  00084	8b 08		 mov	 ecx, DWORD PTR [eax]
  00086	89 4d f8	 mov	 DWORD PTR __Pnode$1[ebp], ecx
  00089	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$1[ebp]
  0008c	52		 push	 edx
  0008d	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Isnil
  00092	83 c4 04	 add	 esp, 4
  00095	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00098	85 c0		 test	 eax, eax
  0009a	75 21		 jne	 SHORT $LN3@operator
  0009c	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$1[ebp]
  0009f	51		 push	 ecx
  000a0	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Right
  000a5	83 c4 04	 add	 esp, 4
  000a8	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000ab	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  000ae	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000b0	75 0b		 jne	 SHORT $LN3@operator

; 70   : 				_Ptr = _Pnode;	// ==> parent while right subtree

  000b2	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b5	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$1[ebp]
  000b8	89 42 08	 mov	 DWORD PTR [edx+8], eax
  000bb	eb b8		 jmp	 SHORT $LN2@operator
$LN3@operator:

; 71   : 			_Ptr = _Pnode;	// ==> parent (head if end())

  000bd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$1[ebp]
  000c3	89 51 08	 mov	 DWORD PTR [ecx+8], edx
$LN5@operator:

; 72   : 			}
; 73   : 		return (*this);

  000c6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 74   : 		}

  000c9	83 c4 08	 add	 esp, 8
  000cc	3b ec		 cmp	 ebp, esp
  000ce	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c3		 ret	 0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,std::_Iterator_base12>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Min, COMDAT

; 613  : 		{	// return leftmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
$LN2@Min:

; 614  : 		while (!_Isnil(_Left(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Left
  0000c	83 c4 04	 add	 esp, 4
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Isnil
  00017	83 c4 04	 add	 esp, 4
  0001a	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0001d	85 d2		 test	 edx, edx
  0001f	75 13		 jne	 SHORT $LN3@Min

; 615  : 			_Pnode = _Left(_Pnode);

  00021	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ?_Left@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Left
  0002a	83 c4 04	 add	 esp, 4
  0002d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002f	89 4d 08	 mov	 DWORD PTR __Pnode$[ebp], ecx
  00032	eb cf		 jmp	 SHORT $LN2@Min
$LN3@Min:

; 616  : 		return (_Pnode);

  00034	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 617  : 		}

  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
?_Min@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Min
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Max, COMDAT

; 606  : 		{	// return rightmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
$LN2@Max:

; 607  : 		while (!_Isnil(_Right(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Right
  0000c	83 c4 04	 add	 esp, 4
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Isnil
  00017	83 c4 04	 add	 esp, 4
  0001a	0f be 10	 movsx	 edx, BYTE PTR [eax]
  0001d	85 d2		 test	 edx, edx
  0001f	75 13		 jne	 SHORT $LN3@Max

; 608  : 			_Pnode = _Right(_Pnode);

  00021	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ?_Right@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Right
  0002a	83 c4 04	 add	 esp, 4
  0002d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002f	89 4d 08	 mov	 DWORD PTR __Pnode$[ebp], ecx
  00032	eb cf		 jmp	 SHORT $LN2@Max
$LN3@Max:

; 609  : 		return (_Pnode);

  00034	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 610  : 		}

  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
?_Max@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Isnil, COMDAT

; 581  : 		{	// return reference to nil flag in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 582  : 		return ((char&)_Pnode->_Isnil);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0d	 add	 eax, 13			; 0000000dH

; 583  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Isnil@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Isnil
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Color, COMDAT

; 576  : 		{	// return reference to color in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 577  : 		return ((char&)_Pnode->_Color);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 578  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Color
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::allocate, COMDAT
; _this$ = ecx

; 897  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 898  : 		return (_Mybase::allocate(_Count));

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::allocate

; 899  : 		}

  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Get_data, COMDAT
; _this$ = ecx

; 932  : 		{	// return const reference to _Tree_val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 933  : 		return (_Mypair._Get_second()._Get_second());

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@XZ ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::_Get_second
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>::_Get_second

; 934  : 		}

  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getpfirst, COMDAT
; _this$ = ecx

; 798  : 		{	// get address of iterator chain

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 799  : 		return (_Get_data()._Getpfirst());

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Get_data
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst

; 800  : 		}

  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?_Getpfirst@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@PAVMeshData@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@PAVMeshData@@@std@@QBEIXZ PROC	; std::allocator<MeshData *>::max_size, COMDAT
; _this$ = ecx

; 666  : 		{	// estimate maximum array size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 667  : 		return ((size_t)(-1) / sizeof (_Ty));

  0000e	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 668  : 		}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?max_size@?$allocator@PAVMeshData@@@std@@QBEIXZ ENDP	; std::allocator<MeshData *>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_second@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@XZ PROC ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::_Get_second, COMDAT
; _this$ = ecx

; 318  : 		{	// return const reference to second

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 319  : 		return (_Myval2);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 320  : 		}

  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QBEABV?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@XZ ENDP ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 318  : 		{	// return const reference to second

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 319  : 		return (_Myval2);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 320  : 		}

  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::allocate, COMDAT
; _this$ = ecx

; 642  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 643  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

  0000e	6a 01		 push	 1
  00010	6a 30		 push	 48			; 00000030H
  00012	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?_Allocate@std@@YAPAXII_N@Z ; std::_Allocate
  0001b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 644  : 		}

  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$?0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAPAVMeshData@@X@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAPAVMeshData@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAPAVMeshData@@X@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAPAVMeshData@@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,MeshData * &,void>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 143  : 		: first(_STD forward<_Other1>(_Val1)),

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 144  : 				second(_STD forward<_Other2>(_Val2))

  00023	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  00026	51		 push	 ecx
  00027	e8 00 00 00 00	 call	 ??$forward@AAPAVMeshData@@@std@@YAAAPAVMeshData@@AAPAV1@@Z ; std::forward<MeshData * &>
  0002c	83 c4 04	 add	 esp, 4
  0002f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00032	8b 00		 mov	 eax, DWORD PTR [eax]
  00034	89 42 1c	 mov	 DWORD PTR [edx+28], eax

; 146  : 		}

  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	83 c4 04	 add	 esp, 4
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 08 00	 ret	 8
??$?0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAPAVMeshData@@X@?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAPAVMeshData@@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,MeshData * &,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2372 : 	{	// return string + string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0

; 2373 : 	if (_Right.size() <= _Left.capacity() - _Left.size()
; 2374 : 		|| _Right.capacity() - _Right.size() < _Left.size())

  00014	8b 4d 10	 mov	 ecx, DWORD PTR __Right$[ebp]
  00017	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  0001c	8b f0		 mov	 esi, eax
  0001e	8b 4d 0c	 mov	 ecx, DWORD PTR __Left$[ebp]
  00021	e8 00 00 00 00	 call	 ?capacity@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::capacity
  00026	8b f8		 mov	 edi, eax
  00028	8b 4d 0c	 mov	 ecx, DWORD PTR __Left$[ebp]
  0002b	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  00030	2b f8		 sub	 edi, eax
  00032	3b f7		 cmp	 esi, edi
  00034	76 20		 jbe	 SHORT $LN4@operator
  00036	8b 4d 10	 mov	 ecx, DWORD PTR __Right$[ebp]
  00039	e8 00 00 00 00	 call	 ?capacity@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::capacity
  0003e	8b f0		 mov	 esi, eax
  00040	8b 4d 10	 mov	 ecx, DWORD PTR __Right$[ebp]
  00043	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  00048	2b f0		 sub	 esi, eax
  0004a	8b 4d 0c	 mov	 ecx, DWORD PTR __Left$[ebp]
  0004d	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  00052	3b f0		 cmp	 esi, eax
  00054	73 2e		 jae	 SHORT $LN2@operator
$LN4@operator:

; 2375 : 		return (_STD move(_Left.append(_Right)));

  00056	8b 45 10	 mov	 eax, DWORD PTR __Right$[ebp]
  00059	50		 push	 eax
  0005a	8b 4d 0c	 mov	 ecx, DWORD PTR __Left$[ebp]
  0005d	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
  00062	50		 push	 eax
  00063	e8 00 00 00 00	 call	 ??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  00068	83 c4 04	 add	 esp, 4
  0006b	50		 push	 eax
  0006c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0006f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00074	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  00077	83 c9 01	 or	 ecx, 1
  0007a	89 4d fc	 mov	 DWORD PTR $T1[ebp], ecx
  0007d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00080	eb 2e		 jmp	 SHORT $LN1@operator

; 2376 : 	else

  00082	eb 2c		 jmp	 SHORT $LN1@operator
$LN2@operator:

; 2377 : 		return (_STD move(_Right.insert(0, _Left)));

  00084	8b 55 0c	 mov	 edx, DWORD PTR __Left$[ebp]
  00087	52		 push	 edx
  00088	6a 00		 push	 0
  0008a	8b 4d 10	 mov	 ecx, DWORD PTR __Right$[ebp]
  0008d	e8 00 00 00 00	 call	 ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  00098	83 c4 04	 add	 esp, 4
  0009b	50		 push	 eax
  0009c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0009f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000a4	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]
  000a7	83 c8 01	 or	 eax, 1
  000aa	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  000ad	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@operator:

; 2378 : 	}

  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	83 c4 04	 add	 esp, 4
  000b5	3b ec		 cmp	 ebp, esp
  000b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bc	8b e5		 mov	 esp, ebp
  000be	5d		 pop	 ebp
  000bf	c3		 ret	 0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@0@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\core\util.h
;	COMDAT ??$to_string@I@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z
_TEXT	SEGMENT
$T2 = -176						; size = 4
_stm$ = -168						; size = 152
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_n$ = 12						; size = 4
??$to_string@I@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z PROC ; Util::to_string<unsigned int>, COMDAT

; 66   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$to_string@I@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8d bd 50 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-176]
  0001f	b9 29 00 00 00	 mov	 ecx, 41			; 00000029H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	50		 push	 eax
  00033	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00036	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003c	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0

; 67   :         std::ostringstream stm;

  00046	6a 01		 push	 1
  00048	6a 02		 push	 2
  0004a	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _stm$[ebp]
  00050	e8 00 00 00 00	 call	 ??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
  00055	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 68   :         stm << n;

  0005c	8b f4		 mov	 esi, esp
  0005e	8b 45 0c	 mov	 eax, DWORD PTR _n$[ebp]
  00061	8b 08		 mov	 ecx, DWORD PTR [eax]
  00063	51		 push	 ecx
  00064	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _stm$[ebp]
  0006a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z
  00070	3b f4		 cmp	 esi, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 69   :         return stm.str();

  00077	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0007a	52		 push	 edx
  0007b	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _stm$[ebp]
  00081	e8 00 00 00 00	 call	 ?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
  00086	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  0008c	83 c8 01	 or	 eax, 1
  0008f	89 85 50 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  00095	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009c	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _stm$[ebp]
  000a2	e8 00 00 00 00	 call	 ??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
  000a7	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 70   :     }

  000aa	52		 push	 edx
  000ab	8b cd		 mov	 ecx, ebp
  000ad	50		 push	 eax
  000ae	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@to_string
  000b4	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000b9	58		 pop	 eax
  000ba	5a		 pop	 edx
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000be	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c5	59		 pop	 ecx
  000c6	5f		 pop	 edi
  000c7	5e		 pop	 esi
  000c8	81 c4 b0 00 00
	00		 add	 esp, 176		; 000000b0H
  000ce	3b ec		 cmp	 ebp, esp
  000d0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c3		 ret	 0
  000d9	0f 1f 00	 npad	 3
$LN9@to_string:
  000dc	01 00 00 00	 DD	 1
  000e0	00 00 00 00	 DD	 $LN8@to_string
$LN8@to_string:
  000e4	58 ff ff ff	 DD	 -168			; ffffff58H
  000e8	98 00 00 00	 DD	 152			; 00000098H
  000ec	00 00 00 00	 DD	 $LN6@to_string
$LN6@to_string:
  000f0	73		 DB	 115			; 00000073H
  000f1	74		 DB	 116			; 00000074H
  000f2	6d		 DB	 109			; 0000006dH
  000f3	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$to_string@I@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z$0:
  00000	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _stm$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__ehhandler$??$to_string@I@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 50 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-176]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$to_string@I@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$to_string@I@Util@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ENDP ; Util::to_string<unsigned int>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAI@Z
_TEXT	SEGMENT
tv138 = -36						; size = 4
tv135 = -32						; size = 4
tv141 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
$T4 = -13						; size = 1
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__Off$ = 32						; size = 4
??$_Distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAI@Z PROC ; std::_Distance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,unsigned int>, COMDAT

; 994  : 	{	// add to _Off distance between iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	89 45 dc	 mov	 DWORD PTR [ebp-36], eax
  0001c	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001f	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00022	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00025	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00028	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	50		 push	 eax
  00033	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00036	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003c	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 995  : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

  00043	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  00046	50		 push	 eax
  00047	8d 4d f3	 lea	 ecx, DWORD PTR $T4[ebp]
  0004a	51		 push	 ecx
  0004b	e8 00 00 00 00	 call	 ??$_Iter_cat@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@@Z ; std::_Iter_cat<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >
  00050	83 c4 08	 add	 esp, 8
  00053	8a 10		 mov	 dl, BYTE PTR [eax]
  00055	0f b6 c2	 movzx	 eax, dl
  00058	50		 push	 eax
  00059	8b 4d 20	 mov	 ecx, DWORD PTR __Off$[ebp]
  0005c	51		 push	 ecx
  0005d	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00060	8b cc		 mov	 ecx, esp
  00062	89 65 ec	 mov	 DWORD PTR $T3[ebp], esp
  00065	8d 55 14	 lea	 edx, DWORD PTR __Last$[ebp]
  00068	52		 push	 edx
  00069	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
  0006e	89 45 e4	 mov	 DWORD PTR tv141[ebp], eax
  00071	8b 45 e4	 mov	 eax, DWORD PTR tv141[ebp]
  00074	89 45 e0	 mov	 DWORD PTR tv135[ebp], eax
  00077	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0007b	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0007e	8b cc		 mov	 ecx, esp
  00080	89 65 e8	 mov	 DWORD PTR $T2[ebp], esp
  00083	8d 55 08	 lea	 edx, DWORD PTR __First$[ebp]
  00086	52		 push	 edx
  00087	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
  0008c	89 45 dc	 mov	 DWORD PTR tv138[ebp], eax
  0008f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00093	e8 00 00 00 00	 call	 ??$_Distance2@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,unsigned int>
  00098	83 c4 20	 add	 esp, 32			; 00000020H

; 996  : 	}

  0009b	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0009f	8d 4d 08	 lea	 ecx, DWORD PTR __First$[ebp]
  000a2	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  000a7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ae	8d 4d 14	 lea	 ecx, DWORD PTR __Last$[ebp]
  000b1	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  000b6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c0	59		 pop	 ecx
  000c1	83 c4 24	 add	 esp, 36			; 00000024H
  000c4	3b ec		 cmp	 ebp, esp
  000c6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAI@Z$0:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR __Last$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAI@Z$1:
  00008	8d 4d 08	 lea	 ecx, DWORD PTR __First$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAI@Z$2:
  00010	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAI@Z:
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001f	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAI@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Distance@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAI@Z ENDP ; std::_Distance<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,unsigned int>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@PAVMesh@@@std@@YAPAPAVMesh@@AAPAV1@@Z
_TEXT	SEGMENT
$T1 = -2						; size = 1
__Val$ = 8						; size = 4
??$addressof@PAVMesh@@@std@@YAPAPAVMesh@@AAPAV1@@Z PROC	; std::addressof<Mesh *>, COMDAT

; 696  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 697  : 	return (_Addressof(_Val, is_function<_Ty>()));

  0000b	0f b6 45 fe	 movzx	 eax, BYTE PTR $T1[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR __Val$[ebp]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ??$_Addressof@PAVMesh@@@std@@YAPAPAVMesh@@AAPAV1@U?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<Mesh *>
  00019	83 c4 08	 add	 esp, 8

; 698  : 	}

  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$addressof@PAVMesh@@@std@@YAPAPAVMesh@@AAPAV1@@Z ENDP	; std::addressof<Mesh *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@PAVMesh@@@std@@YA$$QAPAVMesh@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAVMesh@@@std@@YA$$QAPAVMesh@@AAPAV1@@Z PROC	; std::forward<Mesh *>, COMDAT

; 1233 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1234 : 	return (static_cast<_Ty&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1235 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@PAVMesh@@@std@@YA$$QAPAVMesh@@AAPAV1@@Z ENDP	; std::forward<Mesh *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAVMesh@@PAV1@@?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@QAEXPAPAVMesh@@$$QAPAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVMesh@@PAV1@@?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@QAEXPAPAVMesh@@$$QAPAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<Mesh *> >::construct<Mesh *,Mesh *>, COMDAT
; _this$ = ecx

; 916  : 		{	// construct _Ty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 917  : 		_Mytraits::construct(*this, _Ptr,

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@PAVMesh@@@std@@YA$$QAPAVMesh@@AAPAV1@@Z ; std::forward<Mesh *>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@PAVMesh@@PAV1@@?$allocator_traits@V?$allocator@PAVMesh@@@std@@@std@@SAXAAV?$allocator@PAVMesh@@@1@PAPAVMesh@@$$QAPAV3@@Z ; std::allocator_traits<std::allocator<Mesh *> >::construct<Mesh *,Mesh *>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH

; 918  : 			_STD forward<_Types>(_Args)...);
; 919  : 		}

  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@PAVMesh@@PAV1@@?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@QAEXPAPAVMesh@@$$QAPAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<Mesh *> >::construct<Mesh *,Mesh *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@QAVMaterial@@@std@@YAPBQAVMaterial@@ABQAV1@@Z
_TEXT	SEGMENT
$T1 = -2						; size = 1
__Val$ = 8						; size = 4
??$addressof@QAVMaterial@@@std@@YAPBQAVMaterial@@ABQAV1@@Z PROC ; std::addressof<Material * const>, COMDAT

; 696  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 697  : 	return (_Addressof(_Val, is_function<_Ty>()));

  0000b	0f b6 45 fe	 movzx	 eax, BYTE PTR $T1[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR __Val$[ebp]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ??$_Addressof@QAVMaterial@@@std@@YAPBQAVMaterial@@ABQAV1@U?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<Material * const>
  00019	83 c4 08	 add	 esp, 8

; 698  : 	}

  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$addressof@QAVMaterial@@@std@@YAPBQAVMaterial@@ABQAV1@@Z ENDP ; std::addressof<Material * const>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAVMaterial@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@QAEXPAPAVMaterial@@AAPAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVMaterial@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@QAEXPAPAVMaterial@@AAPAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<Material *> >::construct<Material *,Material * &>, COMDAT
; _this$ = ecx

; 916  : 		{	// construct _Ty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 917  : 		_Mytraits::construct(*this, _Ptr,

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@AAPAVMaterial@@@std@@YAAAPAVMaterial@@AAPAV1@@Z ; std::forward<Material * &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@PAVMaterial@@AAPAV1@@?$allocator_traits@V?$allocator@PAVMaterial@@@std@@@std@@SAXAAV?$allocator@PAVMaterial@@@1@PAPAVMaterial@@AAPAV3@@Z ; std::allocator_traits<std::allocator<Material *> >::construct<Material *,Material * &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH

; 918  : 			_STD forward<_Types>(_Args)...);
; 919  : 		}

  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@PAVMaterial@@AAPAV1@@?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@QAEXPAPAVMaterial@@AAPAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<Material *> >::construct<Material *,Material * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAVMaterial@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@QAEXPAPAVMaterial@@ABQAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVMaterial@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@QAEXPAPAVMaterial@@ABQAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<Material *> >::construct<Material *,Material * const &>, COMDAT
; _this$ = ecx

; 916  : 		{	// construct _Ty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 917  : 		_Mytraits::construct(*this, _Ptr,

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@ABQAVMaterial@@@std@@YAABQAVMaterial@@ABQAV1@@Z ; std::forward<Material * const &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@PAVMaterial@@ABQAV1@@?$allocator_traits@V?$allocator@PAVMaterial@@@std@@@std@@SAXAAV?$allocator@PAVMaterial@@@1@PAPAVMaterial@@ABQAV3@@Z ; std::allocator_traits<std::allocator<Material *> >::construct<Material *,Material * const &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH

; 918  : 			_STD forward<_Types>(_Args)...);
; 919  : 		}

  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@PAVMaterial@@ABQAV1@@?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@QAEXPAPAVMaterial@@ABQAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<Material *> >::construct<Material *,Material * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@PAVMeshData@@@std@@YAPAPAVMeshData@@AAPAV1@@Z
_TEXT	SEGMENT
$T1 = -2						; size = 1
__Val$ = 8						; size = 4
??$addressof@PAVMeshData@@@std@@YAPAPAVMeshData@@AAPAV1@@Z PROC ; std::addressof<MeshData *>, COMDAT

; 696  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 697  : 	return (_Addressof(_Val, is_function<_Ty>()));

  0000b	0f b6 45 fe	 movzx	 eax, BYTE PTR $T1[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR __Val$[ebp]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ??$_Addressof@PAVMeshData@@@std@@YAPAPAVMeshData@@AAPAV1@U?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<MeshData *>
  00019	83 c4 08	 add	 esp, 8

; 698  : 	}

  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$addressof@PAVMeshData@@@std@@YAPAPAVMeshData@@AAPAV1@@Z ENDP ; std::addressof<MeshData *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAVMeshData@@PAV1@@?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAEXPAPAVMeshData@@$$QAPAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVMeshData@@PAV1@@?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAEXPAPAVMeshData@@$$QAPAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<MeshData *> >::construct<MeshData *,MeshData *>, COMDAT
; _this$ = ecx

; 916  : 		{	// construct _Ty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 917  : 		_Mytraits::construct(*this, _Ptr,

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@PAVMeshData@@@std@@YA$$QAPAVMeshData@@AAPAV1@@Z ; std::forward<MeshData *>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@PAVMeshData@@PAV1@@?$allocator_traits@V?$allocator@PAVMeshData@@@std@@@std@@SAXAAV?$allocator@PAVMeshData@@@1@PAPAVMeshData@@$$QAPAV3@@Z ; std::allocator_traits<std::allocator<MeshData *> >::construct<MeshData *,MeshData *>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH

; 918  : 			_STD forward<_Types>(_Args)...);
; 919  : 		}

  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@PAVMeshData@@PAV1@@?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAEXPAPAVMeshData@@$$QAPAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<MeshData *> >::construct<MeshData *,MeshData *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@AAU10@@Z PROC ; std::move<std::_Wrap_alloc<std::allocator<MeshData *> > &>, COMDAT

; 1249 : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1250 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1251 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YA$$QAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@AAU10@@Z ENDP ; std::move<std::_Wrap_alloc<std::allocator<MeshData *> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YA$$QAV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YA$$QAV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@0@AAV10@@Z PROC ; std::forward<std::vector<MeshData *,std::allocator<MeshData *> > >, COMDAT

; 1233 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1234 : 	return (static_cast<_Ty&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1235 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@V?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YA$$QAV?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::vector<MeshData *,std::allocator<MeshData *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@$$CBV?$Vector2@M@@@std@@YAPBV?$Vector2@M@@ABV1@@Z
_TEXT	SEGMENT
$T1 = -2						; size = 1
__Val$ = 8						; size = 4
??$addressof@$$CBV?$Vector2@M@@@std@@YAPBV?$Vector2@M@@ABV1@@Z PROC ; std::addressof<Vector2<float> const >, COMDAT

; 696  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 697  : 	return (_Addressof(_Val, is_function<_Ty>()));

  0000b	0f b6 45 fe	 movzx	 eax, BYTE PTR $T1[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR __Val$[ebp]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ??$_Addressof@$$CBV?$Vector2@M@@@std@@YAPBV?$Vector2@M@@ABV1@U?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<Vector2<float> const >
  00019	83 c4 08	 add	 esp, 8

; 698  : 	}

  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$addressof@$$CBV?$Vector2@M@@@std@@YAPBV?$Vector2@M@@ABV1@@Z ENDP ; std::addressof<Vector2<float> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$Vector2@M@@AAV1@@?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEXPAV?$Vector2@M@@AAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$Vector2@M@@AAV1@@?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEXPAV?$Vector2@M@@AAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<Vector2<float> > >::construct<Vector2<float>,Vector2<float> &>, COMDAT
; _this$ = ecx

; 916  : 		{	// construct _Ty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 917  : 		_Mytraits::construct(*this, _Ptr,

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@AAV?$Vector2@M@@@std@@YAAAV?$Vector2@M@@AAV1@@Z ; std::forward<Vector2<float> &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@V?$Vector2@M@@AAV1@@?$allocator_traits@V?$allocator@V?$Vector2@M@@@std@@@std@@SAXAAV?$allocator@V?$Vector2@M@@@1@PAV?$Vector2@M@@AAV3@@Z ; std::allocator_traits<std::allocator<Vector2<float> > >::construct<Vector2<float>,Vector2<float> &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH

; 918  : 			_STD forward<_Types>(_Args)...);
; 919  : 		}

  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@V?$Vector2@M@@AAV1@@?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEXPAV?$Vector2@M@@AAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<Vector2<float> > >::construct<Vector2<float>,Vector2<float> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$Vector2@M@@@std@@YA$$QAV?$Vector2@M@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$Vector2@M@@@std@@YA$$QAV?$Vector2@M@@AAV1@@Z PROC ; std::forward<Vector2<float> >, COMDAT

; 1233 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1234 : 	return (static_cast<_Ty&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1235 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@V?$Vector2@M@@@std@@YA$$QAV?$Vector2@M@@AAV1@@Z ENDP ; std::forward<Vector2<float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$Vector2@M@@V1@@?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEXPAV?$Vector2@M@@$$QAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$Vector2@M@@V1@@?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEXPAV?$Vector2@M@@$$QAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<Vector2<float> > >::construct<Vector2<float>,Vector2<float> >, COMDAT
; _this$ = ecx

; 916  : 		{	// construct _Ty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 917  : 		_Mytraits::construct(*this, _Ptr,

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@V?$Vector2@M@@@std@@YA$$QAV?$Vector2@M@@AAV1@@Z ; std::forward<Vector2<float> >
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@V?$Vector2@M@@V1@@?$allocator_traits@V?$allocator@V?$Vector2@M@@@std@@@std@@SAXAAV?$allocator@V?$Vector2@M@@@1@PAV?$Vector2@M@@$$QAV3@@Z ; std::allocator_traits<std::allocator<Vector2<float> > >::construct<Vector2<float>,Vector2<float> >
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH

; 918  : 			_STD forward<_Types>(_Args)...);
; 919  : 		}

  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@V?$Vector2@M@@V1@@?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEXPAV?$Vector2@M@@$$QAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<Vector2<float> > >::construct<Vector2<float>,Vector2<float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@$$CBVVector3f@@@std@@YAPBVVector3f@@ABV1@@Z
_TEXT	SEGMENT
$T1 = -2						; size = 1
__Val$ = 8						; size = 4
??$addressof@$$CBVVector3f@@@std@@YAPBVVector3f@@ABV1@@Z PROC ; std::addressof<Vector3f const >, COMDAT

; 696  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 697  : 	return (_Addressof(_Val, is_function<_Ty>()));

  0000b	0f b6 45 fe	 movzx	 eax, BYTE PTR $T1[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR __Val$[ebp]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ??$_Addressof@$$CBVVector3f@@@std@@YAPBVVector3f@@ABV1@U?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<Vector3f const >
  00019	83 c4 08	 add	 esp, 8

; 698  : 	}

  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$addressof@$$CBVVector3f@@@std@@YAPBVVector3f@@ABV1@@Z ENDP ; std::addressof<Vector3f const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@VVector3f@@AAV1@@?$_Wrap_alloc@V?$allocator@VVector3f@@@std@@@std@@QAEXPAVVector3f@@AAV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@VVector3f@@AAV1@@?$_Wrap_alloc@V?$allocator@VVector3f@@@std@@@std@@QAEXPAVVector3f@@AAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<Vector3f> >::construct<Vector3f,Vector3f &>, COMDAT
; _this$ = ecx

; 916  : 		{	// construct _Ty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 917  : 		_Mytraits::construct(*this, _Ptr,

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@AAVVector3f@@@std@@YAAAVVector3f@@AAV1@@Z ; std::forward<Vector3f &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@VVector3f@@AAV1@@?$allocator_traits@V?$allocator@VVector3f@@@std@@@std@@SAXAAV?$allocator@VVector3f@@@1@PAVVector3f@@AAV3@@Z ; std::allocator_traits<std::allocator<Vector3f> >::construct<Vector3f,Vector3f &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH

; 918  : 			_STD forward<_Types>(_Args)...);
; 919  : 		}

  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@VVector3f@@AAV1@@?$_Wrap_alloc@V?$allocator@VVector3f@@@std@@@std@@QAEXPAVVector3f@@AAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<Vector3f> >::construct<Vector3f,Vector3f &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@$$CBI@std@@YAPBIABI@Z
_TEXT	SEGMENT
$T1 = -2						; size = 1
__Val$ = 8						; size = 4
??$addressof@$$CBI@std@@YAPBIABI@Z PROC			; std::addressof<unsigned int const >, COMDAT

; 696  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 697  : 	return (_Addressof(_Val, is_function<_Ty>()));

  0000b	0f b6 45 fe	 movzx	 eax, BYTE PTR $T1[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR __Val$[ebp]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ??$_Addressof@$$CBI@std@@YAPBIABIU?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<unsigned int const >
  00019	83 c4 08	 add	 esp, 8

; 698  : 	}

  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$addressof@$$CBI@std@@YAPBIABI@Z ENDP			; std::addressof<unsigned int const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@IAAI@?$_Wrap_alloc@V?$allocator@I@std@@@std@@QAEXPAIAAI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@IAAI@?$_Wrap_alloc@V?$allocator@I@std@@@std@@QAEXPAIAAI@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned int> >::construct<unsigned int,unsigned int &>, COMDAT
; _this$ = ecx

; 916  : 		{	// construct _Ty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 917  : 		_Mytraits::construct(*this, _Ptr,

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@AAI@std@@YAAAIAAI@Z ; std::forward<unsigned int &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@IAAI@?$allocator_traits@V?$allocator@I@std@@@std@@SAXAAV?$allocator@I@1@PAIAAI@Z ; std::allocator_traits<std::allocator<unsigned int> >::construct<unsigned int,unsigned int &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH

; 918  : 			_STD forward<_Types>(_Args)...);
; 919  : 		}

  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@IAAI@?$_Wrap_alloc@V?$allocator@I@std@@@std@@QAEXPAIAAI@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned int> >::construct<unsigned int,unsigned int &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@IABI@?$_Wrap_alloc@V?$allocator@I@std@@@std@@QAEXPAIABI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@IABI@?$_Wrap_alloc@V?$allocator@I@std@@@std@@QAEXPAIABI@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned int> >::construct<unsigned int,unsigned int const &>, COMDAT
; _this$ = ecx

; 916  : 		{	// construct _Ty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 917  : 		_Mytraits::construct(*this, _Ptr,

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@ABI@std@@YAABIABI@Z ; std::forward<unsigned int const &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@IABI@?$allocator_traits@V?$allocator@I@std@@@std@@SAXAAV?$allocator@I@1@PAIABI@Z ; std::allocator_traits<std::allocator<unsigned int> >::construct<unsigned int,unsigned int const &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH

; 918  : 			_STD forward<_Types>(_Args)...);
; 919  : 		}

  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@IABI@?$_Wrap_alloc@V?$allocator@I@std@@@std@@QAEXPAIABI@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned int> >::construct<unsigned int,unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@I@std@@YAPAIAAI@Z
_TEXT	SEGMENT
$T1 = -2						; size = 1
__Val$ = 8						; size = 4
??$addressof@I@std@@YAPAIAAI@Z PROC			; std::addressof<unsigned int>, COMDAT

; 696  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 697  : 	return (_Addressof(_Val, is_function<_Ty>()));

  0000b	0f b6 45 fe	 movzx	 eax, BYTE PTR $T1[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR __Val$[ebp]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ??$_Addressof@I@std@@YAPAIAAIU?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<unsigned int>
  00019	83 c4 08	 add	 esp, 8

; 698  : 	}

  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$addressof@I@std@@YAPAIAAI@Z ENDP			; std::addressof<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@I@std@@YA$$QAIAAI@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@I@std@@YA$$QAIAAI@Z PROC			; std::forward<unsigned int>, COMDAT

; 1233 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1234 : 	return (static_cast<_Ty&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1235 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@I@std@@YA$$QAIAAI@Z ENDP			; std::forward<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@II@?$_Wrap_alloc@V?$allocator@I@std@@@std@@QAEXPAI$$QAI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@II@?$_Wrap_alloc@V?$allocator@I@std@@@std@@QAEXPAI$$QAI@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned int> >::construct<unsigned int,unsigned int>, COMDAT
; _this$ = ecx

; 916  : 		{	// construct _Ty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 917  : 		_Mytraits::construct(*this, _Ptr,

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@I@std@@YA$$QAIAAI@Z ; std::forward<unsigned int>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@II@?$allocator_traits@V?$allocator@I@std@@@std@@SAXAAV?$allocator@I@1@PAI$$QAI@Z ; std::allocator_traits<std::allocator<unsigned int> >::construct<unsigned int,unsigned int>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH

; 918  : 			_STD forward<_Types>(_Args)...);
; 919  : 		}

  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@II@?$_Wrap_alloc@V?$allocator@I@std@@@std@@QAEXPAI$$QAI@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned int> >::construct<unsigned int,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@$$CBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@YAPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@0@ABU10@@Z
_TEXT	SEGMENT
$T1 = -2						; size = 1
__Val$ = 8						; size = 4
??$addressof@$$CBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@YAPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@0@ABU10@@Z PROC ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const >, COMDAT

; 696  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 697  : 	return (_Addressof(_Val, is_function<_Ty>()));

  0000b	0f b6 45 fe	 movzx	 eax, BYTE PTR $T1[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR __Val$[ebp]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ??$_Addressof@$$CBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@YAPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@0@ABU10@U?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const >
  00019	83 c4 08	 add	 esp, 8

; 698  : 	}

  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$addressof@$$CBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@YAPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@0@ABU10@@Z ENDP ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0ABV?$allocator@PAVMesh@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMesh@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@PAVMesh@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABV?$allocator@PAVMesh@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMesh@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@PAVMesh@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Mesh *> >,std::_Vector_val<std::_Simple_types<Mesh *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<Mesh *> >,std::_Vector_val<std::_Simple_types<Mesh *> >,1><std::allocator<Mesh *> const &>, COMDAT
; _this$ = ecx

; 288  : 		{	// construct from forwarded values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 286  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Val1$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@ABV?$allocator@PAVMesh@@@std@@@std@@YAABV?$allocator@PAVMesh@@@0@ABV10@@Z ; std::forward<std::allocator<Mesh *> const &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@QAE@ABV?$allocator@PAVMesh@@@1@@Z ; std::_Wrap_alloc<std::allocator<Mesh *> >::_Wrap_alloc<std::allocator<Mesh *> >

; 287  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PAVMesh@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<Mesh *> >::_Vector_val<std::_Simple_types<Mesh *> >

; 289  : 		}

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	83 c4 04	 add	 esp, 4
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
??$?0ABV?$allocator@PAVMesh@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMesh@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@PAVMesh@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Mesh *> >,std::_Vector_val<std::_Simple_types<Mesh *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<Mesh *> >,std::_Vector_val<std::_Simple_types<Mesh *> >,1><std::allocator<Mesh *> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AAV?$allocator@PAVMeshData@@@std@@@std@@YA$$QAV?$allocator@PAVMeshData@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$allocator@PAVMeshData@@@std@@@std@@YA$$QAV?$allocator@PAVMeshData@@@0@AAV10@@Z PROC ; std::move<std::allocator<MeshData *> &>, COMDAT

; 1249 : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1250 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1251 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAV?$allocator@PAVMeshData@@@std@@@std@@YA$$QAV?$allocator@PAVMeshData@@@0@AAV10@@Z ENDP ; std::move<std::allocator<MeshData *> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0V?$allocator@PAVMeshData@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@PAVMeshData@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0V?$allocator@PAVMeshData@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@PAVMeshData@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1><std::allocator<MeshData *> >, COMDAT
; _this$ = ecx

; 288  : 		{	// construct from forwarded values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 286  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Val1$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@V?$allocator@PAVMeshData@@@std@@@std@@YA$$QAV?$allocator@PAVMeshData@@@0@AAV10@@Z ; std::forward<std::allocator<MeshData *> >
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z ; std::_Wrap_alloc<std::allocator<MeshData *> >::_Wrap_alloc<std::allocator<MeshData *> >

; 287  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<MeshData *> >::_Vector_val<std::_Simple_types<MeshData *> >

; 289  : 		}

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	83 c4 04	 add	 esp, 4
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
??$?0V?$allocator@PAVMeshData@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@PAVMeshData@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1><std::allocator<MeshData *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0ABV?$allocator@PAVMeshData@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@PAVMeshData@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABV?$allocator@PAVMeshData@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@PAVMeshData@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1><std::allocator<MeshData *> const &>, COMDAT
; _this$ = ecx

; 288  : 		{	// construct from forwarded values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 286  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Val1$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@ABV?$allocator@PAVMeshData@@@std@@@std@@YAABV?$allocator@PAVMeshData@@@0@ABV10@@Z ; std::forward<std::allocator<MeshData *> const &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z ; std::_Wrap_alloc<std::allocator<MeshData *> >::_Wrap_alloc<std::allocator<MeshData *> >

; 287  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<MeshData *> >::_Vector_val<std::_Simple_types<MeshData *> >

; 289  : 		}

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	83 c4 04	 add	 esp, 4
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
??$?0ABV?$allocator@PAVMeshData@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@PAVMeshData@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<MeshData *> >,std::_Vector_val<std::_Simple_types<MeshData *> >,1><std::allocator<MeshData *> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Lbound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Wherenode$ = -12					; size = 4
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Keyval$ = 8						; size = 4
??$_Lbound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Lbound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 2087 : 		{	// find leftmost node not less than _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2088 : 		_Nodeptr _Pnode = _Root();

  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Root
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	89 45 f8	 mov	 DWORD PTR __Pnode$[ebp], eax

; 2089 : 		_Nodeptr _Wherenode = this->_Myhead();	// end() if search fails

  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Myhead
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 4d f4	 mov	 DWORD PTR __Wherenode$[ebp], ecx
$LN2@Lbound:

; 2090 : 
; 2091 : 		while (!this->_Isnil(_Pnode))

  00038	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0003b	52		 push	 edx
  0003c	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Isnil
  00041	83 c4 04	 add	 esp, 4
  00044	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00047	85 c0		 test	 eax, eax
  00049	75 4c		 jne	 SHORT $LN3@Lbound

; 2092 : 			if (_Compare(this->_Key(_Pnode), _Keyval))

  0004b	8b 4d 08	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  0004e	51		 push	 ecx
  0004f	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00052	52		 push	 edx
  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Key
  0005b	50		 push	 eax
  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	e8 00 00 00 00	 call	 ?_Compare@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Compare
  00064	0f b6 c0	 movzx	 eax, al
  00067	85 c0		 test	 eax, eax
  00069	74 13		 je	 SHORT $LN4@Lbound

; 2093 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

  0006b	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0006e	51		 push	 ecx
  0006f	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Right
  00074	83 c4 04	 add	 esp, 4
  00077	8b 10		 mov	 edx, DWORD PTR [eax]
  00079	89 55 f8	 mov	 DWORD PTR __Pnode$[ebp], edx

; 2094 : 			else

  0007c	eb 17		 jmp	 SHORT $LN5@Lbound
$LN4@Lbound:

; 2095 : 				{	// _Pnode not less than _Keyval, remember it
; 2096 : 				_Wherenode = _Pnode;

  0007e	8b 45 f8	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00081	89 45 f4	 mov	 DWORD PTR __Wherenode$[ebp], eax

; 2097 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

  00084	8b 4d f8	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00087	51		 push	 ecx
  00088	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Left
  0008d	83 c4 04	 add	 esp, 4
  00090	8b 10		 mov	 edx, DWORD PTR [eax]
  00092	89 55 f8	 mov	 DWORD PTR __Pnode$[ebp], edx
$LN5@Lbound:

; 2098 : 				}

  00095	eb a1		 jmp	 SHORT $LN2@Lbound
$LN3@Lbound:

; 2099 : 
; 2100 : 		return (_Wherenode);	// return best remembered candidate

  00097	8b 45 f4	 mov	 eax, DWORD PTR __Wherenode$[ebp]

; 2101 : 		}

  0009a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009d	3b ec		 cmp	 ebp, esp
  0009f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 04 00	 ret	 4
??$_Lbound@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBEPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Lbound<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
$T2 = -92						; size = 4
__Last$ = -84						; size = 12
__First$ = -64						; size = 12
__Ans$ = -44						; size = 24
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Eqrange<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 2052 : 		{	// find leftmost node not less than _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d a4	 lea	 edi, DWORD PTR [ebp-92]
  00019	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003a	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 2053 : 		_Paircc _Ans(static_cast<const _Myt *>(this)->_Eqrange(_Keyval));

  00041	8b 45 0c	 mov	 eax, DWORD PTR __Keyval$[ebp]
  00044	50		 push	 eax
  00045	8d 4d d4	 lea	 ecx, DWORD PTR __Ans$[ebp]
  00048	51		 push	 ecx
  00049	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Eqrange<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2054 : 		iterator _First = iterator(_Ans.first._Ptr, &this->_Get_data());

  00058	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Get_data
  00060	50		 push	 eax
  00061	8b 55 dc	 mov	 edx, DWORD PTR __Ans$[ebp+8]
  00064	52		 push	 edx
  00065	8d 4d c0	 lea	 ecx, DWORD PTR __First$[ebp]
  00068	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >
  0006d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 2055 : 		iterator _Last = iterator(_Ans.second._Ptr, &this->_Get_data());

  00071	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QAEAAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Get_data
  00079	50		 push	 eax
  0007a	8b 45 e8	 mov	 eax, DWORD PTR __Ans$[ebp+20]
  0007d	50		 push	 eax
  0007e	8d 4d ac	 lea	 ecx, DWORD PTR __Last$[ebp]
  00081	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >
  00086	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 2056 : 		return (_Pairii(_First, _Last));

  0008a	8d 4d ac	 lea	 ecx, DWORD PTR __Last$[ebp]
  0008d	51		 push	 ecx
  0008e	8d 55 c0	 lea	 edx, DWORD PTR __First$[ebp]
  00091	52		 push	 edx
  00092	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00095	e8 00 00 00 00	 call	 ??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > ><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > &,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > &,void>
  0009a	8b 45 a4	 mov	 eax, DWORD PTR $T2[ebp]
  0009d	83 c8 01	 or	 eax, 1
  000a0	89 45 a4	 mov	 DWORD PTR $T2[ebp], eax
  000a3	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000a7	8d 4d ac	 lea	 ecx, DWORD PTR __Last$[ebp]
  000aa	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  000af	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000b3	8d 4d c0	 lea	 ecx, DWORD PTR __First$[ebp]
  000b6	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  000bb	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c2	8d 4d d4	 lea	 ecx, DWORD PTR __Ans$[ebp]
  000c5	e8 00 00 00 00	 call	 ??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
  000ca	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2057 : 		}

  000cd	52		 push	 edx
  000ce	8b cd		 mov	 ecx, ebp
  000d0	50		 push	 eax
  000d1	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Eqrange
  000d7	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000dc	58		 pop	 eax
  000dd	5a		 pop	 edx
  000de	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e8	59		 pop	 ecx
  000e9	5f		 pop	 edi
  000ea	83 c4 5c	 add	 esp, 92			; 0000005cH
  000ed	3b ec		 cmp	 ebp, esp
  000ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f4	8b e5		 mov	 esp, ebp
  000f6	5d		 pop	 ebp
  000f7	c2 08 00	 ret	 8
  000fa	66 90		 npad	 2
$LN13@Eqrange:
  000fc	03 00 00 00	 DD	 3
  00100	00 00 00 00	 DD	 $LN12@Eqrange
$LN12@Eqrange:
  00104	d4 ff ff ff	 DD	 -44			; ffffffd4H
  00108	18 00 00 00	 DD	 24			; 00000018H
  0010c	00 00 00 00	 DD	 $LN8@Eqrange
  00110	c0 ff ff ff	 DD	 -64			; ffffffc0H
  00114	0c 00 00 00	 DD	 12			; 0000000cH
  00118	00 00 00 00	 DD	 $LN9@Eqrange
  0011c	ac ff ff ff	 DD	 -84			; ffffffacH
  00120	0c 00 00 00	 DD	 12			; 0000000cH
  00124	00 00 00 00	 DD	 $LN10@Eqrange
$LN10@Eqrange:
  00128	5f		 DB	 95			; 0000005fH
  00129	4c		 DB	 76			; 0000004cH
  0012a	61		 DB	 97			; 00000061H
  0012b	73		 DB	 115			; 00000073H
  0012c	74		 DB	 116			; 00000074H
  0012d	00		 DB	 0
$LN9@Eqrange:
  0012e	5f		 DB	 95			; 0000005fH
  0012f	46		 DB	 70			; 00000046H
  00130	69		 DB	 105			; 00000069H
  00131	72		 DB	 114			; 00000072H
  00132	73		 DB	 115			; 00000073H
  00133	74		 DB	 116			; 00000074H
  00134	00		 DB	 0
$LN8@Eqrange:
  00135	5f		 DB	 95			; 0000005fH
  00136	41		 DB	 65			; 00000041H
  00137	6e		 DB	 110			; 0000006eH
  00138	73		 DB	 115			; 00000073H
  00139	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR __Ans$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
__unwindfunclet$??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$1:
  00008	8d 4d c0	 lea	 ecx, DWORD PTR __First$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$2:
  00010	8d 4d ac	 lea	 ecx, DWORD PTR __Last$[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001f	8b 4a a8	 mov	 ecx, DWORD PTR [edx-88]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Eqrange<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0ABV?$allocator@V?$Vector2@M@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$Vector2@M@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@V?$Vector2@M@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABV?$allocator@V?$Vector2@M@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$Vector2@M@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@V?$Vector2@M@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Vector2<float> > >,std::_Vector_val<std::_Simple_types<Vector2<float> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<Vector2<float> > >,std::_Vector_val<std::_Simple_types<Vector2<float> > >,1><std::allocator<Vector2<float> > const &>, COMDAT
; _this$ = ecx

; 288  : 		{	// construct from forwarded values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 286  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Val1$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@ABV?$allocator@V?$Vector2@M@@@std@@@std@@YAABV?$allocator@V?$Vector2@M@@@0@ABV10@@Z ; std::forward<std::allocator<Vector2<float> > const &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@QAE@ABV?$allocator@V?$Vector2@M@@@1@@Z ; std::_Wrap_alloc<std::allocator<Vector2<float> > >::_Wrap_alloc<std::allocator<Vector2<float> > >

; 287  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@V?$Vector2@M@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<Vector2<float> > >::_Vector_val<std::_Simple_types<Vector2<float> > >

; 289  : 		}

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	83 c4 04	 add	 esp, 4
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
??$?0ABV?$allocator@V?$Vector2@M@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$Vector2@M@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@V?$Vector2@M@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<Vector2<float> > >,std::_Vector_val<std::_Simple_types<Vector2<float> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<Vector2<float> > >,std::_Vector_val<std::_Simple_types<Vector2<float> > >,1><std::allocator<Vector2<float> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0ABV?$allocator@I@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@I@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABV?$allocator@I@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@I@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned int> >,std::_Vector_val<std::_Simple_types<unsigned int> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned int> >,std::_Vector_val<std::_Simple_types<unsigned int> >,1><std::allocator<unsigned int> const &>, COMDAT
; _this$ = ecx

; 288  : 		{	// construct from forwarded values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 286  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Val1$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@ABV?$allocator@I@std@@@std@@YAABV?$allocator@I@0@ABV10@@Z ; std::forward<std::allocator<unsigned int> const &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@I@std@@@std@@QAE@ABV?$allocator@I@1@@Z ; std::_Wrap_alloc<std::allocator<unsigned int> >::_Wrap_alloc<std::allocator<unsigned int> >

; 287  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@I@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<unsigned int> >::_Vector_val<std::_Simple_types<unsigned int> >

; 289  : 		}

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	83 c4 04	 add	 esp, 4
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
??$?0ABV?$allocator@I@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@I@std@@@std@@V?$_Vector_val@U?$_Simple_types@I@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@I@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned int> >,std::_Vector_val<std::_Simple_types<unsigned int> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<unsigned int> >,std::_Vector_val<std::_Simple_types<unsigned int> >,1><std::allocator<unsigned int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??$?0U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<MeshData *> > >, COMDAT
; _this$ = ecx

; 874  : 		{	// construct from a related allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 873  : 		: _Mybase(_Right)

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??$?0PAVMeshData@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><MeshData *>

; 875  : 		}

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??$?0U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<MeshData *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
$T1 = -2						; size = 1
__Val$ = 8						; size = 4
??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>, COMDAT

; 696  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 697  : 	return (_Addressof(_Val, is_function<_Ty>()));

  0000b	0f b6 45 fe	 movzx	 eax, BYTE PTR $T1[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR __Val$[ebp]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ??$_Addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@0@AAPAU10@U?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>
  00019	83 c4 08	 add	 esp, 8

; 698  : 	}

  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::destroy<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>, COMDAT
; _this$ = ecx

; 924  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 925  : 		_Mytraits::destroy(*this, _Ptr);

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::destroy<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>
  0001b	83 c4 08	 add	 esp, 8

; 926  : 		}

  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::destroy<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??$?0U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > > >, COMDAT
; _this$ = ecx

; 874  : 		{	// construct from a related allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 873  : 		: _Mybase(_Right)

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >

; 875  : 		}

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??$?0U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAU21@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
_<_Val2_0>$ = 16					; size = 4
_<_Val2_1>$ = 20					; size = 4
??$?0ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAU21@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z PROC ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_One_then_variadic_args_t,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > const &>, COMDAT
; _this$ = ecx

; 288  : 		{	// construct from forwarded values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 286  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Val1$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@ABU10@@Z ; std::forward<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &>
  00017	83 c4 04	 add	 esp, 4

; 287  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

  0001a	8b 4d 14	 mov	 ecx, DWORD PTR _<_Val2_1>$[ebp]
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ??$forward@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@0@ABV10@@Z ; std::forward<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > const &>
  00023	83 c4 04	 add	 esp, 4
  00026	50		 push	 eax
  00027	8b 55 10	 mov	 edx, DWORD PTR _<_Val2_0>$[ebp]
  0002a	52		 push	 edx
  0002b	e8 00 00 00 00	 call	 ??$forward@U_One_then_variadic_args_t@std@@@std@@YA$$QAU_One_then_variadic_args_t@0@AAU10@@Z ; std::forward<std::_One_then_variadic_args_t>
  00030	83 c4 04	 add	 esp, 4
  00033	8a 00		 mov	 al, BYTE PTR [eax]
  00035	0f b6 c8	 movzx	 ecx, al
  00038	51		 push	 ecx
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	e8 00 00 00 00	 call	 ??$?0ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1><std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > const &>

; 289  : 		}

  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	83 c4 04	 add	 esp, 4
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 10 00	 ret	 16			; 00000010H
??$?0ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAU21@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z ENDP ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_One_then_variadic_args_t,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\map
;	COMDAT ??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@@Z PROC ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>, COMDAT

; 61   : 		{	// extract key from element value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 62   : 		return (_Val.first);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 63   : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@@Z ENDP ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??$?0U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > > >, COMDAT
; _this$ = ecx

; 874  : 		{	// construct from a related allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 873  : 		: _Mybase(_Right)

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> >

; 875  : 		}

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??$?0U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAU?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAU21@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
_<_Val2_0>$ = 16					; size = 4
_<_Val2_1>$ = 20					; size = 4
??$?0ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAU21@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z PROC ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_One_then_variadic_args_t,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > const &>, COMDAT
; _this$ = ecx

; 288  : 		{	// construct from forwarded values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 286  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Val1$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@ABU10@@Z ; std::forward<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &>
  00017	83 c4 04	 add	 esp, 4

; 287  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

  0001a	8b 4d 14	 mov	 ecx, DWORD PTR _<_Val2_1>$[ebp]
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 ??$forward@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@0@ABV10@@Z ; std::forward<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > const &>
  00023	83 c4 04	 add	 esp, 4
  00026	50		 push	 eax
  00027	8b 55 10	 mov	 edx, DWORD PTR _<_Val2_0>$[ebp]
  0002a	52		 push	 edx
  0002b	e8 00 00 00 00	 call	 ??$forward@U_One_then_variadic_args_t@std@@@std@@YA$$QAU_One_then_variadic_args_t@0@AAU10@@Z ; std::forward<std::_One_then_variadic_args_t>
  00030	83 c4 04	 add	 esp, 4
  00033	8a 00		 mov	 al, BYTE PTR [eax]
  00035	0f b6 c8	 movzx	 ecx, al
  00038	51		 push	 ecx
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	e8 00 00 00 00	 call	 ??$?0ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1><std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > const &>

; 289  : 		}

  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	83 c4 04	 add	 esp, 4
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 10 00	 ret	 16			; 00000010H
??$?0ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@$$QAU21@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z ENDP ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>,1>::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>,1><std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > const &,std::_One_then_variadic_args_t,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Umove@PAPAVMesh@@@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEPAPAVMesh@@PAPAV2@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAVMesh@@@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEPAPAVMesh@@PAPAV2@00@Z PROC ; std::vector<Mesh *,std::allocator<Mesh *> >::_Umove<Mesh * *>, COMDAT
; _this$ = ecx

; 1677 : 		{	// move initializing [_First, _Last), using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1678 : 		return (_Uninitialized_move(_First, _Last,

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Mesh *,std::allocator<Mesh *> > >::_Getal
  00016	50		 push	 eax
  00017	8b 45 10	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVMesh@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@@std@@YAPAPAVMesh@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@0@@Z ; std::_Uninitialized_move<Mesh * *,Mesh * *,std::_Wrap_alloc<std::allocator<Mesh *> > >
  00028	83 c4 10	 add	 esp, 16			; 00000010H

; 1679 : 			_Ptr, this->_Getal()));
; 1680 : 		}

  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAPAVMesh@@@?$vector@PAVMesh@@V?$allocator@PAVMesh@@@std@@@std@@IAEPAPAVMesh@@PAPAV2@00@Z ENDP ; std::vector<Mesh *,std::allocator<Mesh *> >::_Umove<Mesh * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Umove@PAPAVMaterial@@@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEPAPAVMaterial@@PAPAV2@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAVMaterial@@@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEPAPAVMaterial@@PAPAV2@00@Z PROC ; std::vector<Material *,std::allocator<Material *> >::_Umove<Material * *>, COMDAT
; _this$ = ecx

; 1677 : 		{	// move initializing [_First, _Last), using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1678 : 		return (_Uninitialized_move(_First, _Last,

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Material *,std::allocator<Material *> > >::_Getal
  00016	50		 push	 eax
  00017	8b 45 10	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVMaterial@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@@std@@YAPAPAVMaterial@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@0@@Z ; std::_Uninitialized_move<Material * *,Material * *,std::_Wrap_alloc<std::allocator<Material *> > >
  00028	83 c4 10	 add	 esp, 16			; 00000010H

; 1679 : 			_Ptr, this->_Getal()));
; 1680 : 		}

  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAPAVMaterial@@@?$vector@PAVMaterial@@V?$allocator@PAVMaterial@@@std@@@std@@IAEPAPAVMaterial@@PAPAV2@00@Z ENDP ; std::vector<Material *,std::allocator<Material *> >::_Umove<Material * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Umove@PAPAVMeshData@@@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEPAPAVMeshData@@PAPAV2@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAVMeshData@@@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEPAPAVMeshData@@PAPAV2@00@Z PROC ; std::vector<MeshData *,std::allocator<MeshData *> >::_Umove<MeshData * *>, COMDAT
; _this$ = ecx

; 1677 : 		{	// move initializing [_First, _Last), using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1678 : 		return (_Uninitialized_move(_First, _Last,

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<MeshData *,std::allocator<MeshData *> > >::_Getal
  00016	50		 push	 eax
  00017	8b 45 10	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVMeshData@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YAPAPAVMeshData@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@@Z ; std::_Uninitialized_move<MeshData * *,MeshData * *,std::_Wrap_alloc<std::allocator<MeshData *> > >
  00028	83 c4 10	 add	 esp, 16			; 00000010H

; 1679 : 			_Ptr, this->_Getal()));
; 1680 : 		}

  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAPAVMeshData@@@?$vector@PAVMeshData@@V?$allocator@PAVMeshData@@@std@@@std@@IAEPAPAVMeshData@@PAPAV2@00@Z ENDP ; std::vector<MeshData *,std::allocator<MeshData *> >::_Umove<MeshData * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YAXPAPAVMeshData@@0AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YAXPAPAVMeshData@@0AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<MeshData *> > >, COMDAT

; 185  : 	{	// destroy [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 186  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

  0000b	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAVMeshData@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVMeshData@@0@Z ; std::_Ptr_cat<MeshData *,MeshData *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YAXPAPAVMeshData@@0AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<MeshData *> > >
  00034	83 c4 10	 add	 esp, 16			; 00000010H

; 187  : 	}

  00037	83 c4 04	 add	 esp, 4
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YAXPAPAVMeshData@@0AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<MeshData *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Umove@PAV?$Vector2@M@@@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEPAV?$Vector2@M@@PAV2@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAV?$Vector2@M@@@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEPAV?$Vector2@M@@PAV2@00@Z PROC ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Umove<Vector2<float> *>, COMDAT
; _this$ = ecx

; 1677 : 		{	// move initializing [_First, _Last), using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1678 : 		return (_Uninitialized_move(_First, _Last,

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Vector2<float>,std::allocator<Vector2<float> > > >::_Getal
  00016	50		 push	 eax
  00017	8b 45 10	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAV?$Vector2@M@@PAV1@U?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@@Z ; std::_Uninitialized_move<Vector2<float> *,Vector2<float> *,std::_Wrap_alloc<std::allocator<Vector2<float> > > >
  00028	83 c4 10	 add	 esp, 16			; 00000010H

; 1679 : 			_Ptr, this->_Getal()));
; 1680 : 		}

  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAV?$Vector2@M@@@?$vector@V?$Vector2@M@@V?$allocator@V?$Vector2@M@@@std@@@std@@IAEPAV?$Vector2@M@@PAV2@00@Z ENDP ; std::vector<Vector2<float>,std::allocator<Vector2<float> > >::_Umove<Vector2<float> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Umove@PAI@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAI00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAI@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAI00@Z PROC ; std::vector<unsigned int,std::allocator<unsigned int> >::_Umove<unsigned int *>, COMDAT
; _this$ = ecx

; 1677 : 		{	// move initializing [_First, _Last), using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1678 : 		return (_Uninitialized_move(_First, _Last,

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@IV?$allocator@I@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@I@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<unsigned int,std::allocator<unsigned int> > >::_Getal
  00016	50		 push	 eax
  00017	8b 45 10	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAIPAIU?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@YAPAIPAI00AAU?$_Wrap_alloc@V?$allocator@I@std@@@0@@Z ; std::_Uninitialized_move<unsigned int *,unsigned int *,std::_Wrap_alloc<std::allocator<unsigned int> > >
  00028	83 c4 10	 add	 esp, 16			; 00000010H

; 1679 : 			_Ptr, this->_Getal()));
; 1680 : 		}

  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAI@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPAI00@Z ENDP ; std::vector<unsigned int,std::allocator<unsigned int> >::_Umove<unsigned int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@0@AAU10@@Z
_TEXT	SEGMENT
$T1 = -2						; size = 1
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@0@AAU10@@Z PROC ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >, COMDAT

; 696  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 697  : 	return (_Addressof(_Val, is_function<_Ty>()));

  0000b	0f b6 45 fe	 movzx	 eax, BYTE PTR $T1[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR __Val$[ebp]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ??$_Addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@0@AAU10@U?$integral_constant@_N$0A@@0@@Z ; std::_Addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >
  00019	83 c4 08	 add	 esp, 8

; 698  : 	}

  0001c	83 c4 04	 add	 esp, 4
  0001f	3b ec		 cmp	 ebp, esp
  00021	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >, COMDAT
; _this$ = ecx

; 924  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 925  : 		_Mytraits::destroy(*this, _Ptr);

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 ??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >
  0001b	83 c4 08	 add	 esp, 8

; 926  : 		}

  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@AAPAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::construct<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> * &>, COMDAT
; _this$ = ecx

; 916  : 		{	// construct _Ty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 917  : 		_Mytraits::construct(*this, _Ptr,

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> * &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::construct<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> * &>
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH

; 918  : 			_STD forward<_Types>(_Args)...);
; 919  : 		}

  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@AAPAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::construct<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	83 c1 50	 add	 ecx, 80			; 00000050H
  00015	e8 00 00 00 00	 call	 ??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	83 c1 50	 add	 ecx, 80			; 00000050H
  00020	8b f4		 mov	 esi, esp
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
  00028	3b f4		 cmp	 esi, esp
  0002a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002f	5e		 pop	 esi
  00030	83 c4 04	 add	 esp, 4
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ PROC ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >::~pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00014	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  00021	83 c4 04	 add	 esp, 4
  00024	3b ec		 cmp	 ebp, esp
  00026	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@XZ ENDP ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >::~pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<MeshData *> >::_Vector_val<std::_Simple_types<MeshData *> >, COMDAT
; _this$ = ecx

; 478  : 	_Vector_val()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 479  : 		{	// initialize values

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QAE@XZ ; std::_Container_base12::_Container_base12

; 480  : 		_Myfirst = pointer();

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 481  : 		_Mylast = pointer();

  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 482  : 		_Myend = pointer();

  0002a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	c7 42 0c 00 00
	00 00		 mov	 DWORD PTR [edx+12], 0

; 483  : 		}

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	83 c4 04	 add	 esp, 4
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@PAVMeshData@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<MeshData *> >::_Vector_val<std::_Simple_types<MeshData *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<MeshData *> >::_Wrap_alloc<std::allocator<MeshData *> >, COMDAT
; _this$ = ecx

; 857  : 		{	// construct by copying base

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 856  : 		: _Mybase(_Right)

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$allocator@PAVMeshData@@@std@@QAE@ABV01@@Z ; std::allocator<MeshData *>::allocator<MeshData *>

; 858  : 		}

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<MeshData *> >::_Wrap_alloc<std::allocator<MeshData *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Compare@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?_Compare@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Compare, COMDAT
; _this$ = ecx

; 2074 : 		{	// compare key_type to key_type, with debug checks

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2075 : 		return (_DEBUG_LT_PRED(this->_Getcomp(), _Left, _Right));

  0000e	68 1b 08 00 00	 push	 2075			; 0000081bH
  00013	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@BEABFJGP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	50		 push	 eax
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001f	51		 push	 ecx
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getcomp
  00028	8a 10		 mov	 dl, BYTE PTR [eax]
  0002a	0f b6 c2	 movzx	 eax, dl
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??$_Debug_lt_pred@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YA_NU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@1PB_WI@Z ; std::_Debug_lt_pred<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
  00033	83 c4 14	 add	 esp, 20			; 00000014H

; 2076 : 		}

  00036	83 c4 04	 add	 esp, 4
  00039	3b ec		 cmp	 ebp, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 08 00	 ret	 8
?_Compare@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@IBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Right$ = 12						; size = 4
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert, COMDAT
; _this$ = ecx

; 1211 : 		{	// insert _Right at _Off

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1212 : 		return (insert(_Off, _Right, 0, npos));

  0000e	6a ff		 push	 -1
  00010	6a 00		 push	 0
  00012	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00015	50		 push	 eax
  00016	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  00019	51		 push	 ecx
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert

; 1213 : 		}

  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 08 00	 ret	 8
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT
; _this$ = ecx

; 545  : 		{	// return string copy of character array

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00017	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0

; 546  : 		return (_Stringbuffer.str());

  0001e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00021	50		 push	 eax
  00022	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00025	83 c1 04	 add	 ecx, 4
  00028	e8 00 00 00 00	 call	 ?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
  0002d	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00030	83 c9 01	 or	 ecx, 1
  00033	89 4d f8	 mov	 DWORD PTR $T1[ebp], ecx
  00036	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 547  : 		}

  00039	83 c4 08	 add	 esp, 8
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 536  : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b 48 b0	 mov	 ecx, DWORD PTR [eax-80]
  00015	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c7 44 10 b0 00
	00 00 00	 mov	 DWORD PTR [eax+edx-80], OFFSET ??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 51 b0	 mov	 edx, DWORD PTR [ecx-80]
  00029	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0002c	83 e8 50	 sub	 eax, 80			; 00000050H
  0002f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	8b 51 b0	 mov	 edx, DWORD PTR [ecx-80]
  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003b	89 44 0a ac	 mov	 DWORD PTR [edx+ecx-84], eax

; 537  : 		}

  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	83 e9 4c	 sub	 ecx, 76			; 0000004cH
  00045	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
  0004a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	83 e9 48	 sub	 ecx, 72			; 00000048H
  00050	8b f4		 mov	 esi, esp
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ
  00058	3b f4		 cmp	 esi, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	5e		 pop	 esi
  00060	83 c4 04	 add	 esp, 4
  00063	3b ec		 cmp	 ebp, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
_$initVBases$ = 12					; size = 4
??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 492  : 		{	// construct empty writable character buffer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001c	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00028	33 c5		 xor	 eax, ebp
  0002a	50		 push	 eax
  0002b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0002e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00034	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00037	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0
  0003e	83 7d 0c 00	 cmp	 DWORD PTR _$initVBases$[ebp], 0
  00042	74 2e		 je	 SHORT $LN2@basic_ostr
  00044	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00047	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@
  0004d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	83 c1 50	 add	 ecx, 80			; 00000050H
  00053	8b f4		 mov	 esi, esp
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
  0005b	3b f4		 cmp	 esi, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00069	8b 4d ec	 mov	 ecx, DWORD PTR $T2[ebp]
  0006c	83 c9 01	 or	 ecx, 1
  0006f	89 4d ec	 mov	 DWORD PTR $T2[ebp], ecx
$LN2@basic_ostr:

; 490  : 		: _Mybase(&_Stringbuffer),

  00072	8b f4		 mov	 esi, esp
  00074	6a 00		 push	 0
  00076	6a 00		 push	 0
  00078	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  0007b	83 c2 04	 add	 edx, 4
  0007e	52		 push	 edx
  0007f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
  00088	3b f4		 cmp	 esi, esp
  0008a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008f	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 492  : 		{	// construct empty writable character buffer

  00096	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0009e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	c7 04 10 00 00
	00 00		 mov	 DWORD PTR [eax+edx], OFFSET ??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
  000a8	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ad	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000b0	83 e8 50	 sub	 eax, 80			; 00000050H
  000b3	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b8	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  000bb	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000be	89 44 0a fc	 mov	 DWORD PTR [edx+ecx-4], eax

; 491  : 			_Stringbuffer(_Mode | ios_base::out)

  000c2	8b 45 08	 mov	 eax, DWORD PTR __Mode$[ebp]
  000c5	83 c8 02	 or	 eax, 2
  000c8	50		 push	 eax
  000c9	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000cc	83 c1 04	 add	 ecx, 4
  000cf	e8 00 00 00 00	 call	 ??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >

; 493  : 		}

  000d4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000db	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000de	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e8	59		 pop	 ecx
  000e9	5e		 pop	 esi
  000ea	83 c4 14	 add	 esp, 20			; 00000014H
  000ed	3b ec		 cmp	 ebp, esp
  000ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f4	8b e5		 mov	 esp, ebp
  000f6	5d		 pop	 ebp
  000f7	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0:
  00000	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 19 00 00
	00		 je	 $LN5@basic_ostr
  0000c	83 65 ec fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00010	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 c1 50	 add	 ecx, 80			; 00000050H
  00016	8b f4		 mov	 esi, esp
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
  0001e	3b f4		 cmp	 esi, esp
  00020	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$LN5@basic_ostr:
  00025	c3		 ret	 0
__unwindfunclet$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$1:
  00026	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	83 c1 08	 add	 ecx, 8
  0002c	8b f4		 mov	 esi, esp
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ
  00034	3b f4		 cmp	 esi, esp
  00036	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z:
  0003b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00042	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00045	33 c8		 xor	 ecx, eax
  00047	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
  00051	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	83 e9 50	 sub	 ecx, 80			; 00000050H
  00014	e8 00 00 00 00	 call	 ??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
  00019	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001c	83 e0 01	 and	 eax, 1
  0001f	74 14		 je	 SHORT $LN2@scalar
  00021	68 98 00 00 00	 push	 152			; 00000098H
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	83 e9 50	 sub	 ecx, 80			; 00000050H
  0002c	51		 push	 ecx
  0002d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00032	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	83 e8 50	 sub	 eax, 80			; 00000050H
  0003b	83 c4 04	 add	 esp, 4
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getcomp, COMDAT
; _this$ = ecx

; 912  : 		{	// return const reference to ordering predicate

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 913  : 		return (_Mypair._Get_first());

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::_Get_first

; 914  : 		}

  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,btTriangleMesh *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@PAVMeshData@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@PAVMeshData@@@std@@QAE@ABV01@@Z PROC	; std::allocator<MeshData *>::allocator<MeshData *>, COMDAT
; _this$ = ecx

; 621  : 	allocator(const allocator<_Ty>&) _THROW0()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 622  : 		{	// construct by copying (do nothing)
; 623  : 		}

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
??0?$allocator@PAVMeshData@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<MeshData *>::allocator<MeshData *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
tv91 = -124						; size = 4
$T1 = -120						; size = 4
__Nul$2 = -112						; size = 28
__Str$3 = -76						; size = 28
__Str$4 = -40						; size = 28
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT
; _this$ = ecx

; 93   : 		{	// return string copy of character array

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d 84	 lea	 edi, DWORD PTR [ebp-124]
  0000c	b9 1f 00 00 00	 mov	 ecx, 31			; 0000001fH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00023	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00026	c7 45 88 00 00
	00 00		 mov	 DWORD PTR $T1[ebp], 0

; 94   : 		if (!(_Mystate & _Constant) && _Mysb::pptr() != 0)

  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00033	83 e1 02	 and	 ecx, 2
  00036	0f 85 b1 00 00
	00		 jne	 $LN2@str
  0003c	8b f4		 mov	 esi, esp
  0003e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00047	3b f4		 cmp	 esi, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	85 c0		 test	 eax, eax
  00050	0f 84 97 00 00
	00		 je	 $LN2@str

; 95   : 			{	// writable, make string from write buffer
; 96   : 			_Mystr _Str(_Mysb::pbase(), (_Seekhigh < _Mysb::pptr()

  00056	8b f4		 mov	 esi, esp
  00058	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00061	3b f4		 cmp	 esi, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0006b	39 42 38	 cmp	 DWORD PTR [edx+56], eax
  0006e	73 17		 jae	 SHORT $LN7@str
  00070	8b f4		 mov	 esi, esp
  00072	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0007b	3b f4		 cmp	 esi, esp
  0007d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00082	89 45 84	 mov	 DWORD PTR tv91[ebp], eax
  00085	eb 09		 jmp	 SHORT $LN8@str
$LN7@str:
  00087	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  0008d	89 4d 84	 mov	 DWORD PTR tv91[ebp], ecx
$LN8@str:
  00090	8b f4		 mov	 esi, esp
  00092	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0009b	3b f4		 cmp	 esi, esp
  0009d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a2	8b 55 84	 mov	 edx, DWORD PTR tv91[ebp]
  000a5	2b d0		 sub	 edx, eax
  000a7	52		 push	 edx
  000a8	8b f4		 mov	 esi, esp
  000aa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000b3	3b f4		 cmp	 esi, esp
  000b5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ba	50		 push	 eax
  000bb	8d 4d d8	 lea	 ecx, DWORD PTR __Str$4[ebp]
  000be	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 97   : 				? _Mysb::pptr() : _Seekhigh) - _Mysb::pbase());
; 98   : 			return (_Str);

  000c3	8d 45 d8	 lea	 eax, DWORD PTR __Str$4[ebp]
  000c6	50		 push	 eax
  000c7	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000ca	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000cf	8b 4d 88	 mov	 ecx, DWORD PTR $T1[ebp]
  000d2	83 c9 01	 or	 ecx, 1
  000d5	89 4d 88	 mov	 DWORD PTR $T1[ebp], ecx
  000d8	8d 4d d8	 lea	 ecx, DWORD PTR __Str$4[ebp]
  000db	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000e0	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000e3	e9 b6 00 00 00	 jmp	 $LN1@str
  000e8	e9 b1 00 00 00	 jmp	 $LN1@str
$LN2@str:

; 99   : 			}
; 100  : 		else if (!(_Mystate & _Noread) && _Mysb::gptr() != 0)

  000ed	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000f0	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000f3	83 e0 04	 and	 eax, 4
  000f6	75 7e		 jne	 SHORT $LN4@str
  000f8	8b f4		 mov	 esi, esp
  000fa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00103	3b f4		 cmp	 esi, esp
  00105	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010a	85 c0		 test	 eax, eax
  0010c	74 68		 je	 SHORT $LN4@str

; 101  : 			{	// readable, make string from read buffer
; 102  : 			_Mystr _Str(_Mysb::eback(), _Mysb::egptr() - _Mysb::eback());

  0010e	8b f4		 mov	 esi, esp
  00110	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00113	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00119	3b f4		 cmp	 esi, esp
  0011b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00120	8b f0		 mov	 esi, eax
  00122	8b fc		 mov	 edi, esp
  00124	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00127	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0012d	3b fc		 cmp	 edi, esp
  0012f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00134	2b f0		 sub	 esi, eax
  00136	56		 push	 esi
  00137	8b f4		 mov	 esi, esp
  00139	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0013c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00142	3b f4		 cmp	 esi, esp
  00144	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00149	50		 push	 eax
  0014a	8d 4d b4	 lea	 ecx, DWORD PTR __Str$3[ebp]
  0014d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 103  : 			return (_Str);

  00152	8d 4d b4	 lea	 ecx, DWORD PTR __Str$3[ebp]
  00155	51		 push	 ecx
  00156	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00159	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0015e	8b 55 88	 mov	 edx, DWORD PTR $T1[ebp]
  00161	83 ca 01	 or	 edx, 1
  00164	89 55 88	 mov	 DWORD PTR $T1[ebp], edx
  00167	8d 4d b4	 lea	 ecx, DWORD PTR __Str$3[ebp]
  0016a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0016f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00172	eb 2a		 jmp	 SHORT $LN1@str

; 104  : 			}
; 105  : 		else

  00174	eb 28		 jmp	 SHORT $LN1@str
$LN4@str:

; 106  : 			{	// inaccessible, return empty string
; 107  : 			_Mystr _Nul;

  00176	8d 4d 90	 lea	 ecx, DWORD PTR __Nul$2[ebp]
  00179	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 108  : 			return (_Nul);

  0017e	8d 45 90	 lea	 eax, DWORD PTR __Nul$2[ebp]
  00181	50		 push	 eax
  00182	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00185	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0018a	8b 4d 88	 mov	 ecx, DWORD PTR $T1[ebp]
  0018d	83 c9 01	 or	 ecx, 1
  00190	89 4d 88	 mov	 DWORD PTR $T1[ebp], ecx
  00193	8d 4d 90	 lea	 ecx, DWORD PTR __Nul$2[ebp]
  00196	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0019b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@str:

; 109  : 			}
; 110  : 		}

  0019e	52		 push	 edx
  0019f	8b cd		 mov	 ecx, ebp
  001a1	50		 push	 eax
  001a2	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN18@str
  001a8	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001ad	58		 pop	 eax
  001ae	5a		 pop	 edx
  001af	5f		 pop	 edi
  001b0	5e		 pop	 esi
  001b1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001b4	33 cd		 xor	 ecx, ebp
  001b6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001bb	83 c4 7c	 add	 esp, 124		; 0000007cH
  001be	3b ec		 cmp	 ebp, esp
  001c0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001c5	8b e5		 mov	 esp, ebp
  001c7	5d		 pop	 ebp
  001c8	c2 04 00	 ret	 4
  001cb	90		 npad	 1
$LN18@str:
  001cc	03 00 00 00	 DD	 3
  001d0	00 00 00 00	 DD	 $LN17@str
$LN17@str:
  001d4	d8 ff ff ff	 DD	 -40			; ffffffd8H
  001d8	1c 00 00 00	 DD	 28			; 0000001cH
  001dc	00 00 00 00	 DD	 $LN14@str
  001e0	b4 ff ff ff	 DD	 -76			; ffffffb4H
  001e4	1c 00 00 00	 DD	 28			; 0000001cH
  001e8	00 00 00 00	 DD	 $LN15@str
  001ec	90 ff ff ff	 DD	 -112			; ffffff90H
  001f0	1c 00 00 00	 DD	 28			; 0000001cH
  001f4	00 00 00 00	 DD	 $LN16@str
$LN16@str:
  001f8	5f		 DB	 95			; 0000005fH
  001f9	4e		 DB	 78			; 0000004eH
  001fa	75		 DB	 117			; 00000075H
  001fb	6c		 DB	 108			; 0000006cH
  001fc	00		 DB	 0
$LN15@str:
  001fd	5f		 DB	 95			; 0000005fH
  001fe	53		 DB	 83			; 00000053H
  001ff	74		 DB	 116			; 00000074H
  00200	72		 DB	 114			; 00000072H
  00201	00		 DB	 0
$LN14@str:
  00202	5f		 DB	 95			; 0000005fH
  00203	53		 DB	 83			; 00000053H
  00204	74		 DB	 116			; 00000074H
  00205	72		 DB	 114			; 00000072H
  00206	00		 DB	 0
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 28   : 	explicit basic_stringbuf(ios_base::openmode _Mode =

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001f	33 c5		 xor	 eax, ebp
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 29   : 		ios_base::in | ios_base::out)
; 30   : 		{	// construct empty character buffer from mode

  0002e	8b f4		 mov	 esi, esp
  00030	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
  00039	3b f4		 cmp	 esi, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00047	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
  00050	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	83 c1 40	 add	 ecx, 64			; 00000040H
  00056	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QAE@XZ ; std::allocator<char>::allocator<char>

; 31   : 		_Init(0, 0, _Getstate(_Mode));

  0005b	8b 4d 08	 mov	 ecx, DWORD PTR __Mode$[ebp]
  0005e	51		 push	 ecx
  0005f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	e8 00 00 00 00	 call	 ?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
  00067	50		 push	 eax
  00068	6a 00		 push	 0
  0006a	6a 00		 push	 0
  0006c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	e8 00 00 00 00	 call	 ?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init

; 32   : 		}

  00074	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00081	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00088	59		 pop	 ecx
  00089	5e		 pop	 esi
  0008a	83 c4 10	 add	 esp, 16			; 00000010H
  0008d	3b ec		 cmp	 ebp, esp
  0008f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00094	8b e5		 mov	 esp, ebp
  00096	5d		 pop	 ebp
  00097	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::_Get_first, COMDAT
; _this$ = ecx

; 298  : 		{	// return const reference to first

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 299  : 		return (*this);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 300  : 		}

  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
tv164 = -76						; size = 4
$T2 = -72						; size = 4
__Last$ = -64						; size = 12
__First$ = -44						; size = 12
__Hinode$ = -28						; size = 4
__Lonode$ = -24						; size = 4
__Pnode$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Eqrange<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 2016 : 		{	// find leftmost node not less than _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 40	 sub	 esp, 64			; 00000040H
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d b4	 lea	 edi, DWORD PTR [ebp-76]
  00019	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0003a	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 2017 : 		_Nodeptr _Pnode = _Root();

  00041	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Root
  00049	8b 00		 mov	 eax, DWORD PTR [eax]
  0004b	89 45 ec	 mov	 DWORD PTR __Pnode$[ebp], eax

; 2018 : 		_Nodeptr _Lonode = this->_Myhead();	// end() if search fails

  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Myhead
  00056	8b 08		 mov	 ecx, DWORD PTR [eax]
  00058	89 4d e8	 mov	 DWORD PTR __Lonode$[ebp], ecx

; 2019 : 		_Nodeptr _Hinode = this->_Myhead();	// end() if search fails

  0005b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	e8 00 00 00 00	 call	 ?_Myhead@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QBEABQAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Myhead
  00063	8b 10		 mov	 edx, DWORD PTR [eax]
  00065	89 55 e4	 mov	 DWORD PTR __Hinode$[ebp], edx
$LN2@Eqrange:

; 2020 : 
; 2021 : 		while (!this->_Isnil(_Pnode))

  00068	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Isnil
  00071	83 c4 04	 add	 esp, 4
  00074	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00077	85 c9		 test	 ecx, ecx
  00079	0f 85 b8 00 00
	00		 jne	 $LN3@Eqrange

; 2022 : 			if (_DEBUG_LT_PRED(this->_Getcomp(), this->_Key(_Pnode), _Keyval))

  0007f	68 e6 07 00 00	 push	 2022			; 000007e6H
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@BEABFJGP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00089	8b 55 0c	 mov	 edx, DWORD PTR __Keyval$[ebp]
  0008c	52		 push	 edx
  0008d	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00090	50		 push	 eax
  00091	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Key
  00099	50		 push	 eax
  0009a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0009d	e8 00 00 00 00	 call	 ?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Getcomp
  000a2	8a 08		 mov	 cl, BYTE PTR [eax]
  000a4	0f b6 d1	 movzx	 edx, cl
  000a7	52		 push	 edx
  000a8	e8 00 00 00 00	 call	 ??$_Debug_lt_pred@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YA_NU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@1PB_WI@Z ; std::_Debug_lt_pred<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
  000ad	83 c4 14	 add	 esp, 20			; 00000014H
  000b0	0f b6 c0	 movzx	 eax, al
  000b3	85 c0		 test	 eax, eax
  000b5	74 13		 je	 SHORT $LN6@Eqrange

; 2023 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

  000b7	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  000ba	51		 push	 ecx
  000bb	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Right
  000c0	83 c4 04	 add	 esp, 4
  000c3	8b 10		 mov	 edx, DWORD PTR [eax]
  000c5	89 55 ec	 mov	 DWORD PTR __Pnode$[ebp], edx

; 2024 : 			else

  000c8	eb 68		 jmp	 SHORT $LN7@Eqrange
$LN6@Eqrange:

; 2025 : 				{	// _Pnode not less than _Keyval, remember it
; 2026 : 				if (this->_Isnil(_Hinode)
; 2027 : 						&& _DEBUG_LT_PRED(this->_Getcomp(), _Keyval,

  000ca	8b 45 e4	 mov	 eax, DWORD PTR __Hinode$[ebp]
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Isnil
  000d3	83 c4 04	 add	 esp, 4
  000d6	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  000d9	85 c9		 test	 ecx, ecx
  000db	74 3e		 je	 SHORT $LN8@Eqrange
  000dd	68 ec 07 00 00	 push	 2028			; 000007ecH
  000e2	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@BEABFJGP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000e7	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$[ebp]
  000ea	52		 push	 edx
  000eb	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ee	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Key
  000f3	50		 push	 eax
  000f4	8b 45 0c	 mov	 eax, DWORD PTR __Keyval$[ebp]
  000f7	50		 push	 eax
  000f8	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000fb	e8 00 00 00 00	 call	 ?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Getcomp
  00100	8a 08		 mov	 cl, BYTE PTR [eax]
  00102	0f b6 d1	 movzx	 edx, cl
  00105	52		 push	 edx
  00106	e8 00 00 00 00	 call	 ??$_Debug_lt_pred@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YA_NU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@1PB_WI@Z ; std::_Debug_lt_pred<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
  0010b	83 c4 14	 add	 esp, 20			; 00000014H
  0010e	0f b6 c0	 movzx	 eax, al
  00111	85 c0		 test	 eax, eax
  00113	74 06		 je	 SHORT $LN8@Eqrange

; 2028 : 						this->_Key(_Pnode)))
; 2029 : 					_Hinode = _Pnode;	// _Pnode greater, remember it

  00115	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00118	89 4d e4	 mov	 DWORD PTR __Hinode$[ebp], ecx
$LN8@Eqrange:

; 2030 : 				_Lonode = _Pnode;

  0011b	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0011e	89 55 e8	 mov	 DWORD PTR __Lonode$[ebp], edx

; 2031 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

  00121	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00124	50		 push	 eax
  00125	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  0012a	83 c4 04	 add	 esp, 4
  0012d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012f	89 4d ec	 mov	 DWORD PTR __Pnode$[ebp], ecx
$LN7@Eqrange:

; 2032 : 				}

  00132	e9 31 ff ff ff	 jmp	 $LN2@Eqrange
$LN3@Eqrange:

; 2033 : 
; 2034 : 		_Pnode = this->_Isnil(_Hinode) ? _Root()

  00137	8b 55 e4	 mov	 edx, DWORD PTR __Hinode$[ebp]
  0013a	52		 push	 edx
  0013b	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Isnil
  00140	83 c4 04	 add	 esp, 4
  00143	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00146	85 c0		 test	 eax, eax
  00148	74 0f		 je	 SHORT $LN12@Eqrange
  0014a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0014d	e8 00 00 00 00	 call	 ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBEAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Root
  00152	8b 08		 mov	 ecx, DWORD PTR [eax]
  00154	89 4d b4	 mov	 DWORD PTR tv164[ebp], ecx
  00157	eb 11		 jmp	 SHORT $LN13@Eqrange
$LN12@Eqrange:
  00159	8b 55 e4	 mov	 edx, DWORD PTR __Hinode$[ebp]
  0015c	52		 push	 edx
  0015d	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  00162	83 c4 04	 add	 esp, 4
  00165	8b 00		 mov	 eax, DWORD PTR [eax]
  00167	89 45 b4	 mov	 DWORD PTR tv164[ebp], eax
$LN13@Eqrange:
  0016a	8b 4d b4	 mov	 ecx, DWORD PTR tv164[ebp]
  0016d	89 4d ec	 mov	 DWORD PTR __Pnode$[ebp], ecx
$LN4@Eqrange:

; 2035 : 			: this->_Left(_Hinode);	// continue scan for upper bound
; 2036 : 		while (!this->_Isnil(_Pnode))

  00170	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00173	52		 push	 edx
  00174	e8 00 00 00 00	 call	 ?_Isnil@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAADPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Isnil
  00179	83 c4 04	 add	 esp, 4
  0017c	0f be 00	 movsx	 eax, BYTE PTR [eax]
  0017f	85 c0		 test	 eax, eax
  00181	75 64		 jne	 SHORT $LN5@Eqrange

; 2037 : 			if (_DEBUG_LT_PRED(this->_Getcomp(), _Keyval, this->_Key(_Pnode)))

  00183	68 f5 07 00 00	 push	 2037			; 000007f5H
  00188	68 00 00 00 00	 push	 OFFSET ??_C@_1IK@BEABFJGP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0018d	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00190	51		 push	 ecx
  00191	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00194	e8 00 00 00 00	 call	 ?_Key@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Key
  00199	50		 push	 eax
  0019a	8b 55 0c	 mov	 edx, DWORD PTR __Keyval$[ebp]
  0019d	52		 push	 edx
  0019e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001a1	e8 00 00 00 00	 call	 ?_Getcomp@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QBEABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Getcomp
  001a6	8a 00		 mov	 al, BYTE PTR [eax]
  001a8	0f b6 c8	 movzx	 ecx, al
  001ab	51		 push	 ecx
  001ac	e8 00 00 00 00	 call	 ??$_Debug_lt_pred@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YA_NU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@1PB_WI@Z ; std::_Debug_lt_pred<std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
  001b1	83 c4 14	 add	 esp, 20			; 00000014H
  001b4	0f b6 d0	 movzx	 edx, al
  001b7	85 d2		 test	 edx, edx
  001b9	74 19		 je	 SHORT $LN9@Eqrange

; 2038 : 				{	// _Pnode greater than _Keyval, remember it
; 2039 : 				_Hinode = _Pnode;

  001bb	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  001be	89 45 e4	 mov	 DWORD PTR __Hinode$[ebp], eax

; 2040 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

  001c1	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  001c4	51		 push	 ecx
  001c5	e8 00 00 00 00	 call	 ?_Left@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Left
  001ca	83 c4 04	 add	 esp, 4
  001cd	8b 10		 mov	 edx, DWORD PTR [eax]
  001cf	89 55 ec	 mov	 DWORD PTR __Pnode$[ebp], edx

; 2041 : 				}
; 2042 : 			else

  001d2	eb 11		 jmp	 SHORT $LN10@Eqrange
$LN9@Eqrange:

; 2043 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

  001d4	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  001d7	50		 push	 eax
  001d8	e8 00 00 00 00	 call	 ?_Right@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@SAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@2@PAU32@@Z ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Right
  001dd	83 c4 04	 add	 esp, 4
  001e0	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e2	89 4d ec	 mov	 DWORD PTR __Pnode$[ebp], ecx
$LN10@Eqrange:
  001e5	eb 89		 jmp	 SHORT $LN4@Eqrange
$LN5@Eqrange:

; 2044 : 
; 2045 : 		const_iterator _First = const_iterator(_Lonode, &this->_Get_data());

  001e7	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001ea	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Get_data
  001ef	50		 push	 eax
  001f0	8b 55 e8	 mov	 edx, DWORD PTR __Lonode$[ebp]
  001f3	52		 push	 edx
  001f4	8d 4d d4	 lea	 ecx, DWORD PTR __First$[ebp]
  001f7	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >
  001fc	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2046 : 		const_iterator _Last = const_iterator(_Hinode, &this->_Get_data());

  00203	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00206	e8 00 00 00 00	 call	 ?_Get_data@?$_Tree_comp_alloc@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@QBEABV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Get_data
  0020b	50		 push	 eax
  0020c	8b 45 e4	 mov	 eax, DWORD PTR __Hinode$[ebp]
  0020f	50		 push	 eax
  00210	8d 4d c0	 lea	 ecx, DWORD PTR __Last$[ebp]
  00213	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >
  00218	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 2047 : 		return (_Paircc(_First, _Last));

  0021c	8d 4d c0	 lea	 ecx, DWORD PTR __Last$[ebp]
  0021f	51		 push	 ecx
  00220	8d 55 d4	 lea	 edx, DWORD PTR __First$[ebp]
  00223	52		 push	 edx
  00224	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00227	e8 00 00 00 00	 call	 ??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > &,void>
  0022c	8b 45 b8	 mov	 eax, DWORD PTR $T2[ebp]
  0022f	83 c8 01	 or	 eax, 1
  00232	89 45 b8	 mov	 DWORD PTR $T2[ebp], eax
  00235	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00239	8d 4d c0	 lea	 ecx, DWORD PTR __Last$[ebp]
  0023c	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  00241	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00248	8d 4d d4	 lea	 ecx, DWORD PTR __First$[ebp]
  0024b	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  00250	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2048 : 		}

  00253	52		 push	 edx
  00254	8b cd		 mov	 ecx, ebp
  00256	50		 push	 eax
  00257	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN22@Eqrange
  0025d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00262	58		 pop	 eax
  00263	5a		 pop	 edx
  00264	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00267	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0026e	59		 pop	 ecx
  0026f	5f		 pop	 edi
  00270	83 c4 4c	 add	 esp, 76			; 0000004cH
  00273	3b ec		 cmp	 ebp, esp
  00275	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0027a	8b e5		 mov	 esp, ebp
  0027c	5d		 pop	 ebp
  0027d	c2 08 00	 ret	 8
$LN22@Eqrange:
  00280	02 00 00 00	 DD	 2
  00284	00 00 00 00	 DD	 $LN21@Eqrange
$LN21@Eqrange:
  00288	d4 ff ff ff	 DD	 -44			; ffffffd4H
  0028c	0c 00 00 00	 DD	 12			; 0000000cH
  00290	00 00 00 00	 DD	 $LN18@Eqrange
  00294	c0 ff ff ff	 DD	 -64			; ffffffc0H
  00298	0c 00 00 00	 DD	 12			; 0000000cH
  0029c	00 00 00 00	 DD	 $LN19@Eqrange
$LN19@Eqrange:
  002a0	5f		 DB	 95			; 0000005fH
  002a1	4c		 DB	 76			; 0000004cH
  002a2	61		 DB	 97			; 00000061H
  002a3	73		 DB	 115			; 00000073H
  002a4	74		 DB	 116			; 00000074H
  002a5	00		 DB	 0
$LN18@Eqrange:
  002a6	5f		 DB	 95			; 0000005fH
  002a7	46		 DB	 70			; 00000046H
  002a8	69		 DB	 105			; 00000069H
  002a9	72		 DB	 114			; 00000072H
  002aa	73		 DB	 115			; 00000073H
  002ab	74		 DB	 116			; 00000074H
  002ac	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR __First$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$1:
  00008	8d 4d c0	 lea	 ecx, DWORD PTR __Last$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Eqrange@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@2@$0A@@std@@@std@@IBE?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,MeshData *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >,0> >::_Eqrange<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0PAVMeshData@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0PAVMeshData@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><MeshData *>, COMDAT
; _this$ = ecx

; 627  : 		{	// construct from a related allocator (do nothing)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 628  : 		}

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
??$?0PAVMeshData@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVMeshData@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><MeshData *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >, COMDAT
; _this$ = ecx

; 627  : 		{	// construct from a related allocator (do nothing)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 628  : 		}

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> >, COMDAT
; _this$ = ecx

; 627  : 		{	// construct from a related allocator (do nothing)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 628  : 		}

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
??$?0U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Iter_cat@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@@Z PROC ; std::_Iter_cat<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >, COMDAT

; 601  : 	{	// return category from iterator argument

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 602  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 603  : 	return (_Cat);

  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00021	88 08		 mov	 BYTE PTR [eax], cl
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 604  : 	}

  00026	52		 push	 edx
  00027	8b cd		 mov	 ecx, ebp
  00029	50		 push	 eax
  0002a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00030	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00035	58		 pop	 eax
  00036	5a		 pop	 edx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
  0003b	90		 npad	 1
$LN5@Iter_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Iter_cat@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Distance2@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__Off$ = 32						; size = 4
___formal$ = 36						; size = 1
??$_Distance2@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z PROC ; std::_Distance2<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,unsigned int>, COMDAT

; 961  : 	{	// add to _Off distance between bidirectional iterators (redundant)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Distance2@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00022	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 962  : 	for (; _First != _Last; ++_First)

  00029	eb 08		 jmp	 SHORT $LN4@Distance2
$LN2@Distance2:
  0002b	8d 4d 08	 lea	 ecx, DWORD PTR __First$[ebp]
  0002e	e8 00 00 00 00	 call	 ??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::operator++
$LN4@Distance2:
  00033	8d 45 14	 lea	 eax, DWORD PTR __Last$[ebp]
  00036	50		 push	 eax
  00037	8d 4d 08	 lea	 ecx, DWORD PTR __First$[ebp]
  0003a	e8 00 00 00 00	 call	 ??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::operator!=
  0003f	0f b6 c8	 movzx	 ecx, al
  00042	85 c9		 test	 ecx, ecx
  00044	74 0f		 je	 SHORT $LN3@Distance2

; 963  : 		++_Off;

  00046	8b 55 20	 mov	 edx, DWORD PTR __Off$[ebp]
  00049	8b 02		 mov	 eax, DWORD PTR [edx]
  0004b	83 c0 01	 add	 eax, 1
  0004e	8b 4d 20	 mov	 ecx, DWORD PTR __Off$[ebp]
  00051	89 01		 mov	 DWORD PTR [ecx], eax
  00053	eb d6		 jmp	 SHORT $LN2@Distance2
$LN3@Distance2:

; 964  : 	}

  00055	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00059	8d 4d 08	 lea	 ecx, DWORD PTR __First$[ebp]
  0005c	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  00061	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00068	8d 4d 14	 lea	 ecx, DWORD PTR __Last$[ebp]
  0006b	e8 00 00 00 00	 call	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
  00070	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007a	59		 pop	 ecx
  0007b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007e	3b ec		 cmp	 ebp, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Distance2@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z$0:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR __Last$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Distance2@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z$1:
  00008	8d 4d 08	 lea	 ecx, DWORD PTR __First$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Distance2@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Distance2@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Distance2@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@I@std@@YAXV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,unsigned int>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Addressof@PAVMesh@@@std@@YAPAPAVMesh@@AAPAV1@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Addressof@PAVMesh@@@std@@YAPAPAVMesh@@AAPAV1@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Addressof<Mesh *>, COMDAT

; 688  : 	{	// return address of object _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 689  : 	return (reinterpret_cast<_Ty *>(

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 690  : 		&const_cast<char&>(
; 691  : 		reinterpret_cast<const volatile char&>(_Val))));
; 692  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Addressof@PAVMesh@@@std@@YAPAPAVMesh@@AAPAV1@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Addressof<Mesh *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAVMesh@@PAV1@@?$allocator_traits@V?$allocator@PAVMesh@@@std@@@std@@SAXAAV?$allocator@PAVMesh@@@1@PAPAVMesh@@$$QAPAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAVMesh@@PAV1@@?$allocator_traits@V?$allocator@PAVMesh@@@std@@@std@@SAXAAV?$allocator@PAVMesh@@@1@PAPAVMesh@@$$QAPAV3@@Z PROC ; std::allocator_traits<std::allocator<Mesh *> >::construct<Mesh *,Mesh *>, COMDAT

; 772  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 773  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@PAVMesh@@@std@@YA$$QAPAVMesh@@AAPAV1@@Z ; std::forward<Mesh *>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@PAVMesh@@PAV1@@?$allocator@PAVMesh@@@std@@QAEXPAPAVMesh@@$$QAPAV2@@Z ; std::allocator<Mesh *>::construct<Mesh *,Mesh *>

; 774  : 		}

  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@PAVMesh@@PAV1@@?$allocator_traits@V?$allocator@PAVMesh@@@std@@@std@@SAXAAV?$allocator@PAVMesh@@@1@PAPAVMesh@@$$QAPAV3@@Z ENDP ; std::allocator_traits<std::allocator<Mesh *> >::construct<Mesh *,Mesh *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Addressof@QAVMaterial@@@std@@YAPBQAVMaterial@@ABQAV1@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Addressof@QAVMaterial@@@std@@YAPBQAVMaterial@@ABQAV1@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Addressof<Material * const>, COMDAT

; 688  : 	{	// return address of object _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 689  : 	return (reinterpret_cast<_Ty *>(

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 690  : 		&const_cast<char&>(
; 691  : 		reinterpret_cast<const volatile char&>(_Val))));
; 692  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Addressof@QAVMaterial@@@std@@YAPBQAVMaterial@@ABQAV1@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Addressof<Material * const>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAVMaterial@@@std@@YAAAPAVMaterial@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAVMaterial@@@std@@YAAAPAVMaterial@@AAPAV1@@Z PROC ; std::forward<Material * &>, COMDAT

; 1233 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1234 : 	return (static_cast<_Ty&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1235 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPAVMaterial@@@std@@YAAAPAVMaterial@@AAPAV1@@Z ENDP ; std::forward<Material * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAVMaterial@@AAPAV1@@?$allocator_traits@V?$allocator@PAVMaterial@@@std@@@std@@SAXAAV?$allocator@PAVMaterial@@@1@PAPAVMaterial@@AAPAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAVMaterial@@AAPAV1@@?$allocator_traits@V?$allocator@PAVMaterial@@@std@@@std@@SAXAAV?$allocator@PAVMaterial@@@1@PAPAVMaterial@@AAPAV3@@Z PROC ; std::allocator_traits<std::allocator<Material *> >::construct<Material *,Material * &>, COMDAT

; 772  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 773  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@AAPAVMaterial@@@std@@YAAAPAVMaterial@@AAPAV1@@Z ; std::forward<Material * &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@PAVMaterial@@AAPAV1@@?$allocator@PAVMaterial@@@std@@QAEXPAPAVMaterial@@AAPAV2@@Z ; std::allocator<Material *>::construct<Material *,Material * &>

; 774  : 		}

  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@PAVMaterial@@AAPAV1@@?$allocator_traits@V?$allocator@PAVMaterial@@@std@@@std@@SAXAAV?$allocator@PAVMaterial@@@1@PAPAVMaterial@@AAPAV3@@Z ENDP ; std::allocator_traits<std::allocator<Material *> >::construct<Material *,Material * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@ABQAVMaterial@@@std@@YAABQAVMaterial@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVMaterial@@@std@@YAABQAVMaterial@@ABQAV1@@Z PROC ; std::forward<Material * const &>, COMDAT

; 1233 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1234 : 	return (static_cast<_Ty&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1235 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABQAVMaterial@@@std@@YAABQAVMaterial@@ABQAV1@@Z ENDP ; std::forward<Material * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAVMaterial@@ABQAV1@@?$allocator_traits@V?$allocator@PAVMaterial@@@std@@@std@@SAXAAV?$allocator@PAVMaterial@@@1@PAPAVMaterial@@ABQAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAVMaterial@@ABQAV1@@?$allocator_traits@V?$allocator@PAVMaterial@@@std@@@std@@SAXAAV?$allocator@PAVMaterial@@@1@PAPAVMaterial@@ABQAV3@@Z PROC ; std::allocator_traits<std::allocator<Material *> >::construct<Material *,Material * const &>, COMDAT

; 772  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 773  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@ABQAVMaterial@@@std@@YAABQAVMaterial@@ABQAV1@@Z ; std::forward<Material * const &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@PAVMaterial@@ABQAV1@@?$allocator@PAVMaterial@@@std@@QAEXPAPAVMaterial@@ABQAV2@@Z ; std::allocator<Material *>::construct<Material *,Material * const &>

; 774  : 		}

  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@PAVMaterial@@ABQAV1@@?$allocator_traits@V?$allocator@PAVMaterial@@@std@@@std@@SAXAAV?$allocator@PAVMaterial@@@1@PAPAVMaterial@@ABQAV3@@Z ENDP ; std::allocator_traits<std::allocator<Material *> >::construct<Material *,Material * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Addressof@PAVMeshData@@@std@@YAPAPAVMeshData@@AAPAV1@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Addressof@PAVMeshData@@@std@@YAPAPAVMeshData@@AAPAV1@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Addressof<MeshData *>, COMDAT

; 688  : 	{	// return address of object _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 689  : 	return (reinterpret_cast<_Ty *>(

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 690  : 		&const_cast<char&>(
; 691  : 		reinterpret_cast<const volatile char&>(_Val))));
; 692  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Addressof@PAVMeshData@@@std@@YAPAPAVMeshData@@AAPAV1@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Addressof<MeshData *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAVMeshData@@PAV1@@?$allocator_traits@V?$allocator@PAVMeshData@@@std@@@std@@SAXAAV?$allocator@PAVMeshData@@@1@PAPAVMeshData@@$$QAPAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAVMeshData@@PAV1@@?$allocator_traits@V?$allocator@PAVMeshData@@@std@@@std@@SAXAAV?$allocator@PAVMeshData@@@1@PAPAVMeshData@@$$QAPAV3@@Z PROC ; std::allocator_traits<std::allocator<MeshData *> >::construct<MeshData *,MeshData *>, COMDAT

; 772  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 773  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@PAVMeshData@@@std@@YA$$QAPAVMeshData@@AAPAV1@@Z ; std::forward<MeshData *>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@PAVMeshData@@PAV1@@?$allocator@PAVMeshData@@@std@@QAEXPAPAVMeshData@@$$QAPAV2@@Z ; std::allocator<MeshData *>::construct<MeshData *,MeshData *>

; 774  : 		}

  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@PAVMeshData@@PAV1@@?$allocator_traits@V?$allocator@PAVMeshData@@@std@@@std@@SAXAAV?$allocator@PAVMeshData@@@1@PAPAVMeshData@@$$QAPAV3@@Z ENDP ; std::allocator_traits<std::allocator<MeshData *> >::construct<MeshData *,MeshData *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Addressof@$$CBV?$Vector2@M@@@std@@YAPBV?$Vector2@M@@ABV1@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Addressof@$$CBV?$Vector2@M@@@std@@YAPBV?$Vector2@M@@ABV1@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Addressof<Vector2<float> const >, COMDAT

; 688  : 	{	// return address of object _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 689  : 	return (reinterpret_cast<_Ty *>(

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 690  : 		&const_cast<char&>(
; 691  : 		reinterpret_cast<const volatile char&>(_Val))));
; 692  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Addressof@$$CBV?$Vector2@M@@@std@@YAPBV?$Vector2@M@@ABV1@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Addressof<Vector2<float> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAV?$Vector2@M@@@std@@YAAAV?$Vector2@M@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$Vector2@M@@@std@@YAAAV?$Vector2@M@@AAV1@@Z PROC ; std::forward<Vector2<float> &>, COMDAT

; 1233 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1234 : 	return (static_cast<_Ty&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1235 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAV?$Vector2@M@@@std@@YAAAV?$Vector2@M@@AAV1@@Z ENDP ; std::forward<Vector2<float> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$Vector2@M@@AAV1@@?$allocator_traits@V?$allocator@V?$Vector2@M@@@std@@@std@@SAXAAV?$allocator@V?$Vector2@M@@@1@PAV?$Vector2@M@@AAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$Vector2@M@@AAV1@@?$allocator_traits@V?$allocator@V?$Vector2@M@@@std@@@std@@SAXAAV?$allocator@V?$Vector2@M@@@1@PAV?$Vector2@M@@AAV3@@Z PROC ; std::allocator_traits<std::allocator<Vector2<float> > >::construct<Vector2<float>,Vector2<float> &>, COMDAT

; 772  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 773  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@AAV?$Vector2@M@@@std@@YAAAV?$Vector2@M@@AAV1@@Z ; std::forward<Vector2<float> &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@V?$Vector2@M@@AAV1@@?$allocator@V?$Vector2@M@@@std@@QAEXPAV?$Vector2@M@@AAV2@@Z ; std::allocator<Vector2<float> >::construct<Vector2<float>,Vector2<float> &>

; 774  : 		}

  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@V?$Vector2@M@@AAV1@@?$allocator_traits@V?$allocator@V?$Vector2@M@@@std@@@std@@SAXAAV?$allocator@V?$Vector2@M@@@1@PAV?$Vector2@M@@AAV3@@Z ENDP ; std::allocator_traits<std::allocator<Vector2<float> > >::construct<Vector2<float>,Vector2<float> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$Vector2@M@@V1@@?$allocator_traits@V?$allocator@V?$Vector2@M@@@std@@@std@@SAXAAV?$allocator@V?$Vector2@M@@@1@PAV?$Vector2@M@@$$QAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$Vector2@M@@V1@@?$allocator_traits@V?$allocator@V?$Vector2@M@@@std@@@std@@SAXAAV?$allocator@V?$Vector2@M@@@1@PAV?$Vector2@M@@$$QAV3@@Z PROC ; std::allocator_traits<std::allocator<Vector2<float> > >::construct<Vector2<float>,Vector2<float> >, COMDAT

; 772  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 773  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@V?$Vector2@M@@@std@@YA$$QAV?$Vector2@M@@AAV1@@Z ; std::forward<Vector2<float> >
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@V?$Vector2@M@@V1@@?$allocator@V?$Vector2@M@@@std@@QAEXPAV?$Vector2@M@@$$QAV2@@Z ; std::allocator<Vector2<float> >::construct<Vector2<float>,Vector2<float> >

; 774  : 		}

  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@V?$Vector2@M@@V1@@?$allocator_traits@V?$allocator@V?$Vector2@M@@@std@@@std@@SAXAAV?$allocator@V?$Vector2@M@@@1@PAV?$Vector2@M@@$$QAV3@@Z ENDP ; std::allocator_traits<std::allocator<Vector2<float> > >::construct<Vector2<float>,Vector2<float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Addressof@$$CBVVector3f@@@std@@YAPBVVector3f@@ABV1@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Addressof@$$CBVVector3f@@@std@@YAPBVVector3f@@ABV1@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Addressof<Vector3f const >, COMDAT

; 688  : 	{	// return address of object _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 689  : 	return (reinterpret_cast<_Ty *>(

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 690  : 		&const_cast<char&>(
; 691  : 		reinterpret_cast<const volatile char&>(_Val))));
; 692  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Addressof@$$CBVVector3f@@@std@@YAPBVVector3f@@ABV1@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Addressof<Vector3f const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAVVector3f@@@std@@YAAAVVector3f@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAVVector3f@@@std@@YAAAVVector3f@@AAV1@@Z PROC ; std::forward<Vector3f &>, COMDAT

; 1233 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1234 : 	return (static_cast<_Ty&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1235 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAVVector3f@@@std@@YAAAVVector3f@@AAV1@@Z ENDP ; std::forward<Vector3f &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@VVector3f@@AAV1@@?$allocator_traits@V?$allocator@VVector3f@@@std@@@std@@SAXAAV?$allocator@VVector3f@@@1@PAVVector3f@@AAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@VVector3f@@AAV1@@?$allocator_traits@V?$allocator@VVector3f@@@std@@@std@@SAXAAV?$allocator@VVector3f@@@1@PAVVector3f@@AAV3@@Z PROC ; std::allocator_traits<std::allocator<Vector3f> >::construct<Vector3f,Vector3f &>, COMDAT

; 772  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 773  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@AAVVector3f@@@std@@YAAAVVector3f@@AAV1@@Z ; std::forward<Vector3f &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@VVector3f@@AAV1@@?$allocator@VVector3f@@@std@@QAEXPAVVector3f@@AAV2@@Z ; std::allocator<Vector3f>::construct<Vector3f,Vector3f &>

; 774  : 		}

  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@VVector3f@@AAV1@@?$allocator_traits@V?$allocator@VVector3f@@@std@@@std@@SAXAAV?$allocator@VVector3f@@@1@PAVVector3f@@AAV3@@Z ENDP ; std::allocator_traits<std::allocator<Vector3f> >::construct<Vector3f,Vector3f &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Addressof@$$CBI@std@@YAPBIABIU?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Addressof@$$CBI@std@@YAPBIABIU?$integral_constant@_N$0A@@0@@Z PROC ; std::_Addressof<unsigned int const >, COMDAT

; 688  : 	{	// return address of object _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 689  : 	return (reinterpret_cast<_Ty *>(

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 690  : 		&const_cast<char&>(
; 691  : 		reinterpret_cast<const volatile char&>(_Val))));
; 692  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Addressof@$$CBI@std@@YAPBIABIU?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Addressof<unsigned int const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAI@std@@YAAAIAAI@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAI@std@@YAAAIAAI@Z PROC			; std::forward<unsigned int &>, COMDAT

; 1233 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1234 : 	return (static_cast<_Ty&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1235 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAI@std@@YAAAIAAI@Z ENDP			; std::forward<unsigned int &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@IAAI@?$allocator_traits@V?$allocator@I@std@@@std@@SAXAAV?$allocator@I@1@PAIAAI@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@IAAI@?$allocator_traits@V?$allocator@I@std@@@std@@SAXAAV?$allocator@I@1@PAIAAI@Z PROC ; std::allocator_traits<std::allocator<unsigned int> >::construct<unsigned int,unsigned int &>, COMDAT

; 772  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 773  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@AAI@std@@YAAAIAAI@Z ; std::forward<unsigned int &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@IAAI@?$allocator@I@std@@QAEXPAIAAI@Z ; std::allocator<unsigned int>::construct<unsigned int,unsigned int &>

; 774  : 		}

  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@IAAI@?$allocator_traits@V?$allocator@I@std@@@std@@SAXAAV?$allocator@I@1@PAIAAI@Z ENDP ; std::allocator_traits<std::allocator<unsigned int> >::construct<unsigned int,unsigned int &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@ABI@std@@YAABIABI@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABI@std@@YAABIABI@Z PROC			; std::forward<unsigned int const &>, COMDAT

; 1233 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1234 : 	return (static_cast<_Ty&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1235 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABI@std@@YAABIABI@Z ENDP			; std::forward<unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@IABI@?$allocator_traits@V?$allocator@I@std@@@std@@SAXAAV?$allocator@I@1@PAIABI@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@IABI@?$allocator_traits@V?$allocator@I@std@@@std@@SAXAAV?$allocator@I@1@PAIABI@Z PROC ; std::allocator_traits<std::allocator<unsigned int> >::construct<unsigned int,unsigned int const &>, COMDAT

; 772  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 773  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@ABI@std@@YAABIABI@Z ; std::forward<unsigned int const &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@IABI@?$allocator@I@std@@QAEXPAIABI@Z ; std::allocator<unsigned int>::construct<unsigned int,unsigned int const &>

; 774  : 		}

  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@IABI@?$allocator_traits@V?$allocator@I@std@@@std@@SAXAAV?$allocator@I@1@PAIABI@Z ENDP ; std::allocator_traits<std::allocator<unsigned int> >::construct<unsigned int,unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Addressof@I@std@@YAPAIAAIU?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Addressof@I@std@@YAPAIAAIU?$integral_constant@_N$0A@@0@@Z PROC ; std::_Addressof<unsigned int>, COMDAT

; 688  : 	{	// return address of object _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 689  : 	return (reinterpret_cast<_Ty *>(

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 690  : 		&const_cast<char&>(
; 691  : 		reinterpret_cast<const volatile char&>(_Val))));
; 692  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Addressof@I@std@@YAPAIAAIU?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Addressof<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@II@?$allocator_traits@V?$allocator@I@std@@@std@@SAXAAV?$allocator@I@1@PAI$$QAI@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@II@?$allocator_traits@V?$allocator@I@std@@@std@@SAXAAV?$allocator@I@1@PAI$$QAI@Z PROC ; std::allocator_traits<std::allocator<unsigned int> >::construct<unsigned int,unsigned int>, COMDAT

; 772  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 773  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@I@std@@YA$$QAIAAI@Z ; std::forward<unsigned int>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@II@?$allocator@I@std@@QAEXPAI$$QAI@Z ; std::allocator<unsigned int>::construct<unsigned int,unsigned int>

; 774  : 		}

  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@II@?$allocator_traits@V?$allocator@I@std@@@std@@SAXAAV?$allocator@I@1@PAI$$QAI@Z ENDP ; std::allocator_traits<std::allocator<unsigned int> >::construct<unsigned int,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Addressof@$$CBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@YAPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@0@ABU10@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Addressof@$$CBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@YAPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@0@ABU10@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const >, COMDAT

; 688  : 	{	// return address of object _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 689  : 	return (reinterpret_cast<_Ty *>(

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 690  : 		&const_cast<char&>(
; 691  : 		reinterpret_cast<const volatile char&>(_Val))));
; 692  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Addressof@$$CBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@YAPBU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@0@ABU10@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@ABV?$allocator@PAVMesh@@@std@@@std@@YAABV?$allocator@PAVMesh@@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$allocator@PAVMesh@@@std@@@std@@YAABV?$allocator@PAVMesh@@@0@ABV10@@Z PROC ; std::forward<std::allocator<Mesh *> const &>, COMDAT

; 1233 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1234 : 	return (static_cast<_Ty&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1235 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABV?$allocator@PAVMesh@@@std@@@std@@YAABV?$allocator@PAVMesh@@@0@ABV10@@Z ENDP ; std::forward<std::allocator<Mesh *> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$allocator@PAVMeshData@@@std@@@std@@YA$$QAV?$allocator@PAVMeshData@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@PAVMeshData@@@std@@@std@@YA$$QAV?$allocator@PAVMeshData@@@0@AAV10@@Z PROC ; std::forward<std::allocator<MeshData *> >, COMDAT

; 1233 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1234 : 	return (static_cast<_Ty&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1235 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@V?$allocator@PAVMeshData@@@std@@@std@@YA$$QAV?$allocator@PAVMeshData@@@0@AAV10@@Z ENDP ; std::forward<std::allocator<MeshData *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@ABV?$allocator@PAVMeshData@@@std@@@std@@YAABV?$allocator@PAVMeshData@@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$allocator@PAVMeshData@@@std@@@std@@YAABV?$allocator@PAVMeshData@@@0@ABV10@@Z PROC ; std::forward<std::allocator<MeshData *> const &>, COMDAT

; 1233 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1234 : 	return (static_cast<_Ty&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1235 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABV?$allocator@PAVMeshData@@@std@@@std@@YAABV?$allocator@PAVMeshData@@@0@ABV10@@Z ENDP ; std::forward<std::allocator<MeshData *> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > ><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > &,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > &,void>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 143  : 		: first(_STD forward<_Other1>(_Val1)),

  0002d	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > &>
  00036	83 c4 04	 add	 esp, 4
  00039	50		 push	 eax
  0003a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
  00042	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 144  : 				second(_STD forward<_Other2>(_Val2))

  00049	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0004c	51		 push	 ecx
  0004d	e8 00 00 00 00	 call	 ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > &>
  00052	83 c4 04	 add	 esp, 4
  00055	50		 push	 eax
  00056	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0005c	e8 00 00 00 00	 call	 ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z

; 146  : 		}

  00061	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00068	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00075	59		 pop	 ecx
  00076	83 c4 10	 add	 esp, 16			; 00000010H
  00079	3b ec		 cmp	 ebp, esp
  0007b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?0AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > ><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > &,std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > &,void>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@ABV?$allocator@V?$Vector2@M@@@std@@@std@@YAABV?$allocator@V?$Vector2@M@@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$allocator@V?$Vector2@M@@@std@@@std@@YAABV?$allocator@V?$Vector2@M@@@0@ABV10@@Z PROC ; std::forward<std::allocator<Vector2<float> > const &>, COMDAT

; 1233 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1234 : 	return (static_cast<_Ty&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1235 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABV?$allocator@V?$Vector2@M@@@std@@@std@@YAABV?$allocator@V?$Vector2@M@@@0@ABV10@@Z ENDP ; std::forward<std::allocator<Vector2<float> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@ABV?$allocator@I@std@@@std@@YAABV?$allocator@I@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$allocator@I@std@@@std@@YAABV?$allocator@I@0@ABV10@@Z PROC ; std::forward<std::allocator<unsigned int> const &>, COMDAT

; 1233 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1234 : 	return (static_cast<_Ty&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1235 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABV?$allocator@I@std@@@std@@YAABV?$allocator@I@0@ABV10@@Z ENDP ; std::forward<std::allocator<unsigned int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@0@AAPAU10@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@0@AAPAU10@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>, COMDAT

; 688  : 	{	// return address of object _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 689  : 	return (reinterpret_cast<_Ty *>(

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 690  : 		&const_cast<char&>(
; 691  : 		reinterpret_cast<const volatile char&>(_Val))));
; 692  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Addressof@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@0@AAPAU10@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Addressof<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::destroy<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>, COMDAT

; 779  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 780  : 		_Al.destroy(_Ptr);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  0000a	e8 00 00 00 00	 call	 ??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::destroy<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>

; 781  : 		}

  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::destroy<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@0@ABV10@@Z PROC ; std::forward<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > const &>, COMDAT

; 1233 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1234 : 	return (static_cast<_Ty&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1235 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@0@ABV10@@Z ENDP ; std::forward<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1><std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > const &>, COMDAT
; _this$ = ecx

; 288  : 		{	// construct from forwarded values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 286  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Val1$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@0@ABV10@@Z ; std::forward<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > const &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??$?0V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > ><std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >

; 287  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >

; 289  : 		}

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	83 c4 04	 add	 esp, 4
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
??$?0ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >,1><std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@0@ABV10@@Z PROC ; std::forward<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > const &>, COMDAT

; 1233 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1234 : 	return (static_cast<_Ty&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1235 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@0@ABV10@@Z ENDP ; std::forward<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1><std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > const &>, COMDAT
; _this$ = ecx

; 288  : 		{	// construct from forwarded values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 286  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

  0000e	8b 45 0c	 mov	 eax, DWORD PTR __Val1$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@YAABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@0@ABV10@@Z ; std::forward<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > const &>
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??$?0V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > ><std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >

; 287  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >

; 289  : 		}

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	83 c4 04	 add	 esp, 4
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
??$?0ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >,std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >,1><std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVMesh@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@@std@@YAPAPAVMesh@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVMesh@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@@std@@YAPAPAVMesh@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@0@@Z PROC ; std::_Uninitialized_move<Mesh * *,Mesh * *,std::_Wrap_alloc<std::allocator<Mesh *> > >, COMDAT

; 490  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 491  : 	return (_Rechecked(_Dest,

  00003	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAVMesh@@@std@@YAPAPAVMesh@@PAPAV1@@Z ; std::_Unchecked<Mesh * *>
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAVMesh@@@std@@YAPAPAVMesh@@PAPAV1@@Z ; std::_Unchecked<Mesh * *>
  0001d	83 c4 04	 add	 esp, 4
  00020	50		 push	 eax
  00021	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAVMesh@@@std@@YAPAPAVMesh@@PAPAV1@@Z ; std::_Unchecked<Mesh * *>
  0002a	83 c4 04	 add	 esp, 4
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??$_Uninit_move@PAPAVMesh@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@@std@@YAPAPAVMesh@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@0@@Z ; std::_Uninit_move<Mesh * *,Mesh * *,std::_Wrap_alloc<std::allocator<Mesh *> > >
  00033	83 c4 10	 add	 esp, 16			; 00000010H
  00036	50		 push	 eax
  00037	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  0003a	51		 push	 ecx
  0003b	e8 00 00 00 00	 call	 ??$_Rechecked@PAPAVMesh@@PAPAV1@@std@@YAAAPAPAVMesh@@AAPAPAV1@PAPAV1@@Z ; std::_Rechecked<Mesh * *,Mesh * *>
  00040	83 c4 08	 add	 esp, 8
  00043	8b 00		 mov	 eax, DWORD PTR [eax]

; 492  : 		_Uninit_move(_Unchecked(_First), _Unchecked(_Last),
; 493  : 			_Unchecked(_Dest), _Al)));
; 494  : 	}

  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??$_Uninitialized_move@PAPAVMesh@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@@std@@YAPAPAVMesh@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<Mesh * *,Mesh * *,std::_Wrap_alloc<std::allocator<Mesh *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVMaterial@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@@std@@YAPAPAVMaterial@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVMaterial@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@@std@@YAPAPAVMaterial@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@0@@Z PROC ; std::_Uninitialized_move<Material * *,Material * *,std::_Wrap_alloc<std::allocator<Material *> > >, COMDAT

; 490  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 491  : 	return (_Rechecked(_Dest,

  00003	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAVMaterial@@@std@@YAPAPAVMaterial@@PAPAV1@@Z ; std::_Unchecked<Material * *>
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAVMaterial@@@std@@YAPAPAVMaterial@@PAPAV1@@Z ; std::_Unchecked<Material * *>
  0001d	83 c4 04	 add	 esp, 4
  00020	50		 push	 eax
  00021	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAVMaterial@@@std@@YAPAPAVMaterial@@PAPAV1@@Z ; std::_Unchecked<Material * *>
  0002a	83 c4 04	 add	 esp, 4
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??$_Uninit_move@PAPAVMaterial@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@@std@@YAPAPAVMaterial@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@0@@Z ; std::_Uninit_move<Material * *,Material * *,std::_Wrap_alloc<std::allocator<Material *> > >
  00033	83 c4 10	 add	 esp, 16			; 00000010H
  00036	50		 push	 eax
  00037	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  0003a	51		 push	 ecx
  0003b	e8 00 00 00 00	 call	 ??$_Rechecked@PAPAVMaterial@@PAPAV1@@std@@YAAAPAPAVMaterial@@AAPAPAV1@PAPAV1@@Z ; std::_Rechecked<Material * *,Material * *>
  00040	83 c4 08	 add	 esp, 8
  00043	8b 00		 mov	 eax, DWORD PTR [eax]

; 492  : 		_Uninit_move(_Unchecked(_First), _Unchecked(_Last),
; 493  : 			_Unchecked(_Dest), _Al)));
; 494  : 	}

  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??$_Uninitialized_move@PAPAVMaterial@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@@std@@YAPAPAVMaterial@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<Material * *,Material * *,std::_Wrap_alloc<std::allocator<Material *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVMeshData@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YAPAPAVMeshData@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVMeshData@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YAPAPAVMeshData@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@@Z PROC ; std::_Uninitialized_move<MeshData * *,MeshData * *,std::_Wrap_alloc<std::allocator<MeshData *> > >, COMDAT

; 490  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 491  : 	return (_Rechecked(_Dest,

  00003	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAVMeshData@@@std@@YAPAPAVMeshData@@PAPAV1@@Z ; std::_Unchecked<MeshData * *>
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAVMeshData@@@std@@YAPAPAVMeshData@@PAPAV1@@Z ; std::_Unchecked<MeshData * *>
  0001d	83 c4 04	 add	 esp, 4
  00020	50		 push	 eax
  00021	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Unchecked@PAPAVMeshData@@@std@@YAPAPAVMeshData@@PAPAV1@@Z ; std::_Unchecked<MeshData * *>
  0002a	83 c4 04	 add	 esp, 4
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??$_Uninit_move@PAPAVMeshData@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YAPAPAVMeshData@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@@Z ; std::_Uninit_move<MeshData * *,MeshData * *,std::_Wrap_alloc<std::allocator<MeshData *> > >
  00033	83 c4 10	 add	 esp, 16			; 00000010H
  00036	50		 push	 eax
  00037	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  0003a	51		 push	 ecx
  0003b	e8 00 00 00 00	 call	 ??$_Rechecked@PAPAVMeshData@@PAPAV1@@std@@YAAAPAPAVMeshData@@AAPAPAV1@PAPAV1@@Z ; std::_Rechecked<MeshData * *,MeshData * *>
  00040	83 c4 08	 add	 esp, 8
  00043	8b 00		 mov	 eax, DWORD PTR [eax]

; 492  : 		_Uninit_move(_Unchecked(_First), _Unchecked(_Last),
; 493  : 			_Unchecked(_Dest), _Al)));
; 494  : 	}

  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??$_Uninitialized_move@PAPAVMeshData@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YAPAPAVMeshData@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<MeshData * *,MeshData * *,std::_Wrap_alloc<std::allocator<MeshData *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@PAVMeshData@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVMeshData@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVMeshData@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVMeshData@@0@Z PROC ; std::_Ptr_cat<MeshData *,MeshData *>, COMDAT

; 640  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 641  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::type _Cat;
; 642  : 	return (_Cat);

  0001b	8a 45 fb	 mov	 al, BYTE PTR __Cat$[ebp]

; 643  : 	}

  0001e	52		 push	 edx
  0001f	8b cd		 mov	 ecx, ebp
  00021	50		 push	 eax
  00022	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Ptr_cat
  00028	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0002d	58		 pop	 eax
  0002e	5a		 pop	 edx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
  00033	90		 npad	 1
$LN5@Ptr_cat:
  00034	01 00 00 00	 DD	 1
  00038	00 00 00 00	 DD	 $LN4@Ptr_cat
$LN4@Ptr_cat:
  0003c	fb ff ff ff	 DD	 -5			; fffffffbH
  00040	01 00 00 00	 DD	 1
  00044	00 00 00 00	 DD	 $LN3@Ptr_cat
$LN3@Ptr_cat:
  00048	5f		 DB	 95			; 0000005fH
  00049	43		 DB	 67			; 00000043H
  0004a	61		 DB	 97			; 00000061H
  0004b	74		 DB	 116			; 00000074H
  0004c	00		 DB	 0
??$_Ptr_cat@PAVMeshData@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVMeshData@@0@Z ENDP ; std::_Ptr_cat<MeshData *,MeshData *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YAXPAPAVMeshData@@0AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YAXPAPAVMeshData@@0AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<MeshData *> > >, COMDAT

; 179  : 	{	// destroy [_First, _Last), scalar type (do nothing)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 180  : 	}

  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YAXPAPAVMeshData@@0AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<MeshData *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAV?$Vector2@M@@PAV1@U?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$Vector2@M@@PAV1@U?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@@Z PROC ; std::_Uninitialized_move<Vector2<float> *,Vector2<float> *,std::_Wrap_alloc<std::allocator<Vector2<float> > > >, COMDAT

; 490  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 491  : 	return (_Rechecked(_Dest,

  00003	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ??$_Unchecked@PAV?$Vector2@M@@@std@@YAPAV?$Vector2@M@@PAV1@@Z ; std::_Unchecked<Vector2<float> *>
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 ??$_Unchecked@PAV?$Vector2@M@@@std@@YAPAV?$Vector2@M@@PAV1@@Z ; std::_Unchecked<Vector2<float> *>
  0001d	83 c4 04	 add	 esp, 4
  00020	50		 push	 eax
  00021	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Unchecked@PAV?$Vector2@M@@@std@@YAPAV?$Vector2@M@@PAV1@@Z ; std::_Unchecked<Vector2<float> *>
  0002a	83 c4 04	 add	 esp, 4
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??$_Uninit_move@PAV?$Vector2@M@@PAV1@U?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@@Z ; std::_Uninit_move<Vector2<float> *,Vector2<float> *,std::_Wrap_alloc<std::allocator<Vector2<float> > > >
  00033	83 c4 10	 add	 esp, 16			; 00000010H
  00036	50		 push	 eax
  00037	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  0003a	51		 push	 ecx
  0003b	e8 00 00 00 00	 call	 ??$_Rechecked@PAV?$Vector2@M@@PAV1@@std@@YAAAPAV?$Vector2@M@@AAPAV1@PAV1@@Z ; std::_Rechecked<Vector2<float> *,Vector2<float> *>
  00040	83 c4 08	 add	 esp, 8
  00043	8b 00		 mov	 eax, DWORD PTR [eax]

; 492  : 		_Uninit_move(_Unchecked(_First), _Unchecked(_Last),
; 493  : 			_Unchecked(_Dest), _Al)));
; 494  : 	}

  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??$_Uninitialized_move@PAV?$Vector2@M@@PAV1@U?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<Vector2<float> *,Vector2<float> *,std::_Wrap_alloc<std::allocator<Vector2<float> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAIPAIU?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@YAPAIPAI00AAU?$_Wrap_alloc@V?$allocator@I@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAIPAIU?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@YAPAIPAI00AAU?$_Wrap_alloc@V?$allocator@I@std@@@0@@Z PROC ; std::_Uninitialized_move<unsigned int *,unsigned int *,std::_Wrap_alloc<std::allocator<unsigned int> > >, COMDAT

; 490  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 491  : 	return (_Rechecked(_Dest,

  00003	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ??$_Unchecked@PAI@std@@YAPAIPAI@Z ; std::_Unchecked<unsigned int *>
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 ??$_Unchecked@PAI@std@@YAPAIPAI@Z ; std::_Unchecked<unsigned int *>
  0001d	83 c4 04	 add	 esp, 4
  00020	50		 push	 eax
  00021	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Unchecked@PAI@std@@YAPAIPAI@Z ; std::_Unchecked<unsigned int *>
  0002a	83 c4 04	 add	 esp, 4
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??$_Uninit_move@PAIPAIU?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@YAPAIPAI00AAU?$_Wrap_alloc@V?$allocator@I@std@@@0@@Z ; std::_Uninit_move<unsigned int *,unsigned int *,std::_Wrap_alloc<std::allocator<unsigned int> > >
  00033	83 c4 10	 add	 esp, 16			; 00000010H
  00036	50		 push	 eax
  00037	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  0003a	51		 push	 ecx
  0003b	e8 00 00 00 00	 call	 ??$_Rechecked@PAIPAI@std@@YAAAPAIAAPAIPAI@Z ; std::_Rechecked<unsigned int *,unsigned int *>
  00040	83 c4 08	 add	 esp, 8
  00043	8b 00		 mov	 eax, DWORD PTR [eax]

; 492  : 		_Uninit_move(_Unchecked(_First), _Unchecked(_Last),
; 493  : 			_Unchecked(_Dest), _Al)));
; 494  : 	}

  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??$_Uninitialized_move@PAIPAIU?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@YAPAIPAI00AAU?$_Wrap_alloc@V?$allocator@I@std@@@0@@Z ENDP ; std::_Uninitialized_move<unsigned int *,unsigned int *,std::_Wrap_alloc<std::allocator<unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@0@AAU10@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@0@AAU10@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >, COMDAT

; 688  : 	{	// return address of object _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 689  : 	return (reinterpret_cast<_Ty *>(

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 690  : 		&const_cast<char&>(
; 691  : 		reinterpret_cast<const volatile char&>(_Val))));
; 692  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@0@AAU10@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >, COMDAT

; 779  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 780  : 		_Al.destroy(_Ptr);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  0000a	e8 00 00 00 00	 call	 ??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >

; 781  : 		}

  0000f	3b ec		 cmp	 ebp, esp
  00011	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@1@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> * &>, COMDAT

; 1233 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1234 : 	return (static_cast<_Ty&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1235 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@AAPAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@AAPAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::construct<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> * &>, COMDAT

; 772  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 773  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> * &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@AAPAU21@@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::construct<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> * &>

; 774  : 		}

  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@1@PAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@AAPAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::construct<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >, COMDAT
; _this$ = ecx

; 565  : 	_Tree_val()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 566  : 		{	// initialize data

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QAE@XZ ; std::_Container_base12::_Container_base12

; 567  : 		this->_Myhead = 0;

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 568  : 		this->_Mysize = 0;

  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 569  : 		}

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::operator++, COMDAT
; _this$ = ecx

; 409  : 		{	// preincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 410  : 		++(*(_Mybase *)this);

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??E?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::operator++

; 411  : 		return (*this);

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 412  : 		}

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??E?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xtree
;	COMDAT ??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >, COMDAT
; _this$ = ecx

; 565  : 	_Tree_val()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 566  : 		{	// initialize data

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QAE@XZ ; std::_Container_base12::_Container_base12

; 567  : 		this->_Myhead = 0;

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 568  : 		this->_Mysize = 0;

  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 569  : 		}

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z PROC ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > &,void>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 143  : 		: first(_STD forward<_Other1>(_Val1)),

  0002d	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > &>
  00036	83 c4 04	 add	 esp, 4
  00039	50		 push	 eax
  0003a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
  00042	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 144  : 				second(_STD forward<_Other2>(_Val2))

  00049	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0004c	51		 push	 ecx
  0004d	e8 00 00 00 00	 call	 ??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > &>
  00052	83 c4 04	 add	 esp, 4
  00055	50		 push	 eax
  00056	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0005c	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@ABV01@@Z

; 146  : 		}

  00061	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00068	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00075	59		 pop	 ecx
  00076	83 c4 10	 add	 esp, 16			; 00000010H
  00079	3b ec		 cmp	 ebp, esp
  0007b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?0AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@AAV01@X@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@V12@@std@@QAE@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@1@0@Z ENDP ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > >::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > &,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > &,void>
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAVMesh@@PAV1@@?$allocator@PAVMesh@@@std@@QAEXPAPAVMesh@@$$QAPAV2@@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVMesh@@PAV1@@?$allocator@PAVMesh@@@std@@QAEXPAPAVMesh@@$$QAPAV2@@Z PROC ; std::allocator<Mesh *>::construct<Mesh *,Mesh *>, COMDAT
; _this$ = ecx

; 654  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 655  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	6a 04		 push	 4
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0002f	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00033	74 1b		 je	 SHORT $LN3@construct
  00035	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 ??$forward@PAVMesh@@@std@@YA$$QAPAVMesh@@AAPAV1@@Z ; std::forward<Mesh *>
  0003e	83 c4 04	 add	 esp, 4
  00041	8b 55 f8	 mov	 edx, DWORD PTR $T1[ebp]
  00044	8b 00		 mov	 eax, DWORD PTR [eax]
  00046	89 02		 mov	 DWORD PTR [edx], eax
  00048	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  0004b	89 4d f4	 mov	 DWORD PTR tv73[ebp], ecx
  0004e	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00050	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN1@construct:

; 656  : 		}

  00057	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005a	3b ec		 cmp	 ebp, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 08 00	 ret	 8
??$construct@PAVMesh@@PAV1@@?$allocator@PAVMesh@@@std@@QAEXPAPAVMesh@@$$QAPAV2@@Z ENDP ; std::allocator<Mesh *>::construct<Mesh *,Mesh *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAVMaterial@@AAPAV1@@?$allocator@PAVMaterial@@@std@@QAEXPAPAVMaterial@@AAPAV2@@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVMaterial@@AAPAV1@@?$allocator@PAVMaterial@@@std@@QAEXPAPAVMaterial@@AAPAV2@@Z PROC ; std::allocator<Material *>::construct<Material *,Material * &>, COMDAT
; _this$ = ecx

; 654  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 655  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	6a 04		 push	 4
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0002f	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00033	74 1b		 je	 SHORT $LN3@construct
  00035	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 ??$forward@AAPAVMaterial@@@std@@YAAAPAVMaterial@@AAPAV1@@Z ; std::forward<Material * &>
  0003e	83 c4 04	 add	 esp, 4
  00041	8b 55 f8	 mov	 edx, DWORD PTR $T1[ebp]
  00044	8b 00		 mov	 eax, DWORD PTR [eax]
  00046	89 02		 mov	 DWORD PTR [edx], eax
  00048	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  0004b	89 4d f4	 mov	 DWORD PTR tv73[ebp], ecx
  0004e	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00050	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN1@construct:

; 656  : 		}

  00057	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005a	3b ec		 cmp	 ebp, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 08 00	 ret	 8
??$construct@PAVMaterial@@AAPAV1@@?$allocator@PAVMaterial@@@std@@QAEXPAPAVMaterial@@AAPAV2@@Z ENDP ; std::allocator<Material *>::construct<Material *,Material * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAVMaterial@@ABQAV1@@?$allocator@PAVMaterial@@@std@@QAEXPAPAVMaterial@@ABQAV2@@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVMaterial@@ABQAV1@@?$allocator@PAVMaterial@@@std@@QAEXPAPAVMaterial@@ABQAV2@@Z PROC ; std::allocator<Material *>::construct<Material *,Material * const &>, COMDAT
; _this$ = ecx

; 654  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 655  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	6a 04		 push	 4
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0002f	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00033	74 1b		 je	 SHORT $LN3@construct
  00035	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 ??$forward@ABQAVMaterial@@@std@@YAABQAVMaterial@@ABQAV1@@Z ; std::forward<Material * const &>
  0003e	83 c4 04	 add	 esp, 4
  00041	8b 55 f8	 mov	 edx, DWORD PTR $T1[ebp]
  00044	8b 00		 mov	 eax, DWORD PTR [eax]
  00046	89 02		 mov	 DWORD PTR [edx], eax
  00048	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  0004b	89 4d f4	 mov	 DWORD PTR tv73[ebp], ecx
  0004e	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00050	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN1@construct:

; 656  : 		}

  00057	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005a	3b ec		 cmp	 ebp, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 08 00	 ret	 8
??$construct@PAVMaterial@@ABQAV1@@?$allocator@PAVMaterial@@@std@@QAEXPAPAVMaterial@@ABQAV2@@Z ENDP ; std::allocator<Material *>::construct<Material *,Material * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAVMeshData@@PAV1@@?$allocator@PAVMeshData@@@std@@QAEXPAPAVMeshData@@$$QAPAV2@@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAVMeshData@@PAV1@@?$allocator@PAVMeshData@@@std@@QAEXPAPAVMeshData@@$$QAPAV2@@Z PROC ; std::allocator<MeshData *>::construct<MeshData *,MeshData *>, COMDAT
; _this$ = ecx

; 654  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 655  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	6a 04		 push	 4
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0002f	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00033	74 1b		 je	 SHORT $LN3@construct
  00035	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 ??$forward@PAVMeshData@@@std@@YA$$QAPAVMeshData@@AAPAV1@@Z ; std::forward<MeshData *>
  0003e	83 c4 04	 add	 esp, 4
  00041	8b 55 f8	 mov	 edx, DWORD PTR $T1[ebp]
  00044	8b 00		 mov	 eax, DWORD PTR [eax]
  00046	89 02		 mov	 DWORD PTR [edx], eax
  00048	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  0004b	89 4d f4	 mov	 DWORD PTR tv73[ebp], ecx
  0004e	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00050	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN1@construct:

; 656  : 		}

  00057	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005a	3b ec		 cmp	 ebp, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 08 00	 ret	 8
??$construct@PAVMeshData@@PAV1@@?$allocator@PAVMeshData@@@std@@QAEXPAPAVMeshData@@$$QAPAV2@@Z ENDP ; std::allocator<MeshData *>::construct<MeshData *,MeshData *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$Vector2@M@@AAV1@@?$allocator@V?$Vector2@M@@@std@@QAEXPAV?$Vector2@M@@AAV2@@Z
_TEXT	SEGMENT
tv74 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$Vector2@M@@AAV1@@?$allocator@V?$Vector2@M@@@std@@QAEXPAV?$Vector2@M@@AAV2@@Z PROC ; std::allocator<Vector2<float> >::construct<Vector2<float>,Vector2<float> &>, COMDAT
; _this$ = ecx

; 654  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 655  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	6a 08		 push	 8
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0002f	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00033	74 21		 je	 SHORT $LN3@construct
  00035	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 ??$forward@AAV?$Vector2@M@@@std@@YAAAV?$Vector2@M@@AAV1@@Z ; std::forward<Vector2<float> &>
  0003e	83 c4 04	 add	 esp, 4
  00041	8b 10		 mov	 edx, DWORD PTR [eax]
  00043	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00046	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00049	89 11		 mov	 DWORD PTR [ecx], edx
  0004b	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0004e	8b 55 f8	 mov	 edx, DWORD PTR $T1[ebp]
  00051	89 55 f4	 mov	 DWORD PTR tv74[ebp], edx
  00054	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00056	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN1@construct:

; 656  : 		}

  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00060	3b ec		 cmp	 ebp, esp
  00062	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 08 00	 ret	 8
??$construct@V?$Vector2@M@@AAV1@@?$allocator@V?$Vector2@M@@@std@@QAEXPAV?$Vector2@M@@AAV2@@Z ENDP ; std::allocator<Vector2<float> >::construct<Vector2<float>,Vector2<float> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$Vector2@M@@V1@@?$allocator@V?$Vector2@M@@@std@@QAEXPAV?$Vector2@M@@$$QAV2@@Z
_TEXT	SEGMENT
tv74 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$Vector2@M@@V1@@?$allocator@V?$Vector2@M@@@std@@QAEXPAV?$Vector2@M@@$$QAV2@@Z PROC ; std::allocator<Vector2<float> >::construct<Vector2<float>,Vector2<float> >, COMDAT
; _this$ = ecx

; 654  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 655  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	6a 08		 push	 8
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0002f	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00033	74 21		 je	 SHORT $LN3@construct
  00035	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 ??$forward@V?$Vector2@M@@@std@@YA$$QAV?$Vector2@M@@AAV1@@Z ; std::forward<Vector2<float> >
  0003e	83 c4 04	 add	 esp, 4
  00041	8b 10		 mov	 edx, DWORD PTR [eax]
  00043	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00046	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00049	89 11		 mov	 DWORD PTR [ecx], edx
  0004b	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0004e	8b 55 f8	 mov	 edx, DWORD PTR $T1[ebp]
  00051	89 55 f4	 mov	 DWORD PTR tv74[ebp], edx
  00054	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00056	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN1@construct:

; 656  : 		}

  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00060	3b ec		 cmp	 ebp, esp
  00062	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 08 00	 ret	 8
??$construct@V?$Vector2@M@@V1@@?$allocator@V?$Vector2@M@@@std@@QAEXPAV?$Vector2@M@@$$QAV2@@Z ENDP ; std::allocator<Vector2<float> >::construct<Vector2<float>,Vector2<float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@VVector3f@@AAV1@@?$allocator@VVector3f@@@std@@QAEXPAVVector3f@@AAV2@@Z
_TEXT	SEGMENT
tv74 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@VVector3f@@AAV1@@?$allocator@VVector3f@@@std@@QAEXPAVVector3f@@AAV2@@Z PROC ; std::allocator<Vector3f>::construct<Vector3f,Vector3f &>, COMDAT
; _this$ = ecx

; 654  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 655  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	6a 0c		 push	 12			; 0000000cH
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0002f	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00033	74 27		 je	 SHORT $LN3@construct
  00035	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 ??$forward@AAVVector3f@@@std@@YAAAVVector3f@@AAV1@@Z ; std::forward<Vector3f &>
  0003e	83 c4 04	 add	 esp, 4
  00041	8b 55 f8	 mov	 edx, DWORD PTR $T1[ebp]
  00044	8b 08		 mov	 ecx, DWORD PTR [eax]
  00046	89 0a		 mov	 DWORD PTR [edx], ecx
  00048	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0004e	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00051	89 42 08	 mov	 DWORD PTR [edx+8], eax
  00054	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00057	89 4d f4	 mov	 DWORD PTR tv74[ebp], ecx
  0005a	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  0005c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN1@construct:

; 656  : 		}

  00063	83 c4 0c	 add	 esp, 12			; 0000000cH
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 08 00	 ret	 8
??$construct@VVector3f@@AAV1@@?$allocator@VVector3f@@@std@@QAEXPAVVector3f@@AAV2@@Z ENDP ; std::allocator<Vector3f>::construct<Vector3f,Vector3f &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@IAAI@?$allocator@I@std@@QAEXPAIAAI@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@IAAI@?$allocator@I@std@@QAEXPAIAAI@Z PROC	; std::allocator<unsigned int>::construct<unsigned int,unsigned int &>, COMDAT
; _this$ = ecx

; 654  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 655  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	6a 04		 push	 4
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0002f	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00033	74 1b		 je	 SHORT $LN3@construct
  00035	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 ??$forward@AAI@std@@YAAAIAAI@Z ; std::forward<unsigned int &>
  0003e	83 c4 04	 add	 esp, 4
  00041	8b 55 f8	 mov	 edx, DWORD PTR $T1[ebp]
  00044	8b 00		 mov	 eax, DWORD PTR [eax]
  00046	89 02		 mov	 DWORD PTR [edx], eax
  00048	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  0004b	89 4d f4	 mov	 DWORD PTR tv73[ebp], ecx
  0004e	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00050	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN1@construct:

; 656  : 		}

  00057	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005a	3b ec		 cmp	 ebp, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 08 00	 ret	 8
??$construct@IAAI@?$allocator@I@std@@QAEXPAIAAI@Z ENDP	; std::allocator<unsigned int>::construct<unsigned int,unsigned int &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@IABI@?$allocator@I@std@@QAEXPAIABI@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@IABI@?$allocator@I@std@@QAEXPAIABI@Z PROC	; std::allocator<unsigned int>::construct<unsigned int,unsigned int const &>, COMDAT
; _this$ = ecx

; 654  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 655  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	6a 04		 push	 4
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0002f	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00033	74 1b		 je	 SHORT $LN3@construct
  00035	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 ??$forward@ABI@std@@YAABIABI@Z ; std::forward<unsigned int const &>
  0003e	83 c4 04	 add	 esp, 4
  00041	8b 55 f8	 mov	 edx, DWORD PTR $T1[ebp]
  00044	8b 00		 mov	 eax, DWORD PTR [eax]
  00046	89 02		 mov	 DWORD PTR [edx], eax
  00048	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  0004b	89 4d f4	 mov	 DWORD PTR tv73[ebp], ecx
  0004e	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00050	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN1@construct:

; 656  : 		}

  00057	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005a	3b ec		 cmp	 ebp, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 08 00	 ret	 8
??$construct@IABI@?$allocator@I@std@@QAEXPAIABI@Z ENDP	; std::allocator<unsigned int>::construct<unsigned int,unsigned int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@II@?$allocator@I@std@@QAEXPAI$$QAI@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@II@?$allocator@I@std@@QAEXPAI$$QAI@Z PROC	; std::allocator<unsigned int>::construct<unsigned int,unsigned int>, COMDAT
; _this$ = ecx

; 654  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 655  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	6a 04		 push	 4
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0002f	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00033	74 1b		 je	 SHORT $LN3@construct
  00035	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 ??$forward@I@std@@YA$$QAIAAI@Z ; std::forward<unsigned int>
  0003e	83 c4 04	 add	 esp, 4
  00041	8b 55 f8	 mov	 edx, DWORD PTR $T1[ebp]
  00044	8b 00		 mov	 eax, DWORD PTR [eax]
  00046	89 02		 mov	 DWORD PTR [edx], eax
  00048	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  0004b	89 4d f4	 mov	 DWORD PTR tv73[ebp], ecx
  0004e	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00050	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN1@construct:

; 656  : 		}

  00057	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005a	3b ec		 cmp	 ebp, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 08 00	 ret	 8
??$construct@II@?$allocator@I@std@@QAEXPAI$$QAI@Z ENDP	; std::allocator<unsigned int>::construct<unsigned int,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::destroy<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>, COMDAT
; _this$ = ecx

; 661  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 662  : 		_Ptr->~_Uty();
; 663  : 		}

  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
??$destroy@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::destroy<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??$?0V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > ><std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >, COMDAT
; _this$ = ecx

; 868  : 		{	// construct from a related allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 867  : 		: _Mybase(_Right)

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >

; 869  : 		}

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??$?0V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> > ><std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??$?0V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > ><std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >, COMDAT
; _this$ = ecx

; 868  : 		{	// construct from a related allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 867  : 		: _Mybase(_Right)

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >

; 869  : 		}

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??$?0V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > >::_Wrap_alloc<std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> > ><std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninit_move@PAPAVMesh@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@@std@@YAPAPAVMesh@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAPAVMesh@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@@std@@YAPAPAVMesh@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@0@@Z PROC ; std::_Uninit_move<Mesh * *,Mesh * *,std::_Wrap_alloc<std::allocator<Mesh *> > >, COMDAT

; 480  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 481  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,

  0000b	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAVMesh@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVMesh@@0@Z ; std::_Ptr_cat<Mesh *,Mesh *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$_Val_type@PAPAVMesh@@@std@@YAPAPAVMesh@@PAPAV1@@Z ; std::_Val_type<Mesh * *>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00037	52		 push	 edx
  00038	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Uninit_move@PAVMesh@@PAV1@PAV1@@std@@YAPAPAVMesh@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Mesh *,Mesh *,Mesh *>
  00045	83 c4 18	 add	 esp, 24			; 00000018H

; 482  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));
; 483  : 	}

  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??$_Uninit_move@PAPAVMesh@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@std@@@std@@YAPAPAVMesh@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@0@@Z ENDP ; std::_Uninit_move<Mesh * *,Mesh * *,std::_Wrap_alloc<std::allocator<Mesh *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninit_move@PAPAVMaterial@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@@std@@YAPAPAVMaterial@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAPAVMaterial@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@@std@@YAPAPAVMaterial@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@0@@Z PROC ; std::_Uninit_move<Material * *,Material * *,std::_Wrap_alloc<std::allocator<Material *> > >, COMDAT

; 480  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 481  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,

  0000b	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAVMaterial@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVMaterial@@0@Z ; std::_Ptr_cat<Material *,Material *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$_Val_type@PAPAVMaterial@@@std@@YAPAPAVMaterial@@PAPAV1@@Z ; std::_Val_type<Material * *>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00037	52		 push	 edx
  00038	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Uninit_move@PAVMaterial@@PAV1@PAV1@@std@@YAPAPAVMaterial@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Material *,Material *,Material *>
  00045	83 c4 18	 add	 esp, 24			; 00000018H

; 482  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));
; 483  : 	}

  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??$_Uninit_move@PAPAVMaterial@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@std@@@std@@YAPAPAVMaterial@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@0@@Z ENDP ; std::_Uninit_move<Material * *,Material * *,std::_Wrap_alloc<std::allocator<Material *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Unchecked@PAPAVMeshData@@@std@@YAPAPAVMeshData@@PAPAV1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAPAVMeshData@@@std@@YAPAPAVMeshData@@PAPAV1@@Z PROC ; std::_Unchecked<MeshData * *>, COMDAT

; 438  : 	{	// construct unchecked from checked, generic

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 439  : 	return (_Src);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]

; 440  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Unchecked@PAPAVMeshData@@@std@@YAPAPAVMeshData@@PAPAV1@@Z ENDP ; std::_Unchecked<MeshData * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninit_move@PAPAVMeshData@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YAPAPAVMeshData@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAPAVMeshData@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YAPAPAVMeshData@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@@Z PROC ; std::_Uninit_move<MeshData * *,MeshData * *,std::_Wrap_alloc<std::allocator<MeshData *> > >, COMDAT

; 480  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 481  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,

  0000b	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@PAVMeshData@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVMeshData@@0@Z ; std::_Ptr_cat<MeshData *,MeshData *>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$_Val_type@PAPAVMeshData@@@std@@YAPAPAVMeshData@@PAPAV1@@Z ; std::_Val_type<MeshData * *>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00037	52		 push	 edx
  00038	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Uninit_move@PAVMeshData@@PAV1@PAV1@@std@@YAPAPAVMeshData@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<MeshData *,MeshData *,MeshData *>
  00045	83 c4 18	 add	 esp, 24			; 00000018H

; 482  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));
; 483  : 	}

  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??$_Uninit_move@PAPAVMeshData@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@std@@@std@@YAPAPAVMeshData@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@@Z ENDP ; std::_Uninit_move<MeshData * *,MeshData * *,std::_Wrap_alloc<std::allocator<MeshData *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Rechecked@PAPAVMeshData@@PAPAV1@@std@@YAAAPAPAVMeshData@@AAPAPAV1@PAPAV1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAPAVMeshData@@PAPAV1@@std@@YAAAPAPAVMeshData@@AAPAPAV1@PAPAV1@@Z PROC ; std::_Rechecked<MeshData * *,MeshData * *>, COMDAT

; 446  : 	{	// reset checked from unchecked, generic

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 447  : 	_Dest = _Src;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Src$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 448  : 	return (_Dest);

  0000b	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]

; 449  : 	}

  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??$_Rechecked@PAPAVMeshData@@PAPAV1@@std@@YAAAPAPAVMeshData@@AAPAPAV1@PAPAV1@@Z ENDP ; std::_Rechecked<MeshData * *,MeshData * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninit_move@PAV?$Vector2@M@@PAV1@U?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAV?$Vector2@M@@PAV1@U?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@@Z PROC ; std::_Uninit_move<Vector2<float> *,Vector2<float> *,std::_Wrap_alloc<std::allocator<Vector2<float> > > >, COMDAT

; 480  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 481  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,

  0000b	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@V?$Vector2@M@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$Vector2@M@@0@Z ; std::_Ptr_cat<Vector2<float>,Vector2<float> >
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$_Val_type@PAV?$Vector2@M@@@std@@YAPAV?$Vector2@M@@PAV1@@Z ; std::_Val_type<Vector2<float> *>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00037	52		 push	 edx
  00038	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Uninit_move@PAV?$Vector2@M@@PAV1@V?$allocator@V?$Vector2@M@@@std@@V1@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Vector2<float> *,Vector2<float> *,std::allocator<Vector2<float> >,Vector2<float> >
  00045	83 c4 18	 add	 esp, 24			; 00000018H

; 482  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));
; 483  : 	}

  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??$_Uninit_move@PAV?$Vector2@M@@PAV1@U?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@@Z ENDP ; std::_Uninit_move<Vector2<float> *,Vector2<float> *,std::_Wrap_alloc<std::allocator<Vector2<float> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninit_move@PAIPAIU?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@YAPAIPAI00AAU?$_Wrap_alloc@V?$allocator@I@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAIPAIU?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@YAPAIPAI00AAU?$_Wrap_alloc@V?$allocator@I@std@@@0@@Z PROC ; std::_Uninit_move<unsigned int *,unsigned int *,std::_Wrap_alloc<std::allocator<unsigned int> > >, COMDAT

; 480  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 481  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,

  0000b	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@II@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAI0@Z ; std::_Ptr_cat<unsigned int,unsigned int>
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$_Val_type@PAI@std@@YAPAIPAI@Z ; std::_Val_type<unsigned int *>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00037	52		 push	 edx
  00038	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Uninit_move@III@std@@YAPAIPAI00AAU?$_Wrap_alloc@V?$allocator@I@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<unsigned int,unsigned int,unsigned int>
  00045	83 c4 18	 add	 esp, 24			; 00000018H

; 482  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));
; 483  : 	}

  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??$_Uninit_move@PAIPAIU?$_Wrap_alloc@V?$allocator@I@std@@@std@@@std@@YAPAIPAI00AAU?$_Wrap_alloc@V?$allocator@I@std@@@0@@Z ENDP ; std::_Uninit_move<unsigned int *,unsigned int *,std::_Wrap_alloc<std::allocator<unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >, COMDAT
; _this$ = ecx

; 661  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 662  : 		_Ptr->~_Uty();

  0000e	6a 00		 push	 0
  00010	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	e8 00 00 00 00	 call	 ??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@QAEPAXI@Z

; 663  : 		}

  00018	83 c4 04	 add	 esp, 4
  0001b	3b ec		 cmp	 ebp, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
??$destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@AAPAU21@@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@AAPAU21@@Z PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::construct<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> * &>, COMDAT
; _this$ = ecx

; 654  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 655  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	6a 04		 push	 4
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0002f	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00033	74 1b		 je	 SHORT $LN3@construct
  00035	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 ??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> * &>
  0003e	83 c4 04	 add	 esp, 4
  00041	8b 55 f8	 mov	 edx, DWORD PTR $T1[ebp]
  00044	8b 00		 mov	 eax, DWORD PTR [eax]
  00046	89 02		 mov	 DWORD PTR [edx], eax
  00048	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  0004b	89 4d f4	 mov	 DWORD PTR tv73[ebp], ecx
  0004e	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00050	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN1@construct:

; 656  : 		}

  00057	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005a	3b ec		 cmp	 ebp, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 08 00	 ret	 8
??$construct@PAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@AAPAU12@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAEXPAPAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@1@AAPAU21@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::construct<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> *,std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@QAEPAXI@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@QAE@XZ
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 0e		 je	 SHORT $LN2@scalar
  0001e	6a 20		 push	 32			; 00000020H
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 c4 04	 add	 esp, 4
  00032	3b ec		 cmp	 ebp, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@QAEPAXI@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@QAE@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >, COMDAT
; _this$ = ecx

; 627  : 		{	// construct from a related allocator (do nothing)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 628  : 		}

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVbtTriangleMesh@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *>,void *> ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,btTriangleMesh *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >, COMDAT
; _this$ = ecx

; 627  : 		{	// construct from a related allocator (do nothing)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 628  : 		}

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@PAX@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> >::allocator<std::_Tree_node<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *>,void *> ><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > &>, COMDAT

; 1233 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1234 : 	return (static_cast<_Ty&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1235 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@std@@@std@@YAAAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAVMeshData@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,MeshData *> > > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAPAVMesh@@@std@@YAPAPAVMesh@@PAPAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAVMesh@@@std@@YAPAPAVMesh@@PAPAV1@@Z PROC ; std::_Val_type<Mesh * *>, COMDAT

; 874  : 	{	// return value type from arbitrary argument

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 875  : 	return (0);

  00003	33 c0		 xor	 eax, eax

; 876  : 	}

  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
??$_Val_type@PAPAVMesh@@@std@@YAPAPAVMesh@@PAPAV1@@Z ENDP ; std::_Val_type<Mesh * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninit_move@PAVMesh@@PAV1@PAV1@@std@@YAPAPAVMesh@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAVMesh@@PAV1@PAV1@@std@@YAPAPAVMesh@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<Mesh *,Mesh *,Mesh *>, COMDAT

; 468  : 	{	// move [_First, _Last) to raw _Dest, scalar type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 469  : 	_DEBUG_RANGE_PTR(_First, _Last, _Dest);

  0000c	68 d5 01 00 00	 push	 469			; 000001d5H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@GBEHMPOJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00016	8d 45 10	 lea	 eax, DWORD PTR __Dest$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0001d	51		 push	 ecx
  0001e	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00021	52		 push	 edx
  00022	e8 00 00 00 00	 call	 ??$_Debug_range_ptr@PAPAVMesh@@PAPAV1@@std@@YAXPAPAVMesh@@0AAPAPAV1@PB_WI@Z ; std::_Debug_range_ptr<Mesh * *,Mesh * *>
  00027	83 c4 14	 add	 esp, 20			; 00000014H

; 470  : 	size_t _Count = (size_t)(_Last - _First);

  0002a	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002d	2b 45 08	 sub	 eax, DWORD PTR __First$[ebp]
  00030	c1 f8 02	 sar	 eax, 2
  00033	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 471  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,

  00036	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  00039	c1 e1 02	 shl	 ecx, 2
  0003c	8b f4		 mov	 esi, esp
  0003e	51		 push	 ecx
  0003f	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00042	52		 push	 edx
  00043	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00046	50		 push	 eax
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0004d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00050	3b f4		 cmp	 esi, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0005a	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 472  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move
; 473  : 	}

  0005d	5e		 pop	 esi
  0005e	83 c4 04	 add	 esp, 4
  00061	3b ec		 cmp	 ebp, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
??$_Uninit_move@PAVMesh@@PAV1@PAV1@@std@@YAPAPAVMesh@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMesh@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<Mesh *,Mesh *,Mesh *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAPAVMaterial@@@std@@YAPAPAVMaterial@@PAPAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAVMaterial@@@std@@YAPAPAVMaterial@@PAPAV1@@Z PROC ; std::_Val_type<Material * *>, COMDAT

; 874  : 	{	// return value type from arbitrary argument

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 875  : 	return (0);

  00003	33 c0		 xor	 eax, eax

; 876  : 	}

  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
??$_Val_type@PAPAVMaterial@@@std@@YAPAPAVMaterial@@PAPAV1@@Z ENDP ; std::_Val_type<Material * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninit_move@PAVMaterial@@PAV1@PAV1@@std@@YAPAPAVMaterial@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAVMaterial@@PAV1@PAV1@@std@@YAPAPAVMaterial@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<Material *,Material *,Material *>, COMDAT

; 468  : 	{	// move [_First, _Last) to raw _Dest, scalar type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 469  : 	_DEBUG_RANGE_PTR(_First, _Last, _Dest);

  0000c	68 d5 01 00 00	 push	 469			; 000001d5H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@GBEHMPOJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00016	8d 45 10	 lea	 eax, DWORD PTR __Dest$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0001d	51		 push	 ecx
  0001e	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00021	52		 push	 edx
  00022	e8 00 00 00 00	 call	 ??$_Debug_range_ptr@PAPAVMaterial@@PAPAV1@@std@@YAXPAPAVMaterial@@0AAPAPAV1@PB_WI@Z ; std::_Debug_range_ptr<Material * *,Material * *>
  00027	83 c4 14	 add	 esp, 20			; 00000014H

; 470  : 	size_t _Count = (size_t)(_Last - _First);

  0002a	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002d	2b 45 08	 sub	 eax, DWORD PTR __First$[ebp]
  00030	c1 f8 02	 sar	 eax, 2
  00033	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 471  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,

  00036	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  00039	c1 e1 02	 shl	 ecx, 2
  0003c	8b f4		 mov	 esi, esp
  0003e	51		 push	 ecx
  0003f	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00042	52		 push	 edx
  00043	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00046	50		 push	 eax
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0004d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00050	3b f4		 cmp	 esi, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0005a	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 472  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move
; 473  : 	}

  0005d	5e		 pop	 esi
  0005e	83 c4 04	 add	 esp, 4
  00061	3b ec		 cmp	 ebp, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
??$_Uninit_move@PAVMaterial@@PAV1@PAV1@@std@@YAPAPAVMaterial@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMaterial@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<Material *,Material *,Material *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAPAVMeshData@@@std@@YAPAPAVMeshData@@PAPAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAVMeshData@@@std@@YAPAPAVMeshData@@PAPAV1@@Z PROC ; std::_Val_type<MeshData * *>, COMDAT

; 874  : 	{	// return value type from arbitrary argument

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 875  : 	return (0);

  00003	33 c0		 xor	 eax, eax

; 876  : 	}

  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
??$_Val_type@PAPAVMeshData@@@std@@YAPAPAVMeshData@@PAPAV1@@Z ENDP ; std::_Val_type<MeshData * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninit_move@PAVMeshData@@PAV1@PAV1@@std@@YAPAPAVMeshData@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAVMeshData@@PAV1@PAV1@@std@@YAPAPAVMeshData@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<MeshData *,MeshData *,MeshData *>, COMDAT

; 468  : 	{	// move [_First, _Last) to raw _Dest, scalar type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 469  : 	_DEBUG_RANGE_PTR(_First, _Last, _Dest);

  0000c	68 d5 01 00 00	 push	 469			; 000001d5H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@GBEHMPOJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00016	8d 45 10	 lea	 eax, DWORD PTR __Dest$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0001d	51		 push	 ecx
  0001e	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00021	52		 push	 edx
  00022	e8 00 00 00 00	 call	 ??$_Debug_range_ptr@PAPAVMeshData@@PAPAV1@@std@@YAXPAPAVMeshData@@0AAPAPAV1@PB_WI@Z ; std::_Debug_range_ptr<MeshData * *,MeshData * *>
  00027	83 c4 14	 add	 esp, 20			; 00000014H

; 470  : 	size_t _Count = (size_t)(_Last - _First);

  0002a	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002d	2b 45 08	 sub	 eax, DWORD PTR __First$[ebp]
  00030	c1 f8 02	 sar	 eax, 2
  00033	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 471  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,

  00036	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  00039	c1 e1 02	 shl	 ecx, 2
  0003c	8b f4		 mov	 esi, esp
  0003e	51		 push	 ecx
  0003f	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00042	52		 push	 edx
  00043	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00046	50		 push	 eax
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0004d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00050	3b f4		 cmp	 esi, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0005a	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 472  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move
; 473  : 	}

  0005d	5e		 pop	 esi
  0005e	83 c4 04	 add	 esp, 4
  00061	3b ec		 cmp	 ebp, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
??$_Uninit_move@PAVMeshData@@PAV1@PAV1@@std@@YAPAPAVMeshData@@PAPAV1@00AAU?$_Wrap_alloc@V?$allocator@PAVMeshData@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<MeshData *,MeshData *,MeshData *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAV?$Vector2@M@@@std@@YAPAV?$Vector2@M@@PAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAV?$Vector2@M@@@std@@YAPAV?$Vector2@M@@PAV1@@Z PROC ; std::_Val_type<Vector2<float> *>, COMDAT

; 874  : 	{	// return value type from arbitrary argument

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 875  : 	return (0);

  00003	33 c0		 xor	 eax, eax

; 876  : 	}

  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
??$_Val_type@PAV?$Vector2@M@@@std@@YAPAV?$Vector2@M@@PAV1@@Z ENDP ; std::_Val_type<Vector2<float> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninit_move@PAV?$Vector2@M@@PAV1@V?$allocator@V?$Vector2@M@@@std@@V1@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAV?$Vector2@M@@PAV1@V?$allocator@V?$Vector2@M@@@std@@V1@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<Vector2<float> *,Vector2<float> *,std::allocator<Vector2<float> >,Vector2<float> >, COMDAT

; 437  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninit_move@PAV?$Vector2@M@@PAV1@V?$allocator@V?$Vector2@M@@@std@@V1@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	51		 push	 ecx
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp

; 438  : 	_DEBUG_RANGE_PTR(_First, _Last, _Dest);

  00031	68 b6 01 00 00	 push	 438			; 000001b6H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@GBEHMPOJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0003b	8d 45 10	 lea	 eax, DWORD PTR __Dest$[ebp]
  0003e	50		 push	 eax
  0003f	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00042	51		 push	 ecx
  00043	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00046	52		 push	 edx
  00047	e8 00 00 00 00	 call	 ??$_Debug_range_ptr@PAV?$Vector2@M@@PAV1@@std@@YAXPAV?$Vector2@M@@0AAPAV1@PB_WI@Z ; std::_Debug_range_ptr<Vector2<float> *,Vector2<float> *>
  0004c	83 c4 14	 add	 esp, 20			; 00000014H

; 439  : 	_FwdIt _Next = _Dest;

  0004f	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00052	89 45 ec	 mov	 DWORD PTR __Next$[ebp], eax

; 440  : 
; 441  : 	_TRY_BEGIN

  00055	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 442  : 	for (; _First != _Last; ++_Dest, (void)++_First)

  0005c	eb 12		 jmp	 SHORT $LN4@Uninit_mov
$LN2@Uninit_mov:
  0005e	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  00061	83 c1 08	 add	 ecx, 8
  00064	89 4d 10	 mov	 DWORD PTR __Dest$[ebp], ecx
  00067	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0006a	83 c2 08	 add	 edx, 8
  0006d	89 55 08	 mov	 DWORD PTR __First$[ebp], edx
$LN4@Uninit_mov:
  00070	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00073	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00076	74 12		 je	 SHORT $LN3@Uninit_mov

; 443  : 		_Al.construct(_Dest, (_Valty&&)*_First);

  00078	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0007b	51		 push	 ecx
  0007c	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  0007f	52		 push	 edx
  00080	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00083	e8 00 00 00 00	 call	 ??$construct@V?$Vector2@M@@V1@@?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEXPAV?$Vector2@M@@$$QAV2@@Z ; std::_Wrap_alloc<std::allocator<Vector2<float> > >::construct<Vector2<float>,Vector2<float> >
  00088	eb d4		 jmp	 SHORT $LN2@Uninit_mov
$LN3@Uninit_mov:
  0008a	eb 30		 jmp	 SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAV?$Vector2@M@@PAV1@V?$allocator@V?$Vector2@M@@@std@@V1@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 444  : 	_CATCH_ALL
; 445  : 	for (; _Next != _Dest; ++_Next)

  0008c	eb 09		 jmp	 SHORT $LN7@Uninit_mov
$LN5@Uninit_mov:
  0008e	8b 45 ec	 mov	 eax, DWORD PTR __Next$[ebp]
  00091	83 c0 08	 add	 eax, 8
  00094	89 45 ec	 mov	 DWORD PTR __Next$[ebp], eax
$LN7@Uninit_mov:
  00097	8b 4d ec	 mov	 ecx, DWORD PTR __Next$[ebp]
  0009a	3b 4d 10	 cmp	 ecx, DWORD PTR __Dest$[ebp]
  0009d	74 0e		 je	 SHORT $LN6@Uninit_mov

; 446  : 		_Al.destroy(_Next);

  0009f	8b 55 ec	 mov	 edx, DWORD PTR __Next$[ebp]
  000a2	52		 push	 edx
  000a3	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  000a6	e8 00 00 00 00	 call	 ??$destroy@V?$Vector2@M@@@?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@std@@QAEXPAV?$Vector2@M@@@Z ; std::_Wrap_alloc<std::allocator<Vector2<float> > >::destroy<Vector2<float> >
  000ab	eb e1		 jmp	 SHORT $LN5@Uninit_mov
$LN6@Uninit_mov:

; 447  : 	_RERAISE;

  000ad	6a 00		 push	 0
  000af	6a 00		 push	 0
  000b1	e8 00 00 00 00	 call	 __CxxThrowException@8

; 448  : 	_CATCH_END

  000b6	b8 00 00 00 00	 mov	 eax, $LN13@Uninit_mov
  000bb	c3		 ret	 0
$LN10@Uninit_mov:
  000bc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000c3	eb 07		 jmp	 SHORT __tryend$??$_Uninit_move@PAV?$Vector2@M@@PAV1@V?$allocator@V?$Vector2@M@@@std@@V1@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
  000c5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAV?$Vector2@M@@PAV1@V?$allocator@V?$Vector2@M@@@std@@V1@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:

; 449  : 	return (_Dest);

  000cc	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:

; 450  : 	}

  000cf	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000d2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d9	59		 pop	 ecx
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5b		 pop	 ebx
  000dd	83 c4 14	 add	 esp, 20			; 00000014H
  000e0	3b ec		 cmp	 ebp, esp
  000e2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e7	8b e5		 mov	 esp, ebp
  000e9	5d		 pop	 ebp
  000ea	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAV?$Vector2@M@@PAV1@V?$allocator@V?$Vector2@M@@@std@@V1@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAV?$Vector2@M@@PAV1@V?$allocator@V?$Vector2@M@@@std@@V1@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAV?$Vector2@M@@PAV1@V?$allocator@V?$Vector2@M@@@std@@V1@@std@@YAPAV?$Vector2@M@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@V?$Vector2@M@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<Vector2<float> *,Vector2<float> *,std::allocator<Vector2<float> >,Vector2<float> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAI@std@@YAPAIPAI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAI@std@@YAPAIPAI@Z PROC			; std::_Val_type<unsigned int *>, COMDAT

; 874  : 	{	// return value type from arbitrary argument

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 875  : 	return (0);

  00003	33 c0		 xor	 eax, eax

; 876  : 	}

  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
??$_Val_type@PAI@std@@YAPAIPAI@Z ENDP			; std::_Val_type<unsigned int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninit_move@III@std@@YAPAIPAI00AAU?$_Wrap_alloc@V?$allocator@I@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@III@std@@YAPAIPAI00AAU?$_Wrap_alloc@V?$allocator@I@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<unsigned int,unsigned int,unsigned int>, COMDAT

; 468  : 	{	// move [_First, _Last) to raw _Dest, scalar type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 469  : 	_DEBUG_RANGE_PTR(_First, _Last, _Dest);

  0000c	68 d5 01 00 00	 push	 469			; 000001d5H
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@GBEHMPOJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00016	8d 45 10	 lea	 eax, DWORD PTR __Dest$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0001d	51		 push	 ecx
  0001e	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00021	52		 push	 edx
  00022	e8 00 00 00 00	 call	 ??$_Debug_range_ptr@PAIPAI@std@@YAXPAI0AAPAIPB_WI@Z ; std::_Debug_range_ptr<unsigned int *,unsigned int *>
  00027	83 c4 14	 add	 esp, 20			; 00000014H

; 470  : 	size_t _Count = (size_t)(_Last - _First);

  0002a	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002d	2b 45 08	 sub	 eax, DWORD PTR __First$[ebp]
  00030	c1 f8 02	 sar	 eax, 2
  00033	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 471  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,

  00036	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  00039	c1 e1 02	 shl	 ecx, 2
  0003c	8b f4		 mov	 esi, esp
  0003e	51		 push	 ecx
  0003f	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00042	52		 push	 edx
  00043	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00046	50		 push	 eax
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  0004d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00050	3b f4		 cmp	 esi, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0005a	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 472  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move
; 473  : 	}

  0005d	5e		 pop	 esi
  0005e	83 c4 04	 add	 esp, 4
  00061	3b ec		 cmp	 ebp, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
??$_Uninit_move@III@std@@YAPAIPAI00AAU?$_Wrap_alloc@V?$allocator@I@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<unsigned int,unsigned int,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_range_ptr@PAPAVMesh@@PAPAV1@@std@@YAXPAPAVMesh@@0AAPAPAV1@PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
??$_Debug_range_ptr@PAPAVMesh@@PAPAV1@@std@@YAXPAPAVMesh@@0AAPAPAV1@PB_WI@Z PROC ; std::_Debug_range_ptr<Mesh * *,Mesh * *>, COMDAT

; 837  : 	{	// test iterator pair for valid range/pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 838  : 	_Debug_range_ptr2(_First, _Last, _Ptr, _File, _Line, _Iter_cat(_First));

  0000b	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  0000e	50		 push	 eax
  0000f	8d 4d ff	 lea	 ecx, DWORD PTR $T1[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Iter_cat@PAPAVMesh@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVMesh@@@Z ; std::_Iter_cat<Mesh * *>
  00018	83 c4 08	 add	 esp, 8
  0001b	8a 10		 mov	 dl, BYTE PTR [eax]
  0001d	0f b6 c2	 movzx	 eax, dl
  00020	50		 push	 eax
  00021	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  00024	51		 push	 ecx
  00025	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00028	52		 push	 edx
  00029	8b 45 10	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00030	51		 push	 ecx
  00031	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00034	52		 push	 edx
  00035	e8 00 00 00 00	 call	 ??$_Debug_range_ptr2@PAPAVMesh@@PAPAV1@@std@@YAXPAPAVMesh@@0AAPAPAV1@PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range_ptr2<Mesh * *,Mesh * *>
  0003a	83 c4 18	 add	 esp, 24			; 00000018H

; 839  : 	}

  0003d	83 c4 04	 add	 esp, 4
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$_Debug_range_ptr@PAPAVMesh@@PAPAV1@@std@@YAXPAPAVMesh@@0AAPAPAV1@PB_WI@Z ENDP ; std::_Debug_range_ptr<Mesh * *,Mesh * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_range_ptr@PAPAVMaterial@@PAPAV1@@std@@YAXPAPAVMaterial@@0AAPAPAV1@PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
??$_Debug_range_ptr@PAPAVMaterial@@PAPAV1@@std@@YAXPAPAVMaterial@@0AAPAPAV1@PB_WI@Z PROC ; std::_Debug_range_ptr<Material * *,Material * *>, COMDAT

; 837  : 	{	// test iterator pair for valid range/pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 838  : 	_Debug_range_ptr2(_First, _Last, _Ptr, _File, _Line, _Iter_cat(_First));

  0000b	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  0000e	50		 push	 eax
  0000f	8d 4d ff	 lea	 ecx, DWORD PTR $T1[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Iter_cat@PAPAVMaterial@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVMaterial@@@Z ; std::_Iter_cat<Material * *>
  00018	83 c4 08	 add	 esp, 8
  0001b	8a 10		 mov	 dl, BYTE PTR [eax]
  0001d	0f b6 c2	 movzx	 eax, dl
  00020	50		 push	 eax
  00021	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  00024	51		 push	 ecx
  00025	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00028	52		 push	 edx
  00029	8b 45 10	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00030	51		 push	 ecx
  00031	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00034	52		 push	 edx
  00035	e8 00 00 00 00	 call	 ??$_Debug_range_ptr2@PAPAVMaterial@@PAPAV1@@std@@YAXPAPAVMaterial@@0AAPAPAV1@PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range_ptr2<Material * *,Material * *>
  0003a	83 c4 18	 add	 esp, 24			; 00000018H

; 839  : 	}

  0003d	83 c4 04	 add	 esp, 4
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$_Debug_range_ptr@PAPAVMaterial@@PAPAV1@@std@@YAXPAPAVMaterial@@0AAPAPAV1@PB_WI@Z ENDP ; std::_Debug_range_ptr<Material * *,Material * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_range_ptr@PAPAVMeshData@@PAPAV1@@std@@YAXPAPAVMeshData@@0AAPAPAV1@PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
??$_Debug_range_ptr@PAPAVMeshData@@PAPAV1@@std@@YAXPAPAVMeshData@@0AAPAPAV1@PB_WI@Z PROC ; std::_Debug_range_ptr<MeshData * *,MeshData * *>, COMDAT

; 837  : 	{	// test iterator pair for valid range/pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 838  : 	_Debug_range_ptr2(_First, _Last, _Ptr, _File, _Line, _Iter_cat(_First));

  0000b	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  0000e	50		 push	 eax
  0000f	8d 4d ff	 lea	 ecx, DWORD PTR $T1[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Iter_cat@PAPAVMeshData@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVMeshData@@@Z ; std::_Iter_cat<MeshData * *>
  00018	83 c4 08	 add	 esp, 8
  0001b	8a 10		 mov	 dl, BYTE PTR [eax]
  0001d	0f b6 c2	 movzx	 eax, dl
  00020	50		 push	 eax
  00021	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  00024	51		 push	 ecx
  00025	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00028	52		 push	 edx
  00029	8b 45 10	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00030	51		 push	 ecx
  00031	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00034	52		 push	 edx
  00035	e8 00 00 00 00	 call	 ??$_Debug_range_ptr2@PAPAVMeshData@@PAPAV1@@std@@YAXPAPAVMeshData@@0AAPAPAV1@PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range_ptr2<MeshData * *,MeshData * *>
  0003a	83 c4 18	 add	 esp, 24			; 00000018H

; 839  : 	}

  0003d	83 c4 04	 add	 esp, 4
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$_Debug_range_ptr@PAPAVMeshData@@PAPAV1@@std@@YAXPAPAVMeshData@@0AAPAPAV1@PB_WI@Z ENDP ; std::_Debug_range_ptr<MeshData * *,MeshData * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_range_ptr@PAV?$Vector2@M@@PAV1@@std@@YAXPAV?$Vector2@M@@0AAPAV1@PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
??$_Debug_range_ptr@PAV?$Vector2@M@@PAV1@@std@@YAXPAV?$Vector2@M@@0AAPAV1@PB_WI@Z PROC ; std::_Debug_range_ptr<Vector2<float> *,Vector2<float> *>, COMDAT

; 837  : 	{	// test iterator pair for valid range/pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 838  : 	_Debug_range_ptr2(_First, _Last, _Ptr, _File, _Line, _Iter_cat(_First));

  0000b	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  0000e	50		 push	 eax
  0000f	8d 4d ff	 lea	 ecx, DWORD PTR $T1[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Iter_cat@PAV?$Vector2@M@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$Vector2@M@@@Z ; std::_Iter_cat<Vector2<float> *>
  00018	83 c4 08	 add	 esp, 8
  0001b	8a 10		 mov	 dl, BYTE PTR [eax]
  0001d	0f b6 c2	 movzx	 eax, dl
  00020	50		 push	 eax
  00021	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  00024	51		 push	 ecx
  00025	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00028	52		 push	 edx
  00029	8b 45 10	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00030	51		 push	 ecx
  00031	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00034	52		 push	 edx
  00035	e8 00 00 00 00	 call	 ??$_Debug_range_ptr2@PAV?$Vector2@M@@PAV1@@std@@YAXPAV?$Vector2@M@@0AAPAV1@PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range_ptr2<Vector2<float> *,Vector2<float> *>
  0003a	83 c4 18	 add	 esp, 24			; 00000018H

; 839  : 	}

  0003d	83 c4 04	 add	 esp, 4
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$_Debug_range_ptr@PAV?$Vector2@M@@PAV1@@std@@YAXPAV?$Vector2@M@@0AAPAV1@PB_WI@Z ENDP ; std::_Debug_range_ptr<Vector2<float> *,Vector2<float> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_range_ptr@PAIPAI@std@@YAXPAI0AAPAIPB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
??$_Debug_range_ptr@PAIPAI@std@@YAXPAI0AAPAIPB_WI@Z PROC ; std::_Debug_range_ptr<unsigned int *,unsigned int *>, COMDAT

; 837  : 	{	// test iterator pair for valid range/pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 838  : 	_Debug_range_ptr2(_First, _Last, _Ptr, _File, _Line, _Iter_cat(_First));

  0000b	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  0000e	50		 push	 eax
  0000f	8d 4d ff	 lea	 ecx, DWORD PTR $T1[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Iter_cat@PAI@std@@YA?AUrandom_access_iterator_tag@0@ABQAI@Z ; std::_Iter_cat<unsigned int *>
  00018	83 c4 08	 add	 esp, 8
  0001b	8a 10		 mov	 dl, BYTE PTR [eax]
  0001d	0f b6 c2	 movzx	 eax, dl
  00020	50		 push	 eax
  00021	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  00024	51		 push	 ecx
  00025	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00028	52		 push	 edx
  00029	8b 45 10	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00030	51		 push	 ecx
  00031	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00034	52		 push	 edx
  00035	e8 00 00 00 00	 call	 ??$_Debug_range_ptr2@PAIPAI@std@@YAXPAI0AAPAIPB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range_ptr2<unsigned int *,unsigned int *>
  0003a	83 c4 18	 add	 esp, 24			; 00000018H

; 839  : 	}

  0003d	83 c4 04	 add	 esp, 4
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$_Debug_range_ptr@PAIPAI@std@@YAXPAI0AAPAIPB_WI@Z ENDP ; std::_Debug_range_ptr<unsigned int *,unsigned int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Iter_cat@PAPAVMesh@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVMesh@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAPAVMesh@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVMesh@@@Z PROC ; std::_Iter_cat<Mesh * *>, COMDAT

; 601  : 	{	// return category from iterator argument

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 602  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 603  : 	return (_Cat);

  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00021	88 08		 mov	 BYTE PTR [eax], cl
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 604  : 	}

  00026	52		 push	 edx
  00027	8b cd		 mov	 ecx, ebp
  00029	50		 push	 eax
  0002a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00030	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00035	58		 pop	 eax
  00036	5a		 pop	 edx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
  0003b	90		 npad	 1
$LN5@Iter_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Iter_cat@PAPAVMesh@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVMesh@@@Z ENDP ; std::_Iter_cat<Mesh * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_range_ptr2@PAPAVMesh@@PAPAV1@@std@@YAXPAPAVMesh@@0AAPAPAV1@PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Debug_range_ptr2@PAPAVMesh@@PAPAV1@@std@@YAXPAPAVMesh@@0AAPAPAV1@PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range_ptr2<Mesh * *,Mesh * *>, COMDAT

; 822  : 	{	// test iterator pair for valid range/pointer, random-access iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 823  : 	if (_First != _Last)

  00004	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00007	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0000a	74 65		 je	 SHORT $LN1@Debug_rang

; 824  : 		{	// check for non-null pointers, valid range
; 825  : 		_DEBUG_POINTER2(_First, _File, _Line);

  0000c	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  0000f	51		 push	 ecx
  00010	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00013	52		 push	 edx
  00014	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAVMesh@@@std@@YAXPAPAVMesh@@PB_WI@Z ; std::_Debug_pointer<Mesh *>
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 826  : 		_DEBUG_POINTER2(_Last, _File, _Line);

  00020	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00027	52		 push	 edx
  00028	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAVMesh@@@std@@YAXPAPAVMesh@@PB_WI@Z ; std::_Debug_pointer<Mesh *>
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH

; 827  : 		if (_Last < _First)

  00034	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00037	3b 4d 08	 cmp	 ecx, DWORD PTR __First$[ebp]
  0003a	73 1f		 jae	 SHORT $LN3@Debug_rang

; 828  : 			_DEBUG_ERROR2("invalid iterator range", _File, _Line);

  0003c	8b f4		 mov	 esi, esp
  0003e	8b 55 18	 mov	 edx, DWORD PTR __Line$[ebp]
  00041	52		 push	 edx
  00042	8b 45 14	 mov	 eax, DWORD PTR __File$[ebp]
  00045	50		 push	 eax
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:

; 829  : 		_DEBUG_POINTER2(_Ptr, _File, _Line);	// test only if used

  0005b	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  0005e	51		 push	 ecx
  0005f	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00062	52		 push	 edx
  00063	8b 45 10	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00066	8b 08		 mov	 ecx, DWORD PTR [eax]
  00068	51		 push	 ecx
  00069	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAVMesh@@@std@@YAXPAPAVMesh@@PB_WI@Z ; std::_Debug_pointer<Mesh *>
  0006e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@Debug_rang:

; 830  : 		}
; 831  : 	}

  00071	5e		 pop	 esi
  00072	3b ec		 cmp	 ebp, esp
  00074	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
??$_Debug_range_ptr2@PAPAVMesh@@PAPAV1@@std@@YAXPAPAVMesh@@0AAPAPAV1@PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range_ptr2<Mesh * *,Mesh * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Iter_cat@PAPAVMaterial@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVMaterial@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAPAVMaterial@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVMaterial@@@Z PROC ; std::_Iter_cat<Material * *>, COMDAT

; 601  : 	{	// return category from iterator argument

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 602  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 603  : 	return (_Cat);

  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00021	88 08		 mov	 BYTE PTR [eax], cl
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 604  : 	}

  00026	52		 push	 edx
  00027	8b cd		 mov	 ecx, ebp
  00029	50		 push	 eax
  0002a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00030	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00035	58		 pop	 eax
  00036	5a		 pop	 edx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
  0003b	90		 npad	 1
$LN5@Iter_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Iter_cat@PAPAVMaterial@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVMaterial@@@Z ENDP ; std::_Iter_cat<Material * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_range_ptr2@PAPAVMaterial@@PAPAV1@@std@@YAXPAPAVMaterial@@0AAPAPAV1@PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Debug_range_ptr2@PAPAVMaterial@@PAPAV1@@std@@YAXPAPAVMaterial@@0AAPAPAV1@PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range_ptr2<Material * *,Material * *>, COMDAT

; 822  : 	{	// test iterator pair for valid range/pointer, random-access iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 823  : 	if (_First != _Last)

  00004	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00007	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0000a	74 65		 je	 SHORT $LN1@Debug_rang

; 824  : 		{	// check for non-null pointers, valid range
; 825  : 		_DEBUG_POINTER2(_First, _File, _Line);

  0000c	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  0000f	51		 push	 ecx
  00010	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00013	52		 push	 edx
  00014	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAVMaterial@@@std@@YAXPAPAVMaterial@@PB_WI@Z ; std::_Debug_pointer<Material *>
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 826  : 		_DEBUG_POINTER2(_Last, _File, _Line);

  00020	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00027	52		 push	 edx
  00028	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAVMaterial@@@std@@YAXPAPAVMaterial@@PB_WI@Z ; std::_Debug_pointer<Material *>
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH

; 827  : 		if (_Last < _First)

  00034	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00037	3b 4d 08	 cmp	 ecx, DWORD PTR __First$[ebp]
  0003a	73 1f		 jae	 SHORT $LN3@Debug_rang

; 828  : 			_DEBUG_ERROR2("invalid iterator range", _File, _Line);

  0003c	8b f4		 mov	 esi, esp
  0003e	8b 55 18	 mov	 edx, DWORD PTR __Line$[ebp]
  00041	52		 push	 edx
  00042	8b 45 14	 mov	 eax, DWORD PTR __File$[ebp]
  00045	50		 push	 eax
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:

; 829  : 		_DEBUG_POINTER2(_Ptr, _File, _Line);	// test only if used

  0005b	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  0005e	51		 push	 ecx
  0005f	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00062	52		 push	 edx
  00063	8b 45 10	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00066	8b 08		 mov	 ecx, DWORD PTR [eax]
  00068	51		 push	 ecx
  00069	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAVMaterial@@@std@@YAXPAPAVMaterial@@PB_WI@Z ; std::_Debug_pointer<Material *>
  0006e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@Debug_rang:

; 830  : 		}
; 831  : 	}

  00071	5e		 pop	 esi
  00072	3b ec		 cmp	 ebp, esp
  00074	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
??$_Debug_range_ptr2@PAPAVMaterial@@PAPAV1@@std@@YAXPAPAVMaterial@@0AAPAPAV1@PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range_ptr2<Material * *,Material * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Iter_cat@PAPAVMeshData@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVMeshData@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAPAVMeshData@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVMeshData@@@Z PROC ; std::_Iter_cat<MeshData * *>, COMDAT

; 601  : 	{	// return category from iterator argument

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 602  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 603  : 	return (_Cat);

  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00021	88 08		 mov	 BYTE PTR [eax], cl
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 604  : 	}

  00026	52		 push	 edx
  00027	8b cd		 mov	 ecx, ebp
  00029	50		 push	 eax
  0002a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00030	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00035	58		 pop	 eax
  00036	5a		 pop	 edx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
  0003b	90		 npad	 1
$LN5@Iter_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Iter_cat@PAPAVMeshData@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAVMeshData@@@Z ENDP ; std::_Iter_cat<MeshData * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_range_ptr2@PAPAVMeshData@@PAPAV1@@std@@YAXPAPAVMeshData@@0AAPAPAV1@PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Debug_range_ptr2@PAPAVMeshData@@PAPAV1@@std@@YAXPAPAVMeshData@@0AAPAPAV1@PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range_ptr2<MeshData * *,MeshData * *>, COMDAT

; 822  : 	{	// test iterator pair for valid range/pointer, random-access iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 823  : 	if (_First != _Last)

  00004	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00007	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0000a	74 65		 je	 SHORT $LN1@Debug_rang

; 824  : 		{	// check for non-null pointers, valid range
; 825  : 		_DEBUG_POINTER2(_First, _File, _Line);

  0000c	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  0000f	51		 push	 ecx
  00010	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00013	52		 push	 edx
  00014	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAVMeshData@@@std@@YAXPAPAVMeshData@@PB_WI@Z ; std::_Debug_pointer<MeshData *>
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 826  : 		_DEBUG_POINTER2(_Last, _File, _Line);

  00020	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00027	52		 push	 edx
  00028	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAVMeshData@@@std@@YAXPAPAVMeshData@@PB_WI@Z ; std::_Debug_pointer<MeshData *>
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH

; 827  : 		if (_Last < _First)

  00034	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00037	3b 4d 08	 cmp	 ecx, DWORD PTR __First$[ebp]
  0003a	73 1f		 jae	 SHORT $LN3@Debug_rang

; 828  : 			_DEBUG_ERROR2("invalid iterator range", _File, _Line);

  0003c	8b f4		 mov	 esi, esp
  0003e	8b 55 18	 mov	 edx, DWORD PTR __Line$[ebp]
  00041	52		 push	 edx
  00042	8b 45 14	 mov	 eax, DWORD PTR __File$[ebp]
  00045	50		 push	 eax
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:

; 829  : 		_DEBUG_POINTER2(_Ptr, _File, _Line);	// test only if used

  0005b	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  0005e	51		 push	 ecx
  0005f	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00062	52		 push	 edx
  00063	8b 45 10	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00066	8b 08		 mov	 ecx, DWORD PTR [eax]
  00068	51		 push	 ecx
  00069	e8 00 00 00 00	 call	 ??$_Debug_pointer@PAVMeshData@@@std@@YAXPAPAVMeshData@@PB_WI@Z ; std::_Debug_pointer<MeshData *>
  0006e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@Debug_rang:

; 830  : 		}
; 831  : 	}

  00071	5e		 pop	 esi
  00072	3b ec		 cmp	 ebp, esp
  00074	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
??$_Debug_range_ptr2@PAPAVMeshData@@PAPAV1@@std@@YAXPAPAVMeshData@@0AAPAPAV1@PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range_ptr2<MeshData * *,MeshData * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Iter_cat@PAV?$Vector2@M@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$Vector2@M@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAV?$Vector2@M@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$Vector2@M@@@Z PROC ; std::_Iter_cat<Vector2<float> *>, COMDAT

; 601  : 	{	// return category from iterator argument

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 602  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 603  : 	return (_Cat);

  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00021	88 08		 mov	 BYTE PTR [eax], cl
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 604  : 	}

  00026	52		 push	 edx
  00027	8b cd		 mov	 ecx, ebp
  00029	50		 push	 eax
  0002a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00030	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00035	58		 pop	 eax
  00036	5a		 pop	 edx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
  0003b	90		 npad	 1
$LN5@Iter_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Iter_cat@PAV?$Vector2@M@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$Vector2@M@@@Z ENDP ; std::_Iter_cat<Vector2<float> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_range_ptr2@PAV?$Vector2@M@@PAV1@@std@@YAXPAV?$Vector2@M@@0AAPAV1@PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Debug_range_ptr2@PAV?$Vector2@M@@PAV1@@std@@YAXPAV?$Vector2@M@@0AAPAV1@PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range_ptr2<Vector2<float> *,Vector2<float> *>, COMDAT

; 822  : 	{	// test iterator pair for valid range/pointer, random-access iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 823  : 	if (_First != _Last)

  00004	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00007	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0000a	74 65		 je	 SHORT $LN1@Debug_rang

; 824  : 		{	// check for non-null pointers, valid range
; 825  : 		_DEBUG_POINTER2(_First, _File, _Line);

  0000c	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  0000f	51		 push	 ecx
  00010	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00013	52		 push	 edx
  00014	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ??$_Debug_pointer@V?$Vector2@M@@@std@@YAXPAV?$Vector2@M@@PB_WI@Z ; std::_Debug_pointer<Vector2<float> >
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 826  : 		_DEBUG_POINTER2(_Last, _File, _Line);

  00020	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00027	52		 push	 edx
  00028	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$_Debug_pointer@V?$Vector2@M@@@std@@YAXPAV?$Vector2@M@@PB_WI@Z ; std::_Debug_pointer<Vector2<float> >
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH

; 827  : 		if (_Last < _First)

  00034	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00037	3b 4d 08	 cmp	 ecx, DWORD PTR __First$[ebp]
  0003a	73 1f		 jae	 SHORT $LN3@Debug_rang

; 828  : 			_DEBUG_ERROR2("invalid iterator range", _File, _Line);

  0003c	8b f4		 mov	 esi, esp
  0003e	8b 55 18	 mov	 edx, DWORD PTR __Line$[ebp]
  00041	52		 push	 edx
  00042	8b 45 14	 mov	 eax, DWORD PTR __File$[ebp]
  00045	50		 push	 eax
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:

; 829  : 		_DEBUG_POINTER2(_Ptr, _File, _Line);	// test only if used

  0005b	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  0005e	51		 push	 ecx
  0005f	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00062	52		 push	 edx
  00063	8b 45 10	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00066	8b 08		 mov	 ecx, DWORD PTR [eax]
  00068	51		 push	 ecx
  00069	e8 00 00 00 00	 call	 ??$_Debug_pointer@V?$Vector2@M@@@std@@YAXPAV?$Vector2@M@@PB_WI@Z ; std::_Debug_pointer<Vector2<float> >
  0006e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@Debug_rang:

; 830  : 		}
; 831  : 	}

  00071	5e		 pop	 esi
  00072	3b ec		 cmp	 ebp, esp
  00074	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
??$_Debug_range_ptr2@PAV?$Vector2@M@@PAV1@@std@@YAXPAV?$Vector2@M@@0AAPAV1@PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range_ptr2<Vector2<float> *,Vector2<float> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Iter_cat@PAI@std@@YA?AUrandom_access_iterator_tag@0@ABQAI@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAI@std@@YA?AUrandom_access_iterator_tag@0@ABQAI@Z PROC ; std::_Iter_cat<unsigned int *>, COMDAT

; 601  : 	{	// return category from iterator argument

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 602  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 603  : 	return (_Cat);

  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00021	88 08		 mov	 BYTE PTR [eax], cl
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 604  : 	}

  00026	52		 push	 edx
  00027	8b cd		 mov	 ecx, ebp
  00029	50		 push	 eax
  0002a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00030	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00035	58		 pop	 eax
  00036	5a		 pop	 edx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
  0003b	90		 npad	 1
$LN5@Iter_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Iter_cat@PAI@std@@YA?AUrandom_access_iterator_tag@0@ABQAI@Z ENDP ; std::_Iter_cat<unsigned int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_range_ptr2@PAIPAI@std@@YAXPAI0AAPAIPB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Debug_range_ptr2@PAIPAI@std@@YAXPAI0AAPAIPB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range_ptr2<unsigned int *,unsigned int *>, COMDAT

; 822  : 	{	// test iterator pair for valid range/pointer, random-access iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 823  : 	if (_First != _Last)

  00004	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00007	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0000a	74 65		 je	 SHORT $LN1@Debug_rang

; 824  : 		{	// check for non-null pointers, valid range
; 825  : 		_DEBUG_POINTER2(_First, _File, _Line);

  0000c	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  0000f	51		 push	 ecx
  00010	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00013	52		 push	 edx
  00014	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ??$_Debug_pointer@I@std@@YAXPAIPB_WI@Z ; std::_Debug_pointer<unsigned int>
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 826  : 		_DEBUG_POINTER2(_Last, _File, _Line);

  00020	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00027	52		 push	 edx
  00028	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$_Debug_pointer@I@std@@YAXPAIPB_WI@Z ; std::_Debug_pointer<unsigned int>
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH

; 827  : 		if (_Last < _First)

  00034	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00037	3b 4d 08	 cmp	 ecx, DWORD PTR __First$[ebp]
  0003a	73 1f		 jae	 SHORT $LN3@Debug_rang

; 828  : 			_DEBUG_ERROR2("invalid iterator range", _File, _Line);

  0003c	8b f4		 mov	 esi, esp
  0003e	8b 55 18	 mov	 edx, DWORD PTR __Line$[ebp]
  00041	52		 push	 edx
  00042	8b 45 14	 mov	 eax, DWORD PTR __File$[ebp]
  00045	50		 push	 eax
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:

; 829  : 		_DEBUG_POINTER2(_Ptr, _File, _Line);	// test only if used

  0005b	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  0005e	51		 push	 ecx
  0005f	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00062	52		 push	 edx
  00063	8b 45 10	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00066	8b 08		 mov	 ecx, DWORD PTR [eax]
  00068	51		 push	 ecx
  00069	e8 00 00 00 00	 call	 ??$_Debug_pointer@I@std@@YAXPAIPB_WI@Z ; std::_Debug_pointer<unsigned int>
  0006e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@Debug_rang:

; 830  : 		}
; 831  : 	}

  00071	5e		 pop	 esi
  00072	3b ec		 cmp	 ebp, esp
  00074	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
??$_Debug_range_ptr2@PAIPAI@std@@YAXPAI0AAPAIPB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range_ptr2<unsigned int *,unsigned int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_pointer@PAVMeshData@@@std@@YAXPAPAVMeshData@@PB_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@PAVMeshData@@@std@@YAXPAPAVMeshData@@PB_WI@Z PROC ; std::_Debug_pointer<MeshData *>, COMDAT

; 760  : 	{	// test pointer for non-singularity, pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 761  : 	if (_Ptr == 0)

  00004	83 7d 08 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  00008	75 1f		 jne	 SHORT $LN1@Debug_poin

; 762  : 		_DEBUG_ERROR2("invalid null pointer", _File, _Line);

  0000a	8b f4		 mov	 esi, esp
  0000c	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  00013	51		 push	 ecx
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	3b f4		 cmp	 esi, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@Debug_poin:

; 763  : 	}

  00029	5e		 pop	 esi
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_Debug_pointer@PAVMeshData@@@std@@YAXPAPAVMeshData@@PB_WI@Z ENDP ; std::_Debug_pointer<MeshData *>
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z
_TEXT	SEGMENT
??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor', COMDAT
  00000	2b 49 fc	 sub	 ecx, DWORD PTR [ecx-4]
  00003	e9 00 00 00 00	 jmp	 ??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
_TEXT	ENDS
END
