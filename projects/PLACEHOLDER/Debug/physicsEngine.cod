; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	e:\fusion3d_work\engine\src\physics\physicsengine.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0IF@CGPLDJGC@Assert?5e?3?2fusion3d_work?2lib?2bull@ ; `string'
;	COMDAT ??_C@_0IF@CGPLDJGC@Assert?5e?3?2fusion3d_work?2lib?2bull@
CONST	SEGMENT
??_C@_0IF@CGPLDJGC@Assert?5e?3?2fusion3d_work?2lib?2bull@ DB 'Assert e:\f'
	DB	'usion3d_work\lib\bullet3\include\BulletCollision/NarrowPhaseC'
	DB	'ollision/btPersistentManifold.h:%u (index < m_cachedPoints)', 0aH
	DB	00H						; `string'
?piecewise_construct@std@@3Upiecewise_construct_t@1@B	ORG $+1 ; std::piecewise_construct
	ORG $+3
?btInfinityMask@@3HA DD 07f800000H			; btInfinityMask
	ORG $+1
?btNanMask@@3HA DD 07f800001H				; btNanMask
$SG4294872340 DB 'Assert e:\fusion3d_work\lib\bullet3\include\BulletColli'
	DB	'sion/BroadphaseCollision/btAxisSweep3.h:%u (!pair.m_algorithm'
	DB	')', 0aH, 00H
	ORG $+1
$SG4294872341 DB 'Assert e:\fusion3d_work\lib\bullet3\include\BulletColli'
	DB	'sion/BroadphaseCollision/btAxisSweep3.h:%u (!pair.m_algorithm'
	DB	')', 0aH, 00H
	ORG $+1
$SG4294872338 DB 'Assert e:\fusion3d_work\lib\bullet3\include\BulletColli'
	DB	'sion/BroadphaseCollision/btAxisSweep3.h:%u (handle > 0 && han'
	DB	'dle < m_maxHandles)', 0aH, 00H
	ORG $+3
$SG4294872339 DB 'Assert e:\fusion3d_work\lib\bullet3\include\BulletColli'
	DB	'sion/BroadphaseCollision/btAxisSweep3.h:%u (m_firstFreeHandle'
	DB	')', 0aH, 00H
	ORG $+1
$SG4294872336 DB 'Assert e:\fusion3d_work\lib\bullet3\include\BulletColli'
	DB	'sion/BroadphaseCollision/btAxisSweep3.h:%u (handle > 0 && han'
	DB	'dle < m_maxHandles)', 0aH, 00H
$SG4294872337 DB 'Assert e:\fusion3d_work\lib\bullet3\include\BulletColli'
	DB	'sion/BroadphaseCollision/btAxisSweep3.h:%u (m_firstFreeHandle'
	DB	')', 0aH, 00H
PUBLIC	??$_Debug_pointer@U?$pair@PAVRigidBody@@H@std@@@std@@YAXPAU?$pair@PAVRigidBody@@H@0@PB_WI@Z ; std::_Debug_pointer<std::pair<RigidBody *,int> >
PUBLIC	??$_Debug_range_ptr2@PAU?$pair@PAVRigidBody@@H@std@@PAU12@@std@@YAXPAU?$pair@PAVRigidBody@@H@0@0AAPAU10@PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range_ptr2<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *>
PUBLIC	??$_Iter_cat@PAU?$pair@PAVRigidBody@@H@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@PAVRigidBody@@H@0@@Z ; std::_Iter_cat<std::pair<RigidBody *,int> *>
PUBLIC	??$_Debug_range_ptr@PAU?$pair@PAVRigidBody@@H@std@@PAU12@@std@@YAXPAU?$pair@PAVRigidBody@@H@0@0AAPAU10@PB_WI@Z ; std::_Debug_range_ptr<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *>
PUBLIC	??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@U12@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *,std::allocator<std::pair<RigidBody *,int> >,std::pair<RigidBody *,int> >
PUBLIC	??$_Val_type@PAU?$pair@PAVRigidBody@@H@std@@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@@Z ; std::_Val_type<std::pair<RigidBody *,int> *>
PUBLIC	??$_Rechecked@PAU?$pair@PAVRigidBody@@H@std@@PAU12@@std@@YAAAPAU?$pair@PAVRigidBody@@H@0@AAPAU10@PAU10@@Z ; std::_Rechecked<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *>
PUBLIC	??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@@Z ; std::_Uninit_move<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *,std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > > >
PUBLIC	??$_Unchecked@PAU?$pair@PAVRigidBody@@H@std@@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@@Z ; std::_Unchecked<std::pair<RigidBody *,int> *>
PUBLIC	??$construct@U?$pair@PAVRigidBody@@H@std@@U12@@?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@QAEXPAU?$pair@PAVRigidBody@@H@1@$$QAU21@@Z ; std::allocator<std::pair<RigidBody *,int> >::construct<std::pair<RigidBody *,int>,std::pair<RigidBody *,int> >
PUBLIC	??$_Uninitialized_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *,std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > > >
PUBLIC	??$construct@U?$pair@PAVRigidBody@@H@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@PAVRigidBody@@H@std@@@1@PAU?$pair@PAVRigidBody@@H@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::pair<RigidBody *,int> > >::construct<std::pair<RigidBody *,int>,std::pair<RigidBody *,int> >
PUBLIC	??$forward@H@std@@YA$$QAHAAH@Z			; std::forward<int>
PUBLIC	??$_Umove@PAU?$pair@PAVRigidBody@@H@std@@@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEPAU?$pair@PAVRigidBody@@H@1@PAU21@00@Z ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Umove<std::pair<RigidBody *,int> *>
PUBLIC	??$construct@U?$pair@PAVRigidBody@@H@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@QAEXPAU?$pair@PAVRigidBody@@H@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >::construct<std::pair<RigidBody *,int>,std::pair<RigidBody *,int> >
PUBLIC	??$forward@U?$pair@PAVRigidBody@@H@std@@@std@@YA$$QAU?$pair@PAVRigidBody@@H@0@AAU10@@Z ; std::forward<std::pair<RigidBody *,int> >
PUBLIC	??$?0AAPAVRigidBody@@HX@?$pair@PAVRigidBody@@H@std@@QAE@AAPAVRigidBody@@$$QAH@Z ; std::pair<RigidBody *,int>::pair<RigidBody *,int><RigidBody * &,int,void>
PUBLIC	?max_size@?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@QBEIXZ ; std::allocator<std::pair<RigidBody *,int> >::max_size
PUBLIC	?allocate@?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@QAEPAU?$pair@PAVRigidBody@@H@2@I@Z ; std::allocator<std::pair<RigidBody *,int> >::allocate
PUBLIC	?max_size@?$allocator_traits@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@SAIABV?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@Z ; std::allocator_traits<std::allocator<std::pair<RigidBody *,int> > >::max_size
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >,std::_Vector_val<std::_Simple_types<std::pair<RigidBody *,int> > >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >,std::_Vector_val<std::_Simple_types<std::pair<RigidBody *,int> > >,1>::_Get_second
PUBLIC	?capacity@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::capacity
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Get_data
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABQAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Myend
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@QAEPAU?$pair@PAVRigidBody@@H@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >::allocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >::max_size
PUBLIC	?_Unused_capacity@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Unused_capacity
PUBLIC	?size@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::size
PUBLIC	?max_size@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::max_size
PUBLIC	?_Grow_to@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEII@Z ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Grow_to
PUBLIC	?_Reallocate@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Reallocate
PUBLIC	?_Xlen@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEXXZ ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Xlen
PUBLIC	?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Getpfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABQAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABQAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Mylast
PUBLIC	?_Inside@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBE_NPBU?$pair@PAVRigidBody@@H@2@@Z ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Inside
PUBLIC	?_Reserve@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Reserve
PUBLIC	?_Orphan_range@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEXPAU?$pair@PAVRigidBody@@H@2@0@Z ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Orphan_range
PUBLIC	?push_back@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QAEX$$QAU?$pair@PAVRigidBody@@H@2@@Z ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::push_back
PUBLIC	?Enter@RigidBody@@QAEXPAV1@@Z			; RigidBody::Enter
PUBLIC	?getDispatcher@btCollisionWorld@@QAEPAVbtDispatcher@@XZ ; btCollisionWorld::getDispatcher
PUBLIC	?getContactPoint@btPersistentManifold@@QAEAAVbtManifoldPoint@@H@Z ; btPersistentManifold::getContactPoint
PUBLIC	?getNumContacts@btPersistentManifold@@QBEHXZ	; btPersistentManifold::getNumContacts
PUBLIC	?getBody1@btPersistentManifold@@QBEPBVbtCollisionObject@@XZ ; btPersistentManifold::getBody1
PUBLIC	?getBody0@btPersistentManifold@@QBEPBVbtCollisionObject@@XZ ; btPersistentManifold::getBody0
PUBLIC	?getDistance@btManifoldPoint@@QBEMXZ		; btManifoldPoint::getDistance
PUBLIC	?Simulate@PhysicsEngine@@QAEXM@Z		; PhysicsEngine::Simulate
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Enter@RigidBody@@QAEXPAV1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Enter@RigidBody@@QAEXPAV1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Enter@RigidBody@@QAEXPAV1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Enter@RigidBody@@QAEXPAV1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Enter@RigidBody@@QAEXPAV1@@Z$1
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Orphan_range@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEXPAU?$pair@PAVRigidBody@@H@2@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEXPAU?$pair@PAVRigidBody@@H@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Orphan_range@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEXPAU?$pair@PAVRigidBody@@H@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEXPAU?$pair@PAVRigidBody@@H@2@0@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Reallocate@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?_Reallocate@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z$2
__catchsym$?_Reallocate@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@U12@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@U12@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@U12@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@U12@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@U12@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@U12@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__catchsym$??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@U12@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@U12@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\physics\physicsengine.cpp
_TEXT	SEGMENT
tv198 = -56						; size = 4
tv134 = -52						; size = 4
tv87 = -48						; size = 4
_bh$1 = -44						; size = 4
_ah$2 = -40						; size = 4
_pt$3 = -36						; size = 4
_j$4 = -32						; size = 4
_co$5 = -28						; size = 4
_b$6 = -24						; size = 4
_a$7 = -20						; size = 4
_c$8 = -16						; size = 4
_i$9 = -12						; size = 4
_numManifolds$ = -8					; size = 4
_this$ = -4						; size = 4
_delta$ = 8						; size = 4
?Simulate@PhysicsEngine@@QAEXM@Z PROC			; PhysicsEngine::Simulate
; _this$ = ecx

; 22   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	51		 push	 ecx
  00009	8d 7d c8	 lea	 edi, DWORD PTR [ebp-56]
  0000c	b9 0e 00 00 00	 mov	 ecx, 14			; 0000000eH
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	59		 pop	 ecx
  00019	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 23   : 	m_world->stepSimulation(1 / 60.0f, 1);

  0001c	8b f4		 mov	 esi, esp
  0001e	51		 push	 ecx
  0001f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3c888889
  00027	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002c	6a 01		 push	 1
  0002e	51		 push	 ecx
  0002f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3c888889
  00037	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00042	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00045	8b 01		 mov	 eax, DWORD PTR [ecx]
  00047	8b 4a 14	 mov	 ecx, DWORD PTR [edx+20]
  0004a	8b 50 30	 mov	 edx, DWORD PTR [eax+48]
  0004d	ff d2		 call	 edx
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 24   : 
; 25   : 	int numManifolds = GetWorld()->getDispatcher()->getNumManifolds ();

  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?GetWorld@PhysicsEngine@@QAEPAVbtDiscreteDynamicsWorld@@XZ ; PhysicsEngine::GetWorld
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ?getDispatcher@btCollisionWorld@@QAEPAVbtDispatcher@@XZ ; btCollisionWorld::getDispatcher
  00065	89 45 d0	 mov	 DWORD PTR tv87[ebp], eax
  00068	8b 45 d0	 mov	 eax, DWORD PTR tv87[ebp]
  0006b	8b 10		 mov	 edx, DWORD PTR [eax]
  0006d	8b f4		 mov	 esi, esp
  0006f	8b 4d d0	 mov	 ecx, DWORD PTR tv87[ebp]
  00072	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00075	ff d0		 call	 eax
  00077	3b f4		 cmp	 esi, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	89 45 f8	 mov	 DWORD PTR _numManifolds$[ebp], eax

; 26   : 	for (size_t i = 0; i < numManifolds; i++)

  00081	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$9[ebp], 0
  00088	eb 09		 jmp	 SHORT $LN4@Simulate
$LN2@Simulate:
  0008a	8b 4d f4	 mov	 ecx, DWORD PTR _i$9[ebp]
  0008d	83 c1 01	 add	 ecx, 1
  00090	89 4d f4	 mov	 DWORD PTR _i$9[ebp], ecx
$LN4@Simulate:
  00093	8b 55 f4	 mov	 edx, DWORD PTR _i$9[ebp]
  00096	3b 55 f8	 cmp	 edx, DWORD PTR _numManifolds$[ebp]
  00099	0f 83 bb 00 00
	00		 jae	 $LN3@Simulate

; 27   : 	{
; 28   : 		btPersistentManifold* c = GetWorld()->getDispatcher ()->getManifoldByIndexInternal (i);

  0009f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a2	e8 00 00 00 00	 call	 ?GetWorld@PhysicsEngine@@QAEPAVbtDiscreteDynamicsWorld@@XZ ; PhysicsEngine::GetWorld
  000a7	8b c8		 mov	 ecx, eax
  000a9	e8 00 00 00 00	 call	 ?getDispatcher@btCollisionWorld@@QAEPAVbtDispatcher@@XZ ; btCollisionWorld::getDispatcher
  000ae	89 45 cc	 mov	 DWORD PTR tv134[ebp], eax
  000b1	8b f4		 mov	 esi, esp
  000b3	8b 45 f4	 mov	 eax, DWORD PTR _i$9[ebp]
  000b6	50		 push	 eax
  000b7	8b 4d cc	 mov	 ecx, DWORD PTR tv134[ebp]
  000ba	8b 11		 mov	 edx, DWORD PTR [ecx]
  000bc	8b 4d cc	 mov	 ecx, DWORD PTR tv134[ebp]
  000bf	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  000c2	ff d0		 call	 eax
  000c4	3b f4		 cmp	 esi, esp
  000c6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cb	89 45 f0	 mov	 DWORD PTR _c$8[ebp], eax

; 29   : 		btCollisionObject* a = (btCollisionObject*) (c->getBody0 ());

  000ce	8b 4d f0	 mov	 ecx, DWORD PTR _c$8[ebp]
  000d1	e8 00 00 00 00	 call	 ?getBody0@btPersistentManifold@@QBEPBVbtCollisionObject@@XZ ; btPersistentManifold::getBody0
  000d6	89 45 ec	 mov	 DWORD PTR _a$7[ebp], eax

; 30   : 		btCollisionObject* b = (btCollisionObject*) (c->getBody1 ());

  000d9	8b 4d f0	 mov	 ecx, DWORD PTR _c$8[ebp]
  000dc	e8 00 00 00 00	 call	 ?getBody1@btPersistentManifold@@QBEPBVbtCollisionObject@@XZ ; btPersistentManifold::getBody1
  000e1	89 45 e8	 mov	 DWORD PTR _b$6[ebp], eax

; 31   : 
; 32   : 		int co = c->getNumContacts ();

  000e4	8b 4d f0	 mov	 ecx, DWORD PTR _c$8[ebp]
  000e7	e8 00 00 00 00	 call	 ?getNumContacts@btPersistentManifold@@QBEHXZ ; btPersistentManifold::getNumContacts
  000ec	89 45 e4	 mov	 DWORD PTR _co$5[ebp], eax

; 33   : 		for (size_t j = 0; j < co; j++)

  000ef	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _j$4[ebp], 0
  000f6	eb 09		 jmp	 SHORT $LN7@Simulate
$LN5@Simulate:
  000f8	8b 4d e0	 mov	 ecx, DWORD PTR _j$4[ebp]
  000fb	83 c1 01	 add	 ecx, 1
  000fe	89 4d e0	 mov	 DWORD PTR _j$4[ebp], ecx
$LN7@Simulate:
  00101	8b 55 e0	 mov	 edx, DWORD PTR _j$4[ebp]
  00104	3b 55 e4	 cmp	 edx, DWORD PTR _co$5[ebp]
  00107	73 4c		 jae	 SHORT $LN6@Simulate

; 34   : 		{
; 35   : 			btManifoldPoint& pt = c->getContactPoint (j);

  00109	8b 45 e0	 mov	 eax, DWORD PTR _j$4[ebp]
  0010c	50		 push	 eax
  0010d	8b 4d f0	 mov	 ecx, DWORD PTR _c$8[ebp]
  00110	e8 00 00 00 00	 call	 ?getContactPoint@btPersistentManifold@@QAEAAVbtManifoldPoint@@H@Z ; btPersistentManifold::getContactPoint
  00115	89 45 dc	 mov	 DWORD PTR _pt$3[ebp], eax

; 36   : 			if (pt.getDistance () < 0.f)

  00118	8b 4d dc	 mov	 ecx, DWORD PTR _pt$3[ebp]
  0011b	e8 00 00 00 00	 call	 ?getDistance@btManifoldPoint@@QBEMXZ ; btManifoldPoint::getDistance
  00120	d9 5d c8	 fstp	 DWORD PTR tv198[ebp]
  00123	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  0012b	0f 2f 45 c8	 comiss	 xmm0, DWORD PTR tv198[ebp]
  0012f	76 22		 jbe	 SHORT $LN8@Simulate

; 37   : 			{
; 38   : 				//TODO: Implement collision list instead of calling OnCollide for each contact.
; 39   : 				RigidBody* ah = (RigidBody*) a->getUserPointer ();

  00131	8b 4d ec	 mov	 ecx, DWORD PTR _a$7[ebp]
  00134	e8 00 00 00 00	 call	 ?getUserPointer@btCollisionObject@@QBEPAXXZ ; btCollisionObject::getUserPointer
  00139	89 45 d8	 mov	 DWORD PTR _ah$2[ebp], eax

; 40   : 				RigidBody* bh = (RigidBody*) b->getUserPointer ();

  0013c	8b 4d e8	 mov	 ecx, DWORD PTR _b$6[ebp]
  0013f	e8 00 00 00 00	 call	 ?getUserPointer@btCollisionObject@@QBEPAXXZ ; btCollisionObject::getUserPointer
  00144	89 45 d4	 mov	 DWORD PTR _bh$1[ebp], eax

; 41   : 
; 42   : 				ah->Enter (bh);

  00147	8b 4d d4	 mov	 ecx, DWORD PTR _bh$1[ebp]
  0014a	51		 push	 ecx
  0014b	8b 4d d8	 mov	 ecx, DWORD PTR _ah$2[ebp]
  0014e	e8 00 00 00 00	 call	 ?Enter@RigidBody@@QAEXPAV1@@Z ; RigidBody::Enter
$LN8@Simulate:

; 43   : 			}
; 44   : 		}

  00153	eb a3		 jmp	 SHORT $LN5@Simulate
$LN6@Simulate:

; 45   : 	}

  00155	e9 30 ff ff ff	 jmp	 $LN2@Simulate
$LN3@Simulate:

; 46   : }

  0015a	5f		 pop	 edi
  0015b	5e		 pop	 esi
  0015c	83 c4 38	 add	 esp, 56			; 00000038H
  0015f	3b ec		 cmp	 ebp, esp
  00161	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00166	8b e5		 mov	 esp, ebp
  00168	5d		 pop	 ebp
  00169	c2 04 00	 ret	 4
?Simulate@PhysicsEngine@@QAEXM@Z ENDP			; PhysicsEngine::Simulate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\lib\bullet3\include\bulletcollision\narrowphasecollision\btmanifoldpoint.h
;	COMDAT ?getDistance@btManifoldPoint@@QBEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getDistance@btManifoldPoint@@QBEMXZ PROC		; btManifoldPoint::getDistance, COMDAT
; _this$ = ecx

; 123  : 			{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 124  : 				return m_distance1;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	d9 40 50	 fld	 DWORD PTR [eax+80]

; 125  : 			}

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?getDistance@btManifoldPoint@@QBEMXZ ENDP		; btManifoldPoint::getDistance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\lib\bullet3\include\bulletcollision\narrowphasecollision\btpersistentmanifold.h
;	COMDAT ?getBody0@btPersistentManifold@@QBEPBVbtCollisionObject@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getBody0@btPersistentManifold@@QBEPBVbtCollisionObject@@XZ PROC ; btPersistentManifold::getBody0, COMDAT
; _this$ = ecx

; 94   : 	SIMD_FORCE_INLINE const btCollisionObject* getBody0() const { return m_body0;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 80 10 03 00
	00		 mov	 eax, DWORD PTR [eax+784]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?getBody0@btPersistentManifold@@QBEPBVbtCollisionObject@@XZ ENDP ; btPersistentManifold::getBody0
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\lib\bullet3\include\bulletcollision\narrowphasecollision\btpersistentmanifold.h
;	COMDAT ?getBody1@btPersistentManifold@@QBEPBVbtCollisionObject@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getBody1@btPersistentManifold@@QBEPBVbtCollisionObject@@XZ PROC ; btPersistentManifold::getBody1, COMDAT
; _this$ = ecx

; 95   : 	SIMD_FORCE_INLINE const btCollisionObject* getBody1() const { return m_body1;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 80 14 03 00
	00		 mov	 eax, DWORD PTR [eax+788]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?getBody1@btPersistentManifold@@QBEPBVbtCollisionObject@@XZ ENDP ; btPersistentManifold::getBody1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\lib\bullet3\include\bulletcollision\narrowphasecollision\btpersistentmanifold.h
;	COMDAT ?getNumContacts@btPersistentManifold@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getNumContacts@btPersistentManifold@@QBEHXZ PROC	; btPersistentManifold::getNumContacts, COMDAT
; _this$ = ecx

; 109  : 	SIMD_FORCE_INLINE int	getNumContacts() const { return m_cachedPoints;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 80 18 03 00
	00		 mov	 eax, DWORD PTR [eax+792]
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?getNumContacts@btPersistentManifold@@QBEHXZ ENDP	; btPersistentManifold::getNumContacts
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\lib\bullet3\include\bulletcollision\narrowphasecollision\btpersistentmanifold.h
;	COMDAT ?getContactPoint@btPersistentManifold@@QAEAAVbtManifoldPoint@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?getContactPoint@btPersistentManifold@@QAEAAVbtManifoldPoint@@H@Z PROC ; btPersistentManifold::getContactPoint, COMDAT
; _this$ = ecx

; 124  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 125  : 		btAssert(index < m_cachedPoints);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _index$[ebp]
  00014	3b 88 18 03 00
	00		 cmp	 ecx, DWORD PTR [eax+792]
  0001a	7c 10		 jl	 SHORT $LN2@getContact
  0001c	6a 7d		 push	 125			; 0000007dH
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0IF@CGPLDJGC@Assert?5e?3?2fusion3d_work?2lib?2bull@
  00023	e8 00 00 00 00	 call	 _printf
  00028	83 c4 08	 add	 esp, 8
  0002b	cc		 int	 3
$LN2@getContact:

; 126  : 		return m_pointCache[index];

  0002c	69 55 08 c0 00
	00 00		 imul	 edx, DWORD PTR _index$[ebp], 192
  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8d 44 10 10	 lea	 eax, DWORD PTR [eax+edx+16]

; 127  : 	}

  0003a	83 c4 04	 add	 esp, 4
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
?getContactPoint@btPersistentManifold@@QAEAAVbtManifoldPoint@@H@Z ENDP ; btPersistentManifold::getContactPoint
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\lib\bullet3\include\bulletcollision\collisiondispatch\btcollisionworld.h
;	COMDAT ?getDispatcher@btCollisionWorld@@QAEPAVbtDispatcher@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getDispatcher@btCollisionWorld@@QAEPAVbtDispatcher@@XZ PROC ; btCollisionWorld::getDispatcher, COMDAT
; _this$ = ecx

; 139  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 140  : 		return m_dispatcher1;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 40 18	 mov	 eax, DWORD PTR [eax+24]

; 141  : 	}

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?getDispatcher@btCollisionWorld@@QAEPAVbtDispatcher@@XZ ENDP ; btCollisionWorld::getDispatcher
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\components\physicsobjectcomponent.h
;	COMDAT ?Enter@RigidBody@@QAEXPAV1@@Z
_TEXT	SEGMENT
$T2 = -88						; size = 4
$T3 = -84						; size = 8
_x$4 = -72						; size = 8
_<end>$L0$5 = -56					; size = 12
_<begin>$L0$6 = -36					; size = 12
_<range>$L0$7 = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_hit$ = 8						; size = 4
?Enter@RigidBody@@QAEXPAV1@@Z PROC			; RigidBody::Enter, COMDAT
; _this$ = ecx

; 181  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Enter@RigidBody@@QAEXPAV1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00014	57		 push	 edi
  00015	51		 push	 ecx
  00016	8d 7d a8	 lea	 edi, DWORD PTR [ebp-88]
  00019	b9 13 00 00 00	 mov	 ecx, 19			; 00000013H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	59		 pop	 ecx
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002b	33 c5		 xor	 eax, ebp
  0002d	50		 push	 eax
  0002e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00031	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00037	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 182  : 		for (auto x : m_contacts)

  0003a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	83 c0 30	 add	 eax, 48			; 00000030H
  00040	89 45 ec	 mov	 DWORD PTR _<range>$L0$7[ebp], eax
  00043	8d 4d dc	 lea	 ecx, DWORD PTR _<begin>$L0$6[ebp]
  00046	51		 push	 ecx
  00047	8b 4d ec	 mov	 ecx, DWORD PTR _<range>$L0$7[ebp]
  0004a	e8 00 00 00 00	 call	 ?begin@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@@2@XZ ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::begin
  0004f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00056	8d 55 c8	 lea	 edx, DWORD PTR _<end>$L0$5[ebp]
  00059	52		 push	 edx
  0005a	8b 4d ec	 mov	 ecx, DWORD PTR _<range>$L0$7[ebp]
  0005d	e8 00 00 00 00	 call	 ?end@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@@2@XZ ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::end
  00062	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00066	eb 08		 jmp	 SHORT $LN4@Enter
$LN2@Enter:
  00068	8d 4d dc	 lea	 ecx, DWORD PTR _<begin>$L0$6[ebp]
  0006b	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<RigidBody *,int> > > >::operator++
$LN4@Enter:
  00070	8d 45 c8	 lea	 eax, DWORD PTR _<end>$L0$5[ebp]
  00073	50		 push	 eax
  00074	8d 4d dc	 lea	 ecx, DWORD PTR _<begin>$L0$6[ebp]
  00077	e8 00 00 00 00	 call	 ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::pair<RigidBody *,int> > > >::operator!=
  0007c	0f b6 c8	 movzx	 ecx, al
  0007f	85 c9		 test	 ecx, ecx
  00081	74 7c		 je	 SHORT $LN3@Enter
  00083	8d 4d dc	 lea	 ecx, DWORD PTR _<begin>$L0$6[ebp]
  00086	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@@std@@QBEAAU?$pair@PAVRigidBody@@H@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<RigidBody *,int> > > >::operator*
  0008b	8b 10		 mov	 edx, DWORD PTR [eax]
  0008d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00090	89 55 b8	 mov	 DWORD PTR _x$4[ebp], edx
  00093	89 45 bc	 mov	 DWORD PTR _x$4[ebp+4], eax

; 183  : 		{
; 184  : 			if (x.first == hit)

  00096	8b 4d b8	 mov	 ecx, DWORD PTR _x$4[ebp]
  00099	3b 4d 08	 cmp	 ecx, DWORD PTR _hit$[ebp]
  0009c	75 5c		 jne	 SHORT $LN5@Enter

; 185  : 			{
; 186  : 				if (x.second == 0)

  0009e	83 7d bc 00	 cmp	 DWORD PTR _x$4[ebp+4], 0
  000a2	75 30		 jne	 SHORT $LN6@Enter

; 187  : 				{
; 188  : 					if (m_enter != nullptr)

  000a4	6a 00		 push	 0
  000a6	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  000a9	83 c2 40	 add	 edx, 64			; 00000040H
  000ac	52		 push	 edx
  000ad	e8 00 00 00 00	 call	 ??$?9$$A6AXPAVRigidBody@@@Z@std@@YA_NABV?$function@$$A6AXPAVRigidBody@@@Z@0@$$T@Z ; std::operator!=<void __cdecl(RigidBody *)>
  000b2	83 c4 08	 add	 esp, 8
  000b5	0f b6 c0	 movzx	 eax, al
  000b8	85 c0		 test	 eax, eax
  000ba	74 0f		 je	 SHORT $LN8@Enter

; 189  : 						m_enter (hit);

  000bc	8b 4d 08	 mov	 ecx, DWORD PTR _hit$[ebp]
  000bf	51		 push	 ecx
  000c0	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	83 c1 40	 add	 ecx, 64			; 00000040H
  000c6	e8 00 00 00 00	 call	 ??R?$_Func_class@XPAVRigidBody@@@std@@QBEXPAVRigidBody@@@Z ; std::_Func_class<void,RigidBody *>::operator()
$LN8@Enter:

; 190  : 					x.second = 2;

  000cb	c7 45 bc 02 00
	00 00		 mov	 DWORD PTR _x$4[ebp+4], 2
  000d2	eb 09		 jmp	 SHORT $LN7@Enter
$LN6@Enter:

; 191  : 				}
; 192  : 				else x.second++;

  000d4	8b 55 bc	 mov	 edx, DWORD PTR _x$4[ebp+4]
  000d7	83 c2 01	 add	 edx, 1
  000da	89 55 bc	 mov	 DWORD PTR _x$4[ebp+4], edx
$LN7@Enter:

; 193  : 				return;

  000dd	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  000e1	8d 4d c8	 lea	 ecx, DWORD PTR _<end>$L0$5[ebp]
  000e4	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@@std@@QAE@XZ
  000e9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f0	8d 4d dc	 lea	 ecx, DWORD PTR _<begin>$L0$6[ebp]
  000f3	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@@std@@QAE@XZ
  000f8	eb 6a		 jmp	 SHORT $LN1@Enter
$LN5@Enter:

; 194  : 			}

  000fa	e9 69 ff ff ff	 jmp	 $LN2@Enter
$LN3@Enter:

; 195  : 		}

  000ff	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00103	8d 4d c8	 lea	 ecx, DWORD PTR _<end>$L0$5[ebp]
  00106	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@@std@@QAE@XZ
  0010b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00112	8d 4d dc	 lea	 ecx, DWORD PTR _<begin>$L0$6[ebp]
  00115	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@@std@@QAE@XZ

; 196  : 
; 197  : 		m_contacts.push_back (std::pair<RigidBody*, int> (hit, 2));

  0011a	c7 45 a8 02 00
	00 00		 mov	 DWORD PTR $T2[ebp], 2
  00121	8d 45 a8	 lea	 eax, DWORD PTR $T2[ebp]
  00124	50		 push	 eax
  00125	8d 4d 08	 lea	 ecx, DWORD PTR _hit$[ebp]
  00128	51		 push	 ecx
  00129	8d 4d ac	 lea	 ecx, DWORD PTR $T3[ebp]
  0012c	e8 00 00 00 00	 call	 ??$?0AAPAVRigidBody@@HX@?$pair@PAVRigidBody@@H@std@@QAE@AAPAVRigidBody@@$$QAH@Z ; std::pair<RigidBody *,int>::pair<RigidBody *,int><RigidBody * &,int,void>
  00131	50		 push	 eax
  00132	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00135	83 c1 30	 add	 ecx, 48			; 00000030H
  00138	e8 00 00 00 00	 call	 ?push_back@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QAEX$$QAU?$pair@PAVRigidBody@@H@2@@Z ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::push_back

; 198  : 
; 199  : 		if (m_enter != nullptr)

  0013d	6a 00		 push	 0
  0013f	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00142	83 c2 40	 add	 edx, 64			; 00000040H
  00145	52		 push	 edx
  00146	e8 00 00 00 00	 call	 ??$?9$$A6AXPAVRigidBody@@@Z@std@@YA_NABV?$function@$$A6AXPAVRigidBody@@@Z@0@$$T@Z ; std::operator!=<void __cdecl(RigidBody *)>
  0014b	83 c4 08	 add	 esp, 8
  0014e	0f b6 c0	 movzx	 eax, al
  00151	85 c0		 test	 eax, eax
  00153	74 0f		 je	 SHORT $LN1@Enter

; 200  : 			m_enter (hit);

  00155	8b 4d 08	 mov	 ecx, DWORD PTR _hit$[ebp]
  00158	51		 push	 ecx
  00159	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0015c	83 c1 40	 add	 ecx, 64			; 00000040H
  0015f	e8 00 00 00 00	 call	 ??R?$_Func_class@XPAVRigidBody@@@std@@QBEXPAVRigidBody@@@Z ; std::_Func_class<void,RigidBody *>::operator()
$LN1@Enter:

; 201  : 	}

  00164	52		 push	 edx
  00165	8b cd		 mov	 ecx, ebp
  00167	50		 push	 eax
  00168	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN18@Enter
  0016e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00173	58		 pop	 eax
  00174	5a		 pop	 edx
  00175	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00178	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0017f	59		 pop	 ecx
  00180	5f		 pop	 edi
  00181	83 c4 58	 add	 esp, 88			; 00000058H
  00184	3b ec		 cmp	 ebp, esp
  00186	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018b	8b e5		 mov	 esp, ebp
  0018d	5d		 pop	 ebp
  0018e	c2 04 00	 ret	 4
  00191	0f 1f 00	 npad	 3
$LN18@Enter:
  00194	03 00 00 00	 DD	 3
  00198	00 00 00 00	 DD	 $LN17@Enter
$LN17@Enter:
  0019c	dc ff ff ff	 DD	 -36			; ffffffdcH
  001a0	0c 00 00 00	 DD	 12			; 0000000cH
  001a4	00 00 00 00	 DD	 $LN13@Enter
  001a8	c8 ff ff ff	 DD	 -56			; ffffffc8H
  001ac	0c 00 00 00	 DD	 12			; 0000000cH
  001b0	00 00 00 00	 DD	 $LN14@Enter
  001b4	b8 ff ff ff	 DD	 -72			; ffffffb8H
  001b8	08 00 00 00	 DD	 8
  001bc	00 00 00 00	 DD	 $LN15@Enter
$LN15@Enter:
  001c0	78		 DB	 120			; 00000078H
  001c1	00		 DB	 0
$LN14@Enter:
  001c2	3c		 DB	 60			; 0000003cH
  001c3	65		 DB	 101			; 00000065H
  001c4	6e		 DB	 110			; 0000006eH
  001c5	64		 DB	 100			; 00000064H
  001c6	3e		 DB	 62			; 0000003eH
  001c7	24		 DB	 36			; 00000024H
  001c8	4c		 DB	 76			; 0000004cH
  001c9	30		 DB	 48			; 00000030H
  001ca	00		 DB	 0
$LN13@Enter:
  001cb	3c		 DB	 60			; 0000003cH
  001cc	62		 DB	 98			; 00000062H
  001cd	65		 DB	 101			; 00000065H
  001ce	67		 DB	 103			; 00000067H
  001cf	69		 DB	 105			; 00000069H
  001d0	6e		 DB	 110			; 0000006eH
  001d1	3e		 DB	 62			; 0000003eH
  001d2	24		 DB	 36			; 00000024H
  001d3	4c		 DB	 76			; 0000004cH
  001d4	30		 DB	 48			; 00000030H
  001d5	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Enter@RigidBody@@QAEXPAV1@@Z$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR _<begin>$L0$6[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?Enter@RigidBody@@QAEXPAV1@@Z$1:
  00008	8d 4d c8	 lea	 ecx, DWORD PTR _<end>$L0$5[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?Enter@RigidBody@@QAEXPAV1@@Z:
  00010	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00014	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00017	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0001a	33 c8		 xor	 ecx, eax
  0001c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00021	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Enter@RigidBody@@QAEXPAV1@@Z
  00026	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Enter@RigidBody@@QAEXPAV1@@Z ENDP			; RigidBody::Enter
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?push_back@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QAEX$$QAU?$pair@PAVRigidBody@@H@2@@Z
_TEXT	SEGMENT
tv229 = -16						; size = 4
tv174 = -12						; size = 4
__Idx$1 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QAEX$$QAU?$pair@PAVRigidBody@@H@2@@Z PROC ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::push_back, COMDAT
; _this$ = ecx

; 895  : 		{	// insert by moving into element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000c	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  0000f	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00012	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00015	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 896  : 		if (_Inside(_STD addressof(_Val)))

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??$addressof@U?$pair@PAVRigidBody@@H@std@@@std@@YAPAU?$pair@PAVRigidBody@@H@0@AAU10@@Z ; std::addressof<std::pair<RigidBody *,int> >
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?_Inside@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBE_NPBU?$pair@PAVRigidBody@@H@2@@Z ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Inside
  00030	0f b6 c8	 movzx	 ecx, al
  00033	85 c9		 test	 ecx, ecx
  00035	0f 84 ac 00 00
	00		 je	 $LN2@push_back

; 897  : 			{	// push back an element
; 898  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst();

  0003b	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0003e	52		 push	 edx
  0003f	e8 00 00 00 00	 call	 ??$addressof@U?$pair@PAVRigidBody@@H@std@@@std@@YAPAU?$pair@PAVRigidBody@@H@0@AAU10@@Z ; std::addressof<std::pair<RigidBody *,int> >
  00044	83 c4 04	 add	 esp, 4
  00047	8b f0		 mov	 esi, eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Myfirst
  00051	2b 30		 sub	 esi, DWORD PTR [eax]
  00053	c1 fe 03	 sar	 esi, 3
  00056	89 75 f8	 mov	 DWORD PTR __Idx$1[ebp], esi

; 899  : 			if (this->_Mylast() == this->_Myend())

  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Mylast
  00061	8b f0		 mov	 esi, eax
  00063	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Myend
  0006b	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0006d	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0006f	75 0a		 jne	 SHORT $LN4@push_back

; 900  : 				_Reserve(1);

  00071	6a 01		 push	 1
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	e8 00 00 00 00	 call	 ?_Reserve@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Reserve
$LN4@push_back:

; 901  : 			_Orphan_range(this->_Mylast(), this->_Mylast());

  0007b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Mylast
  00083	8b 10		 mov	 edx, DWORD PTR [eax]
  00085	52		 push	 edx
  00086	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Mylast
  0008e	8b 00		 mov	 eax, DWORD PTR [eax]
  00090	50		 push	 eax
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEXPAU?$pair@PAVRigidBody@@H@2@0@Z ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Orphan_range

; 902  : 			this->_Getal().construct(this->_Mylast(),

  00099	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Myfirst
  000a1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a3	8b 55 f8	 mov	 edx, DWORD PTR __Idx$1[ebp]
  000a6	8d 04 d1	 lea	 eax, DWORD PTR [ecx+edx*8]
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 ??$forward@U?$pair@PAVRigidBody@@H@std@@@std@@YA$$QAU?$pair@PAVRigidBody@@H@0@AAU10@@Z ; std::forward<std::pair<RigidBody *,int> >
  000af	83 c4 04	 add	 esp, 4
  000b2	50		 push	 eax
  000b3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b6	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Mylast
  000bb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bd	51		 push	 ecx
  000be	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Getal
  000c6	8b c8		 mov	 ecx, eax
  000c8	e8 00 00 00 00	 call	 ??$construct@U?$pair@PAVRigidBody@@H@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@QAEXPAU?$pair@PAVRigidBody@@H@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >::construct<std::pair<RigidBody *,int>,std::pair<RigidBody *,int> >

; 903  : 				_STD forward<value_type>(this->_Myfirst()[_Idx]));
; 904  : 			++this->_Mylast();

  000cd	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Mylast
  000d5	89 45 f4	 mov	 DWORD PTR tv174[ebp], eax
  000d8	8b 55 f4	 mov	 edx, DWORD PTR tv174[ebp]
  000db	8b 02		 mov	 eax, DWORD PTR [edx]
  000dd	83 c0 08	 add	 eax, 8
  000e0	8b 4d f4	 mov	 ecx, DWORD PTR tv174[ebp]
  000e3	89 01		 mov	 DWORD PTR [ecx], eax

; 905  : 			}
; 906  : 		else

  000e5	eb 7f		 jmp	 SHORT $LN1@push_back
$LN2@push_back:

; 907  : 			{	// push back a non-element
; 908  : 			if (this->_Mylast() == this->_Myend())

  000e7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Mylast
  000ef	8b f0		 mov	 esi, eax
  000f1	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000f4	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Myend
  000f9	8b 16		 mov	 edx, DWORD PTR [esi]
  000fb	3b 10		 cmp	 edx, DWORD PTR [eax]
  000fd	75 0a		 jne	 SHORT $LN5@push_back

; 909  : 				_Reserve(1);

  000ff	6a 01		 push	 1
  00101	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00104	e8 00 00 00 00	 call	 ?_Reserve@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Reserve
$LN5@push_back:

; 910  : 			_Orphan_range(this->_Mylast(), this->_Mylast());

  00109	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Mylast
  00111	8b 00		 mov	 eax, DWORD PTR [eax]
  00113	50		 push	 eax
  00114	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Mylast
  0011c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0011e	51		 push	 ecx
  0011f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00122	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEXPAU?$pair@PAVRigidBody@@H@2@0@Z ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Orphan_range

; 911  : 			this->_Getal().construct(this->_Mylast(),

  00127	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0012a	52		 push	 edx
  0012b	e8 00 00 00 00	 call	 ??$forward@U?$pair@PAVRigidBody@@H@std@@@std@@YA$$QAU?$pair@PAVRigidBody@@H@0@AAU10@@Z ; std::forward<std::pair<RigidBody *,int> >
  00130	83 c4 04	 add	 esp, 4
  00133	50		 push	 eax
  00134	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00137	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Mylast
  0013c	8b 00		 mov	 eax, DWORD PTR [eax]
  0013e	50		 push	 eax
  0013f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00142	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Getal
  00147	8b c8		 mov	 ecx, eax
  00149	e8 00 00 00 00	 call	 ??$construct@U?$pair@PAVRigidBody@@H@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@QAEXPAU?$pair@PAVRigidBody@@H@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >::construct<std::pair<RigidBody *,int>,std::pair<RigidBody *,int> >

; 912  : 				_STD forward<value_type>(_Val));
; 913  : 			++this->_Mylast();

  0014e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00151	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Mylast
  00156	89 45 f0	 mov	 DWORD PTR tv229[ebp], eax
  00159	8b 4d f0	 mov	 ecx, DWORD PTR tv229[ebp]
  0015c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0015e	83 c2 08	 add	 edx, 8
  00161	8b 45 f0	 mov	 eax, DWORD PTR tv229[ebp]
  00164	89 10		 mov	 DWORD PTR [eax], edx
$LN1@push_back:

; 914  : 			}
; 915  : 		}

  00166	5e		 pop	 esi
  00167	83 c4 10	 add	 esp, 16			; 00000010H
  0016a	3b ec		 cmp	 ebp, esp
  0016c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00171	8b e5		 mov	 esp, ebp
  00173	5d		 pop	 ebp
  00174	c2 04 00	 ret	 4
?push_back@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QAEX$$QAU?$pair@PAVRigidBody@@H@2@@Z ENDP ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_range@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEXPAU?$pair@PAVRigidBody@@H@2@0@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEXPAU?$pair@PAVRigidBody@@H@2@0@Z PROC ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Orphan_range, COMDAT
; _this$ = ecx

; 1794 : 		{	// orphan iterators within specified (inclusive) range

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEXPAU?$pair@PAVRigidBody@@H@2@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	89 45 e0	 mov	 DWORD PTR [ebp-32], eax
  0001d	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  00020	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00023	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00026	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 1795 : 		_Lockit _Lock(_LOCK_DEBUG);

  0003d	8b f4		 mov	 esi, esp
  0003f	6a 03		 push	 3
  00041	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1796 : 		const_iterator **_Pnext = (const_iterator **)this->_Getpfirst();

  00058	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Getpfirst
  00060	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax

; 1797 : 		if (_Pnext != 0)

  00063	83 7d e0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00067	74 4e		 je	 SHORT $LN4@Orphan_ran
$LN2@Orphan_ran:

; 1798 : 			{	// test an iterator
; 1799 : 			while (*_Pnext != 0)

  00069	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  0006c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0006f	74 46		 je	 SHORT $LN4@Orphan_ran

; 1800 : 				if ((*_Pnext)->_Ptr < _First || _Last < (*_Pnext)->_Ptr)

  00071	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00074	8b 11		 mov	 edx, DWORD PTR [ecx]
  00076	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00079	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  0007c	72 0d		 jb	 SHORT $LN7@Orphan_ran
  0007e	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  00081	8b 11		 mov	 edx, DWORD PTR [ecx]
  00083	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00086	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00089	73 0f		 jae	 SHORT $LN5@Orphan_ran
$LN7@Orphan_ran:

; 1801 : 					_Pnext = (const_iterator **)(*_Pnext)->_Getpnext();

  0008b	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  0008e	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00090	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  00095	89 45 e0	 mov	 DWORD PTR __Pnext$[ebp], eax

; 1802 : 				else

  00098	eb 1b		 jmp	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:

; 1803 : 					{	// orphan the iterator
; 1804 : 					(*_Pnext)->_Clrcont();

  0009a	8b 55 e0	 mov	 edx, DWORD PTR __Pnext$[ebp]
  0009d	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0009f	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont

; 1805 : 					*_Pnext = *(const_iterator **)(*_Pnext)->_Getpnext();

  000a4	8b 45 e0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a9	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000ae	8b 4d e0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000b1	8b 10		 mov	 edx, DWORD PTR [eax]
  000b3	89 11		 mov	 DWORD PTR [ecx], edx
$LN6@Orphan_ran:

; 1806 : 					}

  000b5	eb b2		 jmp	 SHORT $LN2@Orphan_ran
$LN4@Orphan_ran:

; 1807 : 			}
; 1808 : 		}

  000b7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000be	8b f4		 mov	 esi, esp
  000c0	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000c9	3b f4		 cmp	 esi, esp
  000cb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d0	52		 push	 edx
  000d1	8b cd		 mov	 ecx, ebp
  000d3	50		 push	 eax
  000d4	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000da	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000df	58		 pop	 eax
  000e0	5a		 pop	 edx
  000e1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000eb	59		 pop	 ecx
  000ec	5e		 pop	 esi
  000ed	83 c4 20	 add	 esp, 32			; 00000020H
  000f0	3b ec		 cmp	 ebp, esp
  000f2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f7	8b e5		 mov	 esp, ebp
  000f9	5d		 pop	 ebp
  000fa	c2 08 00	 ret	 8
  000fd	0f 1f 00	 npad	 3
$LN13@Orphan_ran:
  00100	01 00 00 00	 DD	 1
  00104	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00108	e8 ff ff ff	 DD	 -24			; ffffffe8H
  0010c	04 00 00 00	 DD	 4
  00110	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  00114	5f		 DB	 95			; 0000005fH
  00115	4c		 DB	 76			; 0000004cH
  00116	6f		 DB	 111			; 0000006fH
  00117	63		 DB	 99			; 00000063H
  00118	6b		 DB	 107			; 0000006bH
  00119	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEXPAU?$pair@PAVRigidBody@@H@2@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d e8	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEXPAU?$pair@PAVRigidBody@@H@2@0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEXPAU?$pair@PAVRigidBody@@H@2@0@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEXPAU?$pair@PAVRigidBody@@H@2@0@Z ENDP ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Orphan_range
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reserve@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Reserve, COMDAT
; _this$ = ecx

; 1645 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1646 : 		if (_Unused_capacity() < _Count)

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Unused_capacity
  00017	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0001a	73 3e		 jae	 SHORT $LN4@Reserve

; 1647 : 			{	// need more room, try to get it
; 1648 : 			if (max_size() - size() < _Count)

  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?max_size@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::max_size
  00024	8b f0		 mov	 esi, eax
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?size@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::size
  0002e	2b f0		 sub	 esi, eax
  00030	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00033	73 08		 jae	 SHORT $LN3@Reserve

; 1649 : 				_Xlen();

  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?_Xlen@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEXXZ ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Xlen
$LN3@Reserve:

; 1650 : 			_Reallocate(_Grow_to(size() + _Count));

  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?size@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::size
  00045	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  00048	50		 push	 eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEII@Z ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Grow_to
  00051	50		 push	 eax
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Reallocate
$LN4@Reserve:

; 1651 : 			}
; 1652 : 		}

  0005a	5e		 pop	 esi
  0005b	83 c4 04	 add	 esp, 4
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c2 04 00	 ret	 4
?_Reserve@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBE_NPBU?$pair@PAVRigidBody@@H@2@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBE_NPBU?$pair@PAVRigidBody@@H@2@@Z PROC ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Inside, COMDAT
; _this$ = ecx

; 1615 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1616 : 		return (_Ptr < this->_Mylast() && this->_Myfirst() <= _Ptr);

  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABQAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Mylast
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00022	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00024	73 18		 jae	 SHORT $LN3@Inside
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABQAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Myfirst
  0002e	8b 10		 mov	 edx, DWORD PTR [eax]
  00030	3b 55 08	 cmp	 edx, DWORD PTR __Ptr$[ebp]
  00033	77 09		 ja	 SHORT $LN3@Inside
  00035	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv78[ebp], 1
  0003c	eb 07		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  0003e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN4@Inside:
  00045	8a 45 f8	 mov	 al, BYTE PTR tv78[ebp]

; 1617 : 		}

  00048	83 c4 08	 add	 esp, 8
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
?_Inside@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBE_NPBU?$pair@PAVRigidBody@@H@2@@Z ENDP ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABQAU?$pair@PAVRigidBody@@H@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABQAU?$pair@PAVRigidBody@@H@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Mylast, COMDAT
; _this$ = ecx

; 656  : 		{	// return const reference to _Mylast

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 657  : 		return (_Get_data()._Mylast);

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Get_data
  00016	83 c0 08	 add	 eax, 8

; 658  : 		}

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABQAU?$pair@PAVRigidBody@@H@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABQAU?$pair@PAVRigidBody@@H@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABQAU?$pair@PAVRigidBody@@H@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Myfirst, COMDAT
; _this$ = ecx

; 646  : 		{	// return const reference to _Myfirst

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 647  : 		return (_Get_data()._Myfirst);

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Get_data
  00016	83 c0 04	 add	 eax, 4

; 648  : 		}

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABQAU?$pair@PAVRigidBody@@H@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Getpfirst, COMDAT
; _this$ = ecx

; 595  : 		{	// get address of iterator chain

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 596  : 		return (_Get_data()._Getpfirst());

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Get_data
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst

; 597  : 		}

  0001d	83 c4 04	 add	 esp, 4
  00020	3b ec		 cmp	 ebp, esp
  00022	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEPAPAU_Iterator_base12@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Xlen@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEXXZ PROC ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Xlen, COMDAT
; _this$ = ecx

; 1783 : 		{	// report a length_error

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1784 : 		_Xlength_error("vector<T> too long");

  0000f	8b f4		 mov	 esi, esp
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  0001c	3b f4		 cmp	 esi, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:

; 1785 : 		}

  00023	5e		 pop	 esi
  00024	83 c4 04	 add	 esp, 4
  00027	3b ec		 cmp	 ebp, esp
  00029	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?_Xlen@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEXXZ ENDP ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reallocate@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Size$ = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Reallocate, COMDAT
; _this$ = ecx

; 1620 : 		{	// move to array of exactly _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	c7 45 e4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-28], -858993460 ; ccccccccH
  0001f	c7 45 e8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-24], -858993460 ; ccccccccH
  00026	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00041	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1621 : 		pointer _Ptr = this->_Getal().allocate(_Count);

  00044	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00047	50		 push	 eax
  00048	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Getal
  00050	8b c8		 mov	 ecx, eax
  00052	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@QAEPAU?$pair@PAVRigidBody@@H@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >::allocate
  00057	89 45 e8	 mov	 DWORD PTR __Ptr$[ebp], eax

; 1622 : 
; 1623 : 		_TRY_BEGIN

  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 1624 : 		_Umove(this->_Myfirst(), this->_Mylast(), _Ptr);

  00061	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00064	51		 push	 ecx
  00065	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Mylast
  0006d	8b 10		 mov	 edx, DWORD PTR [eax]
  0006f	52		 push	 edx
  00070	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Myfirst
  00078	8b 00		 mov	 eax, DWORD PTR [eax]
  0007a	50		 push	 eax
  0007b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	e8 00 00 00 00	 call	 ??$_Umove@PAU?$pair@PAVRigidBody@@H@std@@@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEPAU?$pair@PAVRigidBody@@H@1@PAU21@00@Z ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Umove<std::pair<RigidBody *,int> *>
  00083	eb 26		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z$0:

; 1625 : 		_CATCH_ALL
; 1626 : 		this->_Getal().deallocate(_Ptr, _Count);

  00085	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00088	51		 push	 ecx
  00089	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0008c	52		 push	 edx
  0008d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Getal
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@QAEXPAU?$pair@PAVRigidBody@@H@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >::deallocate

; 1627 : 		_RERAISE;

  0009c	6a 00		 push	 0
  0009e	6a 00		 push	 0
  000a0	e8 00 00 00 00	 call	 __CxxThrowException@8

; 1628 : 		_CATCH_END

  000a5	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000aa	c3		 ret	 0
$LN5@Reallocate:
  000ab	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000b2	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000b4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z$1:

; 1629 : 
; 1630 : 		size_type _Size = size();

  000bb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	e8 00 00 00 00	 call	 ?size@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::size
  000c3	89 45 e4	 mov	 DWORD PTR __Size$[ebp], eax

; 1631 : 		if (this->_Myfirst() != pointer())

  000c6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c9	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Myfirst
  000ce	83 38 00	 cmp	 DWORD PTR [eax], 0
  000d1	74 52		 je	 SHORT $LN3@Reallocate

; 1632 : 			{	// destroy and deallocate old array
; 1633 : 			_Destroy(this->_Myfirst(), this->_Mylast());

  000d3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d6	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Mylast
  000db	8b 00		 mov	 eax, DWORD PTR [eax]
  000dd	50		 push	 eax
  000de	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e1	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Myfirst
  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	51		 push	 ecx
  000e9	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ec	e8 00 00 00 00	 call	 ?_Destroy@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXPAU?$pair@PAVRigidBody@@H@2@0@Z ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Destroy

; 1634 : 			this->_Getal().deallocate(this->_Myfirst(),

  000f1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f4	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Myfirst
  000f9	8b f0		 mov	 esi, eax
  000fb	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000fe	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Myend
  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	2b 16		 sub	 edx, DWORD PTR [esi]
  00107	c1 fa 03	 sar	 edx, 3
  0010a	52		 push	 edx
  0010b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Myfirst
  00113	8b 00		 mov	 eax, DWORD PTR [eax]
  00115	50		 push	 eax
  00116	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Getal
  0011e	8b c8		 mov	 ecx, eax
  00120	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@QAEXPAU?$pair@PAVRigidBody@@H@2@I@Z ; std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >::deallocate
$LN3@Reallocate:

; 1635 : 				this->_Myend() - this->_Myfirst());
; 1636 : 			}
; 1637 : 
; 1638 : 		this->_Orphan_all();

  00125	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00128	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Orphan_all

; 1639 : 		this->_Myend() = _Ptr + _Count;

  0012d	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00130	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00133	8d 34 ca	 lea	 esi, DWORD PTR [edx+ecx*8]
  00136	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00139	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Myend
  0013e	89 30		 mov	 DWORD PTR [eax], esi

; 1640 : 		this->_Mylast() = _Ptr + _Size;

  00140	8b 45 e4	 mov	 eax, DWORD PTR __Size$[ebp]
  00143	8b 4d e8	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00146	8d 34 c1	 lea	 esi, DWORD PTR [ecx+eax*8]
  00149	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0014c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Mylast
  00151	89 30		 mov	 DWORD PTR [eax], esi

; 1641 : 		this->_Myfirst() = _Ptr;

  00153	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00156	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAPAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Myfirst
  0015b	8b 55 e8	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0015e	89 10		 mov	 DWORD PTR [eax], edx
$LN4@Reallocate:

; 1642 : 		}

  00160	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00163	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0016a	59		 pop	 ecx
  0016b	5f		 pop	 edi
  0016c	5e		 pop	 esi
  0016d	5b		 pop	 ebx
  0016e	83 c4 1c	 add	 esp, 28			; 0000001cH
  00171	3b ec		 cmp	 ebp, esp
  00173	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00178	8b e5		 mov	 esp, ebp
  0017a	5d		 pop	 ebp
  0017b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Reallocate
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEII@Z PROC ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Grow_to, COMDAT
; _this$ = ecx

; 1604 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1605 : 		size_type _Capacity = capacity();

  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?capacity@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::capacity
  00026	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax

; 1606 : 
; 1607 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?max_size@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QBEIXZ ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::max_size
  00031	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00034	d1 e9		 shr	 ecx, 1
  00036	2b c1		 sub	 eax, ecx
  00038	3b 45 f8	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  0003b	73 09		 jae	 SHORT $LN4@Grow_to
  0003d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
  00044	eb 0b		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  00046	8b 55 f8	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00049	d1 ea		 shr	 edx, 1
  0004b	03 55 f8	 add	 edx, DWORD PTR __Capacity$[ebp]
  0004e	89 55 f4	 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  00051	8b 45 f4	 mov	 eax, DWORD PTR tv73[ebp]
  00054	89 45 f8	 mov	 DWORD PTR __Capacity$[ebp], eax

; 1608 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%
; 1609 : 		if (_Capacity < _Count)

  00057	8b 4d f8	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  0005a	3b 4d 08	 cmp	 ecx, DWORD PTR __Count$[ebp]
  0005d	73 06		 jae	 SHORT $LN2@Grow_to

; 1610 : 			_Capacity = _Count;

  0005f	8b 55 08	 mov	 edx, DWORD PTR __Count$[ebp]
  00062	89 55 f8	 mov	 DWORD PTR __Capacity$[ebp], edx
$LN2@Grow_to:

; 1611 : 		return (_Capacity);

  00065	8b 45 f8	 mov	 eax, DWORD PTR __Capacity$[ebp]

; 1612 : 		}

  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?_Grow_to@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IBEII@Z ENDP ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?max_size@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?max_size@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::max_size, COMDAT
; _this$ = ecx

; 1183 : 		{	// return maximum possible length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000d	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00014	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1184 : 		return (this->_Getal().max_size());

  00017	0f b6 45 fb	 movzx	 eax, BYTE PTR $T1[ebp]
  0001b	50		 push	 eax
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Getal
  00024	8b c8		 mov	 ecx, eax
  00026	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >::max_size

; 1185 : 		}

  0002b	83 c4 08	 add	 esp, 8
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?max_size@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?size@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::size, COMDAT
; _this$ = ecx

; 1178 : 		{	// return length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1179 : 		return (this->_Mylast() - this->_Myfirst());

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABQAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Mylast
  00017	8b f0		 mov	 esi, eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABQAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Myfirst
  00021	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00023	2b 08		 sub	 ecx, DWORD PTR [eax]
  00025	c1 f9 03	 sar	 ecx, 3
  00028	8b c1		 mov	 eax, ecx

; 1180 : 		}

  0002a	5e		 pop	 esi
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?size@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Unused_capacity@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Unused_capacity, COMDAT
; _this$ = ecx

; 1046 : 		{	// micro-optimization for capacity() - size()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1047 : 		return (this->_Myend() - this->_Mylast());

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABQAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Myend
  00017	8b f0		 mov	 esi, eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABQAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Mylast
  00021	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00023	2b 08		 sub	 ecx, DWORD PTR [eax]
  00025	c1 f9 03	 sar	 ecx, 3
  00028	8b c1		 mov	 eax, ecx

; 1048 : 		}

  0002a	5e		 pop	 esi
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?_Unused_capacity@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >::max_size, COMDAT
; _this$ = ecx

; 929  : 		{	// get maximum size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 930  : 		return (_Mytraits::max_size(*this));

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@SAIABV?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@Z ; std::allocator_traits<std::allocator<std::pair<RigidBody *,int> > >::max_size
  00017	83 c4 04	 add	 esp, 4

; 931  : 		}

  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@QAEPAU?$pair@PAVRigidBody@@H@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@QAEPAU?$pair@PAVRigidBody@@H@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >::allocate, COMDAT
; _this$ = ecx

; 897  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 898  : 		return (_Mybase::allocate(_Count));

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?allocate@?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@QAEPAU?$pair@PAVRigidBody@@H@2@I@Z ; std::allocator<std::pair<RigidBody *,int> >::allocate

; 899  : 		}

  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@QAEPAU?$pair@PAVRigidBody@@H@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABQAU?$pair@PAVRigidBody@@H@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABQAU?$pair@PAVRigidBody@@H@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Myend, COMDAT
; _this$ = ecx

; 666  : 		{	// return const reference to _Myend

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 667  : 		return (_Get_data()._Myend);

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Get_data
  00016	83 c0 0c	 add	 eax, 12			; 0000000cH

; 668  : 		}

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABQAU?$pair@PAVRigidBody@@H@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Get_data, COMDAT
; _this$ = ecx

; 636  : 		{	// return const reference to _Vector_val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 637  : 		return (_Mypair._Get_second());

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >,std::_Vector_val<std::_Simple_types<std::pair<RigidBody *,int> > >,1>::_Get_second

; 638  : 		}

  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Getal, COMDAT
; _this$ = ecx

; 626  : 		{	// return const reference to allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 627  : 		return (_Mypair._Get_first());

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >,std::_Vector_val<std::_Simple_types<std::pair<RigidBody *,int> > >,1>::_Get_first

; 628  : 		}

  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?capacity@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::capacity, COMDAT
; _this$ = ecx

; 1041 : 		{	// return current length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1042 : 		return (this->_Myend() - this->_Myfirst());

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABQAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Myend
  00017	8b f0		 mov	 esi, eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QBEABQAU?$pair@PAVRigidBody@@H@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Myfirst
  00021	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00023	2b 08		 sub	 ecx, DWORD PTR [eax]
  00025	c1 f9 03	 sar	 ecx, 3
  00028	8b c1		 mov	 eax, ecx

; 1043 : 		}

  0002a	5e		 pop	 esi
  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?capacity@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >,std::_Vector_val<std::_Simple_types<std::pair<RigidBody *,int> > >,1>::_Get_second, COMDAT
; _this$ = ecx

; 318  : 		{	// return const reference to second

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 319  : 		return (_Myval2);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 320  : 		}

  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >,std::_Vector_val<std::_Simple_types<std::pair<RigidBody *,int> > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >,std::_Vector_val<std::_Simple_types<std::pair<RigidBody *,int> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 298  : 		{	// return const reference to first

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 299  : 		return (*this);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 300  : 		}

  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PAVRigidBody@@H@std@@@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >,std::_Vector_val<std::_Simple_types<std::pair<RigidBody *,int> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@SAIABV?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@SAIABV?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::pair<RigidBody *,int> > >::max_size, COMDAT

; 784  : 		{	// get maximum size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 785  : 		return (_Al.max_size());

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00006	e8 00 00 00 00	 call	 ?max_size@?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@QBEIXZ ; std::allocator<std::pair<RigidBody *,int> >::max_size

; 786  : 		}

  0000b	3b ec		 cmp	 ebp, esp
  0000d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@SAIABV?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::pair<RigidBody *,int> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@QAEPAU?$pair@PAVRigidBody@@H@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@QAEPAU?$pair@PAVRigidBody@@H@2@I@Z PROC ; std::allocator<std::pair<RigidBody *,int> >::allocate, COMDAT
; _this$ = ecx

; 642  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 643  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

  0000e	6a 01		 push	 1
  00010	6a 08		 push	 8
  00012	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?_Allocate@std@@YAPAXII_N@Z ; std::_Allocate
  0001b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 644  : 		}

  0001e	83 c4 04	 add	 esp, 4
  00021	3b ec		 cmp	 ebp, esp
  00023	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?allocate@?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@QAEPAU?$pair@PAVRigidBody@@H@2@I@Z ENDP ; std::allocator<std::pair<RigidBody *,int> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<RigidBody *,int> >::max_size, COMDAT
; _this$ = ecx

; 666  : 		{	// estimate maximum array size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 667  : 		return ((size_t)(-1) / sizeof (_Ty));

  0000e	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 668  : 		}

  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?max_size@?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<RigidBody *,int> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility
;	COMDAT ??$?0AAPAVRigidBody@@HX@?$pair@PAVRigidBody@@H@std@@QAE@AAPAVRigidBody@@$$QAH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAPAVRigidBody@@HX@?$pair@PAVRigidBody@@H@std@@QAE@AAPAVRigidBody@@$$QAH@Z PROC ; std::pair<RigidBody *,int>::pair<RigidBody *,int><RigidBody * &,int,void>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 143  : 		: first(_STD forward<_Other1>(_Val1)),

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@AAPAVRigidBody@@@std@@YAAAPAVRigidBody@@AAPAV1@@Z ; std::forward<RigidBody * &>
  00017	83 c4 04	 add	 esp, 4
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	8b 10		 mov	 edx, DWORD PTR [eax]
  0001f	89 11		 mov	 DWORD PTR [ecx], edx

; 144  : 				second(_STD forward<_Other2>(_Val2))

  00021	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QAHAAH@Z ; std::forward<int>
  0002a	83 c4 04	 add	 esp, 4
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	8b 10		 mov	 edx, DWORD PTR [eax]
  00032	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 146  : 		}

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	83 c4 04	 add	 esp, 4
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 08 00	 ret	 8
??$?0AAPAVRigidBody@@HX@?$pair@PAVRigidBody@@H@std@@QAE@AAPAVRigidBody@@$$QAH@Z ENDP ; std::pair<RigidBody *,int>::pair<RigidBody *,int><RigidBody * &,int,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@U?$pair@PAVRigidBody@@H@std@@@std@@YA$$QAU?$pair@PAVRigidBody@@H@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@PAVRigidBody@@H@std@@@std@@YA$$QAU?$pair@PAVRigidBody@@H@0@AAU10@@Z PROC ; std::forward<std::pair<RigidBody *,int> >, COMDAT

; 1233 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1234 : 	return (static_cast<_Ty&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1235 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@U?$pair@PAVRigidBody@@H@std@@@std@@YA$$QAU?$pair@PAVRigidBody@@H@0@AAU10@@Z ENDP ; std::forward<std::pair<RigidBody *,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@PAVRigidBody@@H@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@QAEXPAU?$pair@PAVRigidBody@@H@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U?$pair@PAVRigidBody@@H@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@QAEXPAU?$pair@PAVRigidBody@@H@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >::construct<std::pair<RigidBody *,int>,std::pair<RigidBody *,int> >, COMDAT
; _this$ = ecx

; 916  : 		{	// construct _Ty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 917  : 		_Mytraits::construct(*this, _Ptr,

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ??$forward@U?$pair@PAVRigidBody@@H@std@@@std@@YA$$QAU?$pair@PAVRigidBody@@H@0@AAU10@@Z ; std::forward<std::pair<RigidBody *,int> >
  00017	83 c4 04	 add	 esp, 4
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$construct@U?$pair@PAVRigidBody@@H@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@PAVRigidBody@@H@std@@@1@PAU?$pair@PAVRigidBody@@H@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::pair<RigidBody *,int> > >::construct<std::pair<RigidBody *,int>,std::pair<RigidBody *,int> >
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH

; 918  : 			_STD forward<_Types>(_Args)...);
; 919  : 		}

  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$construct@U?$pair@PAVRigidBody@@H@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@QAEXPAU?$pair@PAVRigidBody@@H@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >::construct<std::pair<RigidBody *,int>,std::pair<RigidBody *,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Umove@PAU?$pair@PAVRigidBody@@H@std@@@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEPAU?$pair@PAVRigidBody@@H@1@PAU21@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAU?$pair@PAVRigidBody@@H@std@@@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEPAU?$pair@PAVRigidBody@@H@1@PAU21@00@Z PROC ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Umove<std::pair<RigidBody *,int> *>, COMDAT
; _this$ = ecx

; 1677 : 		{	// move initializing [_First, _Last), using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1678 : 		return (_Uninitialized_move(_First, _Last,

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > > >::_Getal
  00016	50		 push	 eax
  00017	8b 45 10	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *,std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > > >
  00028	83 c4 10	 add	 esp, 16			; 00000010H

; 1679 : 			_Ptr, this->_Getal()));
; 1680 : 		}

  0002b	83 c4 04	 add	 esp, 4
  0002e	3b ec		 cmp	 ebp, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAU?$pair@PAVRigidBody@@H@std@@@?$vector@U?$pair@PAVRigidBody@@H@std@@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@@std@@IAEPAU?$pair@PAVRigidBody@@H@1@PAU21@00@Z ENDP ; std::vector<std::pair<RigidBody *,int>,std::allocator<std::pair<RigidBody *,int> > >::_Umove<std::pair<RigidBody *,int> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@H@std@@YA$$QAHAAH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@H@std@@YA$$QAHAAH@Z PROC			; std::forward<int>, COMDAT

; 1233 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1234 : 	return (static_cast<_Ty&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1235 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@H@std@@YA$$QAHAAH@Z ENDP			; std::forward<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@PAVRigidBody@@H@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@PAVRigidBody@@H@std@@@1@PAU?$pair@PAVRigidBody@@H@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U?$pair@PAVRigidBody@@H@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@PAVRigidBody@@H@std@@@1@PAU?$pair@PAVRigidBody@@H@1@$$QAU31@@Z PROC ; std::allocator_traits<std::allocator<std::pair<RigidBody *,int> > >::construct<std::pair<RigidBody *,int>,std::pair<RigidBody *,int> >, COMDAT

; 772  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 773  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@U?$pair@PAVRigidBody@@H@std@@@std@@YA$$QAU?$pair@PAVRigidBody@@H@0@AAU10@@Z ; std::forward<std::pair<RigidBody *,int> >
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@U?$pair@PAVRigidBody@@H@std@@U12@@?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@QAEXPAU?$pair@PAVRigidBody@@H@1@$$QAU21@@Z ; std::allocator<std::pair<RigidBody *,int> >::construct<std::pair<RigidBody *,int>,std::pair<RigidBody *,int> >

; 774  : 		}

  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$construct@U?$pair@PAVRigidBody@@H@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@PAVRigidBody@@H@std@@@1@PAU?$pair@PAVRigidBody@@H@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::pair<RigidBody *,int> > >::construct<std::pair<RigidBody *,int>,std::pair<RigidBody *,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *,std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > > >, COMDAT

; 490  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 491  : 	return (_Rechecked(_Dest,

  00003	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0000a	51		 push	 ecx
  0000b	e8 00 00 00 00	 call	 ??$_Unchecked@PAU?$pair@PAVRigidBody@@H@std@@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@@Z ; std::_Unchecked<std::pair<RigidBody *,int> *>
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00017	52		 push	 edx
  00018	e8 00 00 00 00	 call	 ??$_Unchecked@PAU?$pair@PAVRigidBody@@H@std@@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@@Z ; std::_Unchecked<std::pair<RigidBody *,int> *>
  0001d	83 c4 04	 add	 esp, 4
  00020	50		 push	 eax
  00021	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??$_Unchecked@PAU?$pair@PAVRigidBody@@H@std@@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@@Z ; std::_Unchecked<std::pair<RigidBody *,int> *>
  0002a	83 c4 04	 add	 esp, 4
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@@Z ; std::_Uninit_move<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *,std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > > >
  00033	83 c4 10	 add	 esp, 16			; 00000010H
  00036	50		 push	 eax
  00037	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  0003a	51		 push	 ecx
  0003b	e8 00 00 00 00	 call	 ??$_Rechecked@PAU?$pair@PAVRigidBody@@H@std@@PAU12@@std@@YAAAPAU?$pair@PAVRigidBody@@H@0@AAPAU10@PAU10@@Z ; std::_Rechecked<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *>
  00040	83 c4 08	 add	 esp, 8
  00043	8b 00		 mov	 eax, DWORD PTR [eax]

; 492  : 		_Uninit_move(_Unchecked(_First), _Unchecked(_Last),
; 493  : 			_Unchecked(_Dest), _Al)));
; 494  : 	}

  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??$_Uninitialized_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *,std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U?$pair@PAVRigidBody@@H@std@@U12@@?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@QAEXPAU?$pair@PAVRigidBody@@H@1@$$QAU21@@Z
_TEXT	SEGMENT
tv74 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U?$pair@PAVRigidBody@@H@std@@U12@@?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@QAEXPAU?$pair@PAVRigidBody@@H@1@$$QAU21@@Z PROC ; std::allocator<std::pair<RigidBody *,int> >::construct<std::pair<RigidBody *,int>,std::pair<RigidBody *,int> >, COMDAT
; _this$ = ecx

; 654  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 655  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	6a 08		 push	 8
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0002f	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00033	74 21		 je	 SHORT $LN3@construct
  00035	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 ??$forward@U?$pair@PAVRigidBody@@H@std@@@std@@YA$$QAU?$pair@PAVRigidBody@@H@0@AAU10@@Z ; std::forward<std::pair<RigidBody *,int> >
  0003e	83 c4 04	 add	 esp, 4
  00041	8b 10		 mov	 edx, DWORD PTR [eax]
  00043	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00046	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00049	89 11		 mov	 DWORD PTR [ecx], edx
  0004b	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0004e	8b 55 f8	 mov	 edx, DWORD PTR $T1[ebp]
  00051	89 55 f4	 mov	 DWORD PTR tv74[ebp], edx
  00054	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00056	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN1@construct:

; 656  : 		}

  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00060	3b ec		 cmp	 ebp, esp
  00062	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 08 00	 ret	 8
??$construct@U?$pair@PAVRigidBody@@H@std@@U12@@?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@QAEXPAU?$pair@PAVRigidBody@@H@1@$$QAU21@@Z ENDP ; std::allocator<std::pair<RigidBody *,int> >::construct<std::pair<RigidBody *,int>,std::pair<RigidBody *,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Unchecked@PAU?$pair@PAVRigidBody@@H@std@@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAU?$pair@PAVRigidBody@@H@std@@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@@Z PROC ; std::_Unchecked<std::pair<RigidBody *,int> *>, COMDAT

; 438  : 	{	// construct unchecked from checked, generic

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 439  : 	return (_Src);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]

; 440  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Unchecked@PAU?$pair@PAVRigidBody@@H@std@@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@@Z ENDP ; std::_Unchecked<std::pair<RigidBody *,int> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@@Z PROC ; std::_Uninit_move<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *,std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > > >, COMDAT

; 480  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 481  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,

  0000b	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Ptr_cat@U?$pair@PAVRigidBody@@H@std@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$pair@PAVRigidBody@@H@0@0@Z ; std::_Ptr_cat<std::pair<RigidBody *,int>,std::pair<RigidBody *,int> >
  00018	83 c4 08	 add	 esp, 8
  0001b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0001e	0f b6 55 ff	 movzx	 edx, BYTE PTR $T1[ebp]
  00022	52		 push	 edx
  00023	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$_Val_type@PAU?$pair@PAVRigidBody@@H@std@@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@@Z ; std::_Val_type<std::pair<RigidBody *,int> *>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00037	52		 push	 edx
  00038	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@U12@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *,std::allocator<std::pair<RigidBody *,int> >,std::pair<RigidBody *,int> >
  00045	83 c4 18	 add	 esp, 24			; 00000018H

; 482  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));
; 483  : 	}

  00048	83 c4 04	 add	 esp, 4
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@2@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@@Z ENDP ; std::_Uninit_move<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *,std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Rechecked@PAU?$pair@PAVRigidBody@@H@std@@PAU12@@std@@YAAAPAU?$pair@PAVRigidBody@@H@0@AAPAU10@PAU10@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAU?$pair@PAVRigidBody@@H@std@@PAU12@@std@@YAAAPAU?$pair@PAVRigidBody@@H@0@AAPAU10@PAU10@@Z PROC ; std::_Rechecked<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *>, COMDAT

; 446  : 	{	// reset checked from unchecked, generic

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 447  : 	_Dest = _Src;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Src$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 448  : 	return (_Dest);

  0000b	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]

; 449  : 	}

  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??$_Rechecked@PAU?$pair@PAVRigidBody@@H@std@@PAU12@@std@@YAAAPAU?$pair@PAVRigidBody@@H@0@AAPAU10@PAU10@@Z ENDP ; std::_Rechecked<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAU?$pair@PAVRigidBody@@H@std@@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAU?$pair@PAVRigidBody@@H@std@@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@@Z PROC ; std::_Val_type<std::pair<RigidBody *,int> *>, COMDAT

; 874  : 	{	// return value type from arbitrary argument

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 875  : 	return (0);

  00003	33 c0		 xor	 eax, eax

; 876  : 	}

  00005	5d		 pop	 ebp
  00006	c3		 ret	 0
??$_Val_type@PAU?$pair@PAVRigidBody@@H@std@@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@@Z ENDP ; std::_Val_type<std::pair<RigidBody *,int> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@U12@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@U12@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *,std::allocator<std::pair<RigidBody *,int> >,std::pair<RigidBody *,int> >, COMDAT

; 437  : 	{	// move [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@U12@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	51		 push	 ecx
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp

; 438  : 	_DEBUG_RANGE_PTR(_First, _Last, _Dest);

  00031	68 b6 01 00 00	 push	 438			; 000001b6H
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@GBEHMPOJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0003b	8d 45 10	 lea	 eax, DWORD PTR __Dest$[ebp]
  0003e	50		 push	 eax
  0003f	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00042	51		 push	 ecx
  00043	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00046	52		 push	 edx
  00047	e8 00 00 00 00	 call	 ??$_Debug_range_ptr@PAU?$pair@PAVRigidBody@@H@std@@PAU12@@std@@YAXPAU?$pair@PAVRigidBody@@H@0@0AAPAU10@PB_WI@Z ; std::_Debug_range_ptr<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *>
  0004c	83 c4 14	 add	 esp, 20			; 00000014H

; 439  : 	_FwdIt _Next = _Dest;

  0004f	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00052	89 45 ec	 mov	 DWORD PTR __Next$[ebp], eax

; 440  : 
; 441  : 	_TRY_BEGIN

  00055	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 442  : 	for (; _First != _Last; ++_Dest, (void)++_First)

  0005c	eb 12		 jmp	 SHORT $LN4@Uninit_mov
$LN2@Uninit_mov:
  0005e	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  00061	83 c1 08	 add	 ecx, 8
  00064	89 4d 10	 mov	 DWORD PTR __Dest$[ebp], ecx
  00067	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0006a	83 c2 08	 add	 edx, 8
  0006d	89 55 08	 mov	 DWORD PTR __First$[ebp], edx
$LN4@Uninit_mov:
  00070	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00073	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00076	74 12		 je	 SHORT $LN3@Uninit_mov

; 443  : 		_Al.construct(_Dest, (_Valty&&)*_First);

  00078	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0007b	51		 push	 ecx
  0007c	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  0007f	52		 push	 edx
  00080	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  00083	e8 00 00 00 00	 call	 ??$construct@U?$pair@PAVRigidBody@@H@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@QAEXPAU?$pair@PAVRigidBody@@H@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >::construct<std::pair<RigidBody *,int>,std::pair<RigidBody *,int> >
  00088	eb d4		 jmp	 SHORT $LN2@Uninit_mov
$LN3@Uninit_mov:
  0008a	eb 30		 jmp	 SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@U12@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:

; 444  : 	_CATCH_ALL
; 445  : 	for (; _Next != _Dest; ++_Next)

  0008c	eb 09		 jmp	 SHORT $LN7@Uninit_mov
$LN5@Uninit_mov:
  0008e	8b 45 ec	 mov	 eax, DWORD PTR __Next$[ebp]
  00091	83 c0 08	 add	 eax, 8
  00094	89 45 ec	 mov	 DWORD PTR __Next$[ebp], eax
$LN7@Uninit_mov:
  00097	8b 4d ec	 mov	 ecx, DWORD PTR __Next$[ebp]
  0009a	3b 4d 10	 cmp	 ecx, DWORD PTR __Dest$[ebp]
  0009d	74 0e		 je	 SHORT $LN6@Uninit_mov

; 446  : 		_Al.destroy(_Next);

  0009f	8b 55 ec	 mov	 edx, DWORD PTR __Next$[ebp]
  000a2	52		 push	 edx
  000a3	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  000a6	e8 00 00 00 00	 call	 ??$destroy@U?$pair@PAVRigidBody@@H@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@std@@QAEXPAU?$pair@PAVRigidBody@@H@1@@Z ; std::_Wrap_alloc<std::allocator<std::pair<RigidBody *,int> > >::destroy<std::pair<RigidBody *,int> >
  000ab	eb e1		 jmp	 SHORT $LN5@Uninit_mov
$LN6@Uninit_mov:

; 447  : 	_RERAISE;

  000ad	6a 00		 push	 0
  000af	6a 00		 push	 0
  000b1	e8 00 00 00 00	 call	 __CxxThrowException@8

; 448  : 	_CATCH_END

  000b6	b8 00 00 00 00	 mov	 eax, $LN13@Uninit_mov
  000bb	c3		 ret	 0
$LN10@Uninit_mov:
  000bc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000c3	eb 07		 jmp	 SHORT __tryend$??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@U12@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
  000c5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@U12@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:

; 449  : 	return (_Dest);

  000cc	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:

; 450  : 	}

  000cf	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000d2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d9	59		 pop	 ecx
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5b		 pop	 ebx
  000dd	83 c4 14	 add	 esp, 20			; 00000014H
  000e0	3b ec		 cmp	 ebp, esp
  000e2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e7	8b e5		 mov	 esp, ebp
  000e9	5d		 pop	 ebp
  000ea	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@U12@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@U12@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAU?$pair@PAVRigidBody@@H@std@@PAU12@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@2@U12@@std@@YAPAU?$pair@PAVRigidBody@@H@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@PAVRigidBody@@H@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *,std::allocator<std::pair<RigidBody *,int> >,std::pair<RigidBody *,int> >
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_range_ptr@PAU?$pair@PAVRigidBody@@H@std@@PAU12@@std@@YAXPAU?$pair@PAVRigidBody@@H@0@0AAPAU10@PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
??$_Debug_range_ptr@PAU?$pair@PAVRigidBody@@H@std@@PAU12@@std@@YAXPAU?$pair@PAVRigidBody@@H@0@0AAPAU10@PB_WI@Z PROC ; std::_Debug_range_ptr<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *>, COMDAT

; 837  : 	{	// test iterator pair for valid range/pointer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 838  : 	_Debug_range_ptr2(_First, _Last, _Ptr, _File, _Line, _Iter_cat(_First));

  0000b	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  0000e	50		 push	 eax
  0000f	8d 4d ff	 lea	 ecx, DWORD PTR $T1[ebp]
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 ??$_Iter_cat@PAU?$pair@PAVRigidBody@@H@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@PAVRigidBody@@H@0@@Z ; std::_Iter_cat<std::pair<RigidBody *,int> *>
  00018	83 c4 08	 add	 esp, 8
  0001b	8a 10		 mov	 dl, BYTE PTR [eax]
  0001d	0f b6 c2	 movzx	 eax, dl
  00020	50		 push	 eax
  00021	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  00024	51		 push	 ecx
  00025	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00028	52		 push	 edx
  00029	8b 45 10	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00030	51		 push	 ecx
  00031	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00034	52		 push	 edx
  00035	e8 00 00 00 00	 call	 ??$_Debug_range_ptr2@PAU?$pair@PAVRigidBody@@H@std@@PAU12@@std@@YAXPAU?$pair@PAVRigidBody@@H@0@0AAPAU10@PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range_ptr2<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *>
  0003a	83 c4 18	 add	 esp, 24			; 00000018H

; 839  : 	}

  0003d	83 c4 04	 add	 esp, 4
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$_Debug_range_ptr@PAU?$pair@PAVRigidBody@@H@std@@PAU12@@std@@YAXPAU?$pair@PAVRigidBody@@H@0@0AAPAU10@PB_WI@Z ENDP ; std::_Debug_range_ptr<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Iter_cat@PAU?$pair@PAVRigidBody@@H@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@PAVRigidBody@@H@0@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAU?$pair@PAVRigidBody@@H@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@PAVRigidBody@@H@0@@Z PROC ; std::_Iter_cat<std::pair<RigidBody *,int> *>, COMDAT

; 601  : 	{	// return category from iterator argument

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 602  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 603  : 	return (_Cat);

  0001b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00021	88 08		 mov	 BYTE PTR [eax], cl
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 604  : 	}

  00026	52		 push	 edx
  00027	8b cd		 mov	 ecx, ebp
  00029	50		 push	 eax
  0002a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00030	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00035	58		 pop	 eax
  00036	5a		 pop	 edx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
  0003b	90		 npad	 1
$LN5@Iter_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Iter_cat@PAU?$pair@PAVRigidBody@@H@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@PAVRigidBody@@H@0@@Z ENDP ; std::_Iter_cat<std::pair<RigidBody *,int> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_range_ptr2@PAU?$pair@PAVRigidBody@@H@std@@PAU12@@std@@YAXPAU?$pair@PAVRigidBody@@H@0@0AAPAU10@PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Debug_range_ptr2@PAU?$pair@PAVRigidBody@@H@std@@PAU12@@std@@YAXPAU?$pair@PAVRigidBody@@H@0@0AAPAU10@PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range_ptr2<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *>, COMDAT

; 822  : 	{	// test iterator pair for valid range/pointer, random-access iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 823  : 	if (_First != _Last)

  00004	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00007	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0000a	74 65		 je	 SHORT $LN1@Debug_rang

; 824  : 		{	// check for non-null pointers, valid range
; 825  : 		_DEBUG_POINTER2(_First, _File, _Line);

  0000c	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  0000f	51		 push	 ecx
  00010	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00013	52		 push	 edx
  00014	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ??$_Debug_pointer@U?$pair@PAVRigidBody@@H@std@@@std@@YAXPAU?$pair@PAVRigidBody@@H@0@PB_WI@Z ; std::_Debug_pointer<std::pair<RigidBody *,int> >
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 826  : 		_DEBUG_POINTER2(_Last, _File, _Line);

  00020	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  00023	51		 push	 ecx
  00024	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00027	52		 push	 edx
  00028	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$_Debug_pointer@U?$pair@PAVRigidBody@@H@std@@@std@@YAXPAU?$pair@PAVRigidBody@@H@0@PB_WI@Z ; std::_Debug_pointer<std::pair<RigidBody *,int> >
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH

; 827  : 		if (_Last < _First)

  00034	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00037	3b 4d 08	 cmp	 ecx, DWORD PTR __First$[ebp]
  0003a	73 1f		 jae	 SHORT $LN3@Debug_rang

; 828  : 			_DEBUG_ERROR2("invalid iterator range", _File, _Line);

  0003c	8b f4		 mov	 esi, esp
  0003e	8b 55 18	 mov	 edx, DWORD PTR __Line$[ebp]
  00041	52		 push	 edx
  00042	8b 45 14	 mov	 eax, DWORD PTR __File$[ebp]
  00045	50		 push	 eax
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:

; 829  : 		_DEBUG_POINTER2(_Ptr, _File, _Line);	// test only if used

  0005b	8b 4d 18	 mov	 ecx, DWORD PTR __Line$[ebp]
  0005e	51		 push	 ecx
  0005f	8b 55 14	 mov	 edx, DWORD PTR __File$[ebp]
  00062	52		 push	 edx
  00063	8b 45 10	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00066	8b 08		 mov	 ecx, DWORD PTR [eax]
  00068	51		 push	 ecx
  00069	e8 00 00 00 00	 call	 ??$_Debug_pointer@U?$pair@PAVRigidBody@@H@std@@@std@@YAXPAU?$pair@PAVRigidBody@@H@0@PB_WI@Z ; std::_Debug_pointer<std::pair<RigidBody *,int> >
  0006e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@Debug_rang:

; 830  : 		}
; 831  : 	}

  00071	5e		 pop	 esi
  00072	3b ec		 cmp	 ebp, esp
  00074	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
??$_Debug_range_ptr2@PAU?$pair@PAVRigidBody@@H@std@@PAU12@@std@@YAXPAU?$pair@PAVRigidBody@@H@0@0AAPAU10@PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range_ptr2<std::pair<RigidBody *,int> *,std::pair<RigidBody *,int> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_pointer@U?$pair@PAVRigidBody@@H@std@@@std@@YAXPAU?$pair@PAVRigidBody@@H@0@PB_WI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@U?$pair@PAVRigidBody@@H@std@@@std@@YAXPAU?$pair@PAVRigidBody@@H@0@PB_WI@Z PROC ; std::_Debug_pointer<std::pair<RigidBody *,int> >, COMDAT

; 760  : 	{	// test pointer for non-singularity, pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 761  : 	if (_Ptr == 0)

  00004	83 7d 08 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  00008	75 1f		 jne	 SHORT $LN1@Debug_poin

; 762  : 		_DEBUG_ERROR2("invalid null pointer", _File, _Line);

  0000a	8b f4		 mov	 esi, esp
  0000c	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  00013	51		 push	 ecx
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	3b f4		 cmp	 esi, esp
  00024	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@Debug_poin:

; 763  : 	}

  00029	5e		 pop	 esi
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??$_Debug_pointer@U?$pair@PAVRigidBody@@H@std@@@std@@YAXPAU?$pair@PAVRigidBody@@H@0@PB_WI@Z ENDP ; std::_Debug_pointer<std::pair<RigidBody *,int> >
_TEXT	ENDS
END
