; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

	TITLE	e:\fusion3d_work\engine\src\core\profiling.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@N@Z:PROC
$SG4294829839 DB 00H
	ORG $+3
$SG4294829841 DB 's', 00H, 'r', 00H, 'c', 00H, '\', 00H, 'c', 00H, 'o', 00H
	DB	'r', 00H, 'e', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'f'
	DB	00H, 'i', 00H, 'l', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H
	DB	'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG4294829840 DB 'm', 00H, '_', 00H, 's', 00H, 't', 00H, 'a', 00H, 'r', 00H
	DB	't', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, ' ', 00H, '!'
	DB	00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
	ORG $+3
$SG4294829842 DB 'Error: StopInvocation called without matching start inv'
	DB	'ocation', 00H
	ORG $+1
$SG4294829837 DB ' ms', 00H
$SG4294829838 DB ' ', 00H
PUBLIC	?GetTimeAndReset@ProfileTimer@@QAENN@Z		; ProfileTimer::GetTimeAndReset
PUBLIC	?DisplayAndReset@ProfileTimer@@QAENABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@NH@Z ; ProfileTimer::DisplayAndReset
PUBLIC	?StopInvocation@ProfileTimer@@QAEXXZ		; ProfileTimer::StopInvocation
PUBLIC	?StartInvocation@ProfileTimer@@QAEXXZ		; ProfileTimer::StartInvocation
__ehfuncinfo$?DisplayAndReset@ProfileTimer@@QAENABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@NH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DisplayAndReset@ProfileTimer@@QAENABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@NH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?DisplayAndReset@ProfileTimer@@QAENABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@NH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DisplayAndReset@ProfileTimer@@QAENABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@NH@Z$0
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\core\profiling.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?StartInvocation@ProfileTimer@@QAEXXZ PROC		; ProfileTimer::StartInvocation
; _this$ = ecx

; 23   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 24   : 	m_startTime = Time::GetTime();

  0000e	e8 00 00 00 00	 call	 ?GetTime@Time@@YANXZ	; Time::GetTime
  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	dd 58 10	 fstp	 QWORD PTR [eax+16]

; 25   : }

  00019	83 c4 04	 add	 esp, 4
  0001c	3b ec		 cmp	 ebp, esp
  0001e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?StartInvocation@ProfileTimer@@QAEXXZ ENDP		; ProfileTimer::StartInvocation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\core\profiling.cpp
_TEXT	SEGMENT
tv141 = -12						; size = 8
_this$ = -4						; size = 4
?StopInvocation@ProfileTimer@@QAEXXZ PROC		; ProfileTimer::StopInvocation
; _this$ = ecx

; 28   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000e	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00015	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0001c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 29   : 	if(m_startTime == 0)

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	f2 0f 10 40 10	 movsd	 xmm0, QWORD PTR [eax+16]
  00027	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0002f	9f		 lahf
  00030	f6 c4 44	 test	 ah, 68			; 00000044H
  00033	7a 5e		 jp	 SHORT $LN4@StopInvoca

; 30   : 	{
; 31   : 		std::cout << "Error: StopInvocation called without matching start invocation" << std::endl;

  00035	8b f4		 mov	 esi, esp
  00037	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  0003c	68 00 00 00 00	 push	 OFFSET $SG4294829842
  00041	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  0004d	83 c4 08	 add	 esp, 8
  00050	8b c8		 mov	 ecx, eax
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  00058	3b f4		 cmp	 esi, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 32   : 		assert(m_startTime != 0);

  0005f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00062	f2 0f 10 42 10	 movsd	 xmm0, QWORD PTR [edx+16]
  00067	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0006f	9f		 lahf
  00070	f6 c4 44	 test	 ah, 68			; 00000044H
  00073	7a 1e		 jp	 SHORT $LN4@StopInvoca
  00075	8b f4		 mov	 esi, esp
  00077	6a 20		 push	 32			; 00000020H
  00079	68 00 00 00 00	 push	 OFFSET $SG4294829841
  0007e	68 00 00 00 00	 push	 OFFSET $SG4294829840
  00083	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___wassert
  00089	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008c	3b f4		 cmp	 esi, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@StopInvoca:

; 33   : 	}
; 34   : 	
; 35   : 	m_numInvocations++;

  00093	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	8b 11		 mov	 edx, DWORD PTR [ecx]
  00098	83 c2 01	 add	 edx, 1
  0009b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	89 10		 mov	 DWORD PTR [eax], edx

; 36   : 	m_totalTime += (Time::GetTime() - m_startTime);

  000a0	e8 00 00 00 00	 call	 ?GetTime@Time@@YANXZ	; Time::GetTime
  000a5	dd 5d f4	 fstp	 QWORD PTR tv141[ebp]
  000a8	f2 0f 10 45 f4	 movsd	 xmm0, QWORD PTR tv141[ebp]
  000ad	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	f2 0f 5c 41 10	 subsd	 xmm0, QWORD PTR [ecx+16]
  000b5	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b8	f2 0f 58 42 08	 addsd	 xmm0, QWORD PTR [edx+8]
  000bd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c0	f2 0f 11 40 08	 movsd	 QWORD PTR [eax+8], xmm0

; 37   : 	m_startTime = 0;

  000c5	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c8	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@0000000000000000
  000d0	f2 0f 11 41 10	 movsd	 QWORD PTR [ecx+16], xmm0

; 38   : }

  000d5	5e		 pop	 esi
  000d6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d9	3b ec		 cmp	 ebp, esp
  000db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c3		 ret	 0
?StopInvocation@ProfileTimer@@QAEXXZ ENDP		; ProfileTimer::StopInvocation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\core\profiling.cpp
_TEXT	SEGMENT
$T2 = -76						; size = 8
_time$ = -68						; size = 8
_i$3 = -60						; size = 4
_whiteSpace$ = -52					; size = 28
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_message$ = 8						; size = 4
_divisor$ = 12						; size = 8
_displayedMessageLength$ = 20				; size = 4
?DisplayAndReset@ProfileTimer@@QAENABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@NH@Z PROC ; ProfileTimer::DisplayAndReset
; _this$ = ecx

; 51   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DisplayAndReset@ProfileTimer@@QAENABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@NH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 40	 sub	 esp, 64			; 00000040H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	51		 push	 ecx
  00017	8d 7d b4	 lea	 edi, DWORD PTR [ebp-76]
  0001a	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	59		 pop	 ecx
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00031	50		 push	 eax
  00032	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00035	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003b	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 52   : 	std::string whiteSpace = "";

  0003e	68 00 00 00 00	 push	 OFFSET $SG4294829839
  00043	8d 4d cc	 lea	 ecx, DWORD PTR _whiteSpace$[ebp]
  00046	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0004b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 53   : 	for(int i = message.length(); i < displayedMessageLength; i++)

  00052	8b 4d 08	 mov	 ecx, DWORD PTR _message$[ebp]
  00055	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  0005a	89 45 c4	 mov	 DWORD PTR _i$3[ebp], eax
  0005d	eb 09		 jmp	 SHORT $LN4@DisplayAnd
$LN2@DisplayAnd:
  0005f	8b 45 c4	 mov	 eax, DWORD PTR _i$3[ebp]
  00062	83 c0 01	 add	 eax, 1
  00065	89 45 c4	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@DisplayAnd:
  00068	8b 4d c4	 mov	 ecx, DWORD PTR _i$3[ebp]
  0006b	3b 4d 14	 cmp	 ecx, DWORD PTR _displayedMessageLength$[ebp]
  0006e	7d 0f		 jge	 SHORT $LN3@DisplayAnd

; 54   : 	{
; 55   : 		whiteSpace += " ";

  00070	68 00 00 00 00	 push	 OFFSET $SG4294829838
  00075	8d 4d cc	 lea	 ecx, DWORD PTR _whiteSpace$[ebp]
  00078	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 56   : 	}

  0007d	eb e0		 jmp	 SHORT $LN2@DisplayAnd
$LN3@DisplayAnd:

; 57   : 	
; 58   : 	double time = GetTimeAndReset(divisor);

  0007f	83 ec 08	 sub	 esp, 8
  00082	f2 0f 10 45 0c	 movsd	 xmm0, QWORD PTR _divisor$[ebp]
  00087	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0008c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	e8 00 00 00 00	 call	 ?GetTimeAndReset@ProfileTimer@@QAENN@Z ; ProfileTimer::GetTimeAndReset
  00094	dd 5d bc	 fstp	 QWORD PTR _time$[ebp]

; 59   : 	std::cout << message << whiteSpace << time << " ms" << std::endl;

  00097	8b f4		 mov	 esi, esp
  00099	68 00 00 00 00	 push	 OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
  0009e	68 00 00 00 00	 push	 OFFSET $SG4294829837
  000a3	8b fc		 mov	 edi, esp
  000a5	83 ec 08	 sub	 esp, 8
  000a8	f2 0f 10 45 bc	 movsd	 xmm0, QWORD PTR _time$[ebp]
  000ad	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000b2	8d 55 cc	 lea	 edx, DWORD PTR _whiteSpace$[ebp]
  000b5	52		 push	 edx
  000b6	8b 45 08	 mov	 eax, DWORD PTR _message$[ebp]
  000b9	50		 push	 eax
  000ba	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  000c0	51		 push	 ecx
  000c1	e8 00 00 00 00	 call	 ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
  000c6	83 c4 08	 add	 esp, 8
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
  000cf	83 c4 08	 add	 esp, 8
  000d2	8b c8		 mov	 ecx, eax
  000d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@N@Z
  000da	3b fc		 cmp	 edi, esp
  000dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e1	50		 push	 eax
  000e2	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  000e7	83 c4 08	 add	 esp, 8
  000ea	8b c8		 mov	 ecx, eax
  000ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
  000f2	3b f4		 cmp	 esi, esp
  000f4	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 60   : 	return time;

  000f9	f2 0f 10 45 bc	 movsd	 xmm0, QWORD PTR _time$[ebp]
  000fe	f2 0f 11 45 b4	 movsd	 QWORD PTR $T2[ebp], xmm0
  00103	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0010a	8d 4d cc	 lea	 ecx, DWORD PTR _whiteSpace$[ebp]
  0010d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00112	dd 45 b4	 fld	 QWORD PTR $T2[ebp]

; 61   : }

  00115	52		 push	 edx
  00116	8b cd		 mov	 ecx, ebp
  00118	50		 push	 eax
  00119	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@DisplayAnd
  0011f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00124	58		 pop	 eax
  00125	5a		 pop	 edx
  00126	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00129	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00130	59		 pop	 ecx
  00131	5f		 pop	 edi
  00132	5e		 pop	 esi
  00133	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00136	33 cd		 xor	 ecx, ebp
  00138	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0013d	83 c4 4c	 add	 esp, 76			; 0000004cH
  00140	3b ec		 cmp	 ebp, esp
  00142	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00147	8b e5		 mov	 esp, ebp
  00149	5d		 pop	 ebp
  0014a	c2 10 00	 ret	 16			; 00000010H
  0014d	0f 1f 00	 npad	 3
$LN10@DisplayAnd:
  00150	01 00 00 00	 DD	 1
  00154	00 00 00 00	 DD	 $LN9@DisplayAnd
$LN9@DisplayAnd:
  00158	cc ff ff ff	 DD	 -52			; ffffffccH
  0015c	1c 00 00 00	 DD	 28			; 0000001cH
  00160	00 00 00 00	 DD	 $LN7@DisplayAnd
$LN7@DisplayAnd:
  00164	77		 DB	 119			; 00000077H
  00165	68		 DB	 104			; 00000068H
  00166	69		 DB	 105			; 00000069H
  00167	74		 DB	 116			; 00000074H
  00168	65		 DB	 101			; 00000065H
  00169	53		 DB	 83			; 00000053H
  0016a	70		 DB	 112			; 00000070H
  0016b	61		 DB	 97			; 00000061H
  0016c	63		 DB	 99			; 00000063H
  0016d	65		 DB	 101			; 00000065H
  0016e	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DisplayAndReset@ProfileTimer@@QAENABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@NH@Z$0:
  00000	8d 4d cc	 lea	 ecx, DWORD PTR _whiteSpace$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?DisplayAndReset@ProfileTimer@@QAENABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@NH@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a b4	 mov	 ecx, DWORD PTR [edx-76]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DisplayAndReset@ProfileTimer@@QAENABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@NH@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DisplayAndReset@ProfileTimer@@QAENABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@NH@Z ENDP ; ProfileTimer::DisplayAndReset
; Function compile flags: /Odtp /RTCsu
; File e:\fusion3d_work\engine\src\core\profiling.cpp
_TEXT	SEGMENT
tv74 = -28						; size = 8
tv67 = -20						; size = 8
_result$ = -12						; size = 8
_this$ = -4						; size = 4
_divisor$ = 8						; size = 8
?GetTimeAndReset@ProfileTimer@@QAENN@Z PROC		; ProfileTimer::GetTimeAndReset
; _this$ = ecx

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0000e	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00011	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00014	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00017	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  0001a	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001d	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  00020	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 42   : 	divisor = (divisor == 0) ? m_numInvocations : divisor;

  00023	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _divisor$[ebp]
  00028	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00030	9f		 lahf
  00031	f6 c4 44	 test	 ah, 68			; 00000044H
  00034	7a 0e		 jp	 SHORT $LN3@GetTimeAnd
  00036	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00039	f2 0f 2a 00	 cvtsi2sd xmm0, DWORD PTR [eax]
  0003d	f2 0f 11 45 ec	 movsd	 QWORD PTR tv67[ebp], xmm0
  00042	eb 0a		 jmp	 SHORT $LN4@GetTimeAnd
$LN3@GetTimeAnd:
  00044	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _divisor$[ebp]
  00049	f2 0f 11 45 ec	 movsd	 QWORD PTR tv67[ebp], xmm0
$LN4@GetTimeAnd:
  0004e	f2 0f 10 45 ec	 movsd	 xmm0, QWORD PTR tv67[ebp]
  00053	f2 0f 11 45 08	 movsd	 QWORD PTR _divisor$[ebp], xmm0

; 43   : 	double result = (m_totalTime == 0 && divisor == 0.0) ? 0.0 : (1000.0 * m_totalTime)/((double)divisor);

  00058	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	f2 0f 10 41 08	 movsd	 xmm0, QWORD PTR [ecx+8]
  00060	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00068	9f		 lahf
  00069	f6 c4 44	 test	 ah, 68			; 00000044H
  0006c	7a 22		 jp	 SHORT $LN5@GetTimeAnd
  0006e	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _divisor$[ebp]
  00073	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0007b	9f		 lahf
  0007c	f6 c4 44	 test	 ah, 68			; 00000044H
  0007f	7a 0f		 jp	 SHORT $LN5@GetTimeAnd
  00081	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@0000000000000000
  00089	f2 0f 11 45 e4	 movsd	 QWORD PTR tv74[ebp], xmm0
  0008e	eb 1a		 jmp	 SHORT $LN6@GetTimeAnd
$LN5@GetTimeAnd:
  00090	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00093	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@408f400000000000
  0009b	f2 0f 59 42 08	 mulsd	 xmm0, QWORD PTR [edx+8]
  000a0	f2 0f 5e 45 08	 divsd	 xmm0, QWORD PTR _divisor$[ebp]
  000a5	f2 0f 11 45 e4	 movsd	 QWORD PTR tv74[ebp], xmm0
$LN6@GetTimeAnd:
  000aa	f2 0f 10 45 e4	 movsd	 xmm0, QWORD PTR tv74[ebp]
  000af	f2 0f 11 45 f4	 movsd	 QWORD PTR _result$[ebp], xmm0

; 44   : 	m_totalTime = 0.0;

  000b4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b7	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@0000000000000000
  000bf	f2 0f 11 40 08	 movsd	 QWORD PTR [eax+8], xmm0

; 45   : 	m_numInvocations = 0;

  000c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c7	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 46   : 	
; 47   : 	return result;

  000cd	dd 45 f4	 fld	 QWORD PTR _result$[ebp]

; 48   : }

  000d0	8b e5		 mov	 esp, ebp
  000d2	5d		 pop	 ebp
  000d3	c2 08 00	 ret	 8
?GetTimeAndReset@ProfileTimer@@QAENN@Z ENDP		; ProfileTimer::GetTimeAndReset
_TEXT	ENDS
END
